{"version":3,"sources":["documents/TermsAndConditions.docx","documents/PrivacyPolicy.docx","documents/CookiesPolicy.docx","store/store.js","History.js","images/OkIcon.jsx","Data.js","server/DatabaseApi.js","Settings.js","components/utility/Popover.jsx","components/utility/Loader.jsx","images/RemoveIcon.jsx","components/user/WishlistButton.jsx","utilities/Functions.js","components/user/ReactionButton.jsx","server/MoviesApi.js","components/user/TrailerPlayer.jsx","components/utility/Modal.jsx","components/user/MoveToWatchedButton.jsx","components/user/AddReview.jsx","components/user/MoviesList.jsx","components/user/PopularMovies.jsx","components/user/Recommendations.jsx","components/utility/Paigination.jsx","components/user/ReplyToReview.jsx","components/user/PopularReviews.jsx","components/user/RecentReviews.jsx","components/user/Home.jsx","components/user/EditComment.jsx","components/user/MovieReviews.jsx","components/user/Movie.jsx","components/user/ReviewsList.jsx","components/user/SearchResults.jsx","images/Logo.jsx","components/admin/LeftSideMenu.jsx","components/admin/Settings.jsx","components/admin/RightSideMenuFloating.jsx","components/utility/Select.jsx","components/utility/Checkbox.jsx","components/admin/Reviews.jsx","components/admin/Comments.jsx","components/admin/ReviewAndComments.jsx","components/admin/EditReview.jsx","components/admin/EditComment.jsx","components/admin/Announcements.jsx","components/admin/EditAnnouncement.jsx","components/admin/AddNewAnnouncement.jsx","components/admin/Promotions.jsx","components/admin/EditPromotion.jsx","components/admin/AddNewPromotion.jsx","components/admin/Notifications.jsx","components/utility/Autocomplete.jsx","components/admin/EditNotification.jsx","components/admin/AddNewNotification.jsx","components/admin/Users.jsx","components/admin/AddNewUser.jsx","components/admin/EditUser.jsx","components/admin/AdminDashboard.jsx","components/login/Login.jsx","components/user/LegalDocument.jsx","components/login/Signup.jsx","components/user/Toast.jsx","components/user/profile/MoviesList.jsx","components/user/profile/Wishlist.jsx","components/user/profile/Watchedlist.jsx","components/user/profile/Reviews.jsx","components/user/profile/Comments.jsx","components/user/profile/EditProfile.jsx","components/user/profile/Profile.jsx","utilities/PrivateRoute.jsx","components/user/Announcement.jsx","images/Notifications.jsx","components/user/MoviesListMinified.jsx","components/user/ReviewsListMinified.jsx","components/user/SearchBox.jsx","components/user/Navbar.jsx","components/user/Footer.jsx","components/user/Serie.jsx","components/user/CookiesPolicy.jsx","components/user/TermsAndConditions.jsx","components/user/PrivacyPolicy.jsx","components/login/ForgotPassword.jsx","components/login/ResetPassword.jsx","App.js","index.js"],"names":["module","exports","rootReducer","combineReducers","publicUsers","state","action","type","Object","assign","publicUser","ratings","rating","user","first_name","last_name","display_name","photo","token","email","reviews","wishlist","watchedlist","notifications","userProperty","search","query","category","notification","title","message","expired","settings","movies_api_key","captcha_api_key","movie_data_api","latest_movies_api","no_popular_reviews","no_popular_movies","no_allowed_reviews","no_comment_characters","no_display_name_characters","no_review_words","bg_image_refresh_time_days","bg_image_refresh_time_hours","bg_image_refresh_time_minutes","FacebookLink","InstagramLink","TwitterLink","LinkedinLink","current_bg_movie","date_set","Date","now","id","poster_path","backdrop_path","release_date","overview","genres","name","runtime","navbarHeight","height","dashboardMenuOpened","isOpened","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","createBrowserHistory","OkIcon","props","size","viewBox","width","transform","y","x","rx","fill","className","d","stroke","OfficialMoviesGenres","OfficialSeriesGenres","Ratings","element","style","lineHeight","emoji","set","origin","SendPostRequest","path","data","fetch","method","body","JSON","stringify","headers","then","res","json","SendGetRequest","Login","credentials","LoginWithToken","GetAllRatings","callback","GetAllPublicUsers","WriteReview","review","movieId","apiKey","EditReview","prevReview","userId","DeleteReview","GetMovieReviews","GetMoviePromotedReviews","WriteComment","comment","EditComment","commentId","DeleteComment","commentsIds","GetReviewComments","reviewId","AddToWishList","AddViewToMovie","LikeReview","LikeComment","ReportReview","ReportComment","GetUser","GetUserReviews","reviewIds","GetUserReview","GetUserComments","commentIds","EditUser","update","GetPopularReviews","limit","GetRecentReviews","GetRecommendations","SearchReviews","UpdateOrCreateSettings","GetSettings","GetUsers","GetReviews","GetComments","EditReviewForAdmin","EditCommentForAdmin","DeleteMultipleReviews","ids","DeleteMultipleComments","EditMultipleUsers","pids","GetAnnouncements","CreateAnnouncement","announcement","DeleteMultipleAnnouncements","EditAnnouncement","GetActiveAnnouncements","GetPromotions","EditPromotion","promotion","GetUserNotifications","GetNotifications","CreateNotification","EditNotification","DeleteMultipleNotifications","MoveMovieToWatchList","GetPromotedReviews","SendPasswordResetLink","ResetPassword","password","Popover","onOpen","position","arrow","theme","content","trigger","delay","animation","open","undefined","onHide","rest","popoverWidth","useState","contentWidth","setContentWidth","useEffect","popovers","document","getElementsByClassName","i","length","parentNode","removeChild","wasShowed","setWasShowed","onShow","hideDelay","html","interactive","unmountHTMLWhenHide","React","cloneElement","children","ref","el","getBoundingClientRect","current","Loader","loading","RemoveIcon","fillOpacity","paintOrder","ry","connect","ownProps","movie","setLoading","handleClick","a","console","log","updatedUser","dispatch","ratingsArr","forEach","tmdb_id","error","replace","currentlyAdded","findIndex","movie_id","toString","w","pointerEvents","color","onClick","marginRight","nFormatter","num","digits","si","value","symbol","toFixed","FormatDuration","minutes","h","Math","floor","m","validateEmail","test","String","toLowerCase","allowRate","selected","marginTop","marginBottom","FormatRequestUrl","params","concat","join","GetPopularMoviesByGenre","GetTrailers","finalId","substring","GetTvShow","GetMovie","GetCredits","SearchMovies","url","SearchSeries","encodeURI","onEnded","modalOpened","setIsEmpty","videoIds","setVideoIds","problem","setProblem","trailers","results","map","key","getData","config","youtube","playerVars","showinfo","iv_load_policy","playing","controls","Modal","overflow","top","onClose","fontSize","strokeWidth","refreshProfile","movieIndex","splice","refreshReviews","userIsOwner","newReview","setNewReview","prev","backgroundImage","split","onChange","e","persist","text","target","spellCheck","placeholder","resize","excellent_rate","good_rate","ok_rate","bad_rate","opacity","_id","push","reviewsList","userRatings","rate_type","left","bottom","margin","display","alignItems","movies","prefix","trailerMovieId","setTrailerMovieId","openTrailer","setOpenTrailer","addReviewOpen","setAddReviewOpen","setMovie","zIndex","alt","borderRadius","src","history","stopPropagation","genre_ids","gid","genre","find","g","genresPairs","genresIds","horizontalMenu","useRef","setGenresIds","genreName","setGenreName","setMovies","userWishList","setUserWishList","userWatchedList","setUserWatchedList","filteredMovies","setFilteredMovies","recalculate","filter","includes","slice","padding","background","maxWidth","overflowX","whiteSpace","Recommendations","movie_poster","movie_title","movie_genres","Pagination","count","setCurrent","classNames","notSelected","first","second","third","Fragment","reviewAuthor","setReviewIdOfVisibleComments","setComments","refreshComments","newComment","setNewComment","finalComment","author_name","comment_id","review_id","review_author","author","notificationReceivers","finalUser","comments","setReviews","promotedReviews","setPromotedReviews","reviewIdOfVisibleComments","loadingComment","setLoadingComment","loadingReview","setLoadingReview","loadingReport","setLoadingReport","commentsPage","setCommentsPage","topOfReviewsBlock","movie_release_date","setReview","addReplyOpen","setAddReplyOpen","setRefreshComments","setRefreshReviews","promotedContents","setPromotedContents","commentsObj","promoted","promotedContentIds","promoContents","content_id","promReviews","notPromotedReviews","cursor","date","format","likes","Collapse","in","marginLeft","values","renderComments","ind","b","Paigination","ceil","GetClosestValidWidth","closestSize","minDifference","diff","abs","innerWidth","setHeight","useLayoutEffect","updateSize","innerHeight","addEventListener","removeEventListener","useWindowSize","recommendedMovies","setRecommendedMovies","backgroundMovie","setBackgroundMovie","trailerIsEmpty","setTrailerIsEmpty","right","fontWeight","editFn","refreshReviewsFromParent","seekReviewId","seekCommentId","deletingComment","setDeletingComment","deletingReview","setDeletingReview","userIsOwnerOfReview","setUserIsOwnerOfReview","setComment","page","setPage","replyOpen","setReplyOpen","editCommentOpen","setEditCommentOpen","scrolledOnce","setScrolledOnce","reverse","unshift","realPage","scrollIntoView","behavior","content_author","userInd","r","match","director","cast","serieId","serieData","first_air_date","success","credits","directors","crew","job","scrollTo","currentTarget","classList","contains","remove","add","userHasWrittenReview","extractGenres","0","series","setSeries","selectedMovieGenre","setSelectedMovieGenre","selectedSerieGenre","setSelectedSerieGenre","onFail","moviesGenres","seriesGenres","minHeight","keys","Logo","clipPathUnits","strokeLinecap","clipPath","menuItems","icon","MdSettings","MdGroup","MdRateReview","FaBullhorn","BsFillTagFill","BsBellFill","LeftSideMenu","section","setSection","isMenuOpened","mobile","borderLeft","socialIcons","FaFacebookF","FaInstagram","FaLinkedinIn","FaTwitter","validations","valid","min","disabled","invalid","RightSideMenuFloating","transition","Select","items","btnName","multipleSelect","popoverClass","onSelect","isOpen","setIsOpen","opener","maxHeight","overflowY","uniqid","click","item","createMuiTheme","palette","primary","main","secondary","Checkbox","setEditReviewSection","setEditReview","setAction","role","setRole","searchKey","setSearchKey","lastVisibleColumn","setLastVisibleColumn","roleFilter","setRoleFilter","setSearch","mainFilter","setMainFilter","filteredReviews","setFilteredReviews","refresh","setRefresh","arr","boundaries","handleApply","columns","deleted","index","minWidth","onSwipedLeft","onSwipedRight","checked","reported","colSpan","setEditCommentSection","setEditComment","setCommentsObj","filteredComments","setFilteredComments","obj","allIds","fetchIds","idsArr","ReviewsAndComments","containerSpacing","tab","setTab","admin","currentReview","getBack","setUser","adminRatings","currentComment","setEditAnnouncement","setEditAnnouncementSection","setAddNewAnouncementSection","setType","typeFilter","setTypeFilter","announcements","setAnnouncements","filteredAnnouncements","setFilteredAnnouncements","description","actions","types","status","start_date","end_date","currentAnnouncement","setAnnouncement","statuses","component","onDayChange","day","year","getFullYear","month","getMonth","niceDay","getDate","setFullYear","setMonth","setDate","getTime","clearIcon","clockIcon","newTime","setHours","setMinutes","Edit","setEditPromotion","setAddNewPromotionSection","setEditPromotionSection","promotions","setPromotions","filteredPromotions","setFilteredPromotions","content_type","RegExp","searchOptions","publish_status","c","j","currentPromotion","active_status","setPromotion","publishStatuses","newContent","candidates","setCandidates","searchKeys","rev","p","promos","Notifications","setEditNotification","setEditNotificationSection","setAddNewNotificationSection","setNotifications","filteredNotifications","setFilteredNotifications","subject","useStyles","makeStyles","inputRoot","border","Autocomplete","classes","multiple","filterSelectedOptions","renderInput","TextField","variant","currentNotification","initialDate","receivers","setNotification","val","options","All","getOptionLabel","option","setEditUser","setEditUserSection","setAddNewUserSection","statusFilter","setStatusFilter","users","setUsers","filteredUsers","setFilteredUsers","newPublicUsers","editUsers","last_login","TimeAgo","last_activity","username","re_password","newUser","setNewUser","roles","user_id","pid","currentUser","allowEdit","getState","sections","editReview","editComment","editAnnouncement","editPromotion","editNotification","editUser","u","ann","prom","not","handleSubmit","LoginFunction","localStorage","setItem","setEmail","setPassword","onKeyDown","keyCode","LegalDocument","fileType","filePath","PrivacyPolicy","CookiePolicy","TermsAndConditions","errorComponent","onError","confirmPassword","setConfirmPassword","validated","setValidated","agreedWithPolicies","setAgreedWithPolicies","legalDocument","setLegalDocument","notValid","sitekey","hovered","setHovered","setExpired","timeout","setTimeout","clearTimeout","adminNotification","onMouseOver","onMouseLeave","listType","owner","formatedMovie","Wishlist","selectedGenre","setSelectedGenre","EditProfile","editProfileOpen","confirm_assword","setUpdate","photoUploader","handleFileUpload","imageFile","files","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","getDataUrlFromFile","dataUrl","finalUpdate","updatedPublicUser","newToken","sectionInUrl","profileData","setProfileData","reviewsFetched","commentsFetched","setEditProfileOpen","setRefreshProfile","borderTop","borderBottom","Watchedlist","PrivateRoute","Component","bearerPath","successPath","computedMatch","ready","validity","setValidity","getItem","render","to","pathname","Announcement","notClosedAnnouncement","closedAnnouncements","parse","closed","setClosed","flexBasis","flexGrow","movieGenre","seriesGenre","categories","setQuery","populateBox","setPopulateBox","queryCleaned","onBlur","Promise","resolve","onFocus","onKeyUp","withResizeDetector","scrolledToTop","setScrolledTopTop","lastScroll","direction","setDirection","profilePopover","location","useLocation","handleScrolling","scrollY","seen","prevNotifications","delIndex","n","removeItem","condition","secodaryItems","addReviewTrigger","setAddReviewTrigger","directorObj","CookiesPolicy","doc","ResetPasswordPage","App","publicUsersArr","userToken","exact","Home","Movie","Serie","SearchResults","AdminDashboard","Signup","ForgotPassword","Profile","ReactDOM","StrictMode","getElementById"],"mappings":"uFAAAA,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,4C,iLC6I3C,IAAMC,EAAcC,YAAgB,CAClCC,YAlHF,WAAiD,IAArBC,EAAoB,uDAAZ,GAAIC,EAAQ,uCAC9C,OAAQA,EAAOC,MACb,IAAK,kBACH,OAAOD,EAAOF,YAChB,IAAK,qBACH,OAAOI,OAAOC,OAAO,GAAIJ,EAAOC,EAAOI,YACzC,QACE,OAAOL,IA4GXM,QAxGF,WAA6C,IAArBN,EAAoB,uDAAZ,GAAIC,EAAQ,uCAC1C,OAAQA,EAAOC,MACb,IAAK,cACH,OAAOD,EAAOK,QAChB,IAAK,iBACH,OAAOH,OAAOC,OAAO,GAAIJ,EAAOC,EAAOM,QACzC,QACE,OAAOP,IAkGXQ,KA9IF,WAeG,IAdDR,EAcA,uDAdQ,CACNS,WAAY,GACZC,UAAW,GACXC,aAAc,GACdC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPR,QAAS,GACTS,QAAS,GACTC,SAAU,GACVC,YAAa,GACbC,cAAe,IAEjBjB,EACA,uCACA,OAAQA,EAAOC,MACb,IAAK,WACH,OAAOD,EAAOO,KAChB,IAAK,cACH,OAAOL,OAAOC,OAAO,GAAIJ,EAAOC,EAAOkB,cACzC,QACE,OAAOnB,IAyHXoB,OAjFF,WAAwE,IAAjDpB,EAAgD,uDAAxC,CAAEqB,MAAO,GAAIC,SAAU,OAASrB,EAAQ,uCACrE,OAAQA,EAAOC,MACb,IAAK,aACH,OAAOD,EAAOmB,OAChB,IAAK,gBACH,OAAOjB,OAAOC,OAAO,GAAIJ,EAAOC,EAAOmB,QACzC,QACE,OAAOpB,IA2EXuB,aAhGF,WAGG,IAFDvB,EAEA,uDAFQ,CAAEwB,MAAO,GAAIC,QAAS,GAAIC,SAAS,GAC3CzB,EACA,uCACA,OAAQA,EAAOC,MACb,IAAK,mBACH,OAAOD,EAAOsB,aAChB,IAAK,sBACH,OAAOpB,OAAOC,OAAO,GAAIJ,EAAOC,EAAOsB,cACzC,QACE,OAAOvB,IAuFX2B,SAtDF,WAqCG,IApCD3B,EAoCA,uDApCQ,CACN4B,eAAgB,GAChBC,gBAAiB,2CACjBC,eAAgB,GAChBC,kBAAmB,GACnBC,mBAAoB,EACpBC,kBAAmB,EACnBC,mBAAoB,EACpBC,sBAAuB,IACvBC,2BAA4B,GAC5BC,gBAAiB,GACjBC,2BAA4B,EAC5BC,4BAA6B,EAC7BC,8BAA+B,EAC/BC,aAAc,GACdC,cAAe,GACfC,YAAa,GACbC,aAAc,GACdC,iBAAkB,CAChBC,SAAUC,KAAKC,MACfC,GAAI,SACJC,YAAa,mCACbC,cAAe,mCACfC,aAAc,aACdC,SACE,6IACF7B,MAAO,4CACP8B,OAAQ,CACN,CAAEL,GAAI,GAAIM,KAAM,UAChB,CAAEN,GAAI,GAAIM,KAAM,WAChB,CAAEN,GAAI,GAAIM,KAAM,aAElBC,QAAS,MAGbvD,EACA,uCACA,OAAQA,EAAOC,MACb,IAAK,eACH,OAAOD,EAAO0B,SAChB,IAAK,kBACH,OAAOxB,OAAOC,OAAO,GAAIJ,EAAOC,EAAO0B,UACzC,QACE,OAAO3B,IAWXyD,aAzEF,WAAiD,IAApBzD,EAAmB,uDAAX,EAAGC,EAAQ,uCAC9C,OAAQA,EAAOC,MACb,IAAK,aACH,OAAOD,EAAOyD,OAChB,QACE,OAAO1D,IAqEX2D,oBAjEF,WAAsD,IAAxB3D,EAAuB,wDAARC,EAAQ,uCACnD,OAAQA,EAAOC,MACb,IAAK,4BACH,OAAOD,EAAO2D,SAChB,QACE,OAAO5D,MAoEE6D,EALDC,YACZjE,EACAkE,OAAOC,8BAAgCD,OAAOC,gC,wBCxJjCC,gB,sBC2DAC,MA3Df,SAAgBC,GACd,IAAIC,EAAOD,EAAMC,KAAOD,EAAMC,KAAO,GACrC,OACE,qCACEnB,GAAG,eACHoB,QAAQ,kBACRX,OAAQU,EACRE,MAAOF,GACHD,GAEJ,wBAAMlB,GAAG,iBACP,yBAAOA,GAAG,YAEN,sFAIN,qBAAGsB,UAAU,2BAA2BtB,GAAG,kBACzC,qBAAGsB,UAAU,wCAAwCtB,GAAG,gBACtD,wBACEuB,EAAG,EACHC,EAAG,EACHH,MAAO,GACPZ,OAAQ,GACRgB,GAAI,EACJzB,GAAG,kBACH0B,KAAK,SAEP,wBACEC,UAAU,YACVL,UAAU,iBACVtB,GAAG,mBAEH,yBAAOwB,EAAG,EAAGD,EAAG,EAAGvB,GAAG,oBACnB,OAGL,wBACE2B,UAAU,YACVL,UAAU,kBACVtB,GAAG,mBAEH,yBAAOwB,EAAG,EAAGD,EAAG,EAAGvB,GAAG,oBACnB,OAGL,wBACE4B,EAAE,kBACFN,UAAU,4BACVtB,GAAG,kBACH0B,KAAK,OACLG,OAAO,aCjDNC,EAAuB,CAClC,CAAE9B,GAAI,GAAIM,KAAM,UAChB,CAAEN,GAAI,GAAIM,KAAM,aAChB,CAAEN,GAAI,GAAIM,KAAM,aAChB,CAAEN,GAAI,GAAIM,KAAM,UAChB,CAAEN,GAAI,GAAIM,KAAM,SAChB,CAAEN,GAAI,GAAIM,KAAM,eAChB,CAAEN,GAAI,GAAIM,KAAM,SAChB,CAAEN,GAAI,MAAOM,KAAM,UACnB,CAAEN,GAAI,GAAIM,KAAM,WAChB,CAAEN,GAAI,GAAIM,KAAM,WAChB,CAAEN,GAAI,GAAIM,KAAM,UAChB,CAAEN,GAAI,MAAOM,KAAM,SACnB,CAAEN,GAAI,KAAMM,KAAM,WAClB,CAAEN,GAAI,MAAOM,KAAM,WACnB,CAAEN,GAAI,IAAKM,KAAM,mBACjB,CAAEN,GAAI,MAAOM,KAAM,YACnB,CAAEN,GAAI,GAAIM,KAAM,YAChB,CAAEN,GAAI,MAAOM,KAAM,OACnB,CAAEN,GAAI,GAAIM,KAAM,YAwBLyB,EAAuB,CAClC,CACE/B,GAAI,MACJM,KAAM,sBAER,CACEN,GAAI,GACJM,KAAM,aAER,CACEN,GAAI,GACJM,KAAM,UAER,CACEN,GAAI,GACJM,KAAM,SAER,CACEN,GAAI,GACJM,KAAM,eAER,CACEN,GAAI,GACJM,KAAM,SAER,CACEN,GAAI,MACJM,KAAM,UAER,CACEN,GAAI,MACJM,KAAM,QAER,CACEN,GAAI,KACJM,KAAM,WAER,CACEN,GAAI,MACJM,KAAM,QAER,CACEN,GAAI,MACJM,KAAM,WAER,CACEN,GAAI,MACJM,KAAM,oBAER,CACEN,GAAI,MACJM,KAAM,QAER,CACEN,GAAI,MACJM,KAAM,QAER,CACEN,GAAI,MACJM,KAAM,kBAER,CACEN,GAAI,GACJM,KAAM,YAuBG0B,EAAU,CACrB,CACE1B,KAAM,iBACN2B,QACE,yBAAKN,UAAU,mBAAmBO,MAAO,CAAEC,WAAY,SACrD,kBAAC,IAAD,CAAOC,MAAM,OAAOC,IAAI,WAAWlB,KAAM,OAI/C,CACEb,KAAM,YACN2B,QACE,yBAAKN,UAAU,mBAAmBO,MAAO,CAAEC,WAAY,SACrD,kBAAC,IAAD,CAAOC,MAAM,QAAQC,IAAI,WAAWlB,KAAM,OAIhD,CACEb,KAAM,UACN2B,QACE,yBAAKN,UAAU,mBAAmBO,MAAO,CAAEC,WAAY,SACrD,kBAAC,EAAD,CAAQhB,KAAM,OAIpB,CACEb,KAAM,WACN2B,QACE,yBAAKN,UAAU,mBAAmBO,MAAO,CAAEC,WAAY,SACrD,kBAAC,IAAD,CAAOC,MAAM,OAAOC,IAAI,WAAWlB,KAAM,Q,QChK3CmB,ECCA,yCDCAC,EAAkB,SAACC,EAAMC,GAC7B,OAAOC,MAAM,GAAD,OAAIJ,GAAJ,OAAaE,GAAQ,CAC/BG,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACP,eAAgB,sBAEjBC,MAAK,SAACC,GAAD,OAASA,EAAIC,WAGjBC,EAAiB,SAACX,GACtB,OAAOE,MAAM,GAAD,OAAIJ,GAAJ,OAAaE,IAAQQ,MAAK,SAACC,GAAD,OAASA,EAAIC,WAexCE,EAAQ,SAACC,GACpB,OAAOd,EAAgB,cAAec,IAG3BC,EAAiB,SAAC1F,GAC7B,OAAO2E,EAAgB,uBAAwB3E,IAGpC2F,EAAgB,SAACC,GAC5BL,EAAe,oBAAoBH,MAAK,SAACC,GAAD,OAASO,EAASP,OAG/CQ,EAAoB,SAACD,GAChC,OAAOL,EAAe,wBAAwBH,MAAK,SAACC,GAAD,OAASO,EAASP,OAO1DS,EAAc,SAACC,EAAQC,EAASrG,EAAMsG,GACjD,OAAOtB,EAAgB,eAAgB,CAAEoB,SAAQC,UAASrG,OAAMsG,YAGrDC,EAAa,SAACH,EAAQI,EAAYC,GAC7C,OAAOzB,EAAgB,gBAAiB,CAAEoB,SAAQI,aAAYC,YAGnDC,EAAe,SAACN,GAC3B,OAAOpB,EAAgB,kBAAmB,CAAEoB,YAGjCO,EAAkB,SAACN,GAC9B,OAAOrB,EAAgB,qBAAsB,CAAEqB,aAGpCO,EAA0B,SAACP,GACtC,OAAOrB,EAAgB,6BAA8B,CAAEqB,aAG5CQ,EAAe,SAACC,EAAS9G,GACpC,OAAOgF,EAAgB,mBAAoB,CAAEhF,OAAM8G,aAGxCC,EAAc,SAACD,EAASE,GACnC,OAAOhC,EAAgB,iBAAkB,CAAEgC,YAAWF,aAG3CG,EAAgB,SAACD,GAC5B,OAAOhC,EAAgB,mBAAoB,CAAEkC,YAAa,CAACF,MAGhDG,EAAoB,SAACC,GAChC,OAAOpC,EAAgB,uBAAwB,CAAEoC,cAGtCC,EAAgB,SAACrH,EAAMqG,EAASC,GAC3C,OAAOtB,EAAgB,uBAAwB,CAAEhF,OAAMqG,UAASC,YAOrDgB,EAAiB,SAACjB,EAASC,GACtC,OAAOtB,EAAgB,mBAAoB,CAAEqB,UAASC,YAG3CiB,EAAa,SAACvH,EAAMoH,GAC/B,OAAOpC,EAAgB,gBAAiB,CAAEhF,OAAMoH,cAGrCI,EAAc,SAACxH,EAAMgH,GAChC,OAAOhC,EAAgB,iBAAkB,CAAEhF,OAAMgH,eAGtCS,EAAe,SAACzH,EAAMoH,GACjC,OAAOpC,EAAgB,kBAAmB,CAAEhF,OAAMoH,cAGvCM,EAAgB,SAAC1H,EAAMgH,GAClC,OAAOhC,EAAgB,mBAAoB,CAAEhF,OAAMgH,eAGxCW,EAAU,SAAClB,GACtB,OAAOzB,EAAgB,aAAc,CAAEyB,YAG5BmB,EAAiB,SAACC,GAC7B,OAAO7C,EAAgB,oBAAqB,CAAE6C,eAGnCC,EAAgB,SAACrB,EAAQJ,GACpC,OAAOrB,EAAgB,wBAAyB,CAAEyB,SAAQJ,aAG/C0B,EAAkB,SAACC,GAC9B,OAAOhD,EAAgB,qBAAsB,CAAEgD,gBAGpCC,EAAW,SAACC,GACvB,OAAOlD,EAAgB,cAAe,CAAEkD,YAG7BC,EAAoB,SAACC,GAChC,OAAOpD,EAAgB,uBAAwB,CAAEoD,WAGtCC,EAAmB,SAACD,GAC/B,OAAOpD,EAAgB,sBAAuB,CAAEoD,WAGrCE,GAAqB,SAACF,GACjC,OAAOpD,EAAgB,0BAA2B,CAAEoD,WAGzCG,GAAgB,SAAC1H,GAC5B,OAAOmE,EAAgB,kBAAmB,CAAEnE,WAGjC2H,GAAyB,SAACrH,GACrC,OAAO6D,EAAgB,2BAA4B7D,IAGxCsH,GAAc,SAACxC,GAC1BL,EAAe,iBAAiBH,MAAK,SAACC,GAAD,OAASO,EAASP,OAG5CgD,GAAW,WACtB,OAAO9C,EAAe,qBAWX+C,GAAa,WACxB,OAAO/C,EAAe,uBAGXgD,GAAc,WACzB,OAAOhD,EAAe,wBAGXiD,GAAqB,SAACzC,EAAQpG,GACzC,OAAOgF,EAAgB,sBAAuB,CAAEoB,SAAQpG,UAE7C8I,GAAsB,SAAChC,EAAS9G,GAC3C,OAAOgF,EAAgB,uBAAwB,CAAE8B,UAAS9G,UAG/C+I,GAAwB,SAACC,GACpC,OAAOhE,EAAgB,wBAAyBgE,IAGrCC,GAAyB,SAACD,GACrC,OAAOhE,EAAgB,yBAA0BgE,IAGtCE,GAAoB,SAACF,EAAKG,EAAMjB,GAC3C,OAAOlD,EAAgB,4BAA6B,CAAEgE,MAAKG,OAAMjB,YAGtDkB,GAAmB,WAC9B,OAAOxD,EAAe,6BAGXyD,GAAqB,SAACC,GACjC,OAAOtE,EAAgB,8BAA+BsE,IAG3CC,GAA8B,SAACP,GAC1C,OAAOhE,EAAgB,8BAA+BgE,IAG3CQ,GAAmB,SAACF,GAC/B,OAAOtE,EAAgB,4BAA6BsE,IAGzCG,GAAyB,WACpC,OAAO7D,EAAe,6BAGX8D,GAAgB,WAC3B,OAAO9D,EAAe,0BAOX+D,GAAgB,SAACC,GAC5B,OAAO5E,EAAgB,yBAA0B4E,IAOtCC,GAAuB,SAACb,GACnC,OAAOhE,EAAgB,2BAA4B,CAAEgE,SAO1Cc,GAAmB,WAC9B,OAAOlE,EAAe,6BAGXmE,GAAqB,SAAChJ,GACjC,OAAOiE,EAAgB,8BAA+BjE,IAG3CiJ,GAAmB,SAACjJ,GAC/B,OAAOiE,EAAgB,4BAA6BjE,IAGzCkJ,GAA8B,SAACjB,EAAKd,GAC/C,OAAOlD,EAAgB,8BAA+B,CAAEgE,MAAKd,YAGlDgC,GAAuB,SAAClK,EAAMqG,EAASC,GAClD,OAAOtB,EAAgB,2BAA4B,CAAEhF,OAAMqG,UAASC,YAezD6D,GAAqB,WAChC,OAAOvE,EAAe,yBAGXwE,GAAwB,SAAC9J,GACpC,OAAO0E,EAAgB,+BAAgC,CAAE1E,WAG9C+J,GAAgB,SAACC,EAAUjK,GACtC,OAAO2E,EAAgB,uBAAwB,CAAE3E,QAAOiK,c,6BE7M3CC,GAzEC,SAAC,GAcV,IAbLnG,EAaI,EAbJA,UAaI,IAZJoG,cAYI,MAZK,aAYL,MAXJC,gBAWI,MAXO,SAWP,MAVJC,aAUI,aATJC,aASI,MATI,QASJ,MARJC,eAQI,MARM,aAQN,MAPJC,eAOI,MAPM,QAON,MANJC,aAMI,MANI,EAMJ,MALJC,iBAKI,MALQ,QAKR,MAJJC,YAII,WAJGC,EAIH,MAHJC,cAGI,MAHK,aAGL,EADDC,GACC,EAFJC,aAEI,4IACoCC,mBAAS,GAD7C,mBACGC,EADH,KACiBC,EADjB,KAGJC,qBAAU,WACR,OAAO,WAEL,IADA,IAAIC,EAAWC,SAASC,uBAAuB,gBACtCC,EAAI,EAAGA,EAAIH,EAASI,OAAQD,IACnCH,EAASG,GAAGE,WAAWC,YAAYN,EAASG,OAG/C,IAVC,MAW8BP,oBAAS,GAXvC,mBAWGW,EAXH,KAWcC,EAXd,KAYJ,OACE,kBAAC,WAAD,CACEC,OAAQ,WACDF,IACHC,GAAa,GACbzB,MAGJU,OAAQA,EACRJ,MAAOA,EACPqB,UAAW,EACXC,KAAMxB,EAAQU,GACdb,SAAUA,EACVI,QAASA,EACTF,MAAOA,EACPD,MAAOA,EACP2B,aAAa,EACbtB,UAAWA,EACXC,KAAMA,EACNsB,qBAAqB,EACrBlI,UAAWA,GAEVmI,IAAMC,aACLrB,EAAKsB,SACL9M,OAAOC,OAAO,GAAIuL,EAAKsB,SAAS9I,MAAO,CACrC+I,IAAK,SAACC,GACJ,GAAIA,IACmB,IAAjBrB,GACFC,EAAgBoB,EAAGC,wBAAwB9I,OAEzCqH,EAAKsB,UAAU,CAAC,IACVC,EAAQvB,EAAKsB,SAAbC,IACJA,GAAO,YAAaA,IACtBA,EAAIG,QAAUF,GAEG,oBAARD,GACTA,EAAIC,UCnDPG,GAbA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,QAA0C,IAAjCnJ,YAAiC,MAA1B,GAA0B,MAAtB+G,aAAsB,MAAd,QAAc,EAC1D,OACEoC,GACE,yBAAK3I,UAAU,kCACb,yBACEA,UAAS,iBAAYuG,GACrBhG,MAAO,CAAEb,MAAM,GAAD,OAAKF,EAAL,MAAeV,OAAO,GAAD,OAAKU,EAAL,WCwC9BoJ,OA9Cf,SAAoBrJ,GAClB,IAAIC,EAAOD,EAAMC,KAAOD,EAAMC,KAAO,GACrC,OACE,qCAAKC,QAAQ,kBAAkBX,OAAQU,EAAME,MAAOF,GAAUD,GAC5D,qBACEI,UAAU,4BACVkJ,YAAa,KACbC,WAAW,uBAEX,wBACEhJ,GAAI,EACJF,EAAG,OACHC,EAAG,MACHf,OAAQ,GACRY,MAAO,MACPqJ,GAAI,OAEN,wBACErJ,MAAO,MACPZ,OAAQ,GACRe,EAAG,OACHD,EAAG,OACHE,GAAI,EACJiJ,GAAI,OAEN,wBACErJ,MAAO,MACPZ,OAAQ,KACRe,EAAG,OACHD,EAAG,OACHE,GAAI,EACJiJ,GAAI,OAEN,wBACEjJ,GAAI,EACJF,EAAG,OACHC,EAAG,KACHf,OAAQ,KACRY,MAAO,MACPqJ,GAAI,UCqFCC,oBAPf,SAAc5N,EAAO6N,GACnB,OAAO,aACL/G,OAAQ9G,EAAM2B,SAASC,gBACpBiM,KAIQD,EArHQ,SAAC,GAA6B,IAA3BpN,EAA0B,EAA1BA,KAAMsN,EAAoB,EAApBA,MAAOhH,EAAa,EAAbA,OAAa,EACpB+E,oBAAS,GADW,mBAC3C0B,EAD2C,KAClCQ,EADkC,KAG5CC,EAAW,uCAAG,WAAOvM,GAAP,eAAAwM,EAAA,kEAEhBC,QAAQC,IAAI,oBAAqBL,EAAM7K,KACnCzC,EAAKG,aAHO,qBAIVmN,EAAM7K,GAJI,wBAKZ8K,GAAW,GALC,SAMIlG,EAAcrH,EAAMsN,EAAM7K,GAAI6D,GANlC,OAMRZ,EANQ,OAOZ6H,GAAW,GACP7H,EAAIkI,aACNvK,EAAMwK,SAAS,CACbnO,KAAM,cACNiB,aAAc+E,EAAIkI,cAEpBvK,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAM,SAAD,OAAWC,EAAX,aACLA,QAAQ,sBAAD,OAAwBA,EAAxB,kBACPvB,KAAM,aAGVsG,GAAc,SAAC8H,GACb,IAAIhO,EAAU,GACdgO,EAAWC,SAAQ,SAAC9J,GAClBnE,EAAQmE,EAAE+J,SAAW/J,KAEvBZ,EAAMwK,SAAS,CAAEnO,KAAM,cAAeI,gBAGxCuD,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASqE,KAAKC,UAAUG,EAAIuI,OAAOC,QAAQ,KAAM,IACjDxO,KAAM,aAlCA,gCAwCd2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QAAS,6CACTvB,KAAM,aA7CI,0DAkDhB2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,gBACPC,QAAS,iCACTvB,KAAM,aAvDM,0DAAH,sDA6DXyO,GACoE,IAAxEnO,EAAKQ,SAAS4N,WAAU,SAACnK,GAAD,OAAOA,EAAEoK,WAAaf,EAAM7K,GAAG6L,cAKzD,OAFG,IADDtO,EAAKS,YAAY2N,WAAU,SAACnK,GAAD,OAAOA,EAAEoK,WAAaf,EAAM7K,GAAG6L,cAuC1D,GAnCA,kBAAC,GAAD,CACE3D,MAAM,OACNF,SAAS,MACTG,QAAS,SAAC2D,GAAD,OACP,yBAAKnK,UAAU,aACZ+J,EAAiB,uBAAyB,oBAG/CtD,QAAQ,cAER,yBACElG,MAAO,CAAE6J,cAAe,OACxBpK,UAAS,qBACP+J,EAAiB,oBAAsB,sBAGxCpB,EACC,kBAAC,GAAD,CAAQnJ,KAAM,GAAImJ,QAASA,EAAS0B,MAAO,UACzCN,EACF,kBAAC,GAAD,CACEM,MAAO,QACPtK,KAAM,QACNuK,QAAS,kBAAMlB,EAAY,iBAC3B5J,KAAM,KAGR,kBAAC,IAAD,CACE8K,QAAS,kBAAMlB,EAAY,aAC3BpJ,UAAU,gBACVO,MAAO,CAAEgK,YAAa,eC7GrBC,GAAa,SAACC,EAAKC,GAC9B,IAUIlD,EAVAmD,EAAK,CACP,CAAEC,MAAO,EAAGC,OAAQ,IACpB,CAAED,MAAO,IAAKC,OAAQ,KACtB,CAAED,MAAO,IAAKC,OAAQ,KACtB,CAAED,MAAO,IAAKC,OAAQ,KACtB,CAAED,MAAO,KAAMC,OAAQ,KACvB,CAAED,MAAO,KAAMC,OAAQ,KACvB,CAAED,MAAO,KAAMC,OAAQ,MAIzB,IAAKrD,EAAImD,EAAGlD,OAAS,EAAGD,EAAI,KACtBiD,GAAOE,EAAGnD,GAAGoD,OADYpD,KAK/B,OAAQiD,EAAME,EAAGnD,GAAGoD,OAAOE,QAAQJ,GAAQZ,QAPlC,2BAO8C,MAAQa,EAAGnD,GAAGqD,QAG1DE,GAAiB,SAACC,GAC7B,IAAIC,EAAIC,KAAKC,MAAMH,EAAU,IACzBI,EAAIJ,EAAc,GAAJC,EAClB,MAAM,GAAN,OAAUA,EAAV,aAAgBG,EAAhB,MAEWC,GAAgB,SAACnP,GAG5B,MADW,0JACDoP,KAAKC,OAAOrP,GAAOsP,gBCwChBxC,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACLrN,KAAMR,EAAMQ,KACZF,QAASN,EAAMM,SACZuN,KAIQD,EA9DQ,SAAC,GAQjB,IAPLvI,EAOI,EAPJA,MACA6J,EAMI,EANJA,QAMI,IALJ9K,YAKI,MALG,SAKH,MAJJiM,iBAII,SAHJC,EAGI,EAHJA,SACA1L,EAEI,EAFJA,UACA4K,EACI,EADJA,MAEA,OACE,yBACEN,QAAO,sBAAE,sBAAAjB,EAAA,sDACHoC,GACEnB,GACFA,IAHG,2CAOTtK,UAAS,gCAA2BR,EAA3B,YACPiM,EAAY,eAAiB,IADtB,OAENC,EAAW,yBAA2B,IAFhC,OAGP1L,EAAS,WAAOA,GAAc,KAGhC,yBAAKA,UAAU,uEACF6G,IAAV+D,GAAiC,OAAVA,EACtB,yBAAK5K,UAAS,iBAAqB,UAATR,EAAmB,IAAM,MAChDgL,GAAWI,EAAMnD,OAAQ,IAG5B,GAEF,yBAAKzH,UAAU,YACF,wBAAVS,EACC,yBAAKF,MAAO,CAAEoL,UAAoB,WAATnM,EAAoB,OAAS,SACpD,kBAAC,EAAD,CACEA,KAAe,UAATA,EAAmB,GAAc,WAATA,EAAoB,GAAK,MAI3D,yBAAKe,MAAO,CAAEqL,aAAuB,WAATpM,EAAoB,OAAS,SACvD,kBAAC,IAAD,CACEiB,MAAOA,EACPC,IAAI,WACJlB,KAAe,UAATA,EAAmB,GAAc,WAATA,EAAoB,GAAK,Y,qBC/CjEqM,I,MAAmB,SAAChL,GAA+B,IAAzBiL,EAAwB,uDAAf,GAAI5J,EAAW,uCACtD,MAAM,GAAN,OAHa,gCAGb,OAAmBrB,EAAnB,oBAAmCqB,EAAnC,YAA6C,CAAC,kBAC3C6J,OAAOD,GACPE,KAAK,QAaGC,GAA0B,SAACvN,EAAQwD,GAC9C,OAAOnB,MACL8K,GACE,kBACA,CAAC,0BAAD,sBAA2CnN,EAAOsN,KAAK,OACvD9J,IAEFb,MAAK,SAACC,GAAD,OAASA,EAAIC,WAGT2K,GAAc,SAACjK,EAASC,GACnC,IAAIiK,EAC0B,WAA5BlK,EAAQmK,UAAU,EAAG,GAAkBnK,EAAQmK,UAAU,GAAKnK,EAChE,OAAOlB,MACL8K,GAAiB,IAAD,OAEgB,WAA5B5J,EAAQmK,UAAU,EAAG,GAAkB,KAAO,QAFlC,YAGVD,EAHU,WAId,GACAjK,IAEFb,MAAK,SAACC,GAAD,OAASA,EAAIC,WAOT8K,GAAY,SAACpK,EAASC,GACjC,OAAOnB,MAAM8K,GAAiB,OAAD,OAAQ5J,GAAW,GAAIC,IAASb,MAAK,SAACC,GAAD,OAChEA,EAAIC,WAIK+K,GAAW,SAACrK,EAASC,GAChC,OAAOnB,MAAM8K,GAAiB,UAAD,OAAW5J,GAAW,GAAIC,IAASb,MAAK,SAACC,GAAD,OACnEA,EAAIC,WAIKgL,GAAa,SAACtK,EAASC,GAClC,IAAIiK,EAC0B,WAA5BlK,EAAQmK,UAAU,EAAG,GAAkBnK,EAAQmK,UAAU,GAAKnK,EAChE,OAAOlB,MACL8K,GAAiB,IAAD,OAEgB,WAA5B5J,EAAQmK,UAAU,EAAG,GAAkB,KAAO,QAFlC,YAGVD,EAHU,YAId,GACAjK,IAEFb,MAAK,SAACC,GAAD,OAASA,EAAIC,WAGTiL,GAAe,SAAC/P,EAAOyF,GAClC,IAAIuK,EAAMZ,GAAiB,gBAAiB,CAAC,SAAD,OAAUpP,IAAUyF,GAChE,OAAOnB,MAAM0L,GAAKpL,MAAK,SAACC,GAAD,OAASA,EAAIC,WAGzBmL,GAAe,SAACjQ,EAAOyF,GAClC,IAAIuK,EAAMZ,GACR,aACA,CAAC,SAAD,OAAUc,UAAUlQ,KACpByF,GAEF,OAAOnB,MAAM0L,GAAKpL,MAAK,SAACC,GAAD,OAASA,EAAIC,WCbvByH,oBAPf,SAAc5N,EAAO6N,GACnB,OAAO,aACLlM,SAAU3B,EAAM2B,UACbkM,KAIQD,EAjEO,SAAC,GAMhB,IALL/G,EAKI,EALJA,QACAlF,EAII,EAJJA,SACA6P,EAGI,EAHJA,QACAC,EAEI,EAFJA,YAEI,IADJC,kBACI,MADS,aACT,IAC4B7F,mBAAS,IADrC,mBACG8F,EADH,KACaC,EADb,OAE0B/F,mBAAS,IAFnC,mBAEGgG,EAFH,KAEYC,EAFZ,KAoBJ,OAhBA9F,qBAAU,WAAM,4CACd,4BAAAiC,EAAA,0DACMpH,IAAWlF,EAASC,eAD1B,gCAEyBkP,GAAYjK,EAASlF,EAASC,gBAFvD,QAEQmQ,EAFR,QAGkBC,SAAYD,EAASC,QAAQ3F,OAIzCuF,EAAYG,EAASC,QAAQC,KAAI,SAACxN,GAAD,OAAOA,EAAEyN,SAH1CJ,EAAW,2CACXJ,KALN,4CADc,uBAAC,WAAD,wBAadS,KACC,CAACtL,EAASlF,EAASC,iBAGpB,yBAAKgD,UAAU,kDACb,yBAAKA,UAAU,kBACZ+M,EAAStF,QAAUoF,EAClB,yBAAK7M,UAAU,UACb,yBAAKA,UAAU,0BACb,kBAAC,KAAD,CACE4M,QAASA,EACTY,OAAQ,CACNC,QAAS,CACPC,WAAY,CAAEC,SAAU,EAAGC,eAAgB,KAG/CC,SAAO,EACP7N,UAAU,iBACV8N,UAAQ,EACRpO,MAAM,OACNZ,OAAO,OACP2N,IAAG,0CAAqCM,EAAS,QAIrDE,EACF,yBAAKjN,UAAU,wBAAwBiN,GAEvC,Q,QCrBKc,GAjCD,SAACxO,GASb,OARA6H,qBAAU,WACJ7H,EAAMqH,KACRU,SAASrG,KAAKV,MAAMyN,SAAW,SAE/B1G,SAASrG,KAAKV,MAAMyN,SAAW,YAEhC,CAACzO,EAAMqH,OAGR,yBACE5G,UAAS,mFACNT,EAAMqH,KAAmB,GAAZ,YAGhB,yBACE5G,UAAU,qCACVO,MAAO,CAAE8F,SAAU,SAAU4H,IAAK,IAElC,yBAAK3D,QAAS/K,EAAM2O,QAASlO,UAAU,gBACrC,kBAAC,KAAD,CAAKmO,SAAS,OAAOC,YAAY,UAGrC,yBAAKpO,UAAU,kEACZmI,IAAMC,aACL7I,EAAM8I,SACN9M,OAAOC,OAAO,GAAI+D,EAAM8I,SAAS9I,MAAO,CAAEsN,YAAatN,EAAMqH,W,kBCuExDoC,oBAPf,SAAc5N,EAAO6N,GACnB,OAAO,aACL/G,OAAQ9G,EAAM2B,SAASC,gBACpBiM,KAIQD,EA5Fa,SAAC,GAKtB,IAJLpN,EAII,EAJJA,KACAqG,EAGI,EAHJA,QAGI,IAFJoM,sBAEI,MAFa,aAEb,EADJnM,EACI,EADJA,OACI,EAC0B+E,oBAAS,GADnC,mBACG0B,EADH,KACYQ,EADZ,KAGEC,EAAW,uCAAG,gCAAAC,EAAA,0DACdzN,EAAKG,aADS,qBAEZkG,EAFY,uBAGdkH,GAAW,GAHG,SAIErD,GAAqBlK,EAAMqG,EAASC,GAJtC,OAIVZ,EAJU,OAKd6H,GAAW,GACP7H,EAAIkI,aACFpN,EADe,aACAR,EAAKQ,WAEJ,KADhBkS,EAAalS,EAAS4N,WAAU,SAACnK,GAAD,OAAOA,EAAEoK,WAAahI,OAExD7F,EAASmS,OAAOD,GAElBrP,EAAMwK,SAAS,CACbnO,KAAM,cACNiB,aAAc+E,EAAIkI,cAEpBvK,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAM,0BACNC,QAAQ,gDACRvB,KAAM,aAGV2D,EAAMwK,SAAS,CACbnO,KAAM,iBACNK,OAAO,gBACJsG,EAAUX,EAAI3F,UAGnB0S,KAEApP,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASqE,KAAKC,UAAUG,EAAIuI,OAAOC,QAAQ,KAAM,IACjDxO,KAAM,aArCE,+BA2ChB2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QAAS,6CACTvB,KAAM,aAhDM,4CAAH,qDAqDjB,OACE,kBAAC,GAAD,CACEiL,MAAM,OACNF,SAAS,MACTG,QAAS,SAAC2D,GAAD,OAAO,yBAAKnK,UAAU,aAAf,oBAChByG,QAAQ,cAER,yBACEzG,UAAU,+BACVO,MAAO,CAAE6J,cAAe,QAEvBzB,EACC,kBAAC,GAAD,CAAQnJ,KAAM,GAAImJ,QAASA,EAAS0B,MAAO,UAE3C,kBAAC,IAAD,CACEC,QAASlB,EACTpJ,UAAU,uBCmNPgJ,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACLlM,SAAU3B,EAAM2B,SAChBrB,QAASN,EAAMM,SACZuN,KAIQD,EA/RG,SAAC,GAUZ,IATLpC,EASI,EATJA,KACAsH,EAQI,EARJA,QACAhF,EAOI,EAPJA,MACAtN,EAMI,EANJA,KACAoG,EAKI,EALJA,OAKI,IAJJwM,sBAII,MAJa,aAIb,EAHJzR,EAGI,EAHJA,SACArB,EAEI,EAFJA,QACA+S,EACI,EADJA,YACI,EAC8BxH,mBAAS,CACzCjF,OAAQ,GACRrG,OAAQ,KAHN,mBACG+S,EADH,KACcC,EADd,OAK0B1H,mBAAS,IALnC,mBAKGgG,EALH,KAKYC,EALZ,OAM0BjG,oBAAS,GANnC,mBAMG0B,EANH,KAMYQ,EANZ,KAkBJ,OAVA/B,qBAAU,WACJpF,GACF2M,GAAa,SAACC,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB5M,OAAQA,EAAOA,OACfrG,OAAQqG,EAAOrG,cAIpB,CAACqG,IACGkH,EACL,kBAAC,GAAD,CAAOtC,KAAMA,EAAMsH,QAASA,GAC1B,yBAAKlO,UAAU,mDACb,yBAAKA,UAAU,0BACZyO,EAAc,OAAS,MAD1B,aAC2CvF,EAAMtM,MADjD,KAEGsM,EAAM1K,aAAa4N,UAAU,EAAG,GAFnC,KAIA,yBAAKpM,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVO,MAAO,CAAEsO,gBAAgB,OAAD,OAASjT,EAAKI,MAAd,SAG5B,yBAAKgE,UAAU,OACb,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,oCACVO,MAAO,CAAEsO,gBAAgB,OAAD,OAASjT,EAAKI,MAAd,SAG5B,yBACEgE,UAAS,0CACP0O,EAAU1M,OAAO8M,MAAM,KAAKrH,QAC5B1K,EAASU,gBAAkB,EACvB,aACA,gBAGLiR,EAAU1M,OACPjF,EAASU,gBACTiR,EAAU1M,OAAO8M,MAAM,KAAKrH,OAC5B1K,EAASU,gBAAiB,IAXhC,eAeF,yBAAKuC,UAAU,sBAAsBO,MAAO,CAAEzB,OAAQ,UACpD,8BACEiQ,SAAU,SAACC,GACTA,EAAEC,UACF,IAAIC,EAAOF,EAAEG,OAAOvE,MAChBsE,EAAKJ,MAAM,KAAKrH,QAAU1K,EAASU,iBACrCkR,GAAa,SAACC,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE5M,OAAQkN,QAIxCtE,MAAO8D,EAAU1M,OACjBoN,YAAY,EACZC,YAAY,qBACZ9O,MAAO,CAAE+O,OAAQ,QACjBtP,UAAU,0BAGd,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEyL,WAAW,EACXjM,KAAM,MACN8K,QAAS,kBACPqE,GAAa,SAACC,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEjT,OAAQ,uBAGtC+P,SAA+B,mBAArBgD,EAAU/S,OACpB8E,MAAM,OACNT,UAAS,YACT4K,MACElP,EAAQwN,EAAM7K,IAAM3C,EAAQwN,EAAM7K,IAAIkR,eAAiB,IAG3D,kBAAC,GAAD,CACE9D,WAAW,EACXjM,KAAM,MACN8K,QAAS,kBACPqE,GAAa,SAACC,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEjT,OAAQ,kBAGtC+P,SAA+B,cAArBgD,EAAU/S,OACpB8E,MAAM,QACNT,UAAS,YACT4K,MAAOlP,EAAQwN,EAAM7K,IAAM3C,EAAQwN,EAAM7K,IAAImR,UAAY,IAE3D,kBAAC,GAAD,CACE/D,WAAW,EACXjM,KAAM,MACN8K,QAAS,kBACPqE,GAAa,SAACC,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEjT,OAAQ,gBAGtC+P,SAA+B,YAArBgD,EAAU/S,OACpB8E,MAAM,sBACNT,UAAS,YACT4K,MAAOlP,EAAQwN,EAAM7K,IAAM3C,EAAQwN,EAAM7K,IAAIoR,QAAU,IAEzD,kBAAC,GAAD,CACEhE,WAAW,EACXjM,KAAM,MACN8K,QAAS,kBACPqE,GAAa,SAACC,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEjT,OAAQ,iBAGtC8E,MAAM,OACNiL,SAA+B,aAArBgD,EAAU/S,OACpBqE,UAAS,OACT4K,MAAOlP,EAAQwN,EAAM7K,IAAM3C,EAAQwN,EAAM7K,IAAIqR,SAAW,MAI9D,yBACE1P,UAAS,qCACP0O,EAAU1M,OAAO8M,MAAM,KAAKrH,QAC5B1K,EAASU,gBAAkB,EACvB,aACA,gBAGLiR,EAAU1M,OACPjF,EAASU,gBACTiR,EAAU1M,OAAO8M,MAAM,KAAKrH,OAC5B1K,EAASU,gBAAiB,IAXhC,eAeF,yBACEuC,UAAU,oEACVO,MAAO,CAAEzB,OAAQ,OAAQ6Q,QAAS1C,EAAU,EAAI,IAE/CA,GAEH,yBAAKjN,UAAU,gEACb,yBACEA,UAAU,4DACVsK,QAAO,sBAAE,kCAAAjB,EAAA,kEAEAqF,EAAU/S,OAFV,gBAGHuR,EAAW,iBAHR,0BAIOwB,EAAU1M,OAJjB,gBAKHkL,EAAW,mBALR,0BAOH/D,GAAW,IACDsF,EARP,kCASOtM,EAAWuM,EAAW1M,EAAQpG,EAAKgU,KAT1C,6DAUO7N,EACJ2M,EACAxF,EAAM7K,GACNzC,EACAmB,EAASC,gBAdZ,4BAQCsE,EARD,KAgBH6H,GAAW,GACXwF,EAAa,CAAE3M,OAAQ,GAAIrG,OAAQ,KAC/B2F,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAM,YAAD,OACH6R,EAAc,OAAS,MADpB,WAGLnT,KAAM,UACNuB,QAASqE,KAAKC,UAAUG,EAAIuI,OAAOC,QACjC,KACA,QAKN7K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAM,oBAAD,OACH6R,EAAc,SAAW,QADtB,WAGLnT,KAAM,UACNuB,QAAQ,gCAAD,OACL4R,EAAc,SAAW,YAK/BxP,EAAMwK,SAAS,CACbnO,KAAM,iBACNK,OAAO,gBACJuN,EAAM7K,GAAKiD,EAAI3F,UAIf8S,KACCpS,EADY,aACMT,EAAKS,cACfwT,KAAK,CAAE5F,SAAUf,EAAM7K,GAAG6L,cAClC4F,EAHY,aAGMlU,EAAKO,UACf0T,KAAKvO,EAAI0B,UACrB/D,EAAMwK,SAAS,CACbnO,KAAM,cACNiB,aAAc,CACZF,cACAF,QAAS2T,OAKXC,EAnCC,eAmCkBnU,EAAKF,UAChBwN,EAAM7K,IAAM,CACtB4L,SAAUf,EAAM7K,GAChB2R,UAAWtB,EAAU/S,QAGvBsD,EAAMwK,SAAS,CACbnO,KAAM,cACNiB,aAAc,CACZb,QAASqU,KAIb7B,IACAM,KAjFC,qHAuFT,kBAAC,GAAD,CACEnE,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASA,EACTnJ,KAAM,KArGV,eA+GV,MCvFWwJ,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACLrN,KAAMR,EAAMQ,KACZF,QAASN,EAAMM,SACZuN,KAIQD,EAzLI,SAAC,GAA4C,IAA1CsH,EAAyC,EAAzCA,OAAQ1U,EAAiC,EAAjCA,KAAMF,EAA2B,EAA3BA,QAA2B,KAAlB6U,OACCtJ,mBAAS,KADQ,mBACtDuJ,EADsD,KACtCC,EADsC,OAEvBxJ,oBAAS,GAFc,mBAEtDyJ,EAFsD,KAEzCC,EAFyC,OAGnB1J,oBAAS,GAHU,mBAGtD2J,EAHsD,KAGvCC,EAHuC,OAKnC5J,oBAAS,GAL0B,mBAKtDiC,EALsD,KAK/C4H,EAL+C,KAM7D,OACE,yBAAK9Q,UAAU,2BACb,kBAAC,GAAD,CAAO4G,KAAM8J,EAAaxC,QAAS,kBAAMyC,GAAe,KACtD,kBAAC,GAAD,CACE1O,QAASuO,EACT5D,QAAS,kBAAM+D,GAAe,OAGlC,kBAAC,GAAD,CACE/J,KAAMgK,EACN1C,QAAS,kBAAM2C,GAAiB,IAChC3H,MAAOA,EACPtN,KAAMA,IAEP0U,EAAOjD,KAAI,SAACxN,EAAG2H,GACd,OACE,yBACE8F,IAAG,iBAAY9F,GACfxH,UAAU,uDAEV,yBACEA,UAAU,6EACVO,MAAO,CACLqL,aAAc,QACdmF,OAAQ,EACRjS,OAAQ,OACRsL,cAAe,SAGjB,kBAAC,GAAD,CAAgBlB,MAAOrJ,EAAGjE,KAAMA,IAChC,yBAAKoE,UAAU,SACf,kBAAC,GAAD,CACEqO,eAAgB,WACdyC,EAASjR,GACTgR,GAAiB,IAEnBjV,KAAMA,EACNqG,QAASpC,EAAExB,MAGf,yBAAK2B,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,2DACb,yBACEgR,IAAKnR,EAAEvB,YACPoB,MAAM,OACNa,MAAO,CAAE0Q,aAAc,QACvBjR,UAAU,gBACVkR,IACErR,EAAEvB,YAAF,yCACsCuB,EAAEvB,aACpC,yDAGR,yBACEgM,QAAS,kBACP6G,EAAQtB,KAAR,iBAAuBhQ,EAAElB,KAAF,gBAAkBkB,EAAExB,IAAOwB,EAAExB,MAEtD2B,UAAU,sEACVO,MAAO,CACL0P,KAAM,EACNhC,IAAK,EACL5H,SAAU,WACV0K,OAAQ,EACRE,aAAc,SAGhB,yBACEjR,UAAU,uDACVsK,QAAS,SAAC0E,GACRA,EAAEoC,kBACFX,EAAkB5Q,EAAExB,IACpBsS,GAAe,KAGjB,kBAAC,KAAD,CACEpQ,MAAO,CACL4N,SAAU,OACV9D,MAAO,QACPE,YAAa,cAOzB,yBAAKvK,UAAU,iBACb,yBACEA,UAAU,mDACVsK,QAAS,kBAAM6G,EAAQtB,KAAR,iBAAuBhQ,EAAExB,OAExC,yBAAK2B,UAAU,iBACZH,EAAEjD,MAAQiD,EAAEjD,MAAQiD,EAAElB,OAG3B,yBAAKqB,UAAU,kCACb,yBAAKA,UAAU,iBACZH,EAAEwR,UAAU5J,OACT5H,EAAEwR,UACChE,KAAI,SAACiE,GACJ,IAAIC,EAAQ1R,EAAEjD,MACVuD,EAAqBqR,MAAK,SAACC,GAAD,OAAOA,EAAEpT,KAAOiT,KAC1ClR,EAAqBoR,MAAK,SAACC,GAAD,OAAOA,EAAEpT,KAAOiT,KAE9C,OAAOC,EAAQA,EAAM5S,KAAO,aAE7BqN,KAAK,KACR,YAGR,yBAAKhM,UAAU,8CACb,kBAAC,GAAD,CACE0L,WACE9P,EAAKF,QAAQmE,EAAExB,KACsB,mBAAjCzC,EAAKF,QAAQmE,EAAExB,IAAI2R,UAGzB9G,MAAOrJ,EACPY,MAAM,OACNT,UAAU,YACVR,KAAK,QACLoL,MAAOlP,EAAQmE,EAAExB,IAAM3C,EAAQmE,EAAExB,IAAIkR,eAAiB,KAExD,kBAAC,GAAD,CACE/P,KAAK,QACLkM,WACE9P,EAAKF,QAAQmE,EAAExB,KACsB,cAAjCzC,EAAKF,QAAQmE,EAAExB,IAAI2R,UAGzB9G,MAAOrJ,EACPY,MAAM,QACNT,UAAU,YACV4K,MAAOlP,EAAQmE,EAAExB,IAAM3C,EAAQmE,EAAExB,IAAImR,UAAY,KAEnD,kBAAC,GAAD,CACEhQ,KAAK,QACLkM,WACE9P,EAAKF,QAAQmE,EAAExB,KACsB,YAAjCzC,EAAKF,QAAQmE,EAAExB,IAAI2R,UAGzB9G,MAAOrJ,EACPG,UAAU,YACVS,MAAM,sBACNmK,MAAOlP,EAAQmE,EAAExB,IAAM3C,EAAQmE,EAAExB,IAAIoR,QAAU,KAEjD,kBAAC,GAAD,CACEjQ,KAAK,QACLiB,MAAM,OACNmK,MAAOlP,EAAQmE,EAAExB,IAAM3C,EAAQmE,EAAExB,IAAIqR,SAAW,GAChDhE,WACE9P,EAAKF,QAAQmE,EAAExB,KACsB,aAAjCzC,EAAKF,QAAQmE,EAAExB,IAAI2R,UAGzB9G,MAAOrJ,KAGX,yBAAKG,UAAU,mCACb,kBAAC,GAAD,CAAgBkJ,MAAOrJ,EAAGjE,KAAMA,e,SC3K5C8V,GAAc,CAClB,CAAE/S,KAAM,MAAOgT,UAAW,IAC1B,CAAEhT,KAAM,sBAAuBgT,UAAW,CAAC,GAAI,KAC/C,CAAEhT,KAAM,qBAAsBgT,UAAW,CAAC,GAAI,KAC9C,CAAEhT,KAAM,UAAWgT,UAAW,CAAC,QAC/B,CAAEhT,KAAM,gBAAiBgT,UAAW,CAAC,GAAI,KACzC,CAAEhT,KAAM,SAAUgT,UAAW,CAAC,MAC9B,CAAEhT,KAAM,wBAAyBgT,UAAW,CAAC,GAAI,MAiHpC3I,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACLlM,SAAU3B,EAAM2B,SAChBnB,KAAMR,EAAMQ,MACTqN,KAIQD,EA9GO,SAAC,GAAgC,IAA9B9G,EAA6B,EAA7BA,OAAQnF,EAAqB,EAArBA,SAAUnB,EAAW,EAAXA,KACnCgW,EAAiBC,mBAD6B,EAGlB5K,mBAAS,IAHS,mBAG7C0K,EAH6C,KAGlCG,EAHkC,OAIlB7K,mBAAS,OAJS,mBAI7C8K,EAJ6C,KAIlCC,EAJkC,OAKxB/K,mBAAS,IALe,mBAK7CqJ,EAL6C,KAKrC2B,EALqC,OAOZhL,mBAAS,IAPG,mBAO7CiL,EAP6C,KAO/BC,EAP+B,OAQNlL,mBAAS,IARH,mBAQ7CmL,EAR6C,KAQ5BC,EAR4B,OAURpL,mBAAS,IAVD,mBAU7CqL,EAV6C,KAU7BC,EAV6B,KA+CpD,OAnCAnL,qBAAU,WACJxL,IACFuW,EAAgBvW,EAAKQ,SAASiR,KAAI,SAACxN,GAAD,OAAOA,EAAEoK,aAC3CoI,EAAmBzW,EAAKS,YAAYgR,KAAI,SAACxN,GAAD,OAAOA,EAAEoK,gBAElD,CAACrO,IAEJwL,qBAAU,WAAM,4CACd,4BAAAiC,EAAA,0DACMnH,IAAUnF,EAASM,kBADzB,gCAEqB4O,GAAwB0F,EAAWzP,GAFxD,OAEQpB,EAFR,OAGImR,EAAUnR,EAAKsM,SAHnB,4CADc,uBAAC,WAAD,wBAOdG,KACC,CAACoE,EAAWzP,EAAQnF,IAEvBqK,qBAAU,WACRwK,EAAenJ,QAAQ+J,gBACtB,CAAClC,IAEJlJ,qBAAU,WACJkJ,GACFiC,EACEjC,EACGmC,QACC,SAAC5S,GAAD,OACGqS,EAAaQ,SAAS7S,EAAExB,GAAG6L,cAC3BkI,EAAgBM,SAAS7S,EAAExB,GAAG6L,eAElCyI,MAAM,EAAG5V,EAASM,sBAGxB,CAAC+U,EAAiBF,EAAc5B,IAGjC,yBAAKtQ,UAAU,oDACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qBACb,yBACEA,UAAU,WACVO,MAAO,CACLqS,QAAS,mBACTC,WAAY,iDACZ5B,aAAc,gBALlB,mBAWF,yBAAKjR,UAAU,6BAAf,uCAGA,yBAAKA,UAAU,yEACb,yBAAKA,UAAU,YACb,kBAAC,KAAD,CACEsI,IAAKsJ,EACLrR,MAAO,CACLqS,QAAS,SACTE,SAAU,OACVC,UAAW,OACXC,WAAY,WAGbtB,GAAYrE,KAAI,SAACxN,EAAG2H,GAAJ,OACf,yBACE8C,QAAS,WACP0H,EAAanS,EAAElB,MACfmT,EAAajS,EAAE8R,YAEjBpR,MAAO,CAAE6P,QAAS,gBAClB9C,IAAG,kCAA6B9F,GAChCxH,UAAS,eACP+R,IAAclS,EAAElB,KACZ,mCACA,kCAGLkB,EAAElB,YAMb,kBAAC,GAAD,CAAY2R,OAAQgC,SCvEbW,GAvCS,SAAC,GAAgB,IAAd3C,EAAa,EAAbA,OACzB,OACE,yBAAKtQ,UAAU,kBACZsQ,EAAOjD,KAAI,SAACxN,EAAG2H,GAAJ,OACV,yBACExH,UAAU,8EACVsN,IAAG,kCAA6B9F,IAEhC,yBAAKxH,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBACEgR,IAAKnR,EAAEqT,aACPlT,UAAU,kCACVsK,QAAS,kBAAM6G,EAAQtB,KAAR,iBAAuBhQ,EAAEoK,YACxCvK,MAAM,OACNa,MAAO,CACL0Q,aAAc,QAEhBC,IAAG,yCAAoCrR,EAAEqT,iBAG7C,yBAAKlT,UAAU,mCACb,yBACEA,UAAU,gCACVsK,QAAS,kBAAM6G,EAAQtB,KAAR,iBAAuBhQ,EAAEoK,aAEvCpK,EAAEsT,aAEL,yBAAKnT,UAAU,6BACb,2BAAOA,UAAU,iBAAiBH,EAAEuT,uB,8BC6FrCC,GA1HI,SAAC,GAKb,IAJLC,EAII,EAJJA,MACA7K,EAGI,EAHJA,QACA8K,EAEI,EAFJA,WAEI,IADJC,kBACI,MADS,CAAE9H,SAAU,uBAAwB+H,YAAa,eAC1D,EACAC,EACFjL,IAAY6K,EAAQ7K,EAAU,EAAIA,EAAU,GAAK,EAAIA,EAAU,EAAIA,EACjEkL,EAASD,EAAQ,EACjBE,EAAQD,EAAS,EAQrB,OANAvM,qBAAU,WACM,IAAVkM,GACFC,EAAW,KAEZ,CAACD,IAEGA,EAAQ,EACb,kBAAC,IAAMO,SAAP,KACE,yBAAK7T,UAAU,oDACb,yBACEA,UAAS,mBAAcwT,EAAU,YAAxB,6BACTlJ,QAAS,kBAAMiJ,EAAW9K,EAAU,GAAK,EAAIA,EAAU,EAAIA,KAE3D,kBAAC,KAAD,CAAe0F,SAAS,UAE1B,yBACEnO,UAAS,UAAKwT,EAAU,SAAf,8BACTjT,MAAO,CAAEb,MAAO,SAEf+I,GAEH,yBACEzI,UAAS,mBAAcwT,EAAU,YAAxB,wBACTlJ,QAAS,kBACPiJ,EAAW9K,EAAU,GAAK6K,EAAQ7K,EAAU,EAAIA,KAGlD,kBAAC,KAAD,CAAgB0F,SAAS,WAG7B,yBAAKnO,UAAU,oDACb,yBACEA,UAAS,mBAAcwT,EAAU,YAAxB,6BACTlJ,QAAS,kBAAMiJ,EAAW9K,EAAU,GAAK,EAAIA,EAAU,EAAIA,KAF7D,YAMCiL,EAAQ,GAAK,GACZ,yBACE1T,UAAS,mBAAcwT,EAAU,YAAxB,oCACTjT,MAAO,CAAEb,MAAO,QAChB4K,QAAS,kBAAMiJ,EAAWG,EAAQ,GAAK,EAAIA,EAAQ,EAAIA,KAHzD,OAQDA,GAAS,GACR,yBACEnT,MAAO,CAAEb,MAAO,QAChBM,UAAS,wBACPyI,IAAYiL,EACRF,EAAU,SACVA,EAAU,YAHP,oCAKTlJ,QAAS,kBAAMiJ,EAAWG,KAEzBA,GAIJC,GAAUL,GAASK,GAAU,GAC5B,yBACEpT,MAAO,CAAEb,MAAO,QAChBM,UAAS,wBACPyI,IAAYkL,EACRH,EAAU,SACVA,EAAU,YAHP,oCAKTlJ,QAAS,kBAAMiJ,EAAWI,KAEzBA,GAGJC,GAASN,GAASM,GAAS,GAC1B,yBACE5T,UAAS,wBACPyI,IAAYmL,EACRJ,EAAU,SACVA,EAAU,YAHP,oCAKTjT,MAAO,CAAEb,MAAO,QAChB4K,QAAS,kBAAMiJ,EAAWK,KAEzBA,GAIJA,EAAQ,GAAKN,GACZ,yBACEhJ,QAAS,kBAAMiJ,EAAWK,EAAQ,GAAKN,EAAQM,EAAQ,EAAInL,IAC3DzI,UAAS,mBAAcwT,EAAU,YAAxB,oCACTjT,MAAO,CAAEb,MAAO,SAHlB,OAQF,yBACEM,UAAS,mBAAcwT,EAAU,YAAxB,wBACTlJ,QAAS,kBACPiJ,EAAW9K,EAAU,GAAK6K,EAAQ7K,EAAU,EAAIA,KAHpD,UAWJ,ICwEWO,oBAPf,SAAc5N,EAAO6N,GACnB,OAAO,aACLlM,SAAU3B,EAAM2B,UACbkM,KAIQD,EA1LO,SAAC,GAYhB,IAXLpC,EAWI,EAXJA,KACAsH,EAUI,EAVJA,QACAtS,EASI,EATJA,KACAoG,EAQI,EARJA,OACAkH,EAOI,EAPJA,MACA4K,EAMI,EANJA,aAEAC,GAII,EALJC,YAKI,EAJJD,8BACAE,EAGI,EAHJA,gBACAzF,EAEI,EAFJA,eACAzR,EACI,EADJA,SACI,EACgCkK,mBAAS,CAAEvE,QAAS,KADpD,mBACGwR,EADH,KACeC,EADf,OAE0BlN,mBAAS,IAFnC,mBAEGgG,EAFH,KAEYC,EAFZ,OAG0BjG,oBAAS,GAHnC,mBAGG0B,EAHH,KAGYQ,EAHZ,KAKJ,OACE,kBAAC,GAAD,CAAOvC,KAAMA,EAAMsH,QAASA,GAC1B,yBAAKlO,UAAU,mDACb,yBAAKA,UAAU,0BAAf,YACY8T,EAAa/X,cAEzB,yBAAKiE,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVO,MAAO,CAAEsO,gBAAgB,OAAD,OAASjT,EAAKI,MAAd,SAG5B,yBAAKgE,UAAU,OACb,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,oCACVO,MAAO,CAAEsO,gBAAgB,OAAD,OAASjT,EAAKI,MAAd,SAG5B,yBACEgE,UAAS,0CACPkU,EAAWxR,QAAQ+E,QACnB1K,EAASQ,sBAAwB,EAC7B,aACA,gBAGL2W,EAAWxR,QACR3F,EAASQ,sBAAwB2W,EAAWxR,QAAQ+E,OACpD1K,EAASQ,sBAAuB,IAVtC,oBAcF,yBAAKyC,UAAU,sBAAsBO,MAAO,CAAEzB,OAAQ,UACpD,8BACEiQ,SAAU,SAACC,GACTA,EAAEC,UACF,IAAIC,EAAOF,EAAEG,OAAOvE,MAChBsE,EAAKzH,QAAU1K,EAASQ,uBAC1B4W,GAAc,SAACvF,GAAD,OACZrT,OAAOC,OAAO,GAAIoT,EAAM,CAAElM,QAASwM,QAIzCtE,MAAOsJ,EAAWxR,QAClB0M,YAAY,EACZC,YAAY,sBACZ9O,MAAO,CAAE+O,OAAQ,QACjBtP,UAAU,0BAGd,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,sCACb,yBACEA,UAAS,qCACPkU,EAAWxR,QAAQ+E,QACnB1K,EAASQ,sBAAwB,EAC7B,aACA,gBAGL2W,EAAWxR,QACR3F,EAASQ,sBACT2W,EAAWxR,QAAQ+E,OACnB1K,EAASQ,sBAAuB,IAXtC,qBAgBJ,yBAAKyC,UAAU,UACb,yBACEA,UAAU,oEACVO,MAAO,CAAEzB,OAAQ,OAAQ6Q,QAAS1C,EAAU,EAAI,IAE/CA,IAGL,yBACEjN,UAAU,0CACVsK,QAAO,sBAAE,gCAAAjB,EAAA,yDACF6K,EAAWxR,QADT,gBAELwK,EAAW,gBAFN,2BAIDtR,EAAKK,MAJJ,wBAKHkN,GAAW,GACPiL,EAAe7Y,OAAOC,OAAO,GAAI0Y,EAAY,CAC/CG,YAAazY,EAAKG,aAClBkO,SAAUf,EAAM7K,GAChBiW,WAAYtS,EAAOsS,WACnBC,UAAWvS,EAAO4N,IAClB5N,OAAQA,EAAOA,OACfwS,cAAexS,EAAOyS,OACtBC,sBAAuB1S,EAAO0S,+BAE5BC,EAfD,eAekB/Y,IACL,MAChBuY,EAAc,CAAEzR,QAAS,KAjBtB,UAkBaD,EACd2R,EACAO,GApBC,QAkBCrT,EAlBD,OAuBH6H,GAAW,GACP7H,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,4BACPtB,KAAM,UACNuB,QAASqE,KAAKC,UAAUG,EAAIuI,OAAOC,QACjC,KACA,QAKN7K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,kCACPtB,KAAM,UACNuB,QAAS,qCAGbqR,IACA6F,EAA6B/R,EAAO4N,KACpCqE,IACAzF,KAhDC,wBAmDHtB,EAAW,sCAnDR,6CAwDT,kBAAC,GAAD,CACE7C,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASA,EACTnJ,KAAM,KAtEV,gBCwrBCwJ,oBAVf,SAAc5N,EAAO6N,GACnB,OAAO,aACL9N,YAAaC,EAAMD,YACnB4B,SAAU3B,EAAM2B,SAChBrB,QAASN,EAAMM,QACfE,KAAMR,EAAMQ,MACTqN,KAIQD,EAzwBQ,SAAC,GAA8C,IAA5C7N,EAA2C,EAA3CA,YAAa4B,EAA8B,EAA9BA,SAAUnB,EAAoB,EAApBA,KAAMF,EAAc,EAAdA,QAAc,EAEnCuL,mBAAS,IAF0B,mBAE5D2N,EAF4D,KAElDZ,EAFkD,OAIrC/M,mBAAS,IAJ4B,mBAI5D9K,EAJ4D,KAInD0Y,EAJmD,OAKrB5N,mBAAS,IALY,mBAK5D6N,EAL4D,KAK3CC,EAL2C,OAOD9N,oBAC/D,GARgE,mBAO5D+N,EAP4D,KAOjCjB,EAPiC,OAWvB9M,oBAAU,GAXa,mBAW5DgO,EAX4D,KAW5CC,EAX4C,OAYzBjO,oBAAU,GAZe,mBAY5DkO,EAZ4D,KAY7CC,EAZ6C,OAazBnO,oBAAU,GAbe,mBAa5DoO,EAb4D,KAa7CC,EAb6C,OAgB3BrO,mBAAS,GAhBkB,mBAgB5DsO,EAhB4D,KAgB9CC,EAhB8C,KAmB7DC,EAAoB5D,iBAAO,MAnBkC,GAqBvC5K,mBAAS,CACnCkM,YAAa,GACblJ,SAAU,GACVmJ,aAAc,GACdsC,mBAAoB,GACpBxC,aAAc,KA1BmD,qBAqB5DlR,GArB4D,MAqBpD2T,GArBoD,SA6B3B1O,oBAAS,GA7BkB,qBA6B5D2O,GA7B4D,MA6B9CC,GA7B8C,SAgCrB5O,oBAAS,GAhCY,qBAgC5DgN,GAhC4D,MAgC3C6B,GAhC2C,SAmCvB7O,oBAAS,GAnCc,qBAmC5DuH,GAnC4D,MAmC5CuH,GAnC4C,SAwCnB9O,mBAAS,IAxCU,qBAwC5D+O,GAxC4D,MAwC1CC,GAxC0C,MA0CnE7O,qBAAU,WAAM,4CACd,8BAAAiC,EAAA,0DACqC,IAA/B2L,EADN,gCAEqBjS,EAAkBiS,GAFvC,OAEQlU,EAFR,OAIQoV,EAAc,GAClBpV,EAAK6I,SAAQ,SAAC9J,GACZqW,EAAYrW,EAAE+P,KAAO/P,KAEvBmU,GAAY,SAACpF,GAAD,OACVrT,OAAOC,OAAO,GAAIoT,EAAlBrT,OAAA,KAAAA,CAAA,GAA2ByZ,EAA4BkB,OAT7D,4CADc,uBAAC,WAAD,wBAcd3I,KACC,CAACyH,EAA2Bf,KAE/B7M,qBAAU,WAAM,4CACd,sCAAAiC,EAAA,0DACMtM,EAASK,mBADf,iCAEyB2I,KAFzB,cAEQoQ,EAFR,OAGQC,EAAqB,GACrBC,EAAgB,GACfF,EAAStM,OACZsM,EAASxM,SAAQ,SAAC9J,GAChBuW,EAAmBvG,KAAKhQ,EAAEyW,YAC1BD,EAAcxW,EAAEyW,YAAczW,KAGlCoW,GAAoBI,GAXxB,UAaqBtS,EAAkBhH,EAASK,oBAbhD,SAaQ0D,EAbR,QAcc+I,QACJ0M,EAAc,GAChBC,EAAqB,GACvB1V,EAAK6I,SAAQ,SAAC9J,GACRuW,EAAmB1D,SAAS7S,EAAE+P,MAChC/P,EAAEsW,UAAW,EACbI,EAAY1G,KAAKhQ,IAEjB2W,EAAmB3G,KAAKhQ,MAG5BkV,EAAmBwB,GACnB1B,EAAW2B,IA1BjB,6CADc,uBAAC,WAAD,wBA+BdjJ,KACC,CAACxQ,EAAUyR,KAiQd,OACE,yBAAKxO,UAAU,oDACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qBACb,yBACEA,UAAU,WACVO,MAAO,CACLqS,QAAS,mBACTC,WAAY,iDACZ5B,aAAc,gBALlB,oBAWF,yBAAKjR,UAAU,kCAAf,0CAGA,yBAAKA,UAAU,sBAAsBsI,IAAKmN,IACzCX,EACE/I,OAAO5P,GACPwW,MACC,EACA,GAEDtF,KAAI,SAACxN,EAAG2H,GACP,IAAI7L,EAASqa,GAAiBnW,EAAE+P,KAC5BoG,GAAiBnW,EAAE+P,KAAKpJ,QAAQ7K,OAChCkE,EAAElE,OACFqG,EAASgU,GAAiBnW,EAAE+P,KAC5BoG,GAAiBnW,EAAE+P,KAAKpJ,QAAQxE,OAChCnC,EAAEmC,OACN,OACE,kBAAC,IAAM6R,SAAP,CAAgBvG,IAAG,0BAAqB9F,IACtC,yBACE8F,IAAG,iBAAY9F,GACfxH,UAAU,wDAEV,yBACEA,UAAU,4CACVO,MAAO,CAAEuS,SAAU,UAEnB,yBAAK9S,UAAU,uBACb,yBACEgR,IAAG,oBAAenR,EAAEoK,UACpBK,QAAS,kBAAM6G,EAAQtB,KAAR,iBAAuBhQ,EAAEoK,YACxCvK,MAAM,OACNa,MAAO,CAAE0Q,aAAc,OAAQwF,OAAQ,WACvCvF,IAAG,yCACDxV,EAAQmE,EAAEoK,UACNvO,EAAQmE,EAAEoK,UAAUiJ,aACpB,4DAKZ,yBAAKlT,UAAU,0BACb,yBAAKA,UAAU,8EACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,6BACVO,MAAO,CACLsO,gBAAgB,sCAAD,OACbnT,EAAQmE,EAAEoK,UACNvO,EAAQmE,EAAEoK,UAAUiJ,aACpB,uDAHS,SAQrB,yBAAKlT,UAAU,OACb,yBAAKA,UAAU,kCACZtE,EAAQmE,EAAEoK,UACPvO,EAAQmE,EAAEoK,UAAUkJ,YACpB,GAAI,IAHV,IAKGzX,EAAQmE,EAAEoK,UACPvO,EACEmE,EAAEoK,UACFyL,mBAAmBtJ,UAAU,EAAG,GAClC,GATN,QAeN,yBAAKpM,UAAU,UACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAY0E,EAAE4U,QACVtZ,EAAY0E,EAAE4U,QAAQzY,MACtB,GAHS,SAQrB,yBAAKgE,UAAU,YACb,yBAAKA,UAAU,gDACb,yBAAKA,UAAU,sBACZ7E,EAAY0E,EAAE4U,QACXtZ,EAAY0E,EAAE4U,QAAQ1Y,aACtB,QAMd,yBAAKiE,UAAU,YACb,yBAAKA,UAAU,gDACb,0BAAMA,UAAU,iBAAhB,aACA,0BAAMA,UAAU,4BACb0W,KAAKC,OAAO,IAAIxY,KAAK0B,EAAE6W,MAAO,iBAEjC,kBAAC,GAAD,CACEpQ,OAAO,EACPD,SAAS,MACTI,QAAQ,aACRF,MAAM,OACNC,QAAS,SAAC2D,GAAD,OACP,yBAAKnK,UAAU,6BAAf,kBAKF,yBACEA,UAAU,4DACVsK,QAAO,sBAAE,4BAAAjB,EAAA,0DACHzN,EAAKK,MADF,uBAELqZ,EAAiBzV,EAAE+P,KAFd,SAGWvM,EAAazH,EAAMiE,EAAE+P,KAHhC,OAGDtO,EAHC,OAILgU,GAAkB,GACdhU,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,kBACPC,QACE,4DACFvB,KAAM,aArBP,uBA0BL2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QACE,qCACFvB,KAAM,aAhCL,6CAsCR+Z,IAAkBxV,EAAE+P,IACnB,yBAAK5P,UAAU,aACb,kBAAC,GAAD,CACEqK,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,SAAS,EACTnJ,KAAM,MAIV,kBAAC,IAAD,CAAQ2O,SAAS,gBASjC,yBAAKnO,UAAU,sFACZgC,GAGH,yBAAKhC,UAAU,iDACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,wEACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKO,MAAO,CAAEqL,aAAc,SACd,YAAXjQ,EACC,kBAAC,EAAD,CAAQ6D,KAAM,KAEd,kBAAC,IAAD,CACEiB,MACa,mBAAX9E,EACI,OACW,cAAXA,EACA,QACW,YAAXA,EACA,sBACA,OAEN+E,IAAI,WACJlB,KAAM,QAMhB,yBAAKQ,UAAU,iBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACZH,EAAE+W,MAAMnP,QAEX,yBAAKzH,UAAU,kBACZmV,IAAkB3N,EACjB,yBAAKxH,UAAU,aACb,kBAAC,GAAD,CACEqK,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASwM,IAAkB3N,EAC3BhI,KAAM,MAIV,kBAAC,IAAD,CACE8K,QAAO,sBAAE,4BAAAjB,EAAA,0DACHzN,EAAKK,MADF,oBAEDL,EAAKgU,MAAQ/P,EAAE4U,OAFd,wBAGHW,EAAiB5N,GAHd,SAIarE,EACdvH,EACAiE,EAAE+P,KAND,OAICtO,EAJD,OAQH8T,GAAkB,GACd9T,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAIVya,IAAmBvH,IAnBlB,wBAsBHvP,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QACE,mCACFvB,KAAM,aA5BP,gCAiCL2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QACE,mCACFvB,KAAM,aAvCL,4CA4CT6S,SAAS,OACTnO,UAAU,gDAIhB,yBAAKA,UAAU,iBACZH,EAAE+U,SAASnN,QAEd,yBAAKzH,UAAU,iBACb,kBAAC,IAAD,CACEsK,QAAS,WACPyJ,EACEiB,IAA8BnV,EAAE+P,KAC3B,EACD/P,EAAE+P,MAGVzB,SAAS,OACTnO,UAAU,iDAGd,yBACEA,UAAU,oCACVsK,QAAS,WACF1O,EAAKK,OAWR0Z,GACEpa,OAAOC,OAAO,GAAIqE,EAAG,CACnB6U,sBAAuB,CACrBvZ,EAAY0E,EAAE4U,YAIpBoB,IAAgB,IAjBhB5W,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QACE,qCACFvB,KAAM,eAVhB,gBAkCd,kBAACub,GAAA,EAAD,CACEC,GAAI9B,IAA8BnV,EAAE+P,IACpC5P,UAAU,QAEV,yBACEA,UAAU,kBACVO,MAAO,CAAEwW,WAAY,SAFvB,aAKGnC,EAAS/U,EAAE+P,KACRrU,OAAOyb,OAAOpC,EAAS/U,EAAE+P,MAAMnI,OAC/B,EAPN,KAUCmN,EAAS/U,EAAE+P,KA9mBL,SAAjBqH,EAAkBrS,EAAK5C,GAC3B,OAAO4C,EAAIyI,KAAI,SAACxN,EAAGqX,GACjB,OAAOtC,EAAS5S,EAAO4N,KAAK/P,GAC1B,kBAAC,IAAMgU,SAAP,KACE,yBACEtT,MAAO,CACLwW,WAAW,GAAD,OAC+C,GAAvDnC,EAAS5S,EAAO4N,KAAK/P,GAAG6U,sBAAsBjN,OAAc,GADpD,OAIZ6F,IAAG,kBAAa0H,EAAb,YAA0CkC,GAC7ClX,UAAS,yEAET,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAYyZ,EAAS5S,EAAO4N,KAAK/P,GAAG4U,QAChCtZ,EAAYyZ,EAAS5S,EAAO4N,KAAK/P,GAAG4U,QAAQzY,MAC5C,GAHS,SAQrB,yBAAKgE,UAAU,OACb,yBAAKA,UAAU,kEACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAYyZ,EAAS5S,EAAO4N,KAAK/P,GAAG4U,QAChCtZ,EAAYyZ,EAAS5S,EAAO4N,KAAK/P,GAAG4U,QACjCzY,MACH,GAJS,SASrB,yBAAKgE,UAAU,oCACZ7E,EAAYyZ,EAAS5S,EAAO4N,KAAK/P,GAAG4U,QACjCtZ,EAAYyZ,EAAS5S,EAAO4N,KAAK/P,GAAG4U,QACjC1Y,aACH,MAIV,yBAAKiE,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBAAf,gBACA,yBAAKA,UAAU,4BACZ0W,KAAKC,OACJ,IAAIxY,KAAKyW,EAAS5S,EAAO4N,KAAK/P,GAAG6W,MACjC,mBAKR,kBAAC,GAAD,CACEpQ,OAAO,EACPD,SAAS,MACTI,QAAQ,aACRF,MAAM,OACNC,QAAS,SAAC2D,GAAD,OACP,yBAAKnK,UAAU,kCAAf,kBAKF,yBACEA,UAAU,4DACVsK,QAAO,sBAAE,4BAAAjB,EAAA,0DACHzN,EAAKK,MADF,uBAELqZ,EAAiBzV,GAFZ,SAGWyD,EAAc1H,EAAMiE,GAH/B,OAGDyB,EAHC,OAILgU,GAAkB,GACdhU,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,mBACPC,QACE,6DACFvB,KAAM,aArBP,uBA0BL2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,sCACTvB,KAAM,aA/BL,6CAqCR+Z,IAAkBxV,EACjB,yBAAKG,UAAU,aACb,kBAAC,GAAD,CACEqK,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,SAAS,EACTnJ,KAAM,MAIV,kBAAC,IAAD,CAAQ2O,SAAS,cAQ7B,yBAAKnO,UAAU,6DACZ4U,EAAS5S,EAAO4N,KAAK/P,GAAG6C,SAE3B,yBAAK1C,UAAU,yDACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACZ4U,EAAS5S,EAAO4N,KAAK/P,GAAG+W,MAAMnP,QAEjC,yBAAKzH,UAAU,kBACZiV,IAAmBiC,EAClB,yBAAKlX,UAAU,aACb,kBAAC,GAAD,CACEqK,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASsM,IAAmBiC,EAC5B1X,KAAM,MAIV,kBAAC,IAAD,CACE8K,QAAO,sBAAE,4BAAAjB,EAAA,0DACHzN,EAAKK,MADF,oBAEDL,EAAKgU,MAAQgF,EAAS5S,EAAO4N,KAAK/P,GAAG4U,OAFpC,wBAGHS,EAAkBgC,GAHf,SAIa9T,EAAYxH,EAAMiE,GAJ/B,OAICyB,EAJD,OAKH4T,GAAmB,GACf5T,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAIVwa,IAAoB7B,IAhBnB,wBAmBHhV,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QACE,oCACFvB,KAAM,aAzBP,gCA8BL2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,mCACTvB,KAAM,aAnCL,4CAwCT6S,SAAS,OACTnO,UAAU,gDAIhB,yBACEA,UAAU,oCACVsK,QAAS,WACF1O,EAAKK,OAUR0Z,GACEpa,OAAOC,OAAO,GAAIwG,EAAQ,CACxBsS,WAAYzU,EACZ6U,sBAAuBE,EAAS5S,EAAO4N,KACrC/P,GACA6U,sBAAsB3I,OAAO,CAC7B5Q,EAAYyZ,EAAS5S,EAAO4N,KAAK/P,GAAG4U,aAI1CoB,IAAgB,IAnBhB5W,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,qCACTvB,KAAM,eAThB,cAkCT2b,EAAerC,EAAS5S,EAAO4N,KAAK/P,GAAG+U,SAAU5S,IAGpD,MAqXciV,CACE1b,OAAOyb,OAAOpC,EAAS/U,EAAE+P,MACtB6C,QAAO,SAACpJ,GAAD,OAA0C,IAAnCA,EAAEqL,sBAAsBjN,UACtC4F,KAAI,SAAC8J,GAAD,OAAOA,EAAEvH,OAChB/P,GAEF,GACJ,yBAAKG,UAAU,2CACb,yBAAKA,UAAU,iBACb,kBAACoX,GAAD,CACE9D,MAAOpI,KAAKmM,KACVzC,EAAS/U,EAAE+P,KACPgF,EAAS/U,EAAE+P,KAAKnI,OAnrBpB,EAorBI,GAENgB,QAAS8M,EACThC,WAAYiC,EACZhC,WAAY,CACVC,YAAa,aACb/H,SAAU,gCAS5B,kBAAC,GAAD,CACE8C,eAAgB,kBAAMuH,IAAmBvH,KACzCuF,6BAA8BA,EAC9BE,gBAAiB,kBAAM6B,IAAoB7B,KAC3CD,YAAaA,EACb9K,MAAO,CACL7K,GAAI2D,GAAOiI,UAEb6J,aACE3Y,EAAY6G,GAAOyS,QACftZ,EAAY6G,GAAOyS,QACnB,CAAE1Y,aAAc,IAEtBiG,OAAQA,GACR4E,KAAMgP,GACN1H,QAAS,kBAAM2H,IAAgB,IAC/Bja,KAAMA,SCTDoN,oBATf,SAAc5N,EAAO6N,GACnB,OAAO,aACL9N,YAAaC,EAAMD,YACnBO,QAASN,EAAMM,QACfE,KAAMR,EAAMQ,MACTqN,KAIQD,EAhvBO,SAAC,GAAoC,IAAlC7N,EAAiC,EAAjCA,YAAaS,EAAoB,EAApBA,KAAMF,EAAc,EAAdA,QAAc,EAExBuL,mBAAS,IAFe,mBAEjD2N,EAFiD,KAEvCZ,EAFuC,OAI1B/M,mBAAS,IAJiB,mBAIjD9K,EAJiD,KAIxC0Y,EAJwC,OAMU5N,oBAC/D,GAPqD,mBAMjD+N,EANiD,KAMtBjB,EANsB,OAUZ9M,oBAAU,GAVE,mBAUjDgO,EAViD,KAUjCC,EAViC,OAWdjO,oBAAU,GAXI,mBAWjDkO,EAXiD,KAWlCC,EAXkC,OAYdnO,oBAAU,GAZI,mBAYjDoO,EAZiD,KAYlCC,EAZkC,OAehBrO,mBAAS,GAfO,mBAejDsO,EAfiD,KAenCC,EAfmC,KAkBlDC,EAAoB5D,iBAAO,MAlBuB,EAqBhB5K,oBAAS,GArBO,mBAqBjD2O,EArBiD,KAqBnCC,EArBmC,OAuB5B5O,mBAAS,CACnCkM,YAAa,GACblJ,SAAU,GACVmJ,aAAc,GACdsC,mBAAoB,GACpBxC,aAAc,KA5BwC,oBAuBjDlR,GAvBiD,MAuBzC2T,GAvByC,SAgCV1O,oBAAS,GAhCC,qBAgCjDgN,GAhCiD,MAgChC6B,GAhCgC,SAmCZ7O,oBAAS,GAnCG,qBAmCjDuH,GAnCiD,MAmCjCuH,GAnCiC,MAwCxD3O,qBAAU,WAAM,4CACd,8BAAAiC,EAAA,0DACqC,IAA/B2L,EADN,gCAEqBjS,EAAkBiS,GAFvC,OAEQlU,EAFR,OAGQoV,EAAc,GAClBpV,EAAK6I,SAAQ,SAAC9J,GACZqW,EAAYrW,EAAE+P,KAAO/P,KAEvBmU,GAAY,SAACpF,GAAD,OACVrT,OAAOC,OAAO,GAAIoT,EAAlBrT,OAAA,KAAAA,CAAA,GAA2ByZ,EAA4BkB,OAR7D,4CADc,uBAAC,WAAD,wBAad3I,KACC,CAACyH,EAA2Bf,KAE/B7M,qBAAU,WAAM,4CACd,4BAAAiC,EAAA,sEACkBpF,EAAiB,IADnC,QACM3C,EADN,QAEWuI,OACPgL,EAAWvT,GAHf,4CADc,uBAAC,WAAD,wBAOdiM,KACC,CAACiB,KAiQJ,OACE,yBAAKxO,UAAU,oDACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qBACb,yBACEA,UAAU,WACVO,MAAO,CACLqS,QAAS,mBACTC,WAAY,iDACZ5B,aAAc,gBALlB,mBAWF,yBAAKjR,UAAU,kCAAf,+BAGA,yBAAKA,UAAU,sBAAsBsI,IAAKmN,IACzCtZ,EACEwW,MACC,EACA,GAEDtF,KAAI,SAACxN,EAAG2H,GAAJ,OACH,kBAAC,IAAMqM,SAAP,CAAgBvG,IAAG,0BAAqB9F,IACtC,yBACE8F,IAAG,iBAAY9F,GACfxH,UAAU,wDAEV,yBACEA,UAAU,4CACVO,MAAO,CAAEuS,SAAU,UAEnB,yBAAK9S,UAAU,uBACb,yBACEgR,IAAG,oBAAenR,EAAEoK,UACpBK,QAAS,kBAAM6G,EAAQtB,KAAR,iBAAuBhQ,EAAEoK,YACxCvK,MAAM,OACNa,MAAO,CAAE0Q,aAAc,OAAQwF,OAAQ,WACvCvF,IAAG,yCACDxV,EAAQmE,EAAEoK,UACNvO,EAAQmE,EAAEoK,UAAUiJ,aACpB,4DAWZ,yBAAKlT,UAAU,0BACb,yBAAKA,UAAU,8EACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,6BACVO,MAAO,CACLsO,gBAAgB,sCAAD,OACbnT,EAAQmE,EAAEoK,UACNvO,EAAQmE,EAAEoK,UAAUiJ,aACpB,uDAHS,SAcrB,yBAAKlT,UAAU,OACb,yBAAKA,UAAU,kCACZtE,EAAQmE,EAAEoK,UACPvO,EAAQmE,EAAEoK,UAAUkJ,YACpB,GAAI,IAHV,IAKGzX,EAAQmE,EAAEoK,UACPvO,EACEmE,EAAEoK,UACFyL,mBAAmBtJ,UAAU,EAAG,GAClC,GATN,QAoBN,yBAAKpM,UAAU,UACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAY0E,EAAE4U,QACVtZ,EAAY0E,EAAE4U,QAAQzY,MACtB,GAHS,SAQrB,yBAAKgE,UAAU,YACb,yBAAKA,UAAU,gDACb,yBAAKA,UAAU,sBACZ7E,EAAY0E,EAAE4U,QACXtZ,EAAY0E,EAAE4U,QAAQ1Y,aACtB,QAMd,yBAAKiE,UAAU,YACb,yBAAKA,UAAU,gDACb,0BAAMA,UAAU,iBAAhB,aACA,0BAAMA,UAAU,4BACb0W,KAAKC,OAAO,IAAIxY,KAAK0B,EAAE6W,MAAO,iBAEjC,kBAAC,GAAD,CACEpQ,OAAO,EACPD,SAAS,MACTI,QAAQ,aACRF,MAAM,OACNC,QAAS,SAAC2D,GAAD,OACP,yBAAKnK,UAAU,6BAAf,kBAKF,yBACEA,UAAU,4DACVsK,QAAO,sBAAE,4BAAAjB,EAAA,0DACHzN,EAAKK,MADF,uBAELqZ,EAAiBzV,EAAE+P,KAFd,SAGWvM,EAAazH,EAAMiE,EAAE+P,KAHhC,OAGDtO,EAHC,OAILgU,GAAkB,GACdhU,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,kBACPC,QACE,4DACFvB,KAAM,aArBP,uBA0BL2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QACE,qCACFvB,KAAM,aAhCL,6CAsCR+Z,IAAkBxV,EAAE+P,IACnB,yBAAK5P,UAAU,aACb,kBAAC,GAAD,CACEqK,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,SAAS,EACTnJ,KAAM,MAIV,kBAAC,IAAD,CAAQ2O,SAAS,gBASjC,yBAAKnO,UAAU,sFACZH,EAAEmC,QAGL,yBAAKhC,UAAU,iDACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,wEACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACZH,EAAElE,OACY,YAAbkE,EAAElE,OACA,kBAAC,EAAD,CAAQ6D,KAAM,KAEd,yBAAKe,MAAO,CAAEqL,aAAc,SAC1B,kBAAC,IAAD,CACEnL,MACe,mBAAbZ,EAAElE,OACE,OACa,cAAbkE,EAAElE,OACF,QACa,YAAbkE,EAAElE,OACF,sBACA,OAEN+E,IAAI,WACJlB,KAAM,MAKZ,KAIN,yBAAKQ,UAAU,iBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACZH,EAAE+W,MAAMnP,QAEX,yBAAKzH,UAAU,kBACZmV,IAAkB3N,EACjB,yBAAKxH,UAAU,aACb,kBAAC,GAAD,CACEqK,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASwM,IAAkB3N,EAC3BhI,KAAM,MAIV,kBAAC,IAAD,CACE8K,QAAO,sBAAE,4BAAAjB,EAAA,0DACHzN,EAAKK,MADF,oBAEDL,EAAKgU,MAAQ/P,EAAE4U,OAFd,wBAGHW,EAAiB5N,GAHd,SAIarE,EAAWvH,EAAMiE,EAAE+P,KAJhC,OAICtO,EAJD,OAKH8T,GAAkB,GACd9T,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAIVya,IAAmBvH,IAhBlB,wBAmBHvP,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QACE,mCACFvB,KAAM,aAzBP,gCA8BL2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QACE,mCACFvB,KAAM,aApCL,4CAyCT6S,SAAS,OACTnO,UAAU,gDAIhB,yBAAKA,UAAU,iBACZH,EAAE+U,SAASnN,QAEd,yBAAKzH,UAAU,iBACb,kBAAC,IAAD,CACEsK,QAAS,WACPyJ,EACEiB,IAA8BnV,EAAE+P,KAC3B,EACD/P,EAAE+P,MAGVzB,SAAS,OACTnO,UAAU,iDAGd,yBACEA,UAAU,oCACVsK,QAAS,WACF1O,EAAKK,OAWR0Z,GACEpa,OAAOC,OAAO,GAAIqE,EAAG,CACnB6U,sBAAuB,CACrBvZ,EAAY0E,EAAE4U,YAIpBoB,GAAgB,IAjBhB5W,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QACE,qCACFvB,KAAM,eAVhB,gBAkCd,kBAACub,GAAA,EAAD,CACEC,GAAI9B,IAA8BnV,EAAE+P,IACpC5P,UAAU,QAEV,yBAAKA,UAAU,kBAAkBO,MAAO,CAAEwW,WAAY,SAAtD,aAEGnC,EAAS/U,EAAE+P,KAAOrU,OAAOyb,OAAOpC,EAAS/U,EAAE+P,MAAMnI,OAAS,EAF7D,KAICmN,EAAS/U,EAAE+P,KAlnBH,SAAjBqH,EAAkBrS,EAAK5C,GAC3B,OAAO4C,EAAIyI,KAAI,SAACxN,EAAGqX,GACjB,OAAOtC,EAAS5S,EAAO4N,KAAK/P,GAC1B,kBAAC,IAAMgU,SAAP,KACE,yBACEtT,MAAO,CACLwW,WAAW,GAAD,OAC+C,GAAvDnC,EAAS5S,EAAO4N,KAAK/P,GAAG6U,sBAAsBjN,OAAc,GADpD,OAIZ6F,IAAG,kBAAa0H,EAAb,YAA0CkC,GAC7ClX,UAAS,yEAET,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAYyZ,EAAS5S,EAAO4N,KAAK/P,GAAG4U,QAChCtZ,EAAYyZ,EAAS5S,EAAO4N,KAAK/P,GAAG4U,QAAQzY,MAC5C,GAHS,SAQrB,yBAAKgE,UAAU,OACb,yBAAKA,UAAU,kEACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAYyZ,EAAS5S,EAAO4N,KAAK/P,GAAG4U,QAChCtZ,EAAYyZ,EAAS5S,EAAO4N,KAAK/P,GAAG4U,QACjCzY,MACH,GAJS,SASrB,yBAAKgE,UAAU,oCACZ7E,EAAYyZ,EAAS5S,EAAO4N,KAAK/P,GAAG4U,QACjCtZ,EAAYyZ,EAAS5S,EAAO4N,KAAK/P,GAAG4U,QACjC1Y,aACH,MAIV,yBAAKiE,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBAAf,gBACA,yBAAKA,UAAU,4BACZ0W,KAAKC,OACJ,IAAIxY,KAAKyW,EAAS5S,EAAO4N,KAAK/P,GAAG6W,MACjC,mBAKR,kBAAC,GAAD,CACEpQ,OAAO,EACPD,SAAS,MACTI,QAAQ,aACRF,MAAM,OACNC,QAAS,SAAC2D,GAAD,OACP,yBAAKnK,UAAU,kCAAf,kBAKF,yBACEA,UAAU,4DACVsK,QAAO,sBAAE,4BAAAjB,EAAA,0DACHzN,EAAKK,MADF,uBAELqZ,EAAiBzV,GAFZ,SAGWyD,EAAc1H,EAAMiE,GAH/B,OAGDyB,EAHC,OAILgU,GAAkB,GACdhU,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,mBACPC,QACE,6DACFvB,KAAM,aArBP,uBA0BL2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,sCACTvB,KAAM,aA/BL,6CAqCR+Z,IAAkBxV,EACjB,yBAAKG,UAAU,aACb,kBAAC,GAAD,CACEqK,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,SAAS,EACTnJ,KAAM,MAIV,kBAAC,IAAD,CAAQ2O,SAAS,cAQ7B,yBAAKnO,UAAU,6DACZ4U,EAAS5S,EAAO4N,KAAK/P,GAAG6C,SAE3B,yBAAK1C,UAAU,yDACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACZ4U,EAAS5S,EAAO4N,KAAK/P,GAAG+W,MAAMnP,QAEjC,yBAAKzH,UAAU,kBACZiV,IAAmBiC,EAClB,yBAAKlX,UAAU,aACb,kBAAC,GAAD,CACEqK,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASsM,IAAmBiC,EAC5B1X,KAAM,MAIV,kBAAC,IAAD,CACE8K,QAAO,sBAAE,4BAAAjB,EAAA,0DACHzN,EAAKK,MADF,oBAEDL,EAAKgU,MAAQgF,EAAS5S,EAAO4N,KAAK/P,GAAG4U,OAFpC,wBAGHS,EAAkBgC,GAHf,SAIa9T,EAAYxH,EAAMiE,GAJ/B,OAICyB,EAJD,OAKH4T,GAAmB,GACf5T,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAIVwa,IAAoB7B,IAhBnB,wBAmBHhV,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QACE,oCACFvB,KAAM,aAzBP,gCA8BL2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,mCACTvB,KAAM,aAnCL,4CAwCT6S,SAAS,OACTnO,UAAU,gDAIhB,yBACEA,UAAU,oCACVsK,QAAS,WACF1O,EAAKK,OAUR0Z,GACEpa,OAAOC,OAAO,GAAIwG,EAAQ,CACxBsS,WAAYzU,EACZ6U,sBAAuBE,EAAS5S,EAAO4N,KACrC/P,GACA6U,sBAAsB3I,OAAO,CAC7B5Q,EAAYyZ,EAAS5S,EAAO4N,KAAK/P,GAAG4U,aAI1CoB,GAAgB,IAnBhB5W,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,qCACTvB,KAAM,eAThB,cAkCT2b,EAAerC,EAAS5S,EAAO4N,KAAK/P,GAAG+U,SAAU5S,IAGpD,MAyXYiV,CACE1b,OAAOyb,OAAOpC,EAAS/U,EAAE+P,MACtB6C,QAAO,SAACpJ,GAAD,OAA0C,IAAnCA,EAAEqL,sBAAsBjN,UACtC4F,KAAI,SAAC8J,GAAD,OAAOA,EAAEvH,OAChB/P,GAEF,GACJ,yBAAKG,UAAU,2CACb,yBAAKA,UAAU,iBACb,kBAACoX,GAAD,CACE9D,MAAOpI,KAAKmM,KACVzC,EAAS/U,EAAE+P,KACPgF,EAAS/U,EAAE+P,KAAKnI,OA5pBlB,EA6pBE,GAENgB,QAAS8M,EACThC,WAAYiC,EACZhC,WAAY,CACVC,YAAa,aACb/H,SAAU,gCAQ1B,kBAAC,GAAD,CACE8C,eAAgB,kBAAMuH,IAAmBvH,KACzCuF,6BAA8BA,EAC9BE,gBAAiB,kBAAM6B,IAAoB7B,KAC3CD,YAAaA,EACb9K,MAAO,CACL7K,GAAI2D,GAAOiI,UAEb6J,aACE3Y,EAAY6G,GAAOyS,QACftZ,EAAY6G,GAAOyS,QACnB,CAAE1Y,aAAc,IAEtBiG,OAAQA,GACR4E,KAAMgP,EACN1H,QAAS,kBAAM2H,GAAgB,IAC/Bja,KAAMA,SCzuBV0b,GAAuB,WAC3B,IACIC,EAAc,KACdC,EAAgB,KAQpB,MAVoB,CAAC,IAAK,IAAK,MAGjB7N,SAAQ,SAAC9J,GACrB,IAAI4X,EAAOvM,KAAKwM,IAAIvY,OAAOwY,WAAa9X,GACpC4X,EAAOD,IACTA,EAAgBC,EAChBF,EAAc1X,MAGX0X,GAgTMvO,oBAXf,SAAc5N,EAAO6N,GACnB,OAAO,aACLxN,WAAYL,EAAMD,YAClBO,QAASN,EAAMM,QACfqB,SAAU3B,EAAM2B,SAChBnB,KAAMR,EAAMQ,KACZiD,aAAczD,EAAMyD,cACjBoK,KAIQD,EAhSF,SAAC,GAA2D,EAAzD7N,YAA0D,IAA7CO,EAA4C,EAA5CA,QAASE,EAAmC,EAAnCA,KAAMmB,EAA6B,EAA7BA,SAAU8B,EAAmB,EAAnBA,aAC9CC,EAdR,WAA0B,IAAD,EACKmI,mBAAS,GADd,mBAChBnI,EADgB,KACR8Y,EADQ,KAUvB,OARAC,2BAAgB,WACd,SAASC,IACPF,EAAUzY,OAAO4Y,aAInB,OAFA5Y,OAAO6Y,iBAAiB,SAAUF,GAClCA,IACO,kBAAM3Y,OAAO8Y,oBAAoB,SAAUH,MACjD,IACIhZ,EAIQoZ,GADwD,EAErBjR,mBAAS,IAFY,mBAEhEkR,EAFgE,KAE7CC,EAF6C,OAGjCnR,oBAAS,GAHwB,mBAGhEyJ,EAHgE,KAGnDC,EAHmD,OAIzB1J,mBAAS,CACrD1I,cAAe,GACfD,YAAa,GACbM,QAAS,EACThC,MAAO,GACP6B,SAAU,GACVJ,GAAI,GACJG,aAAc,GACdE,OAAQ,KAZ6D,mBAIhE2Z,EAJgE,KAI/CC,EAJ+C,OAc3BrR,oBAAS,GAdkB,mBAchEsR,EAdgE,KAchDC,EAdgD,KA6BvE,OAbApR,qBAAU,WAAM,4CACd,4BAAAiC,EAAA,yDACEiP,EAAmBvb,EAASkB,mBACxBlB,EAASC,eAFf,gCAGoBkH,GAAmB,GAHvC,QAGQ5C,EAHR,QAIauI,OACPuO,EAAqB9W,GAL3B,4CADc,uBAAC,WAAD,wBAUdiM,KACC,CAACxQ,IAGF,yBAAKiD,UAAU,iBAAiBO,MAAO,CAAEoL,UAAU,IAAD,OAAM9M,EAAN,QAChD,yBAAKmB,UAAU,UACb,yBACEA,UAAU,mEACVO,MAAO,CAAEzB,OAAQA,IAEjB,yBACEkB,UAAU,gCACVO,MAAO,CACL0N,IAAK,EACLgC,KAAM,EACNc,OAAQ,EACR8B,WAAW,4DAGf,kBAAC,GAAD,CAAOjM,KAAM8J,EAAaxC,QAAS,kBAAMyC,GAAe,KACtD,kBAAC,GAAD,CACE7D,WAAY,kBAAM0L,GAAkB,IACpCvW,QAASoW,EAAgBha,GACzBuO,QAAS,kBAAM+D,GAAe,OAGlC,yBACE3Q,UAAU,2BACVO,MAAO,CACL0N,IAAK,EACLgC,KAAM,EACNwI,MAAO,EACP3F,SAAU,SACV3C,OAAQ,SAGV,yBAAKnQ,UAAU,qBACb,yBACEgR,IAAKqH,EAAgB/Z,YACrB0B,UAAU,oBACVN,MAAM,OACNwR,IAAG,yCAAoCmH,EAAgB/Z,eAEzD,yBACE0S,IAAKqH,EAAgB/Z,YACrB0B,UAAU,oBACVN,MAAM,OACNwR,IAAG,sCAAiCoG,MAAjC,OAECe,EAAgB9Z,iBAEtB,yBACEyB,UAAU,gCACVO,MAAO,CACLsS,WACE,uGACF5E,IAAK,EACLgC,KAAM,OAKd,yBACEjQ,UAAU,uEACVO,MAAO,CACLwQ,OAAQ,IAGV,yBAAK/Q,UAAU,4DACb,yBAAKA,UAAU,gFACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,uDACVO,MAAO,CACLmY,WAAY,QAGbL,EAAgBzb,QAGrB,yBAAKoD,UAAU,YACb,yBAAKA,UAAU,qCACb,kBAAC,GAAD,CACE0L,WACE9P,EAAKF,QAAQ2c,EAAgBha,KAEzB,mBADAzC,EAAKF,QAAQ2c,EAAgBha,IAAI2R,UAIvC9G,MAAOmP,EACP5X,MAAM,OACNT,UAAU,YACV4K,MACElP,EAAQ2c,EAAgBha,IACpB3C,EAAQ2c,EAAgBha,IAAIkR,eAC5B,KAGR,kBAAC,GAAD,CACE7D,WACE9P,EAAKF,QAAQ2c,EAAgBha,KAEzB,cADAzC,EAAKF,QAAQ2c,EAAgBha,IAAI2R,UAIvC9G,MAAOmP,EACP5X,MAAM,QACNT,UAAU,YACV4K,MACElP,EAAQ2c,EAAgBha,IACpB3C,EAAQ2c,EAAgBha,IAAImR,UAC5B,KAGR,kBAAC,GAAD,CACE9D,WACE9P,EAAKF,QAAQ2c,EAAgBha,KAEzB,YADAzC,EAAKF,QAAQ2c,EAAgBha,IAAI2R,UAIvC9G,MAAOmP,EACPrY,UAAU,YACVS,MAAM,sBACNmK,MACElP,EAAQ2c,EAAgBha,IACpB3C,EAAQ2c,EAAgBha,IAAIoR,QAC5B,KAGR,kBAAC,GAAD,CACEzP,UAAU,OACV0L,WACE9P,EAAKF,QAAQ2c,EAAgBha,KAEzB,aADAzC,EAAKF,QAAQ2c,EAAgBha,IAAI2R,UAIvC9G,MAAOmP,EACP5X,MAAM,OACNmK,MACElP,EAAQ2c,EAAgBha,IACpB3C,EAAQ2c,EAAgBha,IAAIqR,SAC5B,QAMd,yBAAK1P,UAAU,+DACZqY,EAAgB5Z,UAEnB,yBAAKuB,UAAU,+BACb,yBAAKA,UAAU,wBACZqY,EAAgB7Z,aAAa4N,UAAU,EAAG,GAC3C,4BAAQpM,UAAU,QAAlB,UACA,6BACE,yBAAKA,UAAU,qBACZqY,EAAgB3Z,OACdiU,MAAM,EAAG,GACTtF,KAAI,SAACxN,GAAD,OAAOA,EAAElB,QACbqN,KAAK,MAEV,yBAAKhM,UAAU,qBACZqY,EAAgB3Z,OACdiU,MAAM,EAAG,GACTtF,KAAI,SAACxN,GAAD,OAAOA,EAAElB,QACbqN,KAAK,OAIZ,4BAAQhM,UAAU,QAAlB,UACC+K,GAAesN,EAAgBzZ,WAGpC,yBAAKoB,UAAU,+BACXuY,EAQA,GAPA,yBACEvY,UAAU,wDACVsK,QAAS,kBAAMqG,GAAe,KAFhC,gBASF,kBAAC,GAAD,CACEzH,MAAOmP,EACPzc,KAAMA,MAKZ,yBAAKoE,UAAU,4BACb,yBACEA,UAAU,+BACVO,MAAO,CACLqS,QAAS,WACTC,WACE,kDACF5B,aAAc,cAEdrF,aAAc,SARlB,0BAaA,kBAAC,GAAD,CACE0E,OAAQ6H,EACRvc,KAAMA,EACNF,QAASA,QAMnB,yBAAKsE,UAAU,mCACb,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,UACb,yBACEA,UAAU,+BACVO,MAAO,CACLqS,QAAS,WACTC,WACE,kDACF5B,aAAc,cAEdrF,aAAc,SARlB,2BAaA,kBAAC,GAAD,CACE0E,OAAQ6H,EACRvc,KAAMA,EACNF,QAASA,QAMnB,kBAAC,GAAD,CAAewG,OAAQnF,EAASC,iBAChC,kBAAC,GAAD,MACA,kBAAC,GAAD,WC5IOgM,oBAPf,SAAc5N,EAAO6N,GACnB,OAAO,aACLlM,SAAU3B,EAAM2B,UACbkM,KAIQD,EApKK,SAAC,GAOd,IANLpC,EAMI,EANJA,KACAsH,EAKI,EALJA,QACAtS,EAII,EAJJA,KACA8G,EAGI,EAHJA,QACAuR,EAEI,EAFJA,gBACAlX,EACI,EADJA,SACI,EACgCkK,mBAAS,CAAEvE,QAAS,KADpD,mBACGwR,EADH,KACeC,EADf,OAE0BlN,mBAAS,IAFnC,mBAEGgG,EAFH,KAEYC,EAFZ,OAG0BjG,oBAAS,GAHnC,mBAGG0B,EAHH,KAGYQ,EAHZ,KAWJ,OANA/B,qBAAU,WACJ1E,GACFyR,GAAc,SAACvF,GAAD,OAAUrT,OAAOC,OAAO,GAAIoT,EAAMlM,QAEjD,CAACA,IAGF,kBAAC,GAAD,CAAOkE,KAAMA,EAAMsH,QAASA,GAC1B,yBAAKlO,UAAU,mDACb,yBAAKA,UAAU,0BAAf,gBACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVO,MAAO,CAAEsO,gBAAgB,OAAD,OAASjT,EAAKI,MAAd,SAG5B,yBAAKgE,UAAU,OACb,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,oCACVO,MAAO,CAAEsO,gBAAgB,OAAD,OAASjT,EAAKI,MAAd,SAG5B,yBACEgE,UAAS,0CACPkU,EAAWxR,QAAQ+E,QACnB1K,EAASQ,sBAAwB,EAC7B,aACA,gBAGL2W,EAAWxR,QACR3F,EAASQ,sBAAwB2W,EAAWxR,QAAQ+E,OACpD1K,EAASQ,sBAAuB,IAVtC,oBAcF,yBAAKyC,UAAU,sBAAsBO,MAAO,CAAEzB,OAAQ,UACpD,8BACEiQ,SAAU,SAACC,GACTA,EAAEC,UACF,IAAIC,EAAOF,EAAEG,OAAOvE,MAChBsE,EAAKzH,QAAU1K,EAASQ,uBAC1B4W,GAAc,SAACvF,GAAD,OACZrT,OAAOC,OAAO,GAAIoT,EAAM,CAAElM,QAASwM,QAIzCtE,MAAOsJ,EAAWxR,QAClB0M,YAAY,EACZC,YAAY,sBACZ9O,MAAO,CAAE+O,OAAQ,QACjBtP,UAAU,0BAGd,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,sCACb,yBACEA,UAAS,qCACPkU,EAAWxR,QAAQ+E,QACnB1K,EAASQ,sBAAwB,EAC7B,aACA,gBAGL2W,EAAWxR,QACR3F,EAASQ,sBACT2W,EAAWxR,QAAQ+E,OACnB1K,EAASQ,sBAAuB,IAXtC,qBAgBJ,yBAAKyC,UAAU,UACb,yBACEA,UAAU,oEACVO,MAAO,CAAEzB,OAAQ,OAAQ6Q,QAAS1C,EAAU,EAAI,IAE/CA,IAGL,yBACEjN,UAAU,0CACVsK,QAAO,sBAAE,4BAAAjB,EAAA,yDACF6K,EAAWxR,QADT,gBAELwK,EAAW,gBAFN,2BAIDtR,EAAKK,MAJJ,wBAKHkN,GAAW,GALR,SAMawP,EAAOzE,EAAYxR,EAAQkN,KANxC,OAMCtO,EAND,OAOH6H,GAAW,GACP7H,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,6BACPtB,KAAM,UACNuB,QAASyE,EAAIuI,UAIjB5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,kCACPtB,KAAM,UACNuB,QAAS,sCAGbqR,IACA+F,KA3BC,wBA8BH/G,EAAW,sCA9BR,6CAmCT,kBAAC,GAAD,CACE7C,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASA,EACTnJ,KAAM,KAjDV,kBC83BCwJ,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACL9N,YAAaC,EAAMD,YACnBO,QAASN,EAAMM,SACZuN,KAIQD,EAz8BM,SAAC,GAQf,IAPLE,EAOI,EAPJA,MACAtN,EAMI,EANJA,KACAT,EAKI,EALJA,YACAyd,EAII,EAJJA,yBACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,cACApd,EACI,EADJA,QACI,EAE0BuL,mBAAS,IAFnC,mBAEG9K,EAFH,KAEY0Y,EAFZ,OAG0C5N,mBAAS,IAHnD,mBAGG6N,EAHH,KAGoBC,EAHpB,OAKwC9N,oBAAU,GALlD,mBAKGgO,EALH,KAKmBC,EALnB,OAMsCjO,oBAAU,GANhD,mBAMGkO,EANH,KAMkBC,EANlB,OAOsCnO,oBAAU,GAPhD,mBAOGoO,EAPH,KAOkBC,EAPlB,OAQ0CrO,oBAAU,GARpD,mBAQG8R,EARH,KAQoBC,EARpB,OASwC/R,oBAAU,GATlD,mBASGgS,EATH,KASmBC,GATnB,QAUkDjS,oBAAS,GAV3D,qBAUGkS,GAVH,MAUwBC,GAVxB,SAa4CnS,mBAAS,IAbrD,qBAaG+O,GAbH,MAaqBC,GAbrB,SAgB4BhP,mBAAS,IAhBrC,qBAgBG2N,GAhBH,MAgBaZ,GAhBb,SAiB0B/M,oBAAS,GAjBnC,qBAiBGvE,GAjBH,MAiBY2W,GAjBZ,SAoB8DpS,mBAChE6R,EAAgBD,GAAgB,GArB9B,qBAoBG7D,GApBH,MAoB8BjB,GApB9B,SAyBoB9M,oBAAU,GAzB9B,qBAyBGqS,GAzBH,MAyBSC,GAzBT,SA0BoCtS,mBAAS,GA1B7C,qBA0BGsO,GA1BH,MA0BiBC,GA1BjB,MA6BEC,GAAoB5D,iBAAO,MA7B7B,GAgCsC5K,oBAAS,GAhC/C,qBAgCG2J,GAhCH,MAgCkBC,GAhClB,SAiC8B5J,oBAAS,GAjCvC,qBAiCGuS,GAjCH,MAiCcC,GAjCd,SAkC0CxS,oBAAS,GAlCnD,qBAkCGyS,GAlCH,MAkCoBC,GAlCpB,SAqCwB1S,mBAAS,IArCjC,qBAqCGjF,GArCH,MAqCW2T,GArCX,SAwC0C1O,oBAAS,GAxCnD,qBAwCGgN,GAxCH,MAwCoB6B,GAxCpB,SA2CwC7O,oBAAS,GA3CjD,qBA2CGuH,GA3CH,MA2CmBuH,GA3CnB,SAgDoC9O,oBAAS,GAhD7C,qBAgDG2S,GAhDH,MAgDiBC,GAhDjB,MAkDJzS,qBAAU,WAAM,4CACd,8BAAAiC,EAAA,0DACqC,IAA/B2L,GADN,gCAEqBjS,EAAkBiS,IAFvC,OAEQlU,EAFR,OAGQoV,EAAc,GAClBpV,EAAK6I,SAAQ,SAAC9J,GACZqW,EAAYrW,EAAE+P,KAAO/P,KAEvBmU,IAAY,SAACpF,GAAD,OACVrT,OAAOC,OAAO,GAAIoT,EAAlBrT,OAAA,KAAAA,CAAA,GAA2ByZ,GAA4BkB,OAR7D,4CADc,uBAAC,WAAD,wBAad3I,KACC,CAACyH,GAA2Bf,KAE/B7M,qBAAU,WAAM,4CACd,sCAAAiC,EAAA,0DACMH,EAAM7K,GADZ,iCAEyBmE,EAAwB0G,EAAM7K,IAFvD,cAEQ8X,EAFR,OAGQC,EAAqB,GACrBC,EAAgB,GACfF,EAAStM,OACZsM,EAASxM,SAAQ,SAAC9J,GAChBuW,EAAmBvG,KAAKhQ,EAAEyW,YAC1BD,EAAcxW,EAAEyW,YAAczW,KAGlCoW,GAAoBI,GAXxB,UAYqB9T,EAAgB2G,EAAM7K,IAZ3C,SAYQyC,EAZR,QAac+I,QACJ0M,EAAc,GAChBC,EAAqB,GACvB1V,EAAKgZ,UAAUnQ,SAAQ,SAAC9J,GAClBA,EAAE+P,MAAQiJ,EACZtC,EAAYwD,QAAQla,GACXuW,EAAmB1D,SAAS7S,EAAE+P,MACvC/P,EAAEsW,UAAW,EACbI,EAAY1G,KAAKhQ,IAEjB2W,EAAmB3G,KAAKhQ,MAG5BkV,EAAmBwB,GACnB1B,EAAW2B,IA3BjB,6CADc,uBAAC,WAAD,wBAgCdjJ,KACC,CAACrE,EAAOsF,GAAgBoK,IAE3B,IAkWMoB,IAAqB,IAAVV,GAAc,EAAIA,GAEnC,OACE,yBAAKtZ,UAAU,kBACZ7D,EAAQsL,OACP,yBAAKzH,UAAU,kBAAf,YACYwK,GAAWrO,EAAQsL,OAAQ,GADvC,KAIA,GAEF,yBAAKzH,UAAU,UACb,yBAAKA,UAAU,sBAAsBsI,IAAKmN,KACzCX,EACE/I,OAAO5P,GACPwW,MAxac,GAyaZqH,GAAW,GAzaC,GA0aZA,GAAW,GA1aC,GA4ad3M,KAAI,SAACxN,EAAG2H,GACP,IAAI7L,EAASqa,GAAiBnW,EAAE+P,KAC5BoG,GAAiBnW,EAAE+P,KAAKpJ,QAAQ7K,OAChCkE,EAAElE,OACFqG,EAASgU,GAAiBnW,EAAE+P,KAC5BoG,GAAiBnW,EAAE+P,KAAKpJ,QAAQxE,OAChCnC,EAAEmC,OACN,OACE,kBAAC,IAAM6R,SAAP,CAAgBvG,IAAG,0BAAqB9F,IACtC,yBACEc,IAAK,SAACC,GACCuQ,GACCjZ,EAAE+P,MAAQiJ,GAAgBtQ,IAAOqR,KACnCC,IAAgB,GAChBtR,EAAG0R,eAAe,CAAEC,SAAU,aAKpC5M,IAAG,iBAAY9F,GACfxH,UAAS,8DACPH,EAAE+P,MAAQiJ,GAAiBC,EAEvB,GADA,mBAIN,yBAAK9Y,UAAU,mCACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAY0E,EAAE4U,OAAS5U,EAAE4U,OAAS5U,EAAEsa,gBAChChf,EACE0E,EAAE4U,OAAS5U,EAAE4U,OAAS5U,EAAEsa,gBACxBne,MACF,GALS,SAUrB,yBAAKgE,UAAU,OACb,yBAAKA,UAAU,kEACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAY0E,EAAE4U,QACVtZ,EAAY0E,EAAE4U,QAAQzY,MACtB,GAHS,SAQrB,yBAAKgE,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,oCACZ7E,EAAY0E,EAAE4U,QACXtZ,EAAY0E,EAAE4U,QAAQ1Y,aACtB,IAEN,yBAAKiE,UAAU,4BACZ0W,KAAKC,OAAO,IAAIxY,KAAK0B,EAAE6W,MAAO,qBAMxC9a,EAAKgU,MAAQ/P,EAAE4U,OACd,yBAAKzU,UAAU,YACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEsG,OAAO,EACPD,SAAS,MACTI,QAAQ,aACRF,MAAM,OACNC,QAAS,SAAC2D,GAAD,OACP,yBAAKnK,UAAU,6BAAf,iBAKF,yBACEA,UAAU,4DACVsK,QAAO,sBAAE,sBAAAjB,EAAA,sDACPsM,GAAU9V,GACVuZ,IAAuB,GACvBvI,IAAiB,GAHV,4CAMT,kBAAC,KAAD,CAAU1C,SAAS,WAGvB,kBAAC,GAAD,CACE7H,OAAO,EACPD,SAAS,MACTI,QAAQ,aACRF,MAAM,OACNC,QAAS,SAAC2D,GAAD,OACP,yBAAKnK,UAAU,6BAAf,mBAKF,yBACEA,UAAU,4DACVsK,QAAO,sBAAE,kCAAAjB,EAAA,6DACP6P,GAAkBrZ,EAAE+P,KADb,SAEStN,EAAazC,GAFtB,OAEHyB,EAFG,OAGP4X,IAAmB,GACf5X,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAM,0BACNtB,KAAM,UACNuB,QAASyE,EAAIuI,UAIjB5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAM,UACNtB,KAAM,UACNuB,QAAS,kCAITlB,EAASD,EAAQwN,EAAM7K,KAIV,KAHb+b,EAAUze,EAAOkE,EAAElE,QAAQqO,WAC7B,SAACqQ,GAAD,OAAOA,IAAMxa,EAAE4U,YAGf9Y,EAAOkE,EAAElE,QAAQ4S,OAAO6L,EAAS,GAEnCnb,EAAMwK,SAAS,CACbnO,KAAM,iBACNK,OAAO,gBAAIuN,EAAM7K,GAAK1C,YAGpBoU,EAtBC,eAsBkBnU,EAAKF,UACTwN,EAAM7K,IACzBY,EAAMwK,SAAS,CACbnO,KAAM,cACNiB,aAAc,CACZb,QAASqU,KAGbgG,IAAmBvH,KA3Cd,4CA+CRyK,IAAmBpZ,EAAE+P,IACpB,yBAAK5P,UAAU,aACb,kBAAC,GAAD,CACEqK,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,SAAS,EACTnJ,KAAM,MAIV,kBAAC,KAAD,CAAS2O,SAAS,aAO5B,kBAAC,GAAD,CACE7H,OAAO,EACPD,SAAS,MACTI,QAAQ,aACRF,MAAM,OACNC,QAAS,SAAC2D,GAAD,OACP,yBAAKnK,UAAU,6BAAf,kBAKF,yBACEA,UAAU,4DACVsK,QAAO,sBAAE,4BAAAjB,EAAA,0DACHzN,EAAKK,MADF,uBAELqZ,EAAiBzV,EAAE+P,KAFd,SAGWvM,EAAazH,EAAMiE,EAAE+P,KAHhC,OAGDtO,EAHC,OAILgU,GAAkB,GACdhU,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,kBACPC,QACE,4DACFvB,KAAM,aArBP,uBA0BL2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QACE,qCACFvB,KAAM,aAhCL,6CAsCR+Z,IAAkBxV,EAAE+P,IACnB,yBAAK5P,UAAU,aACb,kBAAC,GAAD,CACEqK,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,SAAS,EACTnJ,KAAM,MAIV,kBAAC,IAAD,CAAQ2O,SAAS,YAO3B,yBAAKnO,UAAU,6DACb,yBAAKA,UAAU,cAAcgC,IAE/B,yBAAKhC,UAAU,6DACb,yBAAKA,UAAU,YACD,YAAXrE,EACC,kBAAC,EAAD,CAAQ6D,KAAM,KAEd,kBAAC,IAAD,CACEiB,MACa,mBAAX9E,EACI,OACW,cAAXA,EACA,QACW,YAAXA,EACA,sBACA,OAEN+E,IAAI,WACJlB,KAAM,MAIZ,yBAAKQ,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBAAiBH,EAAE+W,MAAMnP,QACxC,yBAAKzH,UAAU,kBACZmV,IAAkB3N,EACjB,yBAAKxH,UAAU,aACb,kBAAC,GAAD,CACEqK,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASwM,IAAkB3N,EAC3BhI,KAAM,MAIV,kBAAC,IAAD,CACE8K,QAAO,sBAAE,4BAAAjB,EAAA,0DACHzN,EAAKK,MADF,oBAEDL,EAAKgU,MAAQ/P,EAAE4U,OAFd,wBAGHW,EAAiB5N,GAHd,SAIarE,EAAWvH,EAAMiE,EAAE+P,KAJhC,OAICtO,EAJD,OAKH8T,GAAkB,GACd9T,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAIVya,IAAmBvH,IAhBlB,wBAmBHvP,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QACE,kCACFvB,KAAM,aAzBP,gCA8BL2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QACE,mCACFvB,KAAM,aApCL,4CAyCT6S,SAAS,OACTnO,UAAU,gDAIhB,yBAAKA,UAAU,iBACZH,EAAE+U,SAASnN,QAEd,yBAAKzH,UAAU,iBACb,kBAAC,IAAD,CACEsK,QAAS,WACPyJ,GACEiB,KAA8BnV,EAAE+P,KAC3B,EACD/P,EAAE+P,MAGVzB,SAAS,OACTnO,UAAU,iDAGd,yBACEA,UAAU,oCACVsK,QAAS,WACPqL,GACEpa,OAAOC,OAAO,GAAIqE,EAAG,CACnB6U,sBAAuB,CACrBvZ,EAAY0E,EAAE4U,YAIpBgF,IAAa,KAVjB,cAoBV,kBAAC5C,GAAA,EAAD,CACEC,GAAI9B,KAA8BnV,EAAE+P,IACpC5P,UAAU,QAEV,yBACEO,MAAO,CAAEwW,WAAY,QACrB/W,UAAU,mBAFZ,aAKG4U,GAAS/U,EAAE+P,KACRrU,OAAOyb,OAAOpC,GAAS/U,EAAE+P,MAAMnI,OAC/B,EAPN,KAUCmN,GAAS/U,EAAE+P,KAnwBL,SAAjBqH,EAAkBrS,EAAK5C,GAC3B,OAAO4C,EAAIyI,KAAI,SAACxN,EAAGqX,GACjB,OAAOtC,GAAS5S,EAAO4N,KAAK/P,GAC1B,kBAAC,IAAMgU,SAAP,CACEvG,IAAG,2BAAsB0H,GAAtB,YAAmDkC,IAEtD,yBACE5O,IAAK,SAACC,GACA1I,IAAMiZ,GAAiBvQ,IAAOqR,KAChCC,IAAgB,GAChBtR,EAAG0R,eAAe,CAAEC,SAAU,aAIlC3Z,MAAO,CACLwW,WAAW,GAAD,OAC+C,GAAvDnC,GAAS5S,EAAO4N,KAAK/P,GAAG6U,sBAAsBjN,OAAc,GADpD,OAIZ6F,IAAG,kBAAa0H,GAAb,YAA0CkC,GAC7ClX,UAAS,+EACPH,IAAMiZ,EAAgB,iBAAmB,KAG3C,yBAAK9Y,UAAU,mCACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAYyZ,GAAS5S,EAAO4N,KAAK/P,GAAG4U,QAChCtZ,EAAYyZ,GAAS5S,EAAO4N,KAAK/P,GAAG4U,QAAQzY,MAC5C,GAHS,SAQrB,yBAAKgE,UAAU,OACb,yBAAKA,UAAU,kEACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAYyZ,GAAS5S,EAAO4N,KAAK/P,GAAG4U,QAChCtZ,EAAYyZ,GAAS5S,EAAO4N,KAAK/P,GAAG4U,QACjCzY,MACH,GAJS,SASrB,yBAAKgE,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,oCACZ7E,EAAYyZ,GAAS5S,EAAO4N,KAAK/P,GAAG4U,QACjCtZ,EAAYyZ,GAAS5S,EAAO4N,KAAK/P,GAAG4U,QACjC1Y,aACH,IAEN,yBAAKiE,UAAU,4BACZ0W,KAAKC,OACJ,IAAIxY,KAAKyW,GAAS5S,EAAO4N,KAAK/P,GAAG6W,MACjC,qBAOX9a,EAAKgU,MAAQgF,GAAS5S,EAAO4N,KAAK/P,GAAG4U,OACpC,yBAAKzU,UAAU,YACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEsG,OAAO,EACPD,SAAS,MACTI,QAAQ,aACRF,MAAM,OACNC,QAAS,SAAC2D,GAAD,OACP,yBAAKnK,UAAU,6BAAf,kBAKF,yBACEA,UAAU,4DACVsK,QAAO,sBAAE,sBAAAjB,EAAA,sDACPgQ,GAAWzE,GAAS5S,EAAO4N,KAAK/P,IAChC8Z,IAAmB,GAFZ,4CAKT,kBAAC,KAAD,CAAUxL,SAAS,WAGvB,kBAAC,GAAD,CACE7H,OAAO,EACPD,SAAS,MACTI,QAAQ,aACRF,MAAM,OACNC,QAAS,SAAC2D,GAAD,OACP,yBAAKnK,UAAU,6BAAf,oBAKF,yBACEA,UAAU,4DACVsK,QAAO,sBAAE,4BAAAjB,EAAA,6DACP2P,EAAmBpE,GAAS5S,EAAO4N,KAAK/P,GAAG+P,KADpC,SAES/M,EACd+R,GAAS5S,EAAO4N,KAAK/P,GAAG+P,KAHnB,OAEHtO,EAFG,OAKP0X,GAAoB,GAChB1X,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAM,0BACNtB,KAAM,UACNuB,QAASyE,EAAIuI,UAIjB5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAM,UACNtB,KAAM,UACNuB,QAAS,kCAGbiZ,IAAoB7B,IACpB8B,IAAmBvH,KAzBd,4CA6BRuK,IAAoBnE,GAAS5S,EAAO4N,KAAK/P,GAAG+P,IAC3C,yBAAK5P,UAAU,aACb,kBAAC,GAAD,CACEqK,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,SAAS,EACTnJ,KAAM,MAIV,kBAAC,KAAD,CAAS2O,SAAS,aAO5B,kBAAC,GAAD,CACE7H,OAAO,EACPD,SAAS,MACTI,QAAQ,aACRF,MAAM,OACNC,QAAS,SAAC2D,GAAD,OACP,yBAAKnK,UAAU,6BAAf,kBAKF,yBACEA,UAAU,4DACVsK,QAAO,sBAAE,4BAAAjB,EAAA,0DACHzN,EAAKK,MADF,uBAELqZ,EAAiBzV,GAFZ,SAGWyD,EAAc1H,EAAMiE,GAH/B,OAGDyB,EAHC,OAILgU,GAAkB,GACdhU,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,mBACPC,QACE,6DACFvB,KAAM,aArBP,uBA0BL2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,sCACTvB,KAAM,aA/BL,6CAqCR+Z,IAAkBxV,EACjB,yBAAKG,UAAU,aACb,kBAAC,GAAD,CACEqK,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,SAAS,EACTnJ,KAAM,MAIV,kBAAC,IAAD,CAAQ2O,SAAS,YAO3B,yBAAKnO,UAAU,6DACZ4U,GAAS5S,EAAO4N,KAAK/P,GAAG6C,SAE3B,yBAAK1C,UAAU,yDACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACZ4U,GAAS5S,EAAO4N,KAAK/P,GAAG+W,MAAMnP,QAEjC,yBAAKzH,UAAU,kBACZiV,IAAmBiC,EAClB,yBAAKlX,UAAU,aACb,kBAAC,GAAD,CACEqK,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASsM,IAAmBiC,EAC5B1X,KAAM,MAIV,kBAAC,IAAD,CACE8K,QAAO,sBAAE,4BAAAjB,EAAA,0DACHzN,EAAKK,MADF,oBAEDL,EAAKgU,MAAQgF,GAAS5S,EAAO4N,KAAK/P,GAAG4U,OAFpC,wBAGHS,EAAkBgC,GAHf,SAIa9T,EAAYxH,EAAMiE,GAJ/B,OAICyB,EAJD,OAKH4T,GAAmB,GACf5T,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAIVwa,IAAoB7B,IAhBnB,wBAmBHhV,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QACE,oCACFvB,KAAM,aAzBP,gCA8BL2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,mCACTvB,KAAM,aAnCL,4CAwCT6S,SAAS,OACTnO,UAAU,gDAIhB,yBACEA,UAAU,oCACVsK,QAAS,WACF1O,EAAKK,OAUR0Z,GACEpa,OAAOC,OAAO,GAAIwG,EAAQ,CACxBsS,WAAYzU,EACZ6U,sBAAuBE,GAAS5S,EAAO4N,KACrC/P,GACA6U,sBAAsB3I,OAAO,CAC7B5Q,EAAYyZ,GAAS5S,EAAO4N,KAAK/P,GAAG4U,aAI1CgF,IAAa,IAnBbxa,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,qCACTvB,KAAM,eAThB,cAkCT2b,EAAerC,GAAS5S,EAAO4N,KAAK/P,GAAG+U,SAAU5S,IAGpD,MAwaciV,CACE1b,OAAOyb,OAAOpC,GAAS/U,EAAE+P,MACtB6C,QAAO,SAACpJ,GAAD,OAA0C,IAAnCA,EAAEqL,sBAAsBjN,UACtC4F,KAAI,SAAC8J,GAAD,OAAOA,EAAEvH,OAChB/P,GAEF,GACJ,yBAAKG,UAAU,sCACb,yBAAKA,UAAU,YACb,kBAACoX,GAAD,CACE9D,MAAOpI,KAAKmM,KACVzC,GAAS/U,EAAE+P,KACPgF,GAAS/U,EAAE+P,KAAKnI,OAx0BpB,EAy0BI,GAENgB,QAAS8M,GACThC,WAAYiC,GACZhC,WAAY,CACVC,YAAa,aACb/H,SAAU,gCAS5B,yBAAK1L,UAAU,2CACb,yBAAKA,UAAU,YACb,kBAACoX,GAAD,CACE5D,WAAY,CACVC,YAAa,aACb/H,SAAU,uBAEZ4H,MAAOpI,KAAKmM,KAAKlb,EAAQsL,OA91Bd,GA+1BXgB,QAASuR,GACTzG,WAAYgG,MAGhB,kBAAC,GAAD,CACE9K,YAAa0K,GACbvS,KAAMgK,GACN1C,QAAS,kBAAM2C,IAAiB,IAChC3H,MAAOA,EACPlH,OAAQA,GACRpG,KAAMA,EACN4S,eAAgB,kBAAMuH,IAAmBvH,OAE3C,kBAAC,GAAD,CACEA,eAAgB,kBAAMuH,IAAmBvH,KACzCuF,6BAA8BA,GAC9BE,gBAAiB,kBAAM6B,IAAoB7B,KAC3CD,YAAaA,GACb9K,MAAOA,EACP4K,aACE3Y,EAAY6G,GAAOyS,QACftZ,EAAY6G,GAAOyS,QACnB,CAAE1Y,aAAc,IAEtBiG,OAAQA,GACR4E,KAAM4S,GACNtL,QAAS,kBAAMuL,IAAa,IAC5B7d,KAAMA,IAER,kBAAC,GAAD,CACE8G,QAASA,GACTuR,gBAAiB,kBAAM6B,IAAoB7B,KAC3CD,YAAa,aACb9K,MAAOA,EACPtC,KAAM8S,GACNxL,QAAS,kBAAMyL,IAAmB,IAClC/d,KAAMA,U,SC3iBHoN,oBATf,SAAc5N,EAAO6N,GACnB,OAAO,aACLrN,KAAMR,EAAMQ,KACZF,QAASN,EAAMM,QACfqB,SAAU3B,EAAM2B,UACbkM,KAIQD,EAzZD,SAACzJ,GACb,IAAM0C,EAAU1C,EAAM+a,MAAMxO,OAAO7J,QAC7BvG,EAAU6D,EAAM7D,QAChBwG,EAAS3C,EAAMxC,SAASC,eACxB6b,EAAetZ,EAAM+a,MAAMxO,OAAO9I,SAClC8V,EAAgBvZ,EAAM+a,MAAMxO,OAAOlJ,UAEnChH,EAAO2D,EAAM3D,KAPI,EAQKqL,oBAAS,GARd,mBAQhBjF,EARgB,KAQR2T,EARQ,OASqB1O,oBAAS,GAT9B,mBAShBuH,EATgB,KASAuH,EATA,OAUqB9O,oBAAS,GAV9B,mBAUhBsR,EAVgB,KAUAC,EAVA,OAWmBvR,oBAAS,GAX5B,mBAWhB2J,EAXgB,KAWDC,EAXC,OAYG5J,mBAAS,CACjC3I,YAAa,GACbI,OAAQ,GACR9B,MAAO,GACP6B,SAAU,GACV8b,SAAU,GACVC,KAAM,GACN5b,QAAS,EACTJ,aAAc,GACdH,GAAI,KArBiB,mBAYhB6K,EAZgB,KAYT4H,EAZS,OAyBe7J,oBAAS,GAzBxB,mBAyBhByJ,EAzBgB,KAyBHC,EAzBG,KAwGvB,OA7EAvJ,qBAAU,WAEJ8B,EAAMtM,QACRsG,EAAegG,EAAM7K,GAAI6D,GACnBgH,EAAM7K,MAAM3C,GAChBuD,EAAMwK,SAAS,CACbnO,KAAM,iBACNK,OAAO,gBACJuN,EAAM7K,GAAK,CACVkR,eAAgB,GAChBE,QAAS,GACTC,SAAU,GACVF,UAAW,GACX0D,aAAchK,EAAM5K,YACpB6U,YAAajK,EAAMtM,MACnBwW,aAAclK,EAAMxK,OAAO2O,KAAI,SAACxN,GAAD,OAAOA,EAAElB,QACxC+W,mBAAoBxM,EAAM1K,oBAMnC,CAAC0K,EAAMtM,QAEVwK,qBAAU,WAAM,4CAEd,wCAAAiC,EAAA,0DACMpH,IAAWC,EADjB,oBAGoC,WAA5BD,EAAQmK,UAAU,EAAG,GAH7B,uBAIUqO,EAAUxY,EAAQmK,UAAU,GAJtC,SAK4BC,GAAUoO,EAASvY,GAL/C,OAKUwY,EALV,OAMM5Z,EAAOvF,OAAOC,OAAO,GAAIkf,EAAW,CAClC9d,MAAO8d,EAAU/b,KACjBH,aAAckc,EAAUC,eACxBtc,GAAI4D,IATZ,wCAYmBqK,GAASrK,EAASC,GAZrC,QAYMpB,EAZN,sBAcIA,EAAKtC,aAAesC,EAAKtC,aAAesC,EAAKtC,aAAe,SACvCqI,IAAjB/F,EAAK8Z,SAA0B9Z,EAAK8Z,QAExC9J,GAAS,SAAClC,GAAD,OAAUrT,OAAOC,OAAO,GAAIoT,EAAM9N,MAjB/C,UAkBwByL,GAAWtK,EAASC,GAlB5C,QAkBQ2Y,EAlBR,OAmBQC,EAAYD,EAAQE,KACpBF,EAAQE,KAAKtI,QAAO,SAAC5S,GAAD,MAAiB,aAAVA,EAAEmb,OAAoB3N,KAAI,SAACxN,GAAD,OAAOA,EAAElB,QAC9D,GACA4b,EAAWO,EAAUrT,OACrBqT,EACAD,EAAQE,KAAK1N,KAAI,SAACxN,GAAD,OAAOA,EAAElB,QAC1B6b,EAAOK,EAAQL,KAAOK,EAAQL,KAAKnN,KAAI,SAACxN,GAAD,OAAOA,EAAElB,QAAQ,GAC5DmS,GAAS,SAAClC,GAAD,OAAUrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE2L,WAAUC,YA1B3D,6CAFc,sBACdrb,OAAO8b,SAAS,EAAG,GADL,mCAgCd1N,KACC,CAACtL,EAASC,IAEbkF,qBAAU,WAAM,4CACd,4BAAAiC,EAAA,sEACkB3F,EAAc9H,EAAKgU,IAAK3N,GAD1C,QACMX,EADN,QAGSA,EAAIuI,OACP8L,EAAUrU,GAGZqU,EAAU,CAAE3T,OAAQ,GAAIrG,OAAQ,KAPpC,4CADc,sBAWVC,EAAKgU,KAAO3N,GAXD,WAAD,wBAYZsL,KAED,CAACiB,EAAgB5S,EAAMqG,IAKxB,yBAAKjC,UAAU,8EACb,yBACEA,UAAU,4CACVO,MAAO,CACL0N,IAAK,EACLgC,KAAM,IAGR,yBACEjQ,UAAU,oBACVO,MAAO,CAAEzB,OAAQK,OAAO4Y,YAAa/J,SAAU,WAE/C,yBAAKhO,UAAU,qBACb,yBACEgR,IAAK9H,EAAM5K,YACXoB,MAAM,OACNwR,IACEhI,EAAM5K,YAAN,0CACuC4K,EAAM5K,aACzC,yDAGR,yBACE0B,UAAU,gCACVO,MAAO,CACLsS,WAAY,iDACZ5E,IAAK,EACLgC,KAAM,MAIZ,yBACEjQ,UAAU,gCACVO,MAAO,CACLsS,WAAY,2CACZ5E,IAAK,EACLgC,KAAM,OAKd,kBAAC,GAAD,CAAOrJ,KAAM8J,EAAaxC,QAAS,kBAAMyC,GAAe,KACtD,kBAAC,GAAD,CACE7D,WAAY,kBAAM0L,GAAkB,IACpCvW,QAASA,EACT2K,QAAS,kBAAM+D,GAAe,OAGlC,yBAAK3Q,UAAU,yDACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,2BACb,yBACEgR,IAAK9H,EAAM5K,YACXiC,MAAO,CAAE0Q,aAAc,QACvBvR,MAAM,QACNwR,IACEhI,EAAM5K,YAAN,0CACuC4K,EAAM5K,aACzC,yDAGR,yBACEgM,QAAS,kBAAM6G,EAAQtB,KAAR,iBAAuB3G,EAAM7K,MAC5C2B,UAAU,sEACVO,MAAO,CACL0P,KAAM,EACNhC,IAAK,EACL5H,SAAU,WACV0K,OAAQ,EACRE,aAAc,SAGdsH,EAiBA,GAhBA,yBACEvY,UAAU,uDACVsK,QAAS,SAAC0E,GACRA,EAAEoC,kBACFT,GAAe,KAGjB,kBAAC,KAAD,CACEpQ,MAAO,CACL4N,SAAU,OACV9D,MAAO,QACPE,YAAa,cAU3B,yBAAKvK,UAAU,yBACb,yBACEA,UAAU,mCACVO,MAAO,CAAEwQ,OAAQ,IAEjB,yBAAK/Q,UAAU,UACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,6CACZkJ,EAAMtM,MADT,KACkBsM,EAAM1K,aAAa4N,UAAU,EAAG,GADlD,MAIF,yBAAKpM,UAAU,YACb,yBAAKA,UAAU,+CACb,kBAAC,GAAD,CACE0L,WACE9P,EAAKF,QAAQwN,EAAM7K,KAEf,mBADAzC,EAAKF,QAAQwN,EAAM7K,IAAI2R,UAI7B9G,MAAOA,EACPzI,MAAM,OACNT,UAAU,YACV4K,MACElP,EAAQwN,EAAM7K,IACV3C,EAAQwN,EAAM7K,IAAIkR,eAClB,KAGR,kBAAC,GAAD,CACE7D,WACE9P,EAAKF,QAAQwN,EAAM7K,KACsB,cAArCzC,EAAKF,QAAQwN,EAAM7K,IAAI2R,UAG7B9G,MAAOA,EACPzI,MAAM,QACNT,UAAU,YACV4K,MACElP,EAAQwN,EAAM7K,IAAM3C,EAAQwN,EAAM7K,IAAImR,UAAY,KAGtD,kBAAC,GAAD,CACE9D,WACE9P,EAAKF,QAAQwN,EAAM7K,KACsB,YAArCzC,EAAKF,QAAQwN,EAAM7K,IAAI2R,UAG7B9G,MAAOA,EACPlJ,UAAU,YACVS,MAAM,sBACNmK,MACElP,EAAQwN,EAAM7K,IAAM3C,EAAQwN,EAAM7K,IAAIoR,QAAU,KAGpD,kBAAC,GAAD,CACEzP,UAAU,OACVS,MAAM,OACNmK,MACElP,EAAQwN,EAAM7K,IAAM3C,EAAQwN,EAAM7K,IAAIqR,SAAW,GAEnDhE,WACE9P,EAAKF,QAAQwN,EAAM7K,KACsB,aAArCzC,EAAKF,QAAQwN,EAAM7K,IAAI2R,UAG7B9G,MAAOA,OAMf,yBAAKlJ,UAAU,wCACb,yBAAKA,UAAU,iBACZkJ,EAAMxK,OAAO2O,KAAI,SAACxN,GAAD,OAAOA,EAAElB,QAAMqN,KAAK,OAG1C,yBAAKhM,UAAU,uBACb,yBAAKA,UAAU,iCAAf,aACA,yBAAKA,UAAU,6BACZ+K,GAAe7B,EAAMtK,WAG1B,yBAAKoB,UAAU,kCACZkJ,EAAMzK,UAET,yBAAKuB,UAAU,uBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iBAAf,aACA,yBAAKA,UAAU,yCACZkJ,EAAMqR,SAAS9S,OACZyB,EAAMqR,SAASvO,KAAK,MACpB,aAIV,yBAAKhM,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iBAAf,SACA,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kBACb,yBACEA,UAAU,+CACVsK,QAAS,SAAC0E,GAENA,EAAEkM,cAAcC,UAAUC,SACxB,gBAGFpM,EAAEkM,cAAcC,UAAUE,OACxB,gBAGFrM,EAAEkM,cAAcC,UAAUG,IAAI,kBAIjCpS,EAAMsR,KAAK/S,OACRyB,EAAMsR,KAAKxO,KAAK,MAChB,gBAOhB,yBAAKhM,UAAU,uBACb,yBAAKA,UAAU,iBAAf,iBACA,yBAAKA,UAAU,6BACW,MAAvBkJ,EAAM1K,aACHkY,KAAKC,OACH,IAAIxY,KAAK+K,EAAM1K,cACf,iBAEF,YAGR,yBAAKwB,UAAU,kEACb,yBACEA,UAAU,wDACVsK,QAAS,WACF1O,EAAKK,MAUR4U,GAAkBD,GATlB3R,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,qCACTvB,KAAM,eAQbM,EAAKF,QAAQwN,EAAM7K,IAClB,kBAAC,IAAMwV,SAAP,mBAEE,kBAAC,KAAD,CAAU1F,SAAS,OAAOnO,UAAU,UAGtC,kBAAC,IAAM6T,SAAP,kBAEE,kBAAC,KAAD,CACE1F,SAAS,OACTnO,UAAU,WAKlB,kBAAC,GAAD,CAAgBkJ,MAAOA,EAAOtN,KAAMA,SAM9C,kBAAC,GAAD,CACE6S,YAAa7S,EAAKF,QAAQwN,EAAM7K,IAChCuI,KAAMgK,EACN1C,QAAS,kBAAM2C,GAAiB,IAChC3H,MAAOA,EACPlH,OAAQA,EACRpG,KAAMA,EACN4S,eAAgB,kBAAMuH,GAAmBvH,MAE3C,kBAAC,GAAD,CACEoK,yBAA0BpK,EAC1B+M,qBAAsB3f,EAAKF,QAAQwN,EAAM7K,IACzCya,cAAeA,EACfD,aAAcA,EACd3P,MAAOA,EACPtN,KAAMA,SC7GDoN,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACL9N,YAAaC,EAAMD,YACnBO,QAASN,EAAMM,SACZuN,KAIQD,EAlSK,SAAC,GAAuC,IAArC7M,EAAoC,EAApCA,QAAShB,EAA2B,EAA3BA,YAAaO,EAAc,EAAdA,QAAc,EACSuL,oBAC/D,GAFsD,mBAClD+N,EADkD,KACvBjB,EADuB,OAMjB9M,mBAAS,GANQ,mBAMlDsO,EANkD,KAMpCC,EANoC,OAQzBvO,mBAAS,IARgB,mBAQlD2N,EARkD,KAQxCZ,EARwC,KAyBzD,OAZA5M,qBAAU,WAAM,4CACd,4BAAAiC,EAAA,0DACqC,IAA/B2L,EADN,gCAEqBjS,EAAkBiS,GAFvC,OAEQlU,EAFR,OAGIkT,GAAY,SAACpF,GAAD,OACVrT,OAAOC,OAAO,GAAIoT,EAAlBrT,OAAA,KAAAA,CAAA,GAA2ByZ,EAA4BlU,OAJ7D,4CADc,uBAAC,WAAD,wBASdyM,KACC,CAACyH,IAEG7Y,EACJwW,MACC,EACA,GAEDtF,KAAI,SAACxN,EAAG2H,GAAJ,OACH,kBAAC,IAAMqM,SAAP,CAAgBvG,IAAG,0BAAqB9F,IACtC,yBACE8F,IAAG,iBAAY9F,GACfxH,UAAU,wDAEV,yBACEA,UAAU,4CACVO,MAAO,CAAEuS,SAAU,UAEnB,yBAAK9S,UAAU,uBACb,yBACEgR,IAAKtV,EAAQmE,EAAEoK,UAAUiJ,aACzB5I,QAAS,kBAAM6G,EAAQtB,KAAR,iBAAuBhQ,EAAEoK,YACxCvK,MAAM,OACNa,MAAO,CAAE0Q,aAAc,OAAQwF,OAAQ,WACvCvF,IAAG,yCACDxV,EAAQmE,EAAEoK,UAAUiJ,kBAK5B,yBAAKlT,UAAU,0BACb,yBAAKA,UAAU,8EACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,6BACVO,MAAO,CACLsO,gBAAgB,sCAAD,OACbnT,EAAQmE,EAAEoK,UAAUiJ,aADP,SAYrB,yBAAKlT,UAAU,OACb,yBAAKA,UAAU,qCACZtE,EAAQmE,EAAEoK,UAAUkJ,YADvB,KAEGzX,EAAQmE,EAAEoK,UAAUyL,mBAAmBtJ,UAAU,EAAG,IAEvD,yBAAKpM,UAAU,6BACb,yBAAKA,UAAU,iBAAiBH,EAAEuT,kBAK1C,yBAAKpT,UAAU,UACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAY0E,EAAE4U,QACVtZ,EAAY0E,EAAE4U,QAAQzY,MACtB,GAHS,SAQrB,yBAAKgE,UAAU,YACb,yBAAKA,UAAU,gDACb,yBAAKA,UAAU,sBACZ7E,EAAY0E,EAAE4U,QACXtZ,EAAY0E,EAAE4U,QAAQ1Y,aACtB,QAMd,yBAAKiE,UAAU,YACb,yBAAKA,UAAU,6BACb,0BAAMA,UAAU,QAAhB,oBACA,0BAAMA,UAAU,cACb0W,KAAKC,OAAO,IAAIxY,KAAK0B,EAAE6W,MAAO,sBAO3C,yBAAK1W,UAAU,2EACZH,EAAEmC,QAGL,yBAAKhC,UAAU,iDACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,wEACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACZH,EAAElE,OACY,YAAbkE,EAAElE,OACA,yBAAK4E,MAAO,CAAEoL,UAAW,SACvB,kBAAC,EAAD,CAAQnM,KAAM,MAGhB,yBAAKe,MAAO,CAAEqL,aAAc,SAC1B,kBAAC,IAAD,CACEnL,MACe,mBAAbZ,EAAElE,OACE,OACa,cAAbkE,EAAElE,OACF,QACa,YAAbkE,EAAElE,OACF,sBACA,OAEN+E,IAAI,WACJlB,KAAM,MAKZ,KAIN,yBAAKQ,UAAU,iBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBAAiBH,EAAE+W,MAAMnP,QACxC,yBAAKzH,UAAU,kBACb,kBAAC,IAAD,CACEmO,SAAS,OACTnO,UAAU,gBAGd,yBAAKA,UAAU,iBAAiBH,EAAE+U,SAASnN,QAC3C,yBAAKzH,UAAU,YACb,kBAAC,IAAD,CACEsK,QAAS,WACPyJ,EACEiB,IAA8BnV,EAAE+P,KAAO,EAAI/P,EAAE+P,MAGjDzB,SAAS,OACTnO,UAAU,wDAU5B,kBAAC6W,GAAA,EAAD,CAAUC,GAAI9B,IAA8BnV,EAAE+P,IAAK5P,UAAU,QAC3D,yBAAKA,UAAU,2BAAf,aACa4U,EAAS/U,EAAE+P,KAAOgF,EAAS/U,EAAE+P,KAAKnI,OAAS,EADxD,KAGCmN,EAAS/U,EAAE+P,KACRgF,EAAS/U,EAAE+P,KACR+C,MACC4C,GAAgBA,EAAe,GAC/BA,GAAgBA,EAAe,GAvLvB,GAyLTlI,KAAI,SAACzN,EAAGsX,GAAJ,OACH,yBACE5J,IAAG,kBAAa0H,EAAb,YAA0CkC,GAC7ClX,UAAU,6DAEV,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAYyE,EAAE6U,QACVtZ,EAAYyE,EAAE6U,QAAQzY,MACtB,GAHS,SAQrB,yBAAKgE,UAAU,OACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAYyE,EAAE6U,QACVtZ,EAAYyE,EAAE6U,QAAQzY,MACtB,GAHS,SAQrB,yBAAKgE,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,oCACZ7E,EAAYyE,EAAE6U,QACXtZ,EAAYyE,EAAE6U,QAAQ1Y,aACtB,IAEN,yBAAKiE,UAAU,4BACZ0W,KAAKC,OAAO,IAAIxY,KAAKyB,EAAE8W,MAAO,oBAMvC,yBAAK1W,UAAU,kCACZJ,EAAE8C,SAEL,yBAAK1C,UAAU,6DACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACZJ,EAAEgX,MAAMnP,QAEX,yBAAKzH,UAAU,kBACb,kBAAC,IAAD,CACEmO,SAAS,OACTnO,UAAU,uCAS5B,GACJ,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,iBACb,kBAACoX,GAAD,CACE9D,MAAOpI,KAAKmM,KACVzC,EAAS/U,EAAE+P,KAAOgF,EAAS/U,EAAE+P,KAAKnI,OAhQ1B,EAgQqD,GAE/DgB,QAAS8M,EACThC,WAAYiC,EACZhC,WAAY,CACVC,YAAa,aACb/H,SAAU,mCC/QtB8P,GAAgB,SAAClL,GACrB,IAAI5R,EAAS,CAAE+c,EAAG,OAclB,OAbAnL,EAAO3G,SAAQ,SAAC9J,GACdA,EAAEwR,UAAU1H,SAAQ,SAAC2H,GACnB,IAAIC,EAAQ1R,EAAEjD,MACVuD,EAAqBqR,MAAK,SAACC,GAAD,OAAOA,EAAEpT,KAAOiT,KAC1ClR,EAAqBoR,MAAK,SAACC,GAAD,OAAOA,EAAEpT,KAAOiT,KAC1CC,GAASA,EAAM5S,OACX2S,KAAO5S,IACXA,EAAO4S,GAAOC,EAAM5S,aAMrBD,GA2OMsK,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACLlM,SAAU3B,EAAM2B,SAChBP,OAAQpB,EAAMoB,QACXyM,KAIQD,EAxOO,SAAC,GAA0B,IAAxBxM,EAAuB,EAAvBA,OAAQO,EAAe,EAAfA,SAAe,EAChBkK,mBAAS,IADO,mBACvC9K,EADuC,KAC9B0Y,EAD8B,OAElB5N,mBAAS,IAFS,mBAEvCqJ,EAFuC,KAE/B2B,EAF+B,OAGlBhL,mBAAS,IAHS,mBAGvCyU,EAHuC,KAG/BC,EAH+B,OAIM1U,mBAAS,GAJf,mBAIvC2U,EAJuC,KAInBC,EAJmB,OAKM5U,mBAAS,GALf,mBAKvC6U,EALuC,KAKnBC,EALmB,KAMxCrf,EAAWF,EAAOE,SAElBsf,EAAS,WACb/c,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS,uDACTvB,KAAM,cAKZ8L,qBAAU,WAAM,4CACd,gCAAAiC,EAAA,0DACM7M,EAAOC,MADb,oBAEqB,YAAbC,GAAuC,QAAbA,EAFlC,gCAG0ByH,GAAc3H,EAAOC,OAH/C,QAGUN,EAHV,QAImB0N,OACXgL,EAAW1Y,GALnB,sBAQM0Y,EAAW,IARjB,UAUqB,WAAbnY,GAAsC,QAAbA,EAVjC,kCAWyB8P,GACjBhQ,EAAOC,MACPM,EAASC,gBAbjB,SAWUsT,EAXV,QAeiBlD,QACT6E,EAAU3B,EAAOlD,SAEjB4O,IAlBR,wBAqBM/J,EAAU,IArBhB,WAuBqB,WAAbvV,GAAsC,QAAbA,EAvBjC,kCAwByBgQ,GACjBlQ,EAAOC,MACPM,EAASC,gBA1BjB,SAwBU0e,EAxBV,QA4BiBtO,QACTuO,EAAUD,EAAOtO,SAEjB4O,IA/BR,wBAkCML,EAAU,IAlChB,6CADc,uBAAC,WAAD,wBAuCdpO,KACC,CAAC/Q,IAEJ,IAAMyf,EAAeT,GAAclL,GAC7B4L,EAAeV,GAAcE,GACnC,OACE,yBACE1b,UAAU,qDACVO,MAAO,CAAE4b,UAAWhd,OAAO4Y,cAE3B,yBAAK/X,UAAU,6BACb,yBAAKA,UAAU,+BACf,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,qDACb,yBAAKA,UAAU,8DACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,qBAAf,kBACA,yBAAKA,UAAU,gDAAf,wBAIF,yBAAKA,UAAU,UACZsQ,EAAO7I,OACN,yBAAKzH,UAAU,0BAAf,WACWsQ,EAAO7I,OADlB,KAIA,GAEF,yBAAKzH,UAAU,yEACb,yBAAKA,UAAU,YACZzE,OAAO6gB,KAAKH,GAAcxU,OAAS,EAClC,kBAAC,KAAD,CACElH,MAAO,CACLqS,QAAS,SACTlT,MAAO,OACPqT,UAAW,OACXC,WAAY,WAGbzX,OAAO6gB,KAAKH,GAAc5O,KAAI,SAACxN,EAAG2H,GAAJ,OAC7B,yBACE8C,QAAS,WACPuR,EAAsBhc,IAExBU,MAAO,CAAE6P,QAAS,gBAClB9C,IAAG,kCAA6B9F,GAChCxH,UAAS,gBACN4b,KAAwB/b,EACrB,mCACA,kCAGLoc,EAAapc,QAKpB,MAKR,yBAAKG,UAAU,UACZsQ,EAAO7I,OACN,kBAAC,IAAMoM,SAAP,KACE,kBAAC,GAAD,CACEvD,OAAQA,EAAOmC,QAAO,SAAC5S,GACrB,OACEA,EAAEwR,UAAUqB,UAAUkJ,IACE,KAAvBA,QAMT,GAEF,yBAAK5b,UAAU,wBACf,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,UACZ0b,EAAOjU,OACN,yBAAKzH,UAAU,0BAAf,WACW0b,EAAOjU,OADlB,KAIA,GAEF,yBAAKzH,UAAU,yEACb,yBAAKA,UAAU,YACZzE,OAAO6gB,KAAKF,GAAczU,OAAS,EAClC,kBAAC,KAAD,CACElH,MAAO,CACLqS,QAAS,SACTlT,MAAO,OACPqT,UAAW,OACXC,WAAY,WAGbzX,OAAO6gB,KAAKF,GAAc7O,KAAI,SAACxN,EAAG2H,GAAJ,OAC7B,yBACE8C,QAAS,WACPyR,EAAsBlc,IAExBU,MAAO,CAAE6P,QAAS,gBAClB9C,IAAG,kCAA6B9F,GAChCxH,UAAS,gBACN8b,KAAwBjc,EACrB,mCACA,kCAGLqc,EAAarc,QAKpB,OAMT6b,EAAOjU,OACN,kBAAC,IAAMoM,SAAP,KACE,kBAAC,GAAD,CACEtD,OAAQ,SACRD,OAAQoL,EACLjJ,QAAO,SAAC5S,GACP,OACEA,EAAEwR,UAAUqB,UAAUoJ,IACE,KAAvBA,KAGJzO,KAAI,SAACxN,GAAD,OACHtE,OAAOC,OAAO,GAAIqE,EAAG,CAAExB,GAAG,SAAD,OAAWwB,EAAExB,YAK9C,GAEF,yBAAK2B,UAAU,wBACd7D,EAAQsL,OACP,kBAAC,IAAMoM,SAAP,KACE,yBAAK7T,UAAU,0BAAf,YACY7D,EAAQsL,OADpB,KAGA,kBAAC,GAAD,CAAatL,QAASA,KAGxB,cC7HPkgB,OAlHf,SAAc9c,GACZ,OACE,qCACEQ,KAAM,cACN1B,GAAG,aACHoB,QAAQ,mBACRX,OAAQ,QACJS,GAEJ,wBAAMlB,GAAG,eACP,4BAAUie,cAAc,iBAAiBje,GAAG,qBAC1C,wBACEA,GAAG,gBACHqB,MAAO,OACPZ,OAAQ,QACRe,EAAG,QACHD,EAAG,QACHmJ,GAAI,OACJhJ,KAAK,UACL8I,YAAa,IACbuF,YAAa,MACbmO,cAAc,SACdzT,WAAW,yBAGf,4BAAUzK,GAAG,oBAAoBie,cAAc,kBAC7C,wBACEvT,GAAI,MACJnJ,EAAG,QACHC,EAAG,QACHf,OAAQ,QACRY,MAAO,OACPrB,GAAG,gBACH0B,KAAK,UACL8I,YAAa,IACbuF,YAAa,MACbmO,cAAc,SACdzT,WAAW,0BAIjB,qBAAGzK,GAAG,eAAesB,UAAU,8BAC7B,qBACEtB,GAAG,aACHsB,UAAU,0CACV6c,SAAS,2BAET,wBAAMne,GAAG,gBAAgB4B,EAAE,sBAC3B,qBAAG5B,GAAG,cACJ,wBACEA,GAAG,gBACH4B,EAAE,ghCACFD,UAAU,cAEZ,wBACE3B,GAAG,gBACH4B,EAAE,4vCACFD,UAAU,cAEZ,wBACE3B,GAAG,gBACH4B,EAAE,k3BACFD,UAAU,cAEZ,wBACE3B,GAAG,gBACH4B,EAAE,kzBACFD,UAAU,cAEZ,wBACE3B,GAAG,gBACH4B,EAAE,oVACFD,UAAU,cAEZ,wBACE3B,GAAG,gBACH4B,EAAE,8UACFD,UAAU,cAEZ,wBACE3B,GAAG,gBACH4B,EAAE,sSACFD,UAAU,cAEZ,wBACE3B,GAAG,gBACH4B,EAAE,8UACFD,UAAU,cAEZ,wBACE3B,GAAG,gBACH4B,EAAE,iJACFD,UAAU,cAEZ,wBACE3B,GAAG,gBACH4B,EAAE,6OACFD,UAAU,cAEZ,wBACE3B,GAAG,gBACH4B,EAAE,0LACFD,UAAU,iBAKlB,yBAAO3B,GAAG,WAAW/C,KAAK,YACvB,sDCvGHmhB,GAAY,CAChB,CAAE9d,KAAM,WAAY+d,KAAMC,KAC1B,CAAEhe,KAAM,kBAAmB+d,KAAME,KACjC,CAAEje,KAAM,qBAAsB+d,KAAMG,KACpC,CAAEle,KAAM,gBAAiB+d,KAAMI,MAC/B,CAAEne,KAAM,aAAc+d,KAAMK,MAC5B,CAAEpe,KAAM,gBAAiB+d,KAAMM,OAwElBC,GArEM,SAAC,GAKf,IAJLC,EAII,EAJJA,QACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,aAEI,IADJC,cACI,SACJ,OACE,yBAAKrd,UAAU,mEACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,wFACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,+BAAf,gBAGJ,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACEA,UAAU,iBACVmO,SAAS,OACT7D,QAAS,WACPrL,EAAMwK,SAAS,CACbnO,KAAM,4BACN0D,UAAWoe,SAMpBX,GAAUpP,KAAI,SAACxN,EAAG2H,GAAJ,OACb,yBACE8F,IAAG,yBAAoB9F,GACvBxH,UAAU,2BACVO,MAAO,CACL+c,WACEJ,IAAY1V,EACR,4BACA,0BAGR,yBAAKxH,UAAU,UACb,yBACEsK,QAAS,WACP6S,EAAW3V,GACP6V,GACFpe,EAAMwK,SAAS,CACbnO,KAAM,4BACN0D,UAAWoe,KAIjB9P,IAAG,oBAAe9F,GAClBxH,UAAS,qEACPkd,IAAY1V,EAAI,qBAAuB,KAGzC,kBAAC3H,EAAE6c,KAAH,CAAQ1c,UAAU,gBAAgBmO,SAAS,SAC3C,yBAAKnO,UAAU,YAAYH,EAAElB,eC1DvC4e,GAAc,CAClB,CAAEb,KAAMc,KAAa7e,KAAM,YAC3B,CAAE+d,KAAMe,KAAa9e,KAAM,aAC3B,CAAE+d,KAAMgB,KAAc/e,KAAM,YAC5B,CAAE+d,KAAMiB,KAAWhf,KAAM,YAuhBZqK,oBAPf,SAAc5N,EAAO6N,GACnB,OAAO,aACLlM,SAAU3B,EAAM2B,UACbkM,KAIQD,EAphBE,SAAC,GAAkB,IAAhBjM,EAAe,EAAfA,SAAe,EACHkK,mBAAS,IADN,mBAC1BgG,EAD0B,KACjBC,EADiB,OAEHjG,oBAAS,GAFN,mBAE1B0B,EAF0B,KAEjBQ,EAFiB,KAI3ByU,EAAc,CAClB,CACEC,OACG,QAAQvS,KAAKvO,EAASc,eAA2C,KAA1Bd,EAASc,gBAChD,QAAQyN,KAAKvO,EAASgB,cAAyC,KAAzBhB,EAASgB,eAC/C,QAAQuN,KAAKvO,EAASiB,eAA2C,KAA1BjB,EAASiB,gBAChD,QAAQsN,KAAKvO,EAASe,gBAA6C,KAA3Bf,EAASe,eAEpD+L,MAAO,oDAIX,OACE,yBAAK7J,UAAS,+BACZ,yBAAKA,UAAU,UACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,6BAAf,YACA,yBAAKA,UAAU,UAAf,2CAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBAAf,mDAGA,yBAAKA,UAAU,kBACb,2BACE1E,KAAK,OACL+T,YAAY,gBACZzE,MAAO7N,EAASC,eAChB+R,SAAU,SAACC,GACTA,EAAEC,UACFhQ,EAAMwK,SAAS,CACbnO,KAAM,kBACNyB,SAAU,CAAEC,eAAgBgS,EAAEG,OAAOvE,UAGzC5K,UAAU,6BAIhB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBAAf,gCAGA,yBAAKA,UAAU,kBACb,2BACE4K,MAAO7N,EAASG,eAChB6R,SAAU,SAACC,GACTA,EAAEC,UACFhQ,EAAMwK,SAAS,CACbnO,KAAM,kBACNyB,SAAU,CAAEG,eAAgB8R,EAAEG,OAAOvE,UAGzCtP,KAAK,OACL+T,YAAY,gBACZrP,UAAU,6BAIhB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBAAf,mCAGA,yBAAKA,UAAU,kBACb,2BACE1E,KAAK,OACL+T,YAAY,gBACZzE,MAAO7N,EAASI,kBAChB4R,SAAU,SAACC,GACTA,EAAEC,UACFhQ,EAAMwK,SAAS,CACbnO,KAAM,kBACNyB,SAAU,CAAEI,kBAAmB6R,EAAEG,OAAOvE,UAG5C5K,UAAU,6BAIhB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBAAf,uBACA,yBAAKA,UAAU,kBACb,2BACE1E,KAAK,OACL+T,YAAY,gBACZzE,MAAO7N,EAASE,gBAChB8R,SAAU,SAACC,GACTA,EAAEC,UACFhQ,EAAMwK,SAAS,CACbnO,KAAM,kBACNyB,SAAU,CAAEE,gBAAiB+R,EAAEG,OAAOvE,UAG1C5K,UAAU,6BAIhB,yBAAKA,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uBAAf,qCAGA,yBAAKA,UAAU,kBACb,2BACE4K,MAAO7N,EAASK,mBAChB2R,SAAU,SAACC,GACTA,EAAEC,UACFhQ,EAAMwK,SAAS,CACbnO,KAAM,kBACNyB,SAAU,CAAEK,mBAAoB4R,EAAEG,OAAOvE,UAG7CkT,IAAK,EACLxiB,KAAK,SACL0E,UAAU,+BAMpB,yBAAKA,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uBAAf,oCAGA,yBAAKA,UAAU,kBACb,2BACE4K,MAAO7N,EAASM,kBAChB0R,SAAU,SAACC,GACTA,EAAEC,UACFhQ,EAAMwK,SAAS,CACbnO,KAAM,kBACNyB,SAAU,CAAEM,kBAAmB2R,EAAEG,OAAOvE,UAG5CkT,IAAK,EACLxiB,KAAK,SACL0E,UAAU,+BAMpB,yBAAKA,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uBAAf,8CAGA,yBAAKA,UAAU,kBACb,2BACE4K,MAAO7N,EAASO,mBAChByR,SAAU,SAACC,GACTA,EAAEC,UACFhQ,EAAMwK,SAAS,CACbnO,KAAM,kBACNyB,SAAU,CAAEO,mBAAoB0R,EAAEG,OAAOvE,UAG7CkT,IAAK,EACLxiB,KAAK,SACL0E,UAAU,+BAMpB,yBAAKA,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uBAAf,4CAGA,yBAAKA,UAAU,kBACb,2BACE4K,MAAO7N,EAASQ,sBAChBwR,SAAU,SAACC,GACTA,EAAEC,UACFhQ,EAAMwK,SAAS,CACbnO,KAAM,kBACNyB,SAAU,CAAEQ,sBAAuByR,EAAEG,OAAOvE,UAGhDkT,IAAK,EACLxiB,KAAK,SACL0E,UAAU,+BAMpB,yBAAKA,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uBAAf,gDAGA,yBAAKA,UAAU,kBACb,2BACE4K,MAAO7N,EAASS,2BAChBuR,SAAU,SAACC,GACTA,EAAEC,UACFhQ,EAAMwK,SAAS,CACbnO,KAAM,kBACNyB,SAAU,CACRS,2BAA4BwR,EAAEG,OAAOvE,UAI3CkT,IAAK,EACLxiB,KAAK,SACL0E,UAAU,+BAMpB,yBAAKA,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uBAAf,qCAGA,yBAAKA,UAAU,kBACb,2BACE4K,MAAO7N,EAASU,gBAChBsR,SAAU,SAACC,GACTA,EAAEC,UACFhQ,EAAMwK,SAAS,CACbnO,KAAM,kBACNyB,SAAU,CAAEU,gBAAiBuR,EAAEG,OAAOvE,UAG1CkT,IAAK,EACLxiB,KAAK,SACL0E,UAAU,+BAMpB,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uBAAf,wDAGA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,6BAAf,QACA,yBAAKA,UAAU,kBACb,2BACE4K,MAAO7N,EAASW,2BAChBqR,SAAU,SAACC,GACTA,EAAEC,UACFhQ,EAAMwK,SAAS,CACbnO,KAAM,kBACNyB,SAAU,CACRW,2BAA4BsR,EAAEG,OAAOvE,UAI3CkT,IAAK,EACLxiB,KAAK,SACL0E,UAAU,6BAIhB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,6BAAf,SACA,yBAAKA,UAAU,kBACb,2BACE4K,MAAO7N,EAASY,4BAChBoR,SAAU,SAACC,GACTA,EAAEC,UACFhQ,EAAMwK,SAAS,CACbnO,KAAM,kBACNyB,SAAU,CACRY,4BAA6BqR,EAAEG,OAAOvE,UAI5CkT,IAAK,EACLxiB,KAAK,SACL0E,UAAU,6BAIhB,yBAAKA,UAAU,WACb,yBAAKA,UAAU,6BAAf,WACA,yBAAKA,UAAU,kBACb,2BACE4K,MAAO7N,EAASa,8BAChBmR,SAAU,SAACC,GACTA,EAAEC,UACFhQ,EAAMwK,SAAS,CACbnO,KAAM,kBACNyB,SAAU,CACRa,8BAA+BoR,EAAEG,OAAOvE,UAI9CkT,IAAK,EACLxiB,KAAK,SACL0E,UAAU,+BAMpB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBAAf,4BAGA,yBAAKA,UAAU,uBACb,yBACEgR,IAAKjU,EAASkB,iBAAiBM,cAC/BgC,MAAO,CAAEuS,SAAU,SACnBpT,MAAM,OACNwR,IAAG,yCAAoCnU,EAASkB,iBAAiBM,kBAGrE,yBAAKyB,UAAU,uBAAf,SACA,yBAAKA,UAAU,uBACb,2BACE+d,UAAQ,EACR/d,UAAU,kCACV4K,MAAO7N,EAASkB,iBAAiBrB,SAGrC,yBAAKoD,UAAU,uBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,uBAAf,YACA,yBAAKA,UAAU,kBACb,2BACE+d,UAAQ,EACR/d,UAAU,4BACV4K,MAAO8L,KAAKC,OACV,IAAIxY,KAAKpB,EAASkB,iBAAiBC,UACnC,4BAKR,yBAAK8B,UAAU,YACb,yBAAKA,UAAU,uBAAf,gBACA,yBAAKA,UAAU,kBACb,2BACE+d,UAAQ,EACR/d,UAAU,4BACV4K,MAAO8L,KAAKC,OACV,IAAIxY,KACFpB,EAASkB,iBAAiBC,SACiB,IAAzCnB,EAASa,8BAC8B,KAAvCb,EAASY,4BAC6B,MAAtCZ,EAASW,4BAEb,6BAOV,yBAAKsC,UAAU,kBACb,yBACEA,UAAU,mDACVsK,QAAO,sBAAE,4BAAAjB,EAAA,0DACHtM,EAASC,eADN,uBAELmM,GAAW,GAFN,S5BrISjH,E4ByIZnF,EAASC,e5BxI1B4D,EAAgB,yBAA0B,CAAEsB,W4BoIxB,OAGDZ,EAHC,OAML6H,GAAW,GACN7H,EAAIuI,MAMP5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAVV2D,EAAMwK,SAAS,CACbnO,KAAM,kBACNyB,SAAU,CAAEkB,iBAAkBqD,KAV7B,uBAuBLrC,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QACE,4DACFvB,KAAM,aA7BL,kC5BrIQ,IAAC4G,I4BqIT,QAmCRyG,EACC,kBAAC,GAAD,CACE0B,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASA,EACTnJ,KAAM,KAGR,aAKR,yBAAKQ,UAAU,UACb,yBAAKA,UAAU,uBAAf,oBACCud,GAAYlQ,KAAI,SAACxN,EAAG2H,GAAJ,OACf,yBACExH,UAAU,sBACVsN,IAAG,gCAA2B9F,IAE9B,yBAAKxH,UAAU,iBACb,yBAAKA,UAAU,wDACb,kBAACH,EAAE6c,KAAH,CAAQvO,SAAS,OAAOnO,UAAU,gBAGtC,yBAAKA,UAAU,OACb,2BACEoP,YAAY,EACZ9T,KAAK,OACL+T,YAAW,gBAAWxP,EAAElB,KAAb,SACXiM,MAAO7N,EAAS,GAAD,OAAI8C,EAAElB,KAAN,SACfoQ,SAAU,SAACC,GACTA,EAAEC,UACFhQ,EAAMwK,SAAS,CACbnO,KAAM,kBACNyB,SAAS,0BAAO8C,EAAElB,KAAV,QAAuBqQ,EAAEG,OAAOvE,UAG5C5K,UAAU,iCAMpB,yBAAKA,UAAU,eACb,yBACEO,MAAO,CAAEzB,OAAQ,OAAQ6Q,QAAS1C,EAAU,EAAI,GAChDjN,UAAU,iDAETiN,GAEH,yBAAKjN,UAAU,kBACb,yBAAKA,UAAU,6EAAf,UAGA,yBACEA,UAAU,kEACVsK,QAAO,sBAAE,4BAAAjB,EAAA,2DACH2U,EAAUJ,EAAYnL,QAAO,SAAC5S,GAAD,OAAQA,EAAEge,UAC/BpW,OAFL,gBAGLyF,EAAW8Q,EAAQ,GAAGnU,OAHjB,8BAKLqD,EAAW,IALN,SAMW9I,GAAuBrH,GANlC,cAOG8M,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS,4BACTvB,KAAM,cAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,oBACPC,QAAS,qCACTvB,KAAM,aAGV+I,IAAY,SAACtH,GACNA,EAAS8M,OACR9M,EAAS0K,QACXxI,EAAMwK,SAAS,CACbnO,KAAM,kBACNyB,SAAUA,EAAS,SA9BxB,6CAFX,kBCvcHkhB,GAtCe,SAAC,GAA2C,IAAzCb,EAAwC,EAAxCA,aAAcD,EAA0B,EAA1BA,WAAYD,EAAc,EAAdA,QACzD,OACE,yBACEld,UAAS,4FACNod,EAA8B,GAAf,cAElB7c,MAAO,CACL8F,SAAU,QACVoS,MAAO,EACPxK,IAAK,IAGP,yBAAKjO,UAAU,iCACb,yBACEA,UAAU,uBACVO,MAAO,CACLzB,OAAQ,OACRY,MAAO,OACP+Y,MAAO2E,EAAe,EAAI,QAC1Bc,WAAY,aACZ7X,SAAU,WACV0K,OAAQ,GACR8B,WAAY,UAGd,kBAAC,GAAD,CACEwK,QAAQ,EACRrd,UAAU,mCACVkd,QAASA,EACTE,aAAcA,EACdD,WAAYA,Q,qBCuDTgB,GAnFA,SAAC,GAST,IARLC,EAQI,EARJA,MACAC,EAOI,EAPJA,QAOI,IANJre,iBAMI,MANQ,GAMR,MALJse,sBAKI,aAJJC,oBAII,MAJW,GAIX,OAHJvX,aAGI,EAFJ+W,iBAEI,aADJS,gBACI,MADO,aACP,IACwBvX,oBAAS,GADjC,mBACGwX,EADH,KACWC,EADX,KAEEC,EAAS9M,iBAAO,MACtB,OAAOkM,EACL,yBAAK/d,UAAWue,GACd,yBACEjW,IAAKqW,EACL3e,UACE,sEACAA,GAGF,yBAAKA,UAAU,QAAQqe,GACvB,kBAAC,IAAD,CACElQ,SAAS,OACTC,YAAY,QACZpO,UAAU,gBACVO,MAAO,CACLZ,UAAU,UAAD,OAAY8e,EAAS,SAAW,OAAhC,KACTP,WAAY,sBAMpB,kBAAC,GAAD,CACEle,UAAWue,EACXjY,OAAO,EACPF,OAAQ,kBAAMsY,GAAU,IACxB5X,OAAQ,kBAAM4X,GAAU,IACxBlY,QAAS,SAAC2D,GAAD,OACP,yBACEnK,UAAU,WACVO,MAAO,CAAEqe,UAAW,QAASC,UAAW,OAAQnf,MAAOyK,IAEtDiU,EAAM/Q,KAAI,SAACxN,EAAG2H,GAAJ,OACT,yBACE8F,IAAKwR,OACL9e,UAAU,qBACVsK,QAAS,WACPkU,EAAShX,GACJ8W,GACHK,EAAOlW,QAAQsW,UAInB,6BAAMlf,EAAEmf,KAAOnf,EAAEmf,KAAOnf,UAMhC,yBACEyI,IAAKqW,EACL3e,UACE,qFACAA,GAGF,yBAAKA,UAAU,QAAQqe,GACvB,kBAAC,IAAD,CACElQ,SAAS,OACTC,YAAY,QACZpO,UAAU,gBACVO,MAAO,CACLZ,UAAU,UAAD,OAAY8e,EAAS,SAAW,OAAhC,KACTP,WAAY,uB,8BC5ElB3X,GAAQ0Y,aAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,mBAERC,UAAW,CACTD,KAAM,cAaGE,GARE,SAAC/f,GAChB,OACE,kBAAC,KAAD,CAAkBgH,MAAOA,IACvB,kBAAC,KAAgBhH,K,SC2iBRyJ,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACL9N,YAAaC,EAAMD,YACnBO,QAASN,EAAMM,SACZuN,KAIQD,EA/iBC,SAAC,GAKV,IAJLuW,EAII,EAJJA,qBACAC,EAGI,EAHJA,cACArkB,EAEI,EAFJA,YACAO,EACI,EADJA,QACI,EACwBuL,mBAAS,IADjC,mBACG5L,EADH,KACWokB,EADX,OAEoBxY,mBAAS,IAF7B,mBAEGyY,EAFH,KAESC,EAFT,OAG8B1Y,mBAAS,QAHvC,mBAGG2Y,EAHH,KAGcC,EAHd,OAI8C5Y,mBAAS,GAJvD,mBAIG6Y,EAJH,KAIsBC,EAJtB,OAKoB9Y,mBAAS,GAL7B,mBAKGqS,EALH,KAKSC,EALT,OAMgCtS,mBAAS,IANzC,mBAMG+Y,EANH,KAMeC,EANf,OAOwBhZ,mBAAS,IAPjC,mBAOGzK,EAPH,KAOW0jB,EAPX,OAQgCjZ,mBAAS,CAAEqG,IAAK,GAAI1C,MAAO,KAR3D,mBAQGuV,EARH,KAQeC,EARf,OAS0BnZ,mBAAS,IATnC,mBASG9K,EATH,KASY0Y,EATZ,OAU0C5N,mBAAS,IAVnD,mBAUGoZ,EAVH,KAUoBC,EAVpB,QAW0BrZ,oBAAS,GAXnC,qBAWGsZ,GAXH,MAWYC,GAXZ,MAYJpZ,qBAAU,WAAM,4CACd,4BAAAiC,EAAA,sEACkB9E,KADlB,QACMjD,EADN,QAEWuI,OACPgL,EACEvT,EAAIwY,UAAUzM,KAAI,SAACxN,GAAD,OAAOtE,OAAOC,OAAO,GAAIqE,EAAG,CAAE6L,UAAU,QAJhE,4CADc,uBAAC,WAAD,wBASd6B,KACC,CAACgT,KAEJnZ,qBAAU,WACR,IAAIqZ,EAAG,aAAOtkB,GACVA,EAAQsL,SACNjL,IACgB,SAAdojB,EACFa,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OACf1E,EAAY0E,EAAE4U,QAAQ1Y,aACnByP,cACAkH,SAASlW,EAAOgP,kBAEE,WAAdoU,EACTa,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OACfA,EAAEmC,OAAOwJ,cAAckH,SAASlW,EAAOgP,kBAElB,UAAdoU,IACTa,EAAMA,EAAIhO,QACR,SAAC5S,GAAD,OACEnE,EAAQmE,EAAEoK,WACVvO,EAAQmE,EAAEoK,UAAUkJ,YACjB3H,cACAkH,SAASlW,EAAOgP,oBAKvBwU,IACFS,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OAAO1E,EAAY0E,EAAE4U,QAAQiL,OAASM,MAElC,SAAnBG,EAAW7S,KAAkB6S,EAAWvV,QAC1C6V,EAAMA,EAAIhO,QACR,SAAC5S,GAAD,OAAO1E,EAAY0E,EAAE4U,QAAQ0L,EAAW7S,OAAS6S,EAAWvV,UAK9D6V,EADqB,YAAnBN,EAAW7S,KAAqB6S,EAAWvV,MACvC6V,EAAIhO,QAAO,SAAC5S,GAAD,OAAOA,EAAC,UAAgBsgB,EAAWvV,SAE9C6V,EAAIhO,QAAO,SAAC5S,GAAD,OAAQA,EAAC,WAG5BygB,EAAmBG,MAEpB,CAACjkB,EAAQwjB,EAAY7jB,EAASgkB,IAGjC,IAAIO,GAAa,CAAc,GAAZpH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GAC/CoH,GAAW,IAAML,EAAgB5Y,SACnCiZ,GAAW,GAAKA,GAAW,IAAMA,GAAW,GAAKL,EAAgB5Y,SAGnE,IAAMkZ,GAAW,uCAAG,4CAAAtX,EAAA,0FAEhB4W,EAAuB,QAATP,EAAiB,GAAKA,GAEvB,SAAXrkB,EAJc,iBAKZqQ,EAAW2U,EAAgB5N,QAAO,SAAC5S,GAAD,OAAOA,EAAE6L,aAClCjE,SACX+X,EAAc9T,EAAS,IACvB6T,KARc,0BAUI,WAAXlkB,EAVO,sBAWZqQ,EAAW2U,EAAgB5N,QAAO,SAAC5S,GAAD,OAAOA,EAAE6L,aAClCjE,OAZG,kCAaE9C,GAAsB+G,EAAS2B,KAAI,SAACxN,GAAD,OAAOA,EAAE+P,QAb9C,SAaVtO,EAbU,QAcNuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,uBACPC,QAAS,oCACTvB,KAAM,aAIZklB,IAAYD,IAjCE,4CAAH,qDAsCXK,GAAU,CAAC,QAAS,SAAU,SAAU,YAAa,YAE3D,OACE,yBAAK5gB,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,0BACb,yBACEA,UAAS,kCACNmgB,EAAW7S,KAAQ0S,EAA8B,YAAjB,gBAEnC1V,QAAS,WACP8V,EAAc,CAAE9S,IAAK,GAAI1C,MAAO,KAChCqV,EAAc,MANlB,QASQ9jB,EAAQsW,QAAO,SAAC5S,GAAD,OAAQA,EAAEghB,WAASpZ,OAT1C,KAWA,yBAAKzH,UAAU,4BAAf,KACA,yBACEsK,QAAS,kBACP8V,GAAc,SAACxR,GAAD,OACZrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEtB,IAAK,OAAQ1C,MAAO,sBAGlD5K,UAAS,kCACY,SAAnBmgB,EAAW7S,KAAuC,kBAArB6S,EAAWvV,MACpC,eACA,cATR,sBAaGrP,OAAOyb,OAAO7b,GAAasM,OACxBtL,EAAQsW,QACN,SAAC5S,GAAD,OACE1E,EAAY0E,EAAE4U,SACiB,kBAA/BtZ,EAAY0E,EAAE4U,QAAQiL,OACrB7f,EAAEghB,WACLpZ,OACF,GApBN,KAuBA,yBAAKzH,UAAU,4BAAf,KACA,yBACEsK,QAAS,kBACP8V,GAAc,SAACxR,GAAD,OACZrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEtB,IAAK,UAAW1C,OAAO,QAGrD5K,UAAS,kCACY,YAAnBmgB,EAAW7S,MAA0C,IAArB6S,EAAWvV,MACvC,eACA,cATR,YAYYzO,EAAQsW,QAAO,SAAC5S,GAAD,OAAOA,EAAEghB,WAASpZ,OAZ7C,MAeF,yBAAKzH,UAAU,0CACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,qBACbC,SAAU,SAACsC,GAAD,OAAWrB,EAAU,CAAC,UAAUqB,KAC1C1C,MAAO,CAAC,UACRC,QAAShjB,GAAkB,gBAC3B2E,UAAU,iCAIhB,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,qBACbC,SAAU,SAACsC,GAAD,OACRnB,EAAQ,CAAC,MAAO,gBAAiB,QAAQmB,KAE3C1C,MAAO,CAAC,MAAO,gBAAiB,QAChCC,QAASqB,GAAc,cACvB1f,UAAU,gCAIhB,yBACEsK,QAAS,kBAAMqW,IAAY,IAC3B3gB,UAAU,yEAFZ,WAQJ,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CACEue,aAAa,QACbC,SAAU,SAACsC,GAAD,OACRjB,EAAa,CAAC,OAAQ,SAAU,SAASiB,KAE3C9gB,UAAU,qBACVoe,MAAO,CAAC,OAAQ,SAAU,SAC1BC,QAAO,oBAAeuB,MAG1B,yBAAK5f,UAAU,uBACb,yBAAKA,UAAU,4BACb,kBAAC,KAAD,CACEmO,SAAS,OACT5N,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRsI,MAAO,UAGX,2BACEzY,UAAU,8BACV4K,MAAOpO,EACPuS,SAAU,SAACC,GACTA,EAAEC,UACFiR,EAAUlR,EAAEG,OAAOvE,aAM7B,yBAAK5K,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEwe,SAAU,SAACsC,GAAD,OACRjB,EAAa,CAAC,OAAQ,SAAU,SAASiB,KAE3C9gB,UAAU,sCACVoe,MAAO,CAAC,OAAQ,SAAU,SAC1BC,QAAO,oBAAeuB,KAExB,yBAAK5f,UAAU,yBACb,kBAAC,KAAD,CACEmO,SAAS,OACT5N,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRsI,MAAO,UAGX,2BACE7N,MAAOpO,EACPuS,SAAU,SAACC,GACTA,EAAEC,UACFiR,EAAUlR,EAAEG,OAAOvE,QAErB5K,UAAU,wBACVO,MAAO,CAAEwgB,SAAU,eAM7B,yBAAK/gB,UAAU,kBACb,kBAAC,KAAD,CACEO,MAAO,CAAEwgB,SAAU,QACnBC,aAAc,WACZjB,EACED,EAAoB,EAAI,EACpBA,EAAoB,EACpBA,IAGRmB,cAAe,WACblB,EACED,EAAoB,GAAK,EACrBA,EAAoB,EACpBA,KAIR,yBAAK9f,UAAU,oBACb,2BAAOA,UAAU,yBACf,+BACE,4BACE,wBAAIA,UAAU,eACZ,kBAAC,GAAD,CACEqK,MAAO,UACP6W,QACE/kB,EACGwW,MAAM+N,GAAW,GAAIA,GAAW,IAChCjO,QAAO,SAAC5S,GAAD,OAAOA,EAAE6L,YAAUjE,SAC7BiZ,GAAW,GAAKA,GAAW,GAE7B3R,SAAU,SAACC,GACTsR,GAAmB,SAAC1R,GAElB,IADA,IAAI6R,EAAG,aAAO7R,GAERpH,EAAIkZ,GAAW,GACnBlZ,EAAIkZ,GAAW,GACflZ,IAEAiZ,EAAIjZ,GAAGkE,SAAWsD,EAAEG,OAAO+R,QAE7B,OAAOT,SAKf,wBAAIzgB,UAAU,wCACZ,yBAAKA,UAAU,qBAAf,aACA,yBAAKA,UAAU,qBAAf,OAEF,wBAAIA,UAAU,qDACX4gB,GAAQd,IAEVc,GAAQvT,KAAI,SAACxN,EAAG2H,GAAJ,OACX,wBACE8F,IAAG,qBAAgB9F,GACnBxH,UAAU,qDAEV,6BAAMH,SAKd,+BACGwgB,EAAgB5Y,OACf4Y,EACG1N,MAAmB,GAAZ2G,EAAO,GAAqB,GAAZA,EAAO,GAAS,GACvCjM,KAAI,SAACxN,EAAG2H,GAAJ,OACH,wBACExH,UAAU,2BACVsN,IAAG,yBAAoB9F,IAEvB,wBAAIxH,UAAU,eACZ,kBAAC,GAAD,CACEqK,MAAO,UACP6W,QAASrhB,EAAE6L,SACXqD,SAAU,SAACC,GACTsR,GAAmB,SAAC1R,GAClB,IAAI6R,EAAG,aAAO7R,GAGd,OAFA6R,EAAiB,GAAZnH,EAAO,GAAS9R,GAAGkE,SACtBsD,EAAEG,OAAO+R,QACJT,SAKf,4BACGtlB,EAAY0E,EAAE4U,QACb,6BACE,yBAAKlU,MAAO,CAAEyS,WAAY,WACxB,yBAAKhT,UAAU,uBACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAY0E,EAAE4U,QAAQzY,MADT,SAMrB,yBAAKgE,UAAU,sCACb,yBAAKA,UAAU,mBACZ7E,EAAY0E,EAAE4U,QAAQ1Y,cAEzB,yBAAKiE,UAAU,QACZ7E,EAAY0E,EAAE4U,QAAQvY,OAEzB,yBAAK8D,UAAU,UACb,yBACEA,UAAU,8BACVsK,QAAS,WACPkV,EAAc3f,GACd0f,MAJJ,QASA,yBAAKvf,UAAU,QAAf,KACA,yBACEA,UAAU,6BACVsK,QAAO,sBAAE,4BAAAjB,EAAA,sEACS1E,GACd,CAAC9E,EAAE+P,MAFE,QACHtO,EADG,QAICuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QACE,kCACFvB,KAAM,aAIZklB,IAAYD,IAxBL,4CAFX,cAoCR,IAGJ,wBACEvgB,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGN,yBAAKvf,MAAO,CAAEuS,SAAU,UACrBpX,EAAQmE,EAAEoK,UACPvO,EAAQmE,EAAEoK,UAAUkJ,YACpB,KAGR,wBACEnT,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGN,6BACE,yBACEvf,MAAO,CAAEwgB,SAAU,SACnB/gB,UAAU,wDACVsK,QAAS,SAAC0E,GACRmC,EAAQtB,KAAR,iBAAuBhQ,EAAEoK,SAAzB,YAAqCpK,EAAE+P,QAGxC/P,EAAEmC,UAIT,wBACEhC,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGQ,YAAbjgB,EAAElE,OACD,yBAAK4E,MAAO,CAAEoL,UAAW,SACvB,kBAAC,EAAD,CAAQnM,KAAM,MAGhB,yBAAKe,MAAO,CAAEqL,aAAc,SAC1B,kBAAC,IAAD,CACEnL,MACe,mBAAbZ,EAAElE,OACE,OACa,cAAbkE,EAAElE,OACF,QACa,YAAbkE,EAAElE,OACF,sBACA,OAEN+E,IAAI,WACJlB,KAAM,OAKd,wBACEQ,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGN,yBAAKvf,MAAO,CAAEyS,WAAY,WACvB0D,KAAKC,OACJ,IAAIxY,KAAK0B,EAAE6W,MACX,0BAIN,wBACE1W,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGLjgB,EAAEshB,SACD,yBAAKnhB,UAAU,eAAf,UAEA,yBAAKA,UAAU,gBAAf,WAMV,4BACE,wBAAIohB,QAAS,EAAGphB,UAAU,qBAA1B,yBAUd,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,YACb,kBAAC,GAAD,CACEsT,MAAOpI,KAAKmM,KAAKgJ,EAAgB5Y,OAAS,GAC1CgB,QAAS6Q,EACT/F,WAAYgG,WC6EXvQ,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACL9N,YAAaC,EAAMD,YACnBO,QAASN,EAAMM,SACZuN,KAIQD,EA7mBE,SAAC,GAKX,IAJLqY,EAII,EAJJA,sBACAC,EAGI,EAHJA,eACAnmB,EAEI,EAFJA,YACAO,EACI,EADJA,QACI,EACwBuL,mBAAS,IADjC,mBACG5L,EADH,KACWokB,EADX,OAEoBxY,mBAAS,IAF7B,mBAEGyY,EAFH,KAESC,EAFT,OAG8B1Y,mBAAS,QAHvC,mBAGG2Y,EAHH,KAGcC,EAHd,OAI8C5Y,mBAAS,GAJvD,mBAIG6Y,EAJH,KAIsBC,EAJtB,OAKoB9Y,mBAAS,GAL7B,mBAKGqS,EALH,KAKSC,EALT,OAMgCtS,mBAAS,IANzC,mBAMG+Y,EANH,KAMeC,EANf,OAOgChZ,mBAAS,CAAEqG,IAAK,GAAI1C,MAAO,KAP3D,mBAOGuV,EAPH,KAOeC,EAPf,OAQwBnZ,mBAAS,IARjC,mBAQGzK,EARH,KAQW0jB,EARX,OAU4BjZ,mBAAS,IAVrC,mBAUG2N,EAVH,KAUaZ,EAVb,OAWkC/M,mBAAS,IAX3C,mBAWGiP,EAXH,KAWgBqL,EAXhB,OAa4Cta,mBAAS,IAbrD,mBAaGua,GAbH,KAaqBC,GAbrB,QAc0Bxa,oBAAS,GAdnC,qBAcGsZ,GAdH,MAcYC,GAdZ,MAgBJpZ,qBAAU,WAAM,4CACd,8BAAAiC,EAAA,sEACkB7E,KADlB,QACMlD,EADN,QAEWuI,QACPmK,EACE1S,EAAIwY,UAAUzM,KAAI,SAACxN,GAAD,OAAOtE,OAAOC,OAAO,GAAIqE,EAAG,CAAE6L,UAAU,QAExDgW,EAAM,GACVpgB,EAAIqI,SAAQ,SAAC9J,GACX6hB,EAAI7hB,EAAE+P,KAAO/P,KAEf0hB,EAAeG,IAVnB,4CADc,uBAAC,WAAD,wBAcdnU,KACC,CAACgT,KAEJnZ,qBAAU,WACR,IAAIqZ,EAAG,aAAO7L,GACVA,EAASnN,SACPjL,IACgB,SAAdojB,EACFa,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OACf1E,EAAY0E,EAAE4U,QAAQ1Y,aACnByP,cACAkH,SAASlW,EAAOgP,kBAEE,YAAdoU,IACTa,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OACfA,EAAE6C,QAAQ8I,cAAckH,SAASlW,EAAOgP,oBAK1CwU,IACFS,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OAAO1E,EAAY0E,EAAE4U,QAAQiL,OAASM,MAGlC,SAAnBG,EAAW7S,KAAkB6S,EAAWvV,QAC1C6V,EAAMA,EAAIhO,QACR,SAAC5S,GAAD,OAAO1E,EAAY0E,EAAE4U,QAAQ0L,EAAW7S,OAAS6S,EAAWvV,UAK9D6V,EADqB,YAAnBN,EAAW7S,KAAqB6S,EAAWvV,MACvC6V,EAAIhO,QAAO,SAAC5S,GAAD,OAAOA,EAAC,UAAgBsgB,EAAWvV,SAE9C6V,EAAIhO,QAAO,SAAC5S,GAAD,OAAQA,EAAC,WAG5B4hB,GAAoBhB,MAErB,CAACjkB,EAAQwjB,EAAYpL,EAAUuL,IAGlC,IAAIO,GAAa,CAAc,GAAZpH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GAC/CoH,GAAW,IAAMc,GAAiB/Z,SACpCiZ,GAAW,GAAKA,GAAW,IAAMA,GAAW,GAAKc,GAAiB/Z,SAGpE,IAAMkZ,GAAW,uCAAG,8CAAAtX,EAAA,0FAEhB4W,EAAuB,QAATP,EAAiB,GAAKA,KAElChU,EAAW8V,GAAiB/O,QAAO,SAAC5S,GAAD,OAAOA,EAAE6L,aACnCjE,OALK,oBAMD,SAAXpM,EANY,gBAOdimB,EAAe5V,EAAS,IACxB2V,IARc,8BAUVzc,EAAM8G,EAAS2B,KAAI,SAACxN,GAAD,OAAOA,EAAE+P,OAC5B+R,EAXU,aAWG/c,GAEA,SAAXgd,EAAYC,GAChBF,EAASA,EAAO5V,OAAO8V,GACvBA,EAAOlY,SAAQ,SAAC9J,GAAD,OAAO+hB,EAAS1L,EAAYrW,GAAG+U,aAGhDgN,CAAShd,GAlBK,UAoBEC,GAAuB8c,GApBzB,SAoBVrgB,EApBU,QAqBNuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,cAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,wBACPC,QAAS,qCACTvB,KAAM,aAGVklB,IAAYD,KAvCA,4CAAH,qDA6CjB,OACE,yBAAKvgB,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,0BACb,yBACEA,UAAS,kCACNmgB,EAAW7S,KAAQ0S,EAA8B,YAAjB,gBAEnC1V,QAAS,WACP8V,EAAc,CAAE9S,IAAK,GAAI1C,MAAO,KAChCqV,EAAc,MANlB,QASQrL,EAASnC,QAAO,SAAC5S,GAAD,OAAQA,EAAEghB,WAASpZ,OAT3C,KAWA,yBAAKzH,UAAU,4BAAf,KACA,yBACEsK,QAAS,kBACP8V,GAAc,SAACxR,GAAD,OACZrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEtB,IAAK,OAAQ1C,MAAO,sBAGlD5K,UAAS,kCACY,SAAnBmgB,EAAW7S,KAAuC,kBAArB6S,EAAWvV,MACpC,eACA,cATR,sBAaGrP,OAAOyb,OAAO7b,GAAasM,OACxBmN,EAASnC,QACP,SAAC5S,GAAD,MACiC,kBAA/B1E,EAAY0E,EAAE4U,QAAQiL,OAA6B7f,EAAEghB,WACvDpZ,OACF,GAlBN,KAqBA,yBAAKzH,UAAU,4BAAf,KACA,yBACEsK,QAAS,kBACP8V,GAAc,SAACxR,GAAD,OACZrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEtB,IAAK,UAAW1C,OAAO,QAGrD5K,UAAS,kCACY,YAAnBmgB,EAAW7S,MAA0C,IAArB6S,EAAWvV,MACvC,eACA,cATR,YAYYgK,EAASnC,QAAO,SAAC5S,GAAD,OAAOA,EAAEghB,WAASpZ,OAZ9C,MAeF,yBAAKzH,UAAU,0CACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,qBACbC,SAAU,SAACsC,GAAD,OAAWrB,EAAU,CAAC,UAAUqB,KAC1C1C,MAAO,CAAC,UACRC,QAAShjB,GAAkB,gBAC3B2E,UAAU,gCAIhB,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,qBACbC,SAAU,SAACsC,GAAD,OACRnB,EAAQ,CAAC,MAAO,gBAAiB,QAAQmB,KAE3C1C,MAAO,CAAC,MAAO,gBAAiB,QAChCC,QAASqB,GAAc,cACvB1f,UAAU,gCAIhB,yBACEsK,QAAS,kBAAMqW,IAAY,IAC3B3gB,UAAU,yEAFZ,WAQJ,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CACEue,aAAa,QACbC,SAAU,SAACsC,GAAD,OAAWjB,EAAa,CAAC,OAAQ,WAAWiB,KACtD9gB,UAAU,qBACVoe,MAAO,CAAC,OAAQ,WAChBC,QAAO,oBAAeuB,MAG1B,yBAAK5f,UAAU,uBACb,yBAAKA,UAAU,4BACb,kBAAC,KAAD,CACEmO,SAAS,OACT5N,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRsI,MAAO,UAGX,2BACEzY,UAAU,8BACV4K,MAAOpO,EACPuS,SAAU,SAACC,GACTA,EAAEC,UACFiR,EAAUlR,EAAEG,OAAOvE,aAM7B,yBAAK5K,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEwe,SAAU,SAACsC,GAAD,OAAWjB,EAAa,CAAC,OAAQ,WAAWiB,KACtD9gB,UAAU,sCACVoe,MAAO,CAAC,OAAQ,WAChBC,QAAO,oBAAeuB,KAExB,yBAAK5f,UAAU,yBACb,kBAAC,KAAD,CACEmO,SAAS,OACT5N,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRsI,MAAO,UAGX,2BACE7N,MAAOpO,EACPuS,SAAU,SAACC,GACTA,EAAEC,UACFiR,EAAUlR,EAAEG,OAAOvE,QAErB5K,UAAU,wBACVO,MAAO,CAAEwgB,SAAU,eAM7B,yBAAK/gB,UAAU,kBACb,kBAAC,KAAD,CACEO,MAAO,CAAEwgB,SAAU,QACnBC,aAAc,WACZjB,EACED,EAAoB,EAAI,EACpBA,EAAoB,EACpBA,IAGRmB,cAAe,WACblB,EACED,EAAoB,GAAK,EACrBA,EAAoB,EACpBA,KAIR,yBAAK9f,UAAU,oBACb,2BAAOA,UAAU,yBACf,+BACE,4BACE,wBAAIA,UAAU,eACZ,kBAAC,GAAD,CACEqK,MAAO,UACP6W,QACEM,GACG7O,MAAM+N,GAAW,GAAIA,GAAW,IAChCjO,QAAO,SAAC5S,GAAD,OAAOA,EAAE6L,YAAUjE,SAC7BiZ,GAAW,GAAKA,GAAW,GAE7B3R,SAAU,SAACC,GACTyS,IAAoB,SAAC7S,GAEnB,IADA,IAAI6R,EAAG,aAAO7R,GAERpH,EAAIkZ,GAAW,GACnBlZ,EAAIkZ,GAAW,GACflZ,IAEAiZ,EAAIjZ,GAAGkE,SAAWsD,EAAEG,OAAO+R,QAE7B,OAAOT,SAKf,wBAAIzgB,UAAU,wCACZ,yBAAKA,UAAU,qBAAf,aACA,yBAAKA,UAAU,qBAAf,OAEF,wBAAIA,UAAU,qDAEV,CAAC,UAAW,iBAAkB,YAAa,YACzC8f,IAIN,wBAAI9f,UAAU,qDACZ,yCAEF,wBAAIA,UAAU,qDACZ,gDAEF,wBAAIA,UAAU,qDACZ,2CAEF,wBAAIA,UAAU,qDACZ,4CAIN,+BACGwhB,GAAiB/Z,OAChB+Z,GACG7O,MAAmB,GAAZ2G,EAAO,GAAqB,GAAZA,EAAO,GAAS,GACvCjM,KAAI,SAACxN,EAAG2H,GAAJ,OACH,wBACExH,UAAU,2BACVsN,IAAG,yBAAoB9F,IAEvB,wBAAIxH,UAAU,eACZ,kBAAC,GAAD,CACEqK,MAAO,UACP6W,QAASrhB,EAAE6L,SACXqD,SAAU,SAACC,GACTyS,IAAoB,SAAC7S,GACnB,IAAI6R,EAAG,aAAO7R,GAGd,OAFA6R,EAAiB,GAAZnH,EAAO,GAAS9R,GAAGkE,SACtBsD,EAAEG,OAAO+R,QACJT,SAKf,4BACE,6BACGtlB,EAAY0E,EAAE4U,QACb,yBAAKlU,MAAO,CAAEyS,WAAY,WACxB,yBAAKhT,UAAU,uBACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAY0E,EAAE4U,QAAQzY,MADT,SAMrB,yBAAKgE,UAAU,sCACb,yBAAKA,UAAU,gBACZ7E,EAAY0E,EAAE4U,QAAQ1Y,cAEzB,yBAAKiE,UAAU,QACZ7E,EAAY0E,EAAE4U,QAAQvY,OAEzB,yBAAK8D,UAAU,UACb,yBACEA,UAAU,8BACVsK,QAAS,WACPgX,EAAezhB,GACfwhB,MAJJ,QASA,yBAAKrhB,UAAU,QAAf,KACA,yBACEA,UAAU,6BACVsK,QAAO,sBAAE,8BAAAjB,EAAA,6DACHsY,EAAS,CAAC9hB,EAAE+P,KAEC,SAAXgS,EAAYC,GAChBF,EAASA,EAAO5V,OAAO8V,GACvBA,EAAOlY,SAAQ,SAACtL,GAAD,OACbujB,EAAS1L,EAAY7X,GAAIuW,aAI7BgN,CAASD,GAVF,SAYS9c,GACd8c,GAbK,QAYHrgB,EAZG,QAeCuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,sBACPC,QACE,mCACFvB,KAAM,aAIZklB,IAAYD,IAnCL,4CAFX,aA8CN,KAIN,wBACEvgB,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGN,6BACE,yBACEvf,MAAO,CAAEwgB,SAAU,SACnB/gB,UAAU,wDACVsK,QAAS,SAAC0E,GACRmC,EAAQtB,KAAR,iBACYhQ,EAAEoK,SADd,YAC0BpK,EAAE0U,UAD5B,YACyC1U,EAAE+P,QAI5C/P,EAAE6C,WAIT,wBACE1C,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGN,sCACS,IACNpkB,EAAQmE,EAAEoK,UACPvO,EAAQmE,EAAEoK,UAAUkJ,YACpB,IAEN,yBAAKnT,UAAU,UACb,yBACEsK,QAAO,sBAAE,sBAAAjB,EAAA,sDACP8H,EAAQtB,KAAR,iBACYhQ,EAAEoK,SADd,YAC0BpK,EAAE0U,YAFrB,2CAKTvU,UAAU,8BACVO,MAAO,CAAEyS,WAAY,WAPvB,iBAaJ,wBACEhT,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGN,yBAAKvf,MAAO,CAAEyS,WAAY,WACvB0D,KAAKC,OACJ,IAAIxY,KAAK0B,EAAE6W,MACX,0BAIN,wBACE1W,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGLjgB,EAAEshB,SACD,yBAAKnhB,UAAU,eAAf,UAEA,yBAAKA,UAAU,gBAAf,WAMV,4BACE,wBAAIohB,QAAS,EAAGphB,UAAU,oBAA1B,yBAiEd,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,YACb,kBAAC,GAAD,CACEsT,MAAOpI,KAAKmM,KAAKmK,GAAiB/Z,OAAS,GAC3CgB,QAAS6Q,EACT/F,WAAYgG,WCtiBXuI,GA9DY,SAAC,GAMrB,IALLtC,EAKI,EALJA,cACAD,EAII,EAJJA,qBACA8B,EAGI,EAHJA,sBACAC,EAEI,EAFJA,eAEI,KADJS,iBAEsB9a,mBAAS,IAD3B,mBACG+a,EADH,KACQC,EADR,KAGJ,OACE,yBAAKjiB,UAAS,+BACZ,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,qCAAf,sBAGA,yBAAKA,UAAU,kBAAf,6CAIF,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,iCACb,yBACEO,MAAO,CAAEb,MAAO,SAChB4K,QAAS,kBAAM2X,EAAO,IACtBjiB,UAAS,oCACC,IAARgiB,EAAY,sBAAwB,KAJxC,WASA,yBACEzhB,MAAO,CAAEb,MAAO,SAChB4K,QAAS,kBAAM2X,EAAO,IACtBjiB,UAAS,qCACC,IAARgiB,EAAY,sBAAwB,KAJxC,gBAaR,yBAAKhiB,UAAU,UACJ,IAARgiB,EACC,kBAAC,GAAD,CACEzC,qBAAsBA,EACtBC,cAAeA,IAGjB,kBAAC,GAAD,CACE8B,eAAgBA,EAChBD,sBAAuBA,OC+JpBrY,oBATf,SAAc5N,EAAO6N,GACnB,OAAO,aACL9N,YAAaC,EAAMD,YACnB+mB,MAAO9mB,EAAMQ,KACbF,QAASN,EAAMM,SACZuN,KAIQD,EAjNI,SAAC,GAMb,IALLmZ,EAKI,EALJA,cACAhnB,EAII,EAJJA,YACAinB,EAGI,EAHJA,QACA1mB,EAEI,EAFJA,QACAwmB,EACI,EADJA,MACI,EACwBjb,mBAAS,IADjC,mBACGjF,EADH,KACW2T,EADX,OAEoB1O,mBAAS,CAAElL,aAAc,GAAIG,MAAO,KAFxD,mBAEGN,EAFH,KAESymB,EAFT,OAG0Bpb,oBAAS,GAHnC,mBAGG0B,EAHH,KAGYQ,EAHZ,KAeJ,OAXA/B,qBAAU,WACJ+a,IACFxM,EAAUwM,GACVE,EAAQlnB,EAAYgnB,EAAc1N,YAEnC,CAAC0N,IAEJ/a,qBAAU,WACRjI,OAAO8b,SAAS,EAAG,KAClB,IAGD,yBAAKjb,UAAU,4BAA4BO,MAAO,CAAEuS,SAAU,UAC5D,yBAAK9S,UAAU,kCACb,yBAAKA,UAAU,qCAAf,sBAGA,yBAAKA,UAAU,kBAAf,8CAIF,yBAAKA,UAAU,UACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,UACb,2BACE1E,KAAK,OACL0E,UAAU,yBACV4K,MAAOhP,EAAKG,aACZgT,SAAU,SAACC,GACTA,EAAEC,UACFoT,GAAQ,SAACzT,GAAD,OACNrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE7S,aAAciT,EAAEG,OAAOvE,gBAM3D,yBAAK5K,UAAU,uBACb,yBAAKA,UAAU,eAAf,WACA,yBAAKA,UAAU,UACb,8BACE4K,MAAO5I,EAAOA,OAASA,EAAOA,OAAS,GACvC+M,SAAU,SAACC,GACTA,EAAEC,UACF0G,GAAU,SAAC/G,GAAD,OACRrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE5M,OAAQgN,EAAEG,OAAOvE,YAG/C5K,UAAU,uBACVO,MAAO,CAAEzB,OAAQ,cAKzB,yBAAKkB,UAAU,eACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,WAAf,WAEF,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,mBACbve,UAAU,mBACVqe,QACErc,EAAOrG,OACH0E,EAAQmR,MAAK,SAAC3R,GAAD,OAAOA,EAAElB,OAASqD,EAAOrG,UAAQ2E,QAC9C,SAENke,SAAU,SAACsC,GACTnL,GAAU,SAAC/G,GAAD,OACRrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEjT,OAAQ0E,EAAQygB,GAAOniB,WAGrDyf,MAAO/d,EAAQgN,KAAI,SAACxN,GAAD,OAAOA,EAAES,eAIlC,yBAAKN,UAAU,eACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,WAAf,kBAEF,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,mBACbve,UAAU,mBACVqe,QAASrc,EAAOmf,SAAW,WAAa,eACxC3C,SAAU,SAACsC,GACTnL,GAAU,SAAC/G,GAAD,OACRrT,OAAOC,OAAO,GAAIoT,EAAM,CACtBuS,SAAoB,IAAVL,QAIhB1C,MAAO,CAAC,WAAY,oBAI1B,yBAAKpe,UAAU,eACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,WAAf,UAEF,yBAAKA,UAAU,kBACb,2BACE4K,MAAOlP,EAAQymB,EAAclY,UAAUkJ,YACvC4K,UAAQ,EACR/d,UAAU,iDAIhB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,kBACb,yBACEA,UAAU,4EACVsK,QAAS,kBAAM8X,MAFjB,UAMA,yBACEpiB,UAAU,kEACVsK,QAAO,sBAAE,8BAAAjB,EAAA,sEAELF,GAAW,GAFN,SAGW1E,GAAmBzC,EAAQpG,GAHtC,OAGD0F,EAHC,OAIL6H,GAAW,GACP7H,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,cAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,kCACTvB,KAAM,aAGV2D,EAAMwK,SAAS,CACbnO,KAAM,iBACNK,OAAO,gBACJqG,EAAOiI,SAAW3I,EAAI3F,UAGvBumB,EAAMtS,MAAQ5N,EAAOyS,UACnB6N,EAD2B,eACPJ,EAAMxmB,UACjBsG,EAAOiI,UAAY,CAC9BA,SAAUjI,EAAOiI,SACjB+F,UAAWhO,EAAOrG,QAGpBsD,EAAMwK,SAAS,CACbnO,KAAM,cACNiB,aAAc,CACZb,QAAS4mB,MAKfF,KA5CG,0GAiDT,kBAAC,GAAD,CACE/X,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASA,EACTnJ,KAAM,KA/DV,cCiBKwJ,oBAPf,SAAc5N,EAAO6N,GACnB,OAAO,aACL9N,YAAaC,EAAMD,aAChB8N,KAIQD,EAjJK,SAAC,GAA8C,IAA5CuZ,EAA2C,EAA3CA,eAAgBpnB,EAA2B,EAA3BA,YAAainB,EAAc,EAAdA,QAAc,EAClCnb,mBAAS,IADyB,mBACzDvE,EADyD,KAChD2W,EADgD,OAExCpS,mBAAS,CAAElL,aAAc,GAAIG,MAAO,KAFI,mBAEzDN,EAFyD,KAEnDymB,EAFmD,OAGlCpb,oBAAS,GAHyB,mBAGzD0B,EAHyD,KAGhDQ,EAHgD,KAgBhE,OAXA/B,qBAAU,WACJmb,IACFlJ,EAAWkJ,GACXF,EAAQlnB,EAAYonB,EAAe9N,YAEpC,CAAC8N,IAEJnb,qBAAU,WACRjI,OAAO8b,SAAS,EAAG,KAClB,IAGD,yBAAKjb,UAAU,4BAA4BO,MAAO,CAAEuS,SAAU,UAC5D,yBAAK9S,UAAU,kCACb,yBAAKA,UAAU,qCAAf,sBAGA,yBAAKA,UAAU,kBAAf,8CAIF,yBAAKA,UAAU,UACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,UACb,2BACE1E,KAAK,OACL0E,UAAU,yBACV4K,MAAOhP,EAAKG,aACZgT,SAAU,SAACC,GACTA,EAAEC,UACFoT,GAAQ,SAACzT,GAAD,OACNrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE7S,aAAciT,EAAEG,OAAOvE,gBAM3D,yBAAK5K,UAAU,uBACb,yBAAKA,UAAU,eAAf,WACA,yBAAKA,UAAU,UACb,8BACE4K,MAAOlI,EAAQA,QACfqM,SAAU,SAACC,GACTA,EAAEC,UACFoK,GAAW,SAACzK,GAAD,OACTrT,OAAOC,OAAO,GAAIoT,EAAM,CAAElM,QAASsM,EAAEG,OAAOvE,YAGhD5K,UAAU,uBACVO,MAAO,CAAEzB,OAAQ,cAKzB,yBAAKkB,UAAU,eACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,WAAf,kBAEF,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,mBACbve,UAAU,mBACVqe,QAAS3b,EAAQye,SAAW,WAAa,eACzC3C,SAAU,SAACsC,GACTzH,GAAW,SAACzK,GAAD,OACTrT,OAAOC,OAAO,GAAIoT,EAAM,CACtBuS,SAAoB,IAAVL,QAIhB1C,MAAO,CAAC,WAAY,oBAI1B,yBAAKpe,UAAU,eACb,yBAAKA,UAAU,kBACb,yBACEA,UAAU,4EACVsK,QAAS,kBAAM8X,MAFjB,UAMA,yBACEpiB,UAAU,kEACVsK,QAAO,sBAAE,4BAAAjB,EAAA,6DACPF,GAAW,GADJ,SAESzE,GAAoBhC,EAAS9G,GAFtC,OAEH0F,EAFG,OAGP6H,GAAW,GACP7H,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,cAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,kCACTvB,KAAM,aAGV8mB,KAtBK,4CA0BT,kBAAC,GAAD,CACE/X,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASA,EACTnJ,KAAM,KAxCV,cC0gBKwJ,oBAPf,SAAc5N,EAAO6N,GACnB,OAAO,aACL9N,YAAaC,EAAMD,aAChB8N,KAIQD,EA3lBO,SAAC,GAKhB,IAJLwZ,EAII,EAJJA,oBACAC,EAGI,EAHJA,2BACAC,EAEI,EAFJA,4BACAvnB,EACI,EADJA,YACI,EACwB8L,mBAAS,IADjC,mBACG5L,EADH,KACWokB,EADX,OAEoBxY,mBAAS,IAF7B,mBAEG3L,EAFH,KAESqnB,EAFT,OAG8B1b,mBAAS,QAHvC,mBAGG2Y,EAHH,KAGcC,EAHd,OAI8C5Y,mBAAS,GAJvD,mBAIG6Y,EAJH,KAIsBC,EAJtB,OAKoB9Y,mBAAS,GAL7B,mBAKGqS,EALH,KAKSC,EALT,OAMgCtS,mBAAS,IANzC,mBAMG2b,EANH,KAMeC,EANf,OAOwB5b,mBAAS,IAPjC,mBAOGzK,EAPH,KAOW0jB,EAPX,OASgCjZ,mBAAS,CAAEqG,IAAK,GAAI1C,MAAO,KAT3D,mBASGuV,EATH,KASeC,EATf,OAW0BnZ,oBAAS,GAXnC,mBAWGsZ,EAXH,KAWYC,EAXZ,OAYsCvZ,mBAAS,IAZ/C,mBAYG6b,EAZH,KAYkBC,EAZlB,OAasD9b,mBAAS,IAb/D,mBAaG+b,EAbH,KAa0BC,GAb1B,KAcJ7b,qBAAU,WAAM,4CACd,4BAAAiC,EAAA,sEACkBrE,KADlB,QACM1D,EADN,QAEWuI,OACPkZ,EACEzhB,EAAI+L,KAAI,SAACxN,GAAD,OAAOtE,OAAOC,OAAO,GAAIqE,EAAG,CAAE6L,UAAU,QAJtD,4CADc,uBAAC,WAAD,wBASd6B,KACC,CAACgT,IAEJnZ,qBAAU,WACR,IAAIqZ,EAAG,aAAOqC,GACVA,EAAcrb,SACZjL,IACgB,SAAdojB,EACFa,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OACf1E,EAAY0E,EAAE4U,QAAQ1Y,aACnByP,cACAkH,SAASlW,EAAOgP,kBAEE,gBAAdoU,IACTa,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OACfA,EAAEqjB,YAAY1X,cAAckH,SAASlW,EAAOgP,oBAK9CoX,IACFnC,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OAAOA,EAAEvE,OAASsnB,MAGjCzC,EAAW7S,MACbmT,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OAAOA,EAAEsgB,EAAW7S,OAAS6S,EAAWvV,UAG3DqY,GAAyBxC,MAE1B,CAACjkB,EAAQomB,EAAYE,EAAe3C,IAGvC,IAAIO,GAAa,CAAc,GAAZpH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GAC/CoH,GAAW,IAAMsC,EAAsBvb,SACzCiZ,GAAW,GACTA,GAAW,IAAMA,GAAW,GAAKsC,EAAsBvb,SAG3D,IACM0b,GAAU,CAAC,UAEXxC,GAAW,uCAAG,4CAAAtX,EAAA,0FAEhBwZ,EAAcvnB,GAED,SAAXD,EAJc,iBAKZqQ,EAAWsX,EAAsBvQ,QAAO,SAAC5S,GAAD,OAAOA,EAAE6L,aACxCjE,SACX+a,EAAoB9W,EAAS,IAC7B+W,KARc,0BAUI,WAAXpnB,EAVO,sBAWZqQ,EAAWsX,EAAsBvQ,QAAO,SAAC5S,GAAD,OAAOA,EAAE6L,aACxCjE,OAZG,kCAaEtC,GAA4BuG,EAAS2B,KAAI,SAACxN,GAAD,OAAOA,EAAE+P,QAbpD,SAaVtO,EAbU,QAcNuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,6BACPC,QAAS,0CACTvB,KAAM,aAIZklB,GAAYD,GAjCE,4CAAH,qDAsCX6C,GAAQ,CAAC,cAAe,QAAS,WAEvC,OACE,yBAAKpjB,UAAU,+BACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCAAf,iBAGA,yBAAKA,UAAU,kBAAf,kCAEF,yBACEA,UAAU,qDACVsK,QAAS,kBAAMoY,MAFjB,aAQJ,yBAAK1iB,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,0BACb,yBACEsK,QAAS,WACP8V,EAAc,CAAE9S,IAAK,GAAI1C,MAAO,KAChC+X,EAAQ,IACRE,EAAc,KAEhB7iB,UAAS,kCACN4iB,GAAezC,EAAW7S,IAAuB,YAAjB,iBAPrC,QAUQwV,EAAcrb,OAVtB,KAjEK,CAAC,YAAa,UAAW,WA6EpB4F,KAAI,SAACxN,EAAG2H,GAAJ,OACZ,kBAAC,IAAMqM,SAAP,CAAgBvG,IAAG,iBAAY9F,IAC7B,yBAAKxH,UAAU,4BAAf,KACA,yBACEsK,QAAS,kBACP8V,GAAc,SAACxR,GAAD,OACZrT,OAAOC,OAAO,GAAIoT,EAAM,CACtBtB,IAAK,SACL1C,MAAO/K,QAIbG,UAAS,kCACY,WAAnBmgB,EAAW7S,KAAoB6S,EAAWvV,QAAU/K,EAChD,eACA,cAGLA,EAfH,KAeQijB,EAAcrQ,QAAO,SAAC7S,GAAD,OAAOA,EAAEyjB,SAAWxjB,KAAG4H,OAfpD,UAoBN,yBAAKzH,UAAU,0CACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,qBACbC,SAAU,SAACsC,GAAD,OAAWrB,EAAU0D,GAAQrC,KACvC1C,MAAO+E,GACP9E,QAAShjB,GAAkB,gBAC3B2E,UAAU,iCAIhB,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,qBACbC,SAAU,SAACsC,GAAD,OAAW6B,EAAQS,GAAMtC,KACnC1C,MAAOgF,GACP/E,QAAS/iB,GAAc,cACvB0E,UAAU,iCAIhB,yBACEsK,QAAS,kBAAMqW,IAAY,IAC3B3gB,UAAU,yEAFZ,WAQJ,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CACEue,aAAa,QACbC,SAAU,SAACsC,GAAD,OACRjB,EAAa,CAAC,OAAQ,eAAeiB,KAEvC9gB,UAAU,qBACVoe,MAAO,CAAC,OAAQ,eAChBC,QAAO,oBAAeuB,MAG1B,yBAAK5f,UAAU,uBACb,yBAAKA,UAAU,4BACb,kBAAC,KAAD,CACEmO,SAAS,OACT5N,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRsI,MAAO,UAGX,2BACEzY,UAAU,8BACV4K,MAAOpO,EACPuS,SAAU,SAACC,GACTA,EAAEC,UACFiR,EAAUlR,EAAEG,OAAOvE,aAM7B,yBAAK5K,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEwe,SAAU,SAACsC,GAAD,OACRjB,EAAa,CAAC,OAAQ,eAAeiB,KAEvC9gB,UAAU,sCACVoe,MAAO,CAAC,OAAQ,eAChBC,QAAO,oBAAeuB,KAExB,yBAAK5f,UAAU,yBACb,kBAAC,KAAD,CACEmO,SAAS,OACT5N,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRsI,MAAO,UAGX,2BACE7N,MAAOpO,EACPuS,SAAU,SAACC,GACTA,EAAEC,UACFiR,EAAUlR,EAAEG,OAAOvE,QAErB5K,UAAU,wBACVO,MAAO,CAAEwgB,SAAU,eAM7B,yBAAK/gB,UAAU,kBACb,kBAAC,KAAD,CACEO,MAAO,CAAEwgB,SAAU,QACnBC,aAAc,WACZjB,EACED,EAAoB,EAAI,EACpBA,EAAoB,EACpBA,IAGRmB,cAAe,WACblB,EACED,EAAoB,GAAK,EACrBA,EAAoB,EACpBA,KAIR,yBAAK9f,UAAU,oBACb,2BAAOA,UAAU,yBACf,+BACE,4BACE,wBAAIA,UAAU,eACZ,kBAAC,GAAD,CACEqK,MAAO,UACP6W,QACE8B,EACGrQ,MAAM+N,GAAW,GAAIA,GAAW,IAChCjO,QAAO,SAAC5S,GAAD,OAAOA,EAAE6L,YAAUjE,SAC7BiZ,GAAW,GAAKA,GAAW,GAE7B3R,SAAU,SAACC,GACTiU,IAAyB,SAACrU,GAExB,IADA,IAAI6R,EAAG,aAAO7R,GAERpH,EAAIkZ,GAAW,GACnBlZ,EAAIkZ,GAAW,GACflZ,IAEAiZ,EAAIjZ,GAAGkE,SAAWsD,EAAEG,OAAO+R,QAE7B,OAAOT,SAKf,wBAAIzgB,UAAU,wCACZ,yBAAKA,UAAU,qBAAf,aACA,yBAAKA,UAAU,qBAAf,OAEF,wBAAIA,UAAU,qDAEV,CAAC,OAAQ,cAAe,WAAY,UAClC8f,IAIN,wBAAI9f,UAAU,qDACZ,sCAEF,wBAAIA,UAAU,qDACZ,6CAEF,wBAAIA,UAAU,qDACZ,0CAEF,wBAAIA,UAAU,qDACZ,0CAIN,+BACGgjB,EAAsBvb,OACrBub,EACGrQ,MAAmB,GAAZ2G,EAAO,GAAqB,GAAZA,EAAO,GAAS,GACvCjM,KAAI,SAACxN,EAAG2H,GAAJ,OACH,wBACExH,UAAU,2BACVsN,IAAG,yBAAoB9F,IAEvB,wBAAIxH,UAAU,eACZ,kBAAC,GAAD,CACEqK,MAAO,UACP6W,QAASrhB,EAAE6L,SACXqD,SAAU,SAACC,GACTiU,IAAyB,SAACrU,GACxB,IAAI6R,EAAG,aAAO7R,GAGd,OAFA6R,EAAiB,GAAZnH,EAAO,GAAS9R,GAAGkE,SACtBsD,EAAEG,OAAO+R,QACJT,SAKf,4BACGllB,OAAOyb,OAAO7b,GAAasM,OAC1B,kBAAC,IAAMoM,SAAP,KACE,6BACE,yBAAKtT,MAAO,CAAEyS,WAAY,WACxB,yBAAKhT,UAAU,uBACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAY0E,EAAE4U,QAAQzY,MADT,SAMrB,yBAAKgE,UAAU,sCACb,yBAAKA,UAAU,gBACZ7E,EAAY0E,EAAE4U,QAAQ1Y,cAEzB,yBAAKiE,UAAU,QACZ7E,EAAY0E,EAAE4U,QAAQvY,OAEzB,yBAAK8D,UAAU,UACb,yBACEA,UAAU,8BACVsK,QAAS,WACPkY,EAAoB3iB,GACpB4iB,MAJJ,QASA,yBAAKziB,UAAU,QAAf,KACA,yBACEA,UAAU,6BACVsK,QAAO,sBAAE,4BAAAjB,EAAA,sEACSlE,GACd,CAACtF,EAAE+P,MAFE,QACHtO,EADG,QAICuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MACE,2BACFC,QACE,wCACFvB,KAAM,aAIZklB,GAAYD,GAzBL,4CAFX,eAsCV,IAGJ,wBACEvgB,UAAS,UACI,YAAXH,EAAEvE,KACE,eACW,gBAAXuE,EAAEvE,KACF,eACW,UAAXuE,EAAEvE,KACF,cACA,IAPG,OASe,IAAtBwkB,EACI,gBACA,4BAGN,6BAAMjgB,EAAEvE,OAEV,wBACE0E,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGN,yBACEvf,MAAO,CAAEwgB,SAAU,SACnB/gB,UAAU,+CACVsK,QAAS,SAAC0E,GACR,IAAIG,EAASH,EAAEkM,cAEb/L,EAAOgM,UAAUC,SAAS,gBAE1BjM,EAAOgM,UAAUE,OAAO,gBAExBlM,EAAOgM,UAAUG,IAAI,kBAIxBzb,EAAEqjB,cAGP,wBACEljB,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGN,yBAAKvf,MAAO,CAAEyS,WAAY,WACxB,yBAAKhT,UAAU,uBACb,uCACA,sCAEF,yBAAKA,UAAU,kBACb,yBAAKO,MAAO,CAAEyS,WAAY,WACvB0D,KAAKC,OACJ,IAAIxY,KAAK0B,EAAEyjB,YACX,wBAEF,yBAAK/iB,MAAO,CAAEyS,WAAY,WACvB0D,KAAKC,OACJ,IAAIxY,KAAK0B,EAAE0jB,UACX,6BAOZ,wBACEvjB,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGLjgB,EAAEwjB,YAKX,4BACE,wBAAIjC,QAAS,EAAGphB,UAAU,qBAA1B,yBA6Dd,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,YACb,kBAAC,GAAD,CACEsT,MAAOpI,KAAKmM,KAAK2L,EAAsBvb,OAAS,GAChDgB,QAAS6Q,EACT/F,WAAYgG,a,gDC5QfnU,GAhUU,SAAC,GAAsC,IAApCoe,EAAmC,EAAnCA,oBAAqBpB,EAAc,EAAdA,QAAc,EACrBnb,mBAAS,CAC/Cic,YAAa,GACb5nB,KAAM,GACNgoB,WAAYnlB,KAAKC,MACjBmlB,SAAUplB,KAAKC,MACfilB,OAAQ,KANmD,mBACtDne,EADsD,KACxCue,EADwC,OAS/Bxc,oBAAS,GATsB,mBAStD0B,EATsD,KAS7CQ,EAT6C,KAW7D/B,qBAAU,WACJoc,GACFC,EAAgBD,KAEjB,CAACA,IAEJpc,qBAAU,WACRjI,OAAO8b,SAAS,EAAG,KAClB,IAEH,IAAMmI,EAAQ,CAAC,cAAe,UAAW,SACnCM,EAAW,CAAC,YAAa,UAAW,WAE1C,OACE,yBAAK1jB,UAAU,6BACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,qCAAf,iBACA,yBAAKA,UAAU,kBAAf,+BAEF,yBAAKA,UAAU,UACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,QACA,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,mBACbC,SAAU,SAACsC,GAAD,OACR2C,GAAgB,SAAC7U,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEtT,KAAM8nB,EAAMtC,SAG1C9gB,UAAU,yBACVoe,MAAOgF,EACP/E,QAASnZ,EAAa5J,KAAO4J,EAAa5J,KAAO,cAKzD,yBAAK0E,UAAU,uBACb,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,UACb,8BACE4K,MAAO1F,EAAage,YAAche,EAAage,YAAc,GAC7DnU,SAAU,SAACC,GACTA,EAAEC,UACFwU,GAAgB,SAAC7U,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEsU,YAAalU,EAAEG,OAAOvE,YAGpD5K,UAAU,uBACVO,MAAO,CAAEzB,OAAQ,YAIrB,yBACEkB,UAAS,iBACPkF,EAAage,YAAYpU,MAAM,KAAKrH,QAAU,IAC1C,aACA,gBAGLvC,EAAage,YACV,IAAMhe,EAAage,YAAYpU,MAAM,KAAKrH,OAC1C,IAAK,IATX,eAaF,yBAAKzH,UAAU,kBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBAAf,cACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBAAgBO,MAAO,CAAEb,MAAO,UAC7C,kBAAC,KAAD,CACEkL,MAAO8L,KAAKC,OACV,IAAIxY,KAAK+G,EAAaoe,YACtB,cAEFK,UAAW,SAACpkB,GAAD,OACT,yBAAKS,UAAU,qBACb,kBAAC,KAAD,CACEO,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGV,2CACM1Q,EADN,CAEES,UAAU,8BACVqP,YAAY,kBAIlBuU,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAI5jB,EAAI,IAAI9B,KAAK+G,EAAaoe,YAC1BQ,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClBlkB,EAAEmkB,YAAYN,GACd7jB,EAAEokB,SAASL,GACX/jB,EAAEqkB,QAAQJ,GACVT,GAAgB,SAAC7U,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE0U,WAAYrjB,EAAEskB,oBAMlD,yBACEvkB,UAAU,yCACVO,MAAO,CAAEb,MAAO,UAEhB,kBAAC,KAAD,CACEa,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGV,kBAAC,KAAD,CACEuU,UAAW,KACXC,UAAW,KACXzkB,UAAU,aACV+O,SAAU,SAAC1F,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyF,MAAM,KADhB,mBACA7D,EADA,KACGG,EADH,KAEDsZ,EAAU,IAAIvmB,KAAK+G,EAAaoe,YACpCoB,EAAQC,SAAS1Z,GACjByZ,EAAQE,WAAWxZ,GACnBqY,GAAgB,SAAC7U,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB0U,WAAYoB,EAAQH,iBAK5B3Z,MAAO,IAAIzM,KAAK+G,EAAaoe,kBAMvC,yBAAKtjB,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,kBAAf,YACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBAAgBO,MAAO,CAAEb,MAAO,UAC7C,kBAAC,KAAD,CACEkL,MAAO8L,KAAKC,OACV,IAAIxY,KAAK+G,EAAaqe,UACtB,cAEFI,UAAW,SAACpkB,GAAD,OACT,yBAAKS,UAAU,qBACb,kBAAC,KAAD,CACEO,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGV,2CACM1Q,EADN,CAEES,UAAU,8BACVqP,YAAY,kBAIlBuU,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAI5jB,EAAI,IAAI9B,KAAK+G,EAAaqe,UAC1BO,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClBlkB,EAAEmkB,YAAYN,GACd7jB,EAAEokB,SAASL,GACX/jB,EAAEqkB,QAAQJ,GACVT,GAAgB,SAAC7U,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE2U,SAAUtjB,EAAEskB,oBAMhD,yBACEvkB,UAAU,yCACVO,MAAO,CAAEb,MAAO,UAEhB,kBAAC,KAAD,CACEa,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGV,kBAAC,KAAD,CACEuU,UAAW,KACXC,UAAW,KACXzkB,UAAU,aACV+O,SAAU,SAAC1F,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyF,MAAM,KADhB,mBACA7D,EADA,KACGG,EADH,KAEDsZ,EAAU,IAAIvmB,KAAK+G,EAAaqe,UACpCmB,EAAQC,SAAS1Z,GACjByZ,EAAQE,WAAWxZ,GACnBqY,GAAgB,SAAC7U,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB2U,SAAUmB,EAAQH,iBAK1B3Z,MAAO,IAAIzM,KAAK+G,EAAaqe,kBAQ3C,yBAAKvjB,UAAU,uBACb,yBAAKA,UAAU,eAAf,QACA,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,mBACbC,SAAU,SAACsC,GAAD,OACR2C,GAAgB,SAAC7U,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEyU,OAAQK,EAAS5C,SAG/C9gB,UAAU,yBACVoe,MAAOsF,EACPrF,QAASnZ,EAAame,OAASne,EAAame,OAAS,eAO/D,yBAAKrjB,UAAU,eACb,yBAAKA,UAAU,kBACb,yBACEA,UAAU,4EACVsK,QAAS,kBAAM8X,MAFjB,UAMA,yBACEpiB,UAAU,kEACVsK,QAAO,sBAAE,4BAAAjB,EAAA,6DACPF,GAAW,GADJ,SAES0b,GAAK3f,GAFd,OAEH5D,EAFG,OAGP6H,GAAW,GACP7H,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,cAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,uBACPC,QAAS,wCACTvB,KAAM,aAGV8mB,KAtBK,4CA0BT,kBAAC,GAAD,CACE/X,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASA,EACTnJ,KAAM,KAxCV,YCwFKwJ,oBAPf,SAAc5N,EAAO6N,GACnB,OAAO,aACLrN,KAAMR,EAAMQ,MACTqN,KAIQD,EArWY,SAAC,GAAuB,IAArBpN,EAAoB,EAApBA,KAAMwmB,EAAc,EAAdA,QAAc,EACRnb,mBAAS,CAC/Cic,YAAa,GACb5nB,KAAM,GACNgoB,WAAYnlB,KAAKC,MACjBmlB,SAAUplB,KAAKC,MACfilB,OAAQ,cANsC,mBACzCne,EADyC,KAC3Bue,EAD2B,OASlBxc,mBAAS,IATS,mBASzCgG,EATyC,KAShCC,EATgC,OAUlBjG,oBAAS,GAVS,mBAUzC0B,EAVyC,KAUhCQ,EAVgC,KAY1Cia,EAAQ,CAAC,cAAe,UAAW,SACnCM,EAAW,CAAC,YAAa,UAAW,WAEpC9F,EAAc,CAClB,CAAEC,MAAO3Y,EAAage,YAAarZ,MAAO,2BAC1C,CAAEgU,MAAO3Y,EAAa5J,KAAMuO,MAAO,oBACnC,CACEgU,MAAO3Y,EAAaoe,WAAape,EAAaqe,SAC9C1Z,MAAO,sCAET,CACEgU,MAAO3Y,EAAaoe,aAAepe,EAAaqe,SAChD1Z,MAAO,+BAIX,OACE,yBAAK7J,UAAU,6BACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,qCAAf,iBACA,yBAAKA,UAAU,kBAAf,wDAIF,yBAAKA,UAAU,UACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,QACA,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,mBACbC,SAAU,SAACsC,GAAD,OACR2C,GAAgB,SAAC7U,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEtT,KAAM8nB,EAAMtC,SAG1C9gB,UAAU,yBACVoe,MAAOgF,EACP/E,QAASnZ,EAAa5J,KAAO4J,EAAa5J,KAAO,cAKzD,yBAAK0E,UAAU,uBACb,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,UACb,8BACE4K,MAAO1F,EAAage,YAAche,EAAage,YAAc,GAC7DnU,SAAU,SAACC,GACTA,EAAEC,UACFwU,GAAgB,SAAC7U,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEsU,YAAalU,EAAEG,OAAOvE,YAGpD5K,UAAU,uBACVO,MAAO,CAAEzB,OAAQ,YAIrB,yBACEkB,UAAS,iBACPkF,EAAage,YAAYpU,MAAM,KAAKrH,QAAU,IAC1C,aACA,gBAGLvC,EAAage,YACV,IAAMhe,EAAage,YAAYpU,MAAM,KAAKrH,OAC1C,IAAK,IATX,eAaF,yBAAKzH,UAAU,kBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBAAf,cACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBAAgBO,MAAO,CAAEb,MAAO,UAC7C,kBAAC,KAAD,CACEkL,MAAO8L,KAAKC,OACV,IAAIxY,KAAK+G,EAAaoe,YACtB,cAEFK,UAAW,SAACpkB,GAAD,OACT,yBAAKS,UAAU,qBACb,kBAAC,KAAD,CACEO,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGV,2CACM1Q,EADN,CAEES,UAAU,8BACVqP,YAAY,kBAIlBuU,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAI5jB,EAAI,IAAI9B,KAAK+G,EAAaoe,YAC1BQ,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClBlkB,EAAEmkB,YAAYN,GACd7jB,EAAEokB,SAASL,GACX/jB,EAAEqkB,QAAQJ,GACVT,GAAgB,SAAC7U,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE0U,WAAYrjB,EAAEskB,oBAMlD,yBACEvkB,UAAU,yCACVO,MAAO,CAAEb,MAAO,UAEhB,kBAAC,KAAD,CACEa,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGV,kBAAC,KAAD,CACEuU,UAAW,KACXC,UAAW,KACXzkB,UAAU,aACV+O,SAAU,SAAC1F,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyF,MAAM,KADhB,mBACA7D,EADA,KACGG,EADH,KAEDsZ,EAAU,IAAIvmB,KAAK+G,EAAaoe,YACpCoB,EAAQC,SAAS1Z,GACjByZ,EAAQE,WAAWxZ,GACnBqY,GAAgB,SAAC7U,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB0U,WAAYoB,EAAQH,iBAK5B3Z,MAAO,IAAIzM,KAAK+G,EAAaoe,kBAMvC,yBAAKtjB,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,kBAAf,YACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBAAgBO,MAAO,CAAEb,MAAO,UAC7C,kBAAC,KAAD,CACEkL,MAAO8L,KAAKC,OACV,IAAIxY,KAAK+G,EAAaqe,UACtB,cAEFI,UAAW,SAACpkB,GAAD,OACT,yBAAKS,UAAU,qBACb,kBAAC,KAAD,CACEO,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGV,2CACM1Q,EADN,CAEES,UAAU,8BACVqP,YAAY,kBAIlBuU,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAI5jB,EAAI,IAAI9B,KAAK+G,EAAaqe,UAC1BO,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClBlkB,EAAEmkB,YAAYN,GACd7jB,EAAEokB,SAASL,GACX/jB,EAAEqkB,QAAQJ,GACVT,GAAgB,SAAC7U,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE2U,SAAUtjB,EAAEskB,oBAMhD,yBACEvkB,UAAU,yCACVO,MAAO,CAAEb,MAAO,UAEhB,kBAAC,KAAD,CACEa,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGV,kBAAC,KAAD,CACEuU,UAAW,KACXC,UAAW,KACXzkB,UAAU,aACV+O,SAAU,SAAC1F,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyF,MAAM,KADhB,mBACA7D,EADA,KACGG,EADH,KAEDsZ,EAAU,IAAIvmB,KAAK+G,EAAaqe,UACpCmB,EAAQC,SAAS1Z,GACjByZ,EAAQE,WAAWxZ,GACnBqY,GAAgB,SAAC7U,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB2U,SAAUmB,EAAQH,iBAK1B3Z,MAAO,IAAIzM,KAAK+G,EAAaqe,kBAQ3C,yBAAKvjB,UAAU,uBACb,yBAAKA,UAAU,eAAf,UACA,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,mBACbC,SAAU,SAACsC,GAAD,OACR2C,GAAgB,SAAC7U,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEyU,OAAQK,EAAS5C,SAG/C9gB,UAAU,yBACVoe,MAAOsF,EACPrF,QAASnZ,EAAame,OAASne,EAAame,OAAS,eAO/D,yBAAKrjB,UAAU,eACb,yBACEO,MAAO,CAAEzB,OAAQ,OAAQ6Q,QAAS1C,EAAU,EAAI,GAChDjN,UAAU,iDAETiN,GAEH,yBAAKjN,UAAU,uBACb,yBACEA,UAAU,4EACVsK,QAAS,kBAAM8X,MAFjB,UAMA,yBACEpiB,UAAU,kEACVsK,QAAO,sBAAE,8BAAAjB,EAAA,0DACHzN,EAAKgU,IADF,sBAEDoO,EAAUJ,EAAYnL,QAAO,SAAC5S,GAAD,OAAQA,EAAEge,UAC/BpW,OAHP,gBAIHyF,EAAW8Q,EAAQ,GAAGnU,OAJnB,8BAMHV,GAAW,GANR,SAOalE,GACd1J,OAAOC,OAAO,GAAI0J,EAAc,CAAEuP,OAAQ7Y,EAAKgU,OAR9C,OAOCtO,EAPD,OAUH6H,GAAW,GACP7H,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,cAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,uBACPC,QAAS,wCACTvB,KAAM,aAGV8mB,KA7BC,gCAiCLnjB,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,4CACTvB,KAAM,aAtCL,6CA4CT,kBAAC,GAAD,CACE+O,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASA,EACTnJ,KAAM,KA1DV,cCyQKwJ,oBAPf,SAAc5N,EAAO6N,GACnB,OAAO,aACLvN,QAASN,EAAMM,SACZuN,KAIQD,EA9hBI,SAAC,GAKb,IAJL8b,EAII,EAJJA,iBACAC,EAGI,EAHJA,0BACAC,EAEI,EAFJA,wBAEI,KADJtpB,QAE4BuL,mBAAS,KADjC,mBACG5L,EADH,KACWokB,EADX,OAEoBxY,mBAAS,IAF7B,mBAEG3L,EAFH,KAESqnB,EAFT,OAG8B1b,mBAAS,eAHvC,mBAGG2Y,EAHH,KAGcC,EAHd,OAI8C5Y,mBAAS,GAJvD,mBAIG6Y,EAJH,KAIsBC,EAJtB,OAKoB9Y,mBAAS,GAL7B,mBAKGqS,EALH,KAKSC,EALT,OAMgCtS,mBAAS,IANzC,mBAMG2b,EANH,KAMeC,EANf,OAOwB5b,mBAAS,IAPjC,mBAOGzK,EAPH,KAOW0jB,EAPX,OAQgCjZ,mBAAS,CAAEqG,IAAK,GAAI1C,MAAO,KAR3D,mBAQGuV,EARH,KAQeC,EARf,OAUgCnZ,mBAAS,IAVzC,mBAUGge,EAVH,KAUeC,EAVf,OAWgDje,mBAAS,IAXzD,mBAWGke,EAXH,KAWuBC,EAXvB,QAY0Bne,oBAAS,GAZnC,qBAYGsZ,GAZH,MAYYC,GAZZ,MAcJpZ,qBAAU,WAAM,4CACd,4BAAAiC,EAAA,sEACmB/D,KADnB,QACMxE,EADN,QAEY+I,OACRqb,EACEpkB,EAAKuM,KAAI,SAACxN,GAAD,OAAOtE,OAAOC,OAAO,GAAIqE,EAAG,CAAE6L,UAAU,QAJvD,4CADc,uBAAC,WAAD,wBAUd6B,KACC,CAACgT,KAEJnZ,qBAAU,WACR,IAAIqZ,EAAG,aAAOwE,GACVA,EAAWxd,SACTjL,IACgB,gBAAdojB,EACFa,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OACfA,EAAEqjB,YAAY1X,cAAckH,SAASlW,EAAOgP,kBAEvB,WAAdoU,IACTa,EAAMA,EAAIhO,QACR,SAAC5S,GAAD,MACqB,WAAnBA,EAAEwlB,cACFxlB,EAAE2G,QAAQxE,OAAOwJ,cAAckH,SAASlW,EAAOgP,oBAKnDoX,IACFnC,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OACfA,EAAEwlB,aAAa/K,MAAM,IAAIgL,OAAO1C,EAAY,UAI5CzC,EAAW7S,MACbmT,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OAAOA,EAAEsgB,EAAW7S,OAAS6S,EAAWvV,UAG3Dwa,EAAsB3E,MAEvB,CAACjkB,EAAQomB,EAAYqC,EAAY9E,IAGpC,IAAIO,GAAa,CAAc,GAAZpH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GAC/CoH,GAAW,IAAMyE,EAAmB1d,SACtCiZ,GAAW,GAAKA,GAAW,IAAMA,GAAW,GAAKyE,EAAmB1d,SAGtE,IAAMmZ,GAAU,CAAC,SAAU,SAAU,WAAY,UAC3C2E,GAAgB,CAAC,cAAe,UAGtC,OACE,yBAAKvlB,UAAU,+BACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCAAf,mBAGA,yBAAKA,UAAU,kBAAf,mCAEF,yBACEA,UAAU,qDACVsK,QAAS,kBAAMya,MAFjB,aAQJ,yBAAK/kB,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,0BACb,yBACEA,UAAS,kCACY,KAAnBmgB,EAAW7S,KAAesV,EAEtB,YADA,gBAGNtY,QAAS,WACPuY,EAAc,IACdF,EAAQ,IACRvC,EAAc,CAAE9S,IAAK,GAAI1C,MAAO,OATpC,QAYQqa,EAAWxd,OAZnB,KAvBY,CAAC,YAAa,UAAW,WAqCpB4F,KAAI,SAACxN,EAAG2H,GAAJ,OACnB,kBAAC,IAAMqM,SAAP,CAAgBvG,IAAG,iBAAY9F,IAC7B,yBAAKxH,UAAU,4BAAf,KACA,yBACEsK,QAAS,kBACP8V,GAAc,SAACxR,GAAD,OACZrT,OAAOC,OAAO,GAAIoT,EAAM,CACtBtB,IAAK,iBACL1C,MAAO/K,QAIbG,UAAS,kCACY,mBAAnBmgB,EAAW7S,KACX6S,EAAWvV,QAAU/K,EACjB,eACA,cAGLA,EAhBH,KAiBGolB,EAAWxS,QAAO,SAAC7S,GAAD,OAAOA,EAAE4lB,iBAAmB3lB,KAAG4H,OAjBpD,UAsBN,yBAAKzH,UAAU,0CACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,qBACbC,SAAU,SAACsC,GAAD,OAAWrB,EAAU,CAAC,UAAUqB,KAC1C1C,MAAO,CAAC,UACRC,QAAShjB,GAAkB,gBAC3B2E,UAAU,gCAIhB,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,qBACbC,SAAU,SAACsC,GAAD,OACR6B,EAAQ,CAAC,SAAU,WAAW7B,KAEhC1C,MAAO,CAAC,SAAU,WAClBC,QAAS/iB,GAAc,cACvB0E,UAAU,gCAIhB,yBACEsK,QAAS,WACP,GAAe,SAAXjP,EAAmB,CACrB,IAAIqQ,EAAWyZ,EAAmB1S,QAChC,SAAC5S,GAAD,OAAOA,EAAE6L,YAEPA,EAASjE,SACXqd,EAAiBpZ,EAAS,IAC1BsZ,SAEkB,WAAX3pB,GAGTwnB,EAAcvnB,IAGlB0E,UAAU,yEAhBZ,WAsBJ,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CACEue,aAAa,QACbC,SAAU,SAACsC,GAAD,OAAWjB,EAAa0F,GAAczE,KAChD9gB,UAAU,qBACVoe,MAAOmH,GACPlH,QAAO,oBAAeuB,MAG1B,yBAAK5f,UAAU,uBACb,yBAAKA,UAAU,4BACb,kBAAC,KAAD,CACEmO,SAAS,OACT5N,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRsI,MAAO,UAGX,2BACEzY,UAAU,8BACV4K,MAAOpO,EACPuS,SAAU,SAACC,GACTA,EAAEC,UACFiR,EAAUlR,EAAEG,OAAOvE,aAM7B,yBAAK5K,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEwe,SAAU,SAACsC,GAAD,OAAWjB,EAAa0F,GAAczE,KAChD9gB,UAAU,sCACVoe,MAAOmH,GACPlH,QAAO,oBAAeuB,KAExB,yBAAK5f,UAAU,yBACb,kBAAC,KAAD,CACEmO,SAAS,OACT5N,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRsI,MAAO,UAGX,2BACE7N,MAAOpO,EACPuS,SAAU,SAACC,GACTA,EAAEC,UACFiR,EAAUlR,EAAEG,OAAOvE,QAErB5K,UAAU,wBACVO,MAAO,CAAEwgB,SAAU,eAM7B,yBAAK/gB,UAAU,kBACb,kBAAC,KAAD,CACEO,MAAO,CAAEwgB,SAAU,QACnBC,aAAc,WACZjB,EACED,EAAoB,EAAI,EACpBA,EAAoB,EACpBA,IAGRmB,cAAe,WACblB,EACED,EAAoB,GAAK,EACrBA,EAAoB,EACpBA,KAIR,yBAAK9f,UAAU,oBACb,2BAAOA,UAAU,yBACf,+BACE,4BACE,wBAAIA,UAAU,eACZ,kBAAC,GAAD,CACEqK,MAAO,UACP6W,QACEiE,EACGxS,MAAM+N,GAAW,GAAIA,GAAW,IAChCjO,QAAO,SAAC5S,GAAD,OAAOA,EAAE6L,YAAUjE,SAC7BiZ,GAAW,GAAKA,GAAW,GAE7B3R,SAAU,SAACC,GACToW,GAAsB,SAACxW,GAErB,IADA,IAAI6R,EAAG,aAAO7R,GAERpH,EAAIkZ,GAAW,GACnBlZ,EAAIkZ,GAAW,GACflZ,IAEAiZ,EAAIjZ,GAAGkE,SAAWsD,EAAEG,OAAO+R,QAE7B,OAAOT,SAKf,wBAAIzgB,UAAU,wCAAd,eAGA,wBAAIA,UAAU,qDACX4gB,GAAQd,IAEVc,GAAQvT,KAAI,SAACoY,EAAGC,GAAJ,OACX,wBACE1lB,UAAU,oDACVsN,IAAG,iBAAYoY,IAEf,6BAAMD,SAKd,+BACGN,EAAmB1d,OAClB0d,EACGxS,MAAmB,GAAZ2G,EAAO,GAAqB,GAAZA,EAAO,GAAS,GACvCjM,KAAI,SAACxN,EAAG2H,GAAJ,OACH,wBACExH,UAAU,2BACVsN,IAAG,yBAAoB9F,IAEvB,wBAAIxH,UAAU,eACZ,kBAAC,GAAD,CACEqK,MAAO,UACP6W,QAASrhB,EAAE6L,SACXqD,SAAU,SAACC,GACToW,GAAsB,SAACxW,GACrB,IAAI6R,EAAG,aAAO7R,GAGd,OAFA6R,EAAiB,GAAZnH,EAAO,GAAS9R,GAAGkE,SACtBsD,EAAEG,OAAO+R,QACJT,SAKf,wBAAIlgB,MAAO,CAAEyS,WAAY,WACvB,yBACEhT,UAAU,OACVO,MAAO,CAAEwgB,SAAU,UAElBlhB,EAAEqjB,aAEL,yBAAKljB,UAAU,UACb,yBACEA,UAAU,8BACVsK,QAAS,WACPwa,EAAiBjlB,GACjBmlB,MAJJ,QASA,yBAAKhlB,UAAU,QAAf,KACA,yBACEA,UAAU,6BACVsK,QAAO,sBAAE,4BAAAjB,EAAA,sExC7IJzE,EwC+ID,CAAC/E,EAAE+P,KxC9IlChP,EAAgB,2BAA4B,CAAEgE,MAAKd,OwC+IpB,CAAEuf,OAAQ,aAHL,QACH/hB,EADG,QAKCuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,wBACPC,QACE,qCACFvB,KAAM,aAIZklB,IAAYD,IAzBL,iCxC7IL,IAAC3b,IwC6II,QAFX,YAkCJ,wBACE5E,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGc,WAAnBjgB,EAAEwlB,aACD,yBAAK9kB,MAAO,CAAEwgB,SAAU,UACtB,yBACE/gB,UAAU,2CACVsK,QAAS,SAAC0E,GACRmC,EAAQtB,KAAR,iBACYhQ,EAAEoK,SADd,YAC0BpK,EAAEyW,eAI7BzW,EAAE2G,QAAQxE,SAIf,yBACEhC,UAAU,+CACVsK,QAAS,SAAC0E,GACR,IAAIG,EAASH,EAAEkM,cAEb/L,EAAOgM,UAAUC,SACf,gBAGFjM,EAAOgM,UAAUE,OAAO,gBAExBlM,EAAOgM,UAAUG,IAAI,kBAIxBzb,EAAE2G,QAAQ9D,UAIjB,wBACE1C,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGLjgB,EAAE2G,QAAQ7K,OACY,YAArBkE,EAAE2G,QAAQ7K,OACR,yBAAK4E,MAAO,CAAEoL,UAAW,SACvB,kBAAC,EAAD,CAAQnM,KAAM,MAGhB,yBAAKe,MAAO,CAAEqL,aAAc,SAC1B,kBAAC,IAAD,CACEnL,MACuB,mBAArBZ,EAAE2G,QAAQ7K,OACN,OACqB,cAArBkE,EAAE2G,QAAQ7K,OACV,QACqB,YAArBkE,EAAE2G,QAAQ7K,OACV,sBACA,OAEN+E,IAAI,WACJlB,KAAM,MAKZ,KAGJ,wBACEQ,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGN,yBAAKvf,MAAO,CAAEyS,WAAY,WACxB,yBAAKhT,UAAU,uBACb,uCACA,sCAEF,yBAAKA,UAAU,kBACb,yBAAKO,MAAO,CAAEyS,WAAY,WACvB0D,KAAKC,OACJ,IAAIxY,KAAK0B,EAAEyjB,YACX,wBAEF,yBAAK/iB,MAAO,CAAEyS,WAAY,WACvB0D,KAAKC,OACJ,IAAIxY,KAAK0B,EAAE0jB,UACX,6BAOZ,wBACEvjB,UAAS,UACM,cAAbH,EAAEwjB,OACE,aACa,YAAbxjB,EAAEwjB,OACF,cACA,cALG,YAOe,IAAtBvD,EACI,eACA,2BAGQ,cAAbjgB,EAAEwjB,OACC,SACa,YAAbxjB,EAAEwjB,OACF,WACAxjB,EAAEwjB,YAKd,4BACE,wBAAIjC,QAAS,EAAGphB,UAAU,qBAA1B,yBAUd,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,YACb,kBAAC,GAAD,CACEsT,MAAOpI,KAAKmM,KAAK8N,EAAmB1d,OAAS,GAC7CgB,QAAS6Q,EACT/F,WAAYgG,aCjHfhU,GAhaO,SAAC,GAAmC,IAAjCogB,EAAgC,EAAhCA,iBAAkBvD,EAAc,EAAdA,QAAc,EACrBnb,mBAAS,CACzCjF,OAAQ,GACRU,QAAS,GACT6R,UAAW,EACXD,WAAY,EACZ+Q,aAAc,GACdG,eAAgB,GAChBI,cAAe,GACftC,WAAYnlB,KAAKC,MACjBmlB,SAAUplB,KAAKC,MACf+U,YAAa,GACblJ,SAAU,GACVzD,QAAS,GACT5J,MAAO,KAd8C,mBAChD4I,EADgD,KACrCqgB,EADqC,OAiBzB5e,oBAAS,GAjBgB,mBAiBhD0B,EAjBgD,KAiBvCQ,EAjBuC,KAmBvD/B,qBAAU,WACRye,GAAa,SAACjX,GAAD,OAAUrT,OAAOC,OAAO,GAAIoT,EAAM+W,QAC9C,CAACA,IAEJve,qBAAU,WACRjI,OAAO8b,SAAS,EAAG,KAClB,IAEH,IAAM6K,EAAkB,CAAC,YAAa,UAAW,WAEjD,OACE,yBAAK9lB,UAAU,6BACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,qCAAf,mBACA,yBAAKA,UAAU,kBAAf,4BAEF,yBAAKA,UAAU,UAqBb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,uBAAf,eACA,yBAAKA,UAAU,kBACb,8BACE4K,MAAOpF,EAAU0d,YAAc1d,EAAU0d,YAAc,GACvDnU,SAAU,SAACC,GACTA,EAAEC,UACF4W,GAAa,SAACjX,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEsU,YAAalU,EAAEG,OAAOvE,YAGpD5K,UAAU,uBACVO,MAAO,CAAEzB,OAAQ,cAKzB,yBAAKkB,UAAU,uBACb,yBAAKA,UAAU,mCACZwF,EAAU6f,cAEb,yBAAKrlB,UAAU,8BACb,8BACE4K,MACEpF,EAAUgB,QACqB,WAA3BhB,EAAU6f,aACR7f,EAAUgB,QAAQxE,OAClBwD,EAAUgB,QAAQ9D,QACpB,GAENqM,SAAU,SAACC,GACTA,EAAEC,UACF,IAAIC,EAAOF,EAAEG,OAAOvE,MACpB,GAAIsE,EAAKJ,MAAM,KAAKrH,QAAU,IAC5B,GAA+B,WAA3BjC,EAAU6f,aAA2B,CACvC,IAAIU,EAAU,eAAQvgB,EAAUgB,SAChCuf,EAAW/jB,OAASkN,EACpB2W,GAAa,SAACjX,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEpI,QAASuf,WAEhC,CACL,IAAIA,EAAU,eAAQvgB,EAAUgB,SAChCuf,EAAWrjB,QAAUwM,EACrB2W,GAAa,SAACjX,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEpI,QAASuf,SAK3C/lB,UAAU,uBACVO,MAAO,CAAEzB,OAAQ,YAIrB,yBACEkB,UAAS,iBACPwF,EAAU6f,aACqB,WAA3B7f,EAAU6f,aACR7f,EAAUgB,QAAQxE,OAAO8M,MAAM,KAAKrH,QAAU,IAC5C,aACA,cACFjC,EAAUgB,QAAQ9D,QAAQoM,MAAM,KAAKrH,QAAU,IAC/C,aACA,cACF,KAGLjC,EAAUgB,QAAQxE,OACfwD,EAAUgB,QAAQxE,OAAOyF,OACvB,IAAMjC,EAAUgB,QAAQxE,OAAO8M,MAAM,KAAKrH,OAC1C,IACFjC,EAAUgB,QAAQ9D,QAClB8C,EAAUgB,QAAQ9D,QAAQ+E,OACxB,IAAMjC,EAAUgB,QAAQ9D,QAAQoM,MAAM,KAAKrH,OAC3C,IACF,GAAI,IArBV,eAyB0B,WAA3BjC,EAAU6f,cACT,yBAAKrlB,UAAU,wCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,UAAf,WAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,SACbve,UAAU,mBACVqe,QACE7Y,EAAUgB,QAAQ7K,OACd0E,EAAQmR,MACN,SAAC3R,GAAD,OAAOA,EAAElB,OAAS6G,EAAUgB,QAAQ7K,UACpC2E,QACF,SAENke,SAAU,SAACsC,GACT,IAAIta,EAAO,eAAQhB,EAAUgB,SAC7BA,EAAQ7K,OAAS0E,EAAQygB,GAAOniB,KAChCknB,GAAa,SAACjX,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEpI,QAASA,QAGvC4X,MAAO/d,EAAQgN,KAAI,SAACxN,GAAD,OAAOA,EAAES,iBAQxC,yBAAKN,UAAU,kBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,kBAAf,cACA,yBAAKA,UAAU,kBACb,kBAAC,KAAD,CACE4K,MAAO8L,KAAKC,OACV,IAAIxY,KAAKqH,EAAU8d,YACnB,cAEFK,UAAW,SAACpkB,GAAD,OACT,yBAAKS,UAAU,2BACb,kBAAC,KAAD,CACEO,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGV,2CACM1Q,EADN,CAEES,UAAU,8BACVqP,YAAY,kBAIlBuU,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAI5jB,EAAI,IAAI9B,KAAKqH,EAAU8d,YACvBQ,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClBlkB,EAAEmkB,YAAYN,GACd7jB,EAAEokB,SAASL,GACX/jB,EAAEqkB,QAAQJ,GACV2B,GAAa,SAACjX,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE0U,WAAYrjB,EAAEskB,qBAOpD,yBAAKvkB,UAAU,yBACb,yBAAKA,UAAU,kBAAf,YACA,yBAAKA,UAAU,kBACb,kBAAC,KAAD,CACE4K,MAAO8L,KAAKC,OACV,IAAIxY,KAAKqH,EAAU+d,UACnB,cAEFI,UAAW,SAACpkB,GAAD,OACT,yBAAKS,UAAU,2BACb,kBAAC,KAAD,CACEO,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGV,2CACM1Q,EADN,CAEES,UAAU,8BACVqP,YAAY,kBAIlBuU,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAI5jB,EAAI,IAAI9B,KAAKqH,EAAU+d,UACvBO,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClBlkB,EAAEmkB,YAAYN,GACd7jB,EAAEokB,SAASL,GACX/jB,EAAEqkB,QAAQJ,GACV2B,GAAa,SAACjX,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE2U,SAAUtjB,EAAEskB,sBAQpD,yBAAKvkB,UAAU,kBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,kBAAf,cACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,wCACb,kBAAC,KAAD,CACEO,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGV,kBAAC,KAAD,CACEuU,UAAW,KACXC,UAAW,KACXzkB,UAAU,aACV+O,SAAU,SAAC1F,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyF,MAAM,KADhB,mBACA7D,EADA,KACGG,EADH,KAEDsZ,EAAU,IAAIvmB,KAAKqH,EAAU8d,YACjCoB,EAAQC,SAAS1Z,GACjByZ,EAAQE,WAAWxZ,GACnBya,GAAa,SAACjX,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB0U,WAAYoB,EAAQH,iBAK5B3Z,MAAO,IAAIzM,KAAKqH,EAAU8d,iBAKlC,yBAAKtjB,UAAU,yBACb,yBAAKA,UAAU,kBAAf,YACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,wCACb,kBAAC,KAAD,CACEO,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGV,kBAAC,KAAD,CACEuU,UAAW,KACXC,UAAW,KACXzkB,UAAU,aACV+O,SAAU,SAAC1F,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyF,MAAM,KADhB,mBACA7D,EADA,KACGG,EADH,KAEDsZ,EAAU,IAAIvmB,KAAKqH,EAAU+d,UACjCmB,EAAQC,SAAS1Z,GACjByZ,EAAQE,WAAWxZ,GACnBya,GAAa,SAACjX,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB2U,SAAUmB,EAAQH,iBAK1B3Z,MAAO,IAAIzM,KAAKqH,EAAU+d,kBAQxC,yBAAKvjB,UAAU,uBACb,yBAAKA,UAAU,eAAf,UACA,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,SACbC,SAAU,SAACsC,GAAD,OACR+E,GAAa,SAACjX,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CACtByU,OAAQyC,EAAgBhF,SAI9B9gB,UAAU,yBACVoe,MAAO0H,EACPzH,QAAS7Y,EAAU6d,OAAS7d,EAAU6d,OAAS,iBAQ7D,yBAAKrjB,UAAU,eACb,yBAAKA,UAAU,kBACb,yBACEA,UAAU,4EACVsK,QAAS8X,GAFX,UAMA,yBACEpiB,UAAU,kEACVsK,QAAO,sBAAE,4BAAAjB,EAAA,6DACPF,GAAW,GADJ,SAES0b,GAAKrf,GAFd,OAEHlE,EAFG,OAGP6H,GAAW,GACP7H,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,cAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,oBACPC,QAAS,qCACTvB,KAAM,aAGV8mB,KAtBK,4CA0BT,kBAAC,GAAD,CACE/X,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASA,EACTnJ,KAAM,KAxCV,YCiTKwJ,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACL9N,YAAaC,EAAMD,YACnBO,QAASN,EAAMM,SACZuN,KAIQD,EA1pBS,SAAC,GAAuC,IAArC7N,EAAoC,EAApCA,YAAainB,EAAuB,EAAvBA,QAAS1mB,EAAc,EAAdA,QAAc,EAC3BuL,mBAAS,CACzCic,YAAa,GACbI,WAAYnlB,KAAKC,MACjBmlB,SAAUplB,KAAKC,MACfinB,aAAc,GACdhC,OAAQ,cANmD,mBACtD7d,EADsD,KAC3CqgB,EAD2C,OAQrC5e,mBAAS,GAR4B,mBAQtDqS,EARsD,KAQhDC,EARgD,OAU/BtS,mBAAS,IAVsB,mBAUtDgG,EAVsD,KAU7CC,EAV6C,OAY/BjG,oBAAS,GAZsB,mBAYtD0B,EAZsD,KAY7CQ,EAZ6C,OAa3BlC,mBAAS,QAbkB,mBAatD2Y,EAbsD,KAa3CC,EAb2C,OAcjC5Y,mBAAS,IAdwB,mBActDzK,EAdsD,KAc9C0jB,EAd8C,OAezBjZ,mBAAS,IAfgB,mBAetD+e,EAfsD,KAe1CC,EAf0C,KAgBvDC,EAAa,CAAC,OAAQ,QAAS,UAhBwB,EAiBXjf,mBAAS,GAjBE,mBAiBtD6Y,EAjBsD,KAiBnCC,EAjBmC,OAkB/B9Y,mBAAS,IAlBsB,mBAkBtD9K,EAlBsD,KAkB7C0Y,EAlB6C,KAoB7DzN,qBAAU,WAAM,4CACd,4BAAAiC,EAAA,sEACkB9E,KADlB,QACM4hB,EADN,QAEWtc,OACPgL,EAAWsR,GAHf,4CADc,uBAAC,WAAD,wBAad5Y,KACC,IAEHnG,qBAAU,WACR,IAAIqZ,EAAM,GACNjkB,EACgB,SAAdojB,EACErkB,OAAOyb,OAAO7b,GAAasM,QAC7BtL,EAAQwN,SAAQ,SAAC9J,GAEb1E,EAAY0E,EAAE4U,QAAQ1Y,aACnByP,cACAkH,SAASlW,EAAOgP,gBAEnBiV,EAAI5Q,KAAKhQ,MAIQ,UAAd+f,EACTzjB,EAAQwN,SAAQ,SAAC9J,GAEbnE,EAAQmE,EAAEoK,WACVvO,EAAQmE,EAAEoK,UAAUkJ,YACjB3H,cACAkH,SAASlW,EAAOgP,gBAEnBiV,EAAI5Q,KAAKhQ,MAGU,WAAd+f,GACTzjB,EAAQwN,SAAQ,SAAC9J,GACXA,EAAEmC,OAAOwJ,cAAckH,SAASlW,EAAOgP,gBACzCiV,EAAI5Q,KAAKhQ,MAKf4gB,EAAMA,EAAI1U,OAAJ,aAAe5P,IAGvB8pB,EAAcxF,EAAIpT,KAAI,SAACxN,GAAD,OAAOtE,OAAOC,OAAO,GAAIqE,EAAG,CAAE6L,UAAU,UAC7D,CAAClP,EAAQL,IAEZ,IAAIukB,EAAa,CAAc,GAAZpH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GAC/CoH,EAAW,IAAMsF,EAAWve,SAC9BiZ,EAAW,GAAKA,EAAW,IAAMA,EAAW,GAAKsF,EAAWve,SAG9D,IAAMmZ,EAAU,CAAC,aAAc,SAAU,SAAU,YAAa,YAE1DhD,EAAc,CAClB,CAAEC,MAAOrY,EAAU0d,YAAarZ,MAAO,2BACvC,CACEgU,MAAOrY,EAAU8d,WAAa9d,EAAU+d,SACxC1Z,MAAO,sCAET,CACEgU,MAAOrY,EAAU8d,aAAe9d,EAAU+d,SAC1C1Z,MAAO,2BAET,CACEgU,MAAOmI,EAAWvT,QAAO,SAAC5S,GAAD,OAAOA,EAAE6L,YAAUjE,OAC5CoC,MAAO,wBAGX,OACE,yBAAK7J,UAAU,6BACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,qCAAf,mBAGA,yBAAKA,UAAU,kBAAf,sCAMN,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,uBAAf,eACA,yBAAKA,UAAU,kBACb,8BACE4K,MAAOpF,EAAU0d,YAAc1d,EAAU0d,YAAc,GACvDnU,SAAU,SAACC,GACTA,EAAEC,UACF4W,GAAa,SAACjX,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEsU,YAAalU,EAAEG,OAAOvE,YAGpD5K,UAAU,uBACVO,MAAO,CAAEzB,OAAQ,cAKzB,yBAAKkB,UAAU,kBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBAAf,cACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBAAgBO,MAAO,CAAEb,MAAO,UAC7C,kBAAC,KAAD,CACEkL,MAAO8L,KAAKC,OACV,IAAIxY,KAAKqH,EAAU8d,YACnB,cAEFK,UAAW,SAACpkB,GAAD,OACT,yBAAKS,UAAU,qBACb,kBAAC,KAAD,CACEO,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGV,2CACM1Q,EADN,CAEES,UAAU,8BACVqP,YAAY,kBAIlBuU,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAI5jB,EAAI,IAAI9B,KAAKqH,EAAU8d,YACvBQ,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClBlkB,EAAEmkB,YAAYN,GACd7jB,EAAEokB,SAASL,GACX/jB,EAAEqkB,QAAQJ,GACV2B,GAAa,SAACjX,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE0U,WAAYrjB,EAAEskB,oBAMlD,yBACEvkB,UAAU,yCACVO,MAAO,CAAEb,MAAO,UAEhB,kBAAC,KAAD,CACEa,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGV,kBAAC,KAAD,CACEuU,UAAW,KACXC,UAAW,KACXzkB,UAAU,aACV+O,SAAU,SAAC1F,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyF,MAAM,KADhB,mBACA7D,EADA,KACGG,EADH,KAEDsZ,EAAU,IAAIvmB,KAAKqH,EAAU8d,YACjCoB,EAAQC,SAAS1Z,GACjByZ,EAAQE,WAAWxZ,GACnBya,GAAa,SAACjX,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB0U,WAAYoB,EAAQH,iBAK5B3Z,MAAO,IAAIzM,KAAKqH,EAAU8d,kBAMpC,yBAAKtjB,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,kBAAf,YACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBAAgBO,MAAO,CAAEb,MAAO,UAC7C,kBAAC,KAAD,CACEkL,MAAO8L,KAAKC,OACV,IAAIxY,KAAKqH,EAAU+d,UACnB,cAEFI,UAAW,SAACpkB,GAAD,OACT,yBAAKS,UAAU,qBACb,kBAAC,KAAD,CACEO,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGV,2CACM1Q,EADN,CAEES,UAAU,8BACVqP,YAAY,kBAIlBuU,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAI5jB,EAAI,IAAI9B,KAAKqH,EAAU+d,UACvBO,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClBlkB,EAAEmkB,YAAYN,GACd7jB,EAAEokB,SAASL,GACX/jB,EAAEqkB,QAAQJ,GACV2B,GAAa,SAACjX,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE2U,SAAUtjB,EAAEskB,oBAMhD,yBACEvkB,UAAU,yCACVO,MAAO,CAAEb,MAAO,UAEhB,kBAAC,KAAD,CACEa,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGV,kBAAC,KAAD,CACEuU,UAAW,KACXC,UAAW,KACXzkB,UAAU,aACV+O,SAAU,SAAC1F,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyF,MAAM,KADhB,mBACA7D,EADA,KACGG,EADH,KAEDsZ,EAAU,IAAIvmB,KAAKqH,EAAU+d,UACjCmB,EAAQC,SAAS1Z,GACjByZ,EAAQE,WAAWxZ,GACnBya,GAAa,SAACjX,GAAD,OACXrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB2U,SAAUmB,EAAQH,iBAK1B3Z,MAAO,IAAIzM,KAAKqH,EAAU+d,kBAQxC,yBAAKvjB,UAAU,+BAAf,6BAGA,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CACEwe,SAAU,SAACsC,GAAD,OAAWjB,EAAaqG,EAAWpF,KAC7C9gB,UAAU,mEACVoe,MAAO8H,EACP7H,QAAO,oBAAeuB,KAExB,yBAAK5f,UAAU,wBAAwBO,MAAO,CAAEuS,SAAU,UACxD,kBAAC,KAAD,CACE3E,SAAS,OACT5N,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRsI,MAAO,UAGX,2BACE7N,MAAOpO,EACPuS,SAAU,SAACC,GACTA,EAAEC,UACFiR,EAAUlR,EAAEG,OAAOvE,QAErB5K,UAAU,mCAKlB,yBAAKA,UAAU,UACb,yBAAKA,UAAU,kBACb,kBAAC,KAAD,CACEO,MAAO,CAAEwgB,SAAU,QACnBC,aAAc,WACZjB,EACED,EAAoB,EAAI,EACpBA,EAAoB,EACpBA,IAGRmB,cAAe,WACblB,EACED,EAAoB,GAAK,EACrBA,EAAoB,EACpBA,KAIR,yBAAK9f,UAAU,oBACb,2BAAOA,UAAU,yBACf,+BACE,4BACE,wBAAIA,UAAU,eACZ,kBAAC,GAAD,CACEqK,MAAO,UACP6W,QACE8E,EACGrT,MAAM+N,EAAW,GAAIA,EAAW,IAChCjO,QAAO,SAAC5S,GAAD,OAAOA,EAAE6L,YAAUjE,SAC7BiZ,EAAW,GAAKA,EAAW,GAE7B3R,SAAU,SAACC,GACTiX,GAAc,SAACrX,GAEb,IADA,IAAI6R,EAAG,aAAO7R,GAERpH,EAAIkZ,EAAW,GACnBlZ,EAAIkZ,EAAW,GACflZ,IAEAiZ,EAAIjZ,GAAGkE,SAAWsD,EAAEG,OAAO+R,QAE7B,OAAOT,SAKf,wBAAIzgB,UAAU,wCACZ,yBAAKA,UAAU,qBAAf,aACA,yBAAKA,UAAU,qBAAf,OAEF,wBAAIA,UAAU,qDACX4gB,EAAQd,IAEVc,EAAQvT,KAAI,SAACoY,EAAEW,GAAH,OACX,wBAAIpmB,UAAU,oDAAoDsN,IAAG,gBAAW8Y,IAC9E,6BAAMX,SAKd,+BACGO,EAAWve,OACVue,EACGrT,MAAmB,GAAZ2G,EAAO,GAAqB,GAAZA,EAAO,GAAS,GACvCjM,KAAI,SAACxN,EAAG2H,GAAJ,OACH,wBACExH,UAAU,2BACVsN,IAAG,yBAAoB9F,IAEvB,wBAAIxH,UAAU,eACZ,kBAAC,GAAD,CACEqK,MAAO,UACP6W,QAASrhB,EAAE6L,SACXqD,SAAU,SAACC,GACTiX,GAAc,SAACrX,GACb,IAAI6R,EAAG,aAAO7R,GAGd,OAFA6R,EAAiB,GAAZnH,EAAO,GAAS9R,GAAGkE,SACtBsD,EAAEG,OAAO+R,QACJT,SAKf,wBAAIlgB,MAAO,CAAEyS,WAAY,WACvB,yBAAKhT,UAAU,uBACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACbtT,OAAOyb,OAAO7b,GAAasM,OACvBtM,EAAY0E,EAAE4U,QAAQzY,MACtB,GAHS,SAQpBT,OAAOyb,OAAO7b,GAAasM,OAC1B,yBAAKzH,UAAU,sCACb,yBAAKA,UAAU,mBACZ7E,EAAY0E,EAAE4U,QAAQ1Y,cAEzB,6BAAMZ,EAAY0E,EAAE4U,QAAQvY,QAG9B,IAGJ,wBACE8D,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGLpkB,EAAQmE,EAAEoK,UACPvO,EAAQmE,EAAEoK,UAAUkJ,YACpB,IAEN,wBACEnT,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGJjgB,EAAE6C,QAmBF,yBACE1C,UAAU,+CACVsK,QAAS,SAAC0E,GACR,IAAIG,EAASH,EAAEkM,cAEb/L,EAAOgM,UAAUC,SAAS,gBAE1BjM,EAAOgM,UAAUE,OAAO,gBAExBlM,EAAOgM,UAAUG,IAAI,kBAIxBzb,EAAE6C,SA/BL,yBAAKnC,MAAO,CAAEwgB,SAAU,UACtB,yBACE/gB,UAAU,+CACVsK,QAAS,SAAC0E,GACR,IAAIG,EAASH,EAAEkM,cAEb/L,EAAOgM,UAAUC,SAAS,gBAE1BjM,EAAOgM,UAAUE,OAAO,gBAExBlM,EAAOgM,UAAUG,IAAI,kBAIxBzb,EAAEmC,UAqBX,wBACEhC,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGLjgB,EAAElE,OACY,YAAbkE,EAAElE,OACA,yBAAK4E,MAAO,CAAEoL,UAAW,SACvB,kBAAC,EAAD,CAAQnM,KAAM,MAGhB,yBAAKe,MAAO,CAAEqL,aAAc,SAC1B,kBAAC,IAAD,CACEnL,MACe,mBAAbZ,EAAElE,OACE,OACa,cAAbkE,EAAElE,OACF,QACa,YAAbkE,EAAElE,OACF,sBACA,OAEN+E,IAAI,WACJlB,KAAM,MAKZ,KAGJ,wBACEe,MAAO,CAAEyS,WAAY,UACrBhT,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGN,6BACGpJ,KAAKC,OACJ,IAAIxY,KAAK0B,EAAE6W,MACX,0BAIN,wBACE1W,UAAS,UACNH,EAAEshB,SAA0B,cAAf,aADP,YAGe,IAAtBrB,EACI,eACA,2BAGLjgB,EAAEshB,SAAW,SAAW,oBAKjC,4BACE,wBAAIC,QAAS,EAAGphB,UAAU,qBAA1B,yBAUd,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,YACb,kBAAC,GAAD,CACEsT,MAAOpI,KAAKmM,KAAK2O,EAAWve,OAAS,GACrCgB,QAAS6Q,EACT/F,WAAYgG,MAIlB,yBAAKvZ,UAAU,oBACb,yBACEO,MAAO,CAAEzB,OAAQ,OAAQ6Q,QAAS1C,EAAU,EAAI,GAChDjN,UAAU,sDAETiN,GAEH,yBAAKjN,UAAU,kBACb,yBACEA,UAAU,4EACVsK,QAAS,kBAAM8X,MAFjB,UAMA,yBACEpiB,UAAU,kEACVsK,QAAO,sBAAE,gCAAAjB,EAAA,2DACH2U,EAAUJ,EAAYnL,QAAO,SAAC5S,GAAD,OAAQA,EAAEge,UAC/BpW,OAFL,gBAGLyF,EAAW8Q,EAAQ,GAAGnU,OAHjB,8BAKDwc,EAASL,EACVvT,QAAO,SAAC5S,GAAD,OAAOA,EAAE6L,YAChB2B,KAAI,SAACxN,GAAD,OACHtE,OAAOC,OAAO,GAAIgK,EAAW,CAC3B6f,aAAcxlB,EAAE6C,QAAU,UAAY,SACtC8D,QAAS3G,EAAE6C,QACP,CAAEA,QAAS7C,EAAE6C,SACb,CAAEV,OAAQnC,EAAEmC,OAAQrG,OAAQkE,EAAElE,QAClC2a,WAAYzW,EAAE+P,IACduK,eAAgBta,EAAE4U,OAClBtB,YAAatT,EAAEsT,YACfC,aAAcvT,EAAEuT,aAChBF,aAAcrT,EAAEqT,aAChBwC,mBAAoB7V,EAAE6V,mBACtBzL,SAAUpK,EAAEoK,cAGlBd,GAAW,GAtBN,S1C9XdvI,EAAgB,2B0CqZ0BylB,GAvB5B,OAuBD/kB,EAvBC,OAwBL6H,GAAW,GACP7H,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,cAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QAAS,uCACTvB,KAAM,aAGV8mB,KA3CG,6CAgDT,kBAAC,GAAD,CACE/X,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASA,EACTnJ,KAAM,KA9DV,eCxEG8mB,GArgBO,SAAC,GAIhB,IAHLC,EAGI,EAHJA,oBACAC,EAEI,EAFJA,2BACAC,EACI,EADJA,6BACI,EACwBxf,mBAAS,IADjC,mBACG5L,EADH,KACWokB,EADX,OAEoBxY,mBAAS,IAF7B,mBAEG3L,EAFH,KAESqnB,EAFT,OAG8B1b,mBAAS,WAHvC,mBAGG2Y,EAHH,KAGcC,EAHd,OAI8C5Y,mBAAS,GAJvD,mBAIG6Y,EAJH,KAIsBC,EAJtB,OAKoB9Y,mBAAS,GAL7B,mBAKGqS,EALH,KAKSC,EALT,OAMgCtS,mBAAS,IANzC,mBAMG2b,EANH,KAMeC,EANf,OAOwB5b,mBAAS,IAPjC,mBAOGzK,EAPH,KAOW0jB,EAPX,OAQgCjZ,mBAAS,CAAEqG,IAAK,GAAI1C,MAAO,KAR3D,mBAQGuV,EARH,KAQeC,EARf,OASsCnZ,mBAAS,IAT/C,mBASG3K,EATH,KASkBoqB,EATlB,OAUsDzf,mBAAS,IAV/D,mBAUG0f,EAVH,KAU0BC,EAV1B,OAW0B3f,oBAAS,GAXnC,mBAWGsZ,EAXH,KAWYC,EAXZ,KAaJpZ,qBAAU,WAAM,4CACd,4BAAAiC,EAAA,sEACmB3D,KADnB,QACM5E,EADN,QAEY+I,OACR6c,EACE5lB,EAAKgZ,UAAUzM,KAAI,SAACxN,GAAD,OAAOtE,OAAOC,OAAO,GAAIqE,EAAG,CAAE6L,UAAU,QAJjE,4CADc,uBAAC,WAAD,wBAUd6B,KACC,CAACgT,IAEJ,IAAM6C,GAAQ,CAAC,MAAO,QAAS,UAE/Bhc,qBAAU,WACR,IAAIqZ,EAAG,aAAOnkB,GACVA,EAAcmL,SACZjL,IACgB,YAAdojB,EACFa,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OACfA,EAAEgnB,QAAQrb,cAAckH,SAASlW,EAAOgP,kBAEnB,gBAAdoU,IACTa,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OACfA,EAAEqjB,YAAY1X,cAAckH,SAASlW,EAAOgP,oBAK9CoX,IACFnC,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OAAOA,EAAEvE,OAASsnB,MAGjCzC,EAAW7S,MACbmT,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OAAOA,EAAEsgB,EAAW7S,OAAS6S,EAAWvV,UAG3Dgc,EAAyBnG,MAE1B,CAACjkB,EAAQomB,EAAYtmB,EAAe6jB,IAGvC,IAAIO,GAAa,CAAc,GAAZpH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GAC/CoH,GAAW,IAAMiG,EAAsBlf,SACzCiZ,GAAW,GACTA,GAAW,IAAMA,GAAW,GAAKiG,EAAsBlf,SAG3D,IAEMkZ,GAAW,uCAAG,4CAAAtX,EAAA,0FAEhBwZ,EAAcvnB,GAED,SAAXD,EAJc,iBAKZqQ,EAAWib,EAAsBlU,QAAO,SAAC5S,GAAD,OAAOA,EAAE6L,aACxCjE,SACX8e,EAAoB7a,EAAS,IAC7B8a,KARc,0BAUI,WAAXnrB,EAVO,sBAWZqQ,EAAWib,EAAsBlU,QAAO,SAAC5S,GAAD,OAAOA,EAAE6L,aACxCjE,OAZG,kCAaE5B,GACd6F,EAAS2B,KAAI,SAACxN,GAAD,OAAOA,EAAE+P,OACtB,CAAEyT,OAAQ,YAfE,SAaV/hB,EAbU,QAiBNuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,cAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iCACPC,QAAS,mDACTvB,KAAM,aAGV2D,EAAMwK,SAAS,CACbnO,KAAM,cACNiB,aAAc,CAAEuH,OAAQ3F,KAAKC,UAGjCoiB,GAAYD,GAxCE,4CAAH,qDA6CjB,OACE,yBAAKvgB,UAAU,+BACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCAAf,iBAGA,yBAAKA,UAAU,kBAAf,0CAIF,yBACEA,UAAU,qDACVsK,QAAS,kBAAMmc,MAFjB,aAQJ,yBAAKzmB,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,0BACb,yBACEsK,QAAS,WACPuY,EAAc,IACdF,EAAQ,IACRvC,EAAc,CAAE9S,IAAK,GAAI1C,MAAO,MAElC5K,UAAS,kCACN4iB,GAAezC,EAAW7S,IAAuB,YAAjB,iBAPrC,QAUQhR,EAAcmL,OAVtB,KAvEK,CAAC,OAAQ,UAAW,WAmFf4F,KAAI,SAACxN,EAAG2H,GAAJ,OACZ,kBAAC,IAAMqM,SAAP,CAAgBvG,IAAG,iBAAY9F,IAC7B,yBAAKxH,UAAU,4BAAf,KACA,yBACEsK,QAAS,kBACP8V,GAAc,SAACxR,GAAD,OACZrT,OAAOC,OAAO,CAAE8R,IAAK,SAAU1C,MAAO/K,QAG1CG,UAAS,kCACY,WAAnBmgB,EAAW7S,KAAoB6S,EAAWvV,QAAU/K,EAChD,eACA,cAGLA,EAZH,KAYQvD,EAAcmW,QAAO,SAAC7S,GAAD,OAAOA,EAAEyjB,SAAWxjB,KAAG4H,OAZpD,UAiBN,yBAAKzH,UAAU,0CACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,qBACbC,SAAU,SAACsC,GAAD,OAAWrB,EAAU,CAAC,UAAUqB,KAC1C1C,MAAO,CAAC,UACRC,QAAShjB,GAAkB,gBAC3B2E,UAAU,gCAIhB,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,qBACbC,SAAU,SAACsC,GAAD,OAAW6B,EAAQS,GAAMtC,KACnC1C,MAAOgF,GACP/E,QAAS/iB,GAAc,cACvB0E,UAAU,gCAIhB,yBACEsK,QAAS,kBAAMqW,IAAY,IAC3B3gB,UAAU,yEAFZ,WAQJ,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CACEue,aAAa,QACbC,SAAU,SAACsC,GAAD,OACRjB,EAAa,CAAC,UAAW,eAAeiB,KAE1C9gB,UAAU,qBACVoe,MAAO,CAAC,UAAW,eACnBC,QAAO,oBAAeuB,MAG1B,yBAAK5f,UAAU,uBACb,yBAAKA,UAAU,4BACb,kBAAC,KAAD,CACEmO,SAAS,OACT5N,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRsI,MAAO,UAGX,2BACEzY,UAAU,8BACV4K,MAAOpO,EACPuS,SAAU,SAACC,GACTA,EAAEC,UACFiR,EAAUlR,EAAEG,OAAOvE,aAM7B,yBAAK5K,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEwe,SAAU,SAACsC,GAAD,OACRjB,EAAa,CAAC,UAAW,eAAeiB,KAE1C9gB,UAAU,sCACVoe,MAAO,CAAC,UAAW,eACnBC,QAAO,oBAAeuB,KAExB,yBAAK5f,UAAU,yBACb,kBAAC,KAAD,CACEmO,SAAS,OACT5N,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRsI,MAAO,UAGX,2BACE7N,MAAOpO,EACPuS,SAAU,SAACC,GACTA,EAAEC,UACFiR,EAAUlR,EAAEG,OAAOvE,QAErB5K,UAAU,wBACVO,MAAO,CAAEwgB,SAAU,eAM7B,yBAAK/gB,UAAU,kBACb,kBAAC,KAAD,CACEO,MAAO,CAAEwgB,SAAU,QACnBC,aAAc,WACZjB,EACED,EAAoB,EAAI,EACpBA,EAAoB,EACpBA,IAGRmB,cAAe,WACblB,EACED,EAAoB,GAAK,EACrBA,EAAoB,EACpBA,KAIR,yBAAK9f,UAAU,oBACb,2BAAOA,UAAU,yBACf,+BACE,4BACE,wBAAIA,UAAU,eACZ,kBAAC,GAAD,CACEqK,MAAO,UACP6W,QACEyF,EACGhU,MAAM+N,GAAW,GAAIA,GAAW,IAChCjO,QAAO,SAAC5S,GAAD,OAAOA,EAAE6L,YAAUjE,SAC7BiZ,GAAW,GAAKA,GAAW,GAE7B3R,SAAU,SAACC,GACT4X,GAAyB,SAAChY,GAExB,IADA,IAAI6R,EAAG,aAAO7R,GAERpH,EAAIkZ,GAAW,GACnBlZ,EAAIkZ,GAAW,GACflZ,IAEAiZ,EAAIjZ,GAAGkE,SAAWsD,EAAEG,OAAO+R,QAE7B,OAAOT,SAKf,wBAAIzgB,UAAU,wCAAd,WAGA,wBAAIA,UAAU,qDAEV,CAAC,OAAQ,cAAe,WAAY,UAClC8f,IAIN,wBAAI9f,UAAU,qDACZ,sCAEF,wBAAIA,UAAU,qDACZ,6CAEF,wBAAIA,UAAU,qDACZ,0CAEF,wBAAIA,UAAU,qDACZ,0CAIN,+BACG2mB,EAAsBlf,OACrBkf,EACGhU,MAAmB,GAAZ2G,EAAO,GAAqB,GAAZA,EAAO,GAAS,GACvCjM,KAAI,SAACxN,EAAG2H,GAAJ,OACH,wBACExH,UAAU,2BACVsN,IAAG,yBAAoB9F,IAEvB,wBAAIxH,UAAU,eACZ,kBAAC,GAAD,CACEqK,MAAO,UACP6W,QAASrhB,EAAE6L,SACXqD,SAAU,SAACC,GACT4X,GAAyB,SAAChY,GACxB,IAAI6R,EAAG,aAAO7R,GAGd,OAFA6R,EAAiB,GAAZnH,EAAO,GAAS9R,GAAGkE,SACtBsD,EAAEG,OAAO+R,QACJT,SAKf,wBAAIlgB,MAAO,CAAEyS,WAAY,WACvB,yBAAKhT,UAAU,QAAQH,EAAEgnB,SACzB,yBAAK7mB,UAAU,UACb,yBACEA,UAAU,8BACVsK,QAAS,WACPic,EAAoB1mB,GACpB2mB,MAJJ,QASA,yBAAKxmB,UAAU,QAAf,KACA,yBACEA,UAAU,6BACVsK,QAAO,sBAAE,4BAAAjB,EAAA,sEACSxD,GACd,CAAChG,EAAE+P,KACH,CAAEyT,OAAQ,YAHL,QACH/hB,EADG,QAKCuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,cAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,2BACPC,QACE,wCACFvB,KAAM,aAGV2D,EAAMwK,SAAS,CACbnO,KAAM,cACNiB,aAAc,CAAEuH,OAAQ3F,KAAKC,UAGjCoiB,GAAYD,GA7BL,4CAFX,YAsCJ,wBACEvgB,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGN,6BAAMjgB,EAAEvE,OAEV,wBACE0E,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGN,yBACEvf,MAAO,CAAEwgB,SAAU,SACnB/gB,UAAU,+CACVsK,QAAS,SAAC0E,GACR,IAAIG,EAASH,EAAEkM,cAEb/L,EAAOgM,UAAUC,SAAS,gBAE1BjM,EAAOgM,UAAUE,OAAO,gBAExBlM,EAAOgM,UAAUG,IAAI,kBAIxBzb,EAAEqjB,cAGP,wBACEljB,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGN,yBAAK9f,UAAU,eACb,yBAAKO,MAAO,CAAEb,MAAO,SAArB,SACA,6BACE,yBAAKa,MAAO,CAAEyS,WAAY,WACvB0D,KAAKC,OACJ,IAAIxY,KAAK0B,EAAEyjB,YACX,2BAKR,yBAAKtjB,UAAU,UACb,yBAAKO,MAAO,CAAEb,MAAO,SAArB,OACA,6BACE,yBAAKa,MAAO,CAAEyS,WAAY,WACvB0D,KAAKC,OACJ,IAAIxY,KAAK0B,EAAE0jB,UACX,4BAMV,wBACEvjB,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGLjgB,EAAEwjB,YAKX,4BACE,wBAAIjC,QAAS,EAAGphB,UAAU,qBAA1B,yBAUd,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,YACb,kBAAC,GAAD,CACEsT,MAAOpI,KAAKmM,KAAKsP,EAAsBlf,OAAS,GAChDgB,QAAS6Q,EACT/F,WAAYgG,W,8BCjgBxBuN,GAAYC,cAAW,SAACxgB,GAAD,MAAY,CACvCygB,UAAW,CACT,qCAAsC,CACpCC,OAAQ,aAKR1gB,GAAQ0Y,aAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,mBAERC,UAAW,CACTD,KAAM,cA2BG8H,GAtBM,SAAC3nB,GACpB,IAAM4nB,EAAUL,KAChB,OACE,kBAAC,KAAD,CAAkBvgB,MAAOA,IACvB,kBAAC,KAAD,iBACMhH,EADN,CAEE4nB,QAASA,EACTC,UAAQ,EACR/oB,GAAG,gBACHgpB,uBAAqB,EACrBC,YAAa,SAACxb,GAAD,OACX,kBAACyb,GAAA,EAAD,iBACMzb,EADN,CAEE0b,QAAQ,WACRnY,YAAa9P,EAAM8P,qBCsVhBrG,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACL9N,YAAaC,EAAMD,YACnBS,KAAMR,EAAMQ,MACTqN,KAIQD,EAhXU,SAAC,GAKnB,IAJLye,EAII,EAJJA,oBACArF,EAGI,EAHJA,QACAjnB,EAEI,EAFJA,YACAS,EACI,EADJA,KAEMwnB,EAAQ,CAAC,MAAO,QAAS,UAE3BsE,EAAcvpB,KAAKC,MAHnB,EAKoC6I,mBAAS,CAC/C3L,KAAM,GACNurB,QAAS,GACTvD,WAAYoE,EACZnE,SAAUmE,EACVC,UAAW,GACXzE,YAAa,GACbG,OAAQ,YAZN,mBAKG1mB,EALH,KAKiBirB,EALjB,KAeElE,EAAW,CAAC,OAAQ,UAAW,WAfjC,EAiB0Bzc,mBAAS,IAjBnC,mBAiBGgG,EAjBH,KAiBYC,EAjBZ,OAkB0BjG,oBAAS,GAlBnC,mBAkBG0B,EAlBH,KAkBYQ,EAlBZ,KAoBEyU,EAAc,CAClB,CAAEC,MAAOlhB,EAAakqB,QAAShd,MAAO,uBACtC,CAAEgU,MAAOlhB,EAAarB,KAAMuO,MAAO,4BACnC,CACEgU,MAAOlhB,EAAagrB,UAAUlgB,OAC9BoC,MAAO,gCAET,CAAEgU,MAAOlhB,EAAaumB,YAAarZ,MAAO,4BAG5CzC,qBAAU,WACRjI,OAAO8b,SAAS,EAAG,KAClB,IAEH7T,qBAAU,WACRwgB,EAAgBH,KACf,CAACA,IAUJ,OACE,yBAAKznB,UAAU,6BACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,qCAAf,qBAGA,yBAAKA,UAAU,kBAAf,+BAEF,yBAAKA,UAAU,SAASO,MAAO,CAAEuS,SAAU,UACzC,yBAAK9S,UAAU,uBACb,yBAAKA,UAAU,eAAf,WACA,yBAAKA,UAAU,UACb,2BACE+d,SAAgC,WAAtBphB,EAAarB,KACvBA,KAAK,OACL0E,UAAS,gBACe,WAAtBrD,EAAarB,KACT,uBACA,cAHG,SAKTsP,MAAOjO,EAAakqB,QACpB9X,SAAU,SAACC,GACTA,EAAEC,UACF2Y,GAAgB,SAAChZ,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEiY,QAAS7X,EAAEG,OAAOvE,gBAMtD,yBAAK5K,UAAU,uBACb,yBAAKA,UAAU,eAAf,QACA,kBAAC,GAAD,CACE+d,SAAgC,WAAtBphB,EAAarB,KACvBijB,aAAa,mBACbve,UAAS,qBACe,WAAtBrD,EAAarB,KAAoB,YAAc,GADxC,WAGT+iB,QAAS1hB,EAAarB,KAAOqB,EAAarB,KAAO,SACjD8iB,MAAOgF,EACP5E,SAAU,SAACsC,GAAD,OACR8G,GAAgB,SAAChZ,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEtT,KAAM8nB,EAAMtC,YAK9C,yBAAK9gB,UAAU,uBACb,yBAAKA,UAAU,eAAf,mBACA,kBAAC,GAAD,CACE+d,SAAgC,WAAtBphB,EAAarB,KACvBsP,MAAOjO,EAAagrB,UACpB5Y,SAAU,SAACC,EAAG6Y,GACZD,GAAgB,SAAChZ,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE+Y,UAAWE,QAGzCxY,YAAa,qBACbhF,MAAO,UACPrK,UAAS,6CACe,WAAtBrD,EAAarB,KAAoB,YAAc,IAEjDwsB,QAASvsB,OAAO6gB,KAtEE,CAC1B2L,IAAK,MACL,YAAa,OACb,aAAc,gBACd,iBAAkB,WAClB,eAAgB,WAiEkChc,OACxCxQ,OAAOyb,OAAO7b,GAAasX,QAAO,SAAC5S,GAAD,MAAoB,YAAbA,EAAEwjB,WAE7C2E,eAAgB,SAACC,GAAD,OACdA,EAAOlsB,aAAeksB,EAAOlsB,aAAeksB,MAIlD,yBAAKjoB,UAAU,uBACb,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,UACb,8BACE+d,SAAgC,WAAtBphB,EAAarB,KACvBsP,MAAOjO,EAAaumB,YACpBnU,SAAU,SAACC,GACTA,EAAEC,UACF,IAAIC,EAAOF,EAAEG,OAAOvE,MAChBsE,EAAKJ,MAAM,KAAKrH,QAAU,KAC5BmgB,GAAgB,SAAChZ,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEsU,YAAahU,QAI7ClP,UAAS,UACe,WAAtBrD,EAAarB,KACT,0BACA,iBAHG,UAKTiF,MAAO,CAAEzB,OAAQ,YAIrB,yBACEkB,UAAS,iBACPrD,EAAaumB,YAAYpU,MAAM,KAAKrH,QAAU,IAC1C,aACA,gBAGL9K,EAAaumB,YACV,IAAMvmB,EAAaumB,YAAYpU,MAAM,KAAKrH,OAC1C,IATN,eAaF,yBAAKzH,UAAU,kBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBAAf,QACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBAAgBO,MAAO,CAAEb,MAAO,UAC7C,kBAAC,KAAD,CACEkL,MAAO8L,KAAKC,OACV,IAAIxY,KAAKxB,EAAa2mB,YACtB,cAEFK,UAAW,SAACpkB,GAAD,OACT,yBAAKS,UAAU,qBACb,kBAAC,KAAD,CACEO,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGV,yCACE8N,SAAgC,WAAtBphB,EAAarB,MACnBiE,EAFN,CAGES,UAAS,qBACe,WAAtBrD,EAAarB,KAAoB,YAAc,GADxC,oBAGT+T,YAAY,kBAIlBuU,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAI5jB,EAAI,IAAI9B,KAAKxB,EAAa2mB,YAC1BQ,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClBlkB,EAAEmkB,YAAYN,GACd7jB,EAAEokB,SAASL,GACX/jB,EAAEqkB,QAAQJ,GACV0D,GAAgB,SAAChZ,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE0U,WAAYrjB,EAAEskB,oBAMlD,yBACEvkB,UAAS,gDACe,WAAtBrD,EAAarB,KAAoB,YAAc,IAEjDiF,MAAO,CAAEb,MAAO,UAEhB,kBAAC,KAAD,CACEa,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGa,WAAtBtT,EAAarB,KACZ,yBAAK0E,UAAU,cACZ0W,KAAKC,OACJ,IAAIxY,KAAKxB,EAAa2mB,YACtB,YAIJ,kBAAC,KAAD,CACEkB,UAAW,KACXC,UAAW,KACXzkB,UAAU,aACV+O,SAAU,SAAC1F,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyF,MAAM,KADhB,mBACA7D,EADA,KACGG,EADH,KAEDsZ,EAAU,IAAIvmB,KAAKxB,EAAa2mB,YACpCoB,EAAQC,SAAS1Z,GACjByZ,EAAQE,WAAWxZ,GACnBwc,GAAgB,SAAChZ,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB0U,WAAYoB,EAAQH,iBAK5B3Z,MAAO,IAAIzM,KAAKxB,EAAa2mB,oBAS7C,yBAAKtjB,UAAU,uBACb,yBAAKA,UAAU,eAAf,UACA,kBAAC,GAAD,CACE+d,SAAgC,WAAtBphB,EAAarB,KACvBijB,aAAa,mBACbve,UAAS,qBACe,WAAtBrD,EAAarB,KAAoB,YAAc,GADxC,WAGT+iB,QACE1hB,EAAa0mB,OAAS1mB,EAAa0mB,OAAS,gBAE9CjF,MAAOsF,EACPlF,SAAU,SAACsC,GAAD,OACR8G,GAAgB,SAAChZ,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEyU,OAAQK,EAAS5C,YAKnD,yBACEvgB,MAAO,CAAEzB,OAAQ,OAAQ6Q,QAAS1C,EAAU,EAAI,GAChDjN,UAAU,sDAETiN,GAEoB,WAAtBtQ,EAAarB,KACZ,yBAAK0E,UAAU,kBACb,yBACEA,UAAU,4EACVsK,QAAS8X,GAFX,UAMA,yBACEpiB,UAAU,kEACVsK,QAAO,sBAAE,gCAAAjB,EAAA,2DACH2U,EAAUJ,EAAYnL,QAAO,SAAC5S,GAAD,OAAQA,EAAEge,UAC/BpW,OAFL,gBAGLyF,EAAW8Q,EAAQ,GAAGnU,OAHjB,8BAKLV,GAAW,GALN,SAOW0b,GAAKloB,GAPhB,UAOD2E,EAPC,OAQL6H,GAAW,IACP7H,EAAIuI,MATH,iBAUH5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAfP,+BAmBH2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,sBACPC,QAAS,uCACTvB,KAAM,aAxBP,UA2BqBiI,EAAQ3H,EAAKgU,KA3BlC,QA2BCpG,EA3BD,OA4BHvK,EAAMwK,SAAS,CACbnO,KAAM,WACNM,KAAM4N,IAER4Y,IAhCG,6CAqCT,kBAAC,GAAD,CACE/X,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASA,EACTnJ,KAAM,KAnDV,SAyDF,yBAAKQ,UAAU,kBACb,yBACEA,UAAU,kEACVsK,QAAS8X,GAFX,iBCpCGpZ,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACL9N,YAAaC,EAAMD,YACnBS,KAAMR,EAAMQ,MACTqN,KAIQD,EAvTY,SAAC,GAAoC,IAAlC7N,EAAiC,EAAjCA,YAAainB,EAAoB,EAApBA,QAASxmB,EAAW,EAAXA,KAC5CwnB,EAAQ,CAAC,MAAO,QAAS,UAC3BsE,EAAcvpB,KAAKC,MAFsC,EAGrB6I,mBAAS,CAC/C3L,KAAM,GACNurB,QAAS,GACTc,UAAW,GACXrE,WAAYoE,EACZnE,SAAUmE,EACVxE,YAAa,GACbG,OAAQ,SAVmD,mBAGtD1mB,EAHsD,KAGxCirB,EAHwC,OAa/B3gB,mBAAS,IAbsB,mBAatDgG,EAbsD,KAa7CC,EAb6C,OAc/BjG,oBAAS,GAdsB,mBActD0B,EAdsD,KAc7CQ,EAd6C,KAevDua,EAAW,CAAC,OAAQ,UAAW,WAC/B9F,EAAc,CAClB,CAAEC,MAAOlhB,EAAakqB,QAAShd,MAAO,uBACtC,CAAEgU,MAAOlhB,EAAarB,KAAMuO,MAAO,4BACnC,CACEgU,MAAOlhB,EAAagrB,UAAUlgB,OAC9BoC,MAAO,gCAET,CAAEgU,MAAOlhB,EAAaumB,YAAarZ,MAAO,4BAW5C,OACE,yBAAK7J,UAAU,6BACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,qCAAf,wBAGA,yBAAKA,UAAU,kBAAf,yDAIF,yBAAKA,UAAU,SAASO,MAAO,CAAEuS,SAAU,UACzC,yBAAK9S,UAAU,uBACb,yBAAKA,UAAU,eAAf,WACA,yBAAKA,UAAU,UACb,2BACE1E,KAAK,OACL0E,UAAU,yBACV4K,MAAOjO,EAAakqB,QACpB9X,SAAU,SAACC,GACTA,EAAEC,UACF2Y,GAAgB,SAAChZ,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEiY,QAAS7X,EAAEG,OAAOvE,gBAMtD,yBAAK5K,UAAU,uBACb,yBAAKA,UAAU,eAAf,QACA,kBAAC,GAAD,CACEue,aAAa,mBACbve,UAAU,2BACVqe,QAAS1hB,EAAarB,KAAOqB,EAAarB,KAAO,SACjD8iB,MAAOgF,EACP5E,SAAU,SAACsC,GAAD,OACR8G,GAAgB,SAAChZ,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEtT,KAAM8nB,EAAMtC,YAK9C,yBAAK9gB,UAAU,uBACb,yBAAKA,UAAU,eAAf,mBAEA,kBAAC,GAAD,CACE4K,MAAOjO,EAAagrB,UACpB5Y,SAAU,SAACC,EAAG6Y,GACZD,GAAgB,SAAChZ,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE+Y,UAAWE,QAGzCxY,YAAa,qBACbhF,MAAO,UACPrK,UAAU,sCACV8nB,QAASvsB,OAAO6gB,KA9DE,CAC1B2L,IAAK,MACL,YAAa,OACb,aAAc,gBACd,iBAAkB,WAClB,eAAgB,WAyDkChc,OACxCxQ,OAAOyb,OAAO7b,GAAasX,QAAO,SAAC5S,GAAD,MAAoB,YAAbA,EAAEwjB,WAE7C2E,eAAgB,SAACC,GAAD,OACdA,EAAOlsB,aAAeksB,EAAOlsB,aAAeksB,MAIlD,yBAAKjoB,UAAU,uBACb,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,UACb,8BACE4K,MAAOjO,EAAaumB,YACpBnU,SAAU,SAACC,GACTA,EAAEC,UACF,IAAIC,EAAOF,EAAEG,OAAOvE,MAChBsE,EAAKJ,MAAM,KAAKrH,QAAU,KAC5BmgB,GAAgB,SAAChZ,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEsU,YAAahU,QAI7ClP,UAAU,uBACVO,MAAO,CAAEzB,OAAQ,YAIrB,yBACEkB,UAAS,iBACPrD,EAAaumB,YAAYpU,MAAM,KAAKrH,QAAU,IAC1C,aACA,gBAGL9K,EAAaumB,YACV,IAAMvmB,EAAaumB,YAAYpU,MAAM,KAAKrH,OAC1C,IATN,eAaF,yBAAKzH,UAAU,kBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBAAf,QACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBAAgBO,MAAO,CAAEb,MAAO,UAC7C,kBAAC,KAAD,CACEkL,MAAO8L,KAAKC,OACV,IAAIxY,KAAKxB,EAAa2mB,YACtB,cAEFK,UAAW,SAACpkB,GAAD,OACT,yBAAKS,UAAU,qBACb,kBAAC,KAAD,CACEO,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGV,2CACM1Q,EADN,CAEES,UAAU,8BACVqP,YAAY,kBAIlBuU,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAI5jB,EAAI,IAAI9B,KAAKxB,EAAa2mB,YAC1BQ,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClBlkB,EAAEmkB,YAAYN,GACd7jB,EAAEokB,SAASL,GACX/jB,EAAEqkB,QAAQJ,GACV0D,GAAgB,SAAChZ,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE0U,WAAYrjB,EAAEskB,oBAMlD,yBACEvkB,UAAU,yCACVO,MAAO,CAAEb,MAAO,UAEhB,kBAAC,KAAD,CACEa,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRF,KAAM,UAGV,kBAAC,KAAD,CACEuU,UAAW,KACXC,UAAW,KACXzkB,UAAU,aACV+O,SAAU,SAAC1F,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyF,MAAM,KADhB,mBACA7D,EADA,KACGG,EADH,KAEDsZ,EAAU,IAAIvmB,KAAKxB,EAAa2mB,YACpCoB,EAAQC,SAAS1Z,GACjByZ,EAAQE,WAAWxZ,GACnBwc,GAAgB,SAAChZ,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB0U,WAAYoB,EAAQH,iBAK5B3Z,MAAO,IAAIzM,KAAKxB,EAAa2mB,oBAQ3C,yBAAKtjB,UAAU,uBACb,yBAAKA,UAAU,eAAf,UACA,kBAAC,GAAD,CACEue,aAAa,mBACbve,UAAU,qBACVqe,QACE1hB,EAAa0mB,OAAS1mB,EAAa0mB,OAAS,gBAE9CjF,MAAOsF,EACPlF,SAAU,SAACsC,GAAD,OACR8G,GAAgB,SAAChZ,GAAD,OACdrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEyU,OAAQK,EAAS5C,YAKnD,yBACEvgB,MAAO,CAAEzB,OAAQ,OAAQ6Q,QAAS1C,EAAU,EAAI,GAChDjN,UAAU,sDAETiN,GAEH,yBAAKjN,UAAU,kBACb,yBACEA,UAAU,4EACVsK,QAAS8X,GAFX,UAMA,yBACEpiB,UAAU,kEACVsK,QAAO,sBAAE,gCAAAjB,EAAA,2DACH2U,EAAUJ,EAAYnL,QAAO,SAAC5S,GAAD,OAAQA,EAAEge,UAC/BpW,OAFL,gBAGLyF,EAAW8Q,EAAQ,GAAGnU,OAHjB,8BAKLV,GAAW,GALN,SAOWxD,GAAmBhJ,GAP9B,UAOD2E,EAPC,OAQL6H,GAAW,IACP7H,EAAIuI,MATH,iBAUH5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,aAfP,+BAmBH2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,uBACPC,QAAS,wCACTvB,KAAM,aAxBP,UA2BqBiI,EAAQ3H,EAAKgU,KA3BlC,QA2BCpG,EA3BD,OA4BHvK,EAAMwK,SAAS,CACbnO,KAAM,WACNM,KAAM4N,IAGR4Y,IAjCG,6CAsCT,kBAAC,GAAD,CACE/X,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASA,EACTnJ,KAAM,KApDV,c,UC0TKwJ,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACLvN,QAASN,EAAMM,QACfP,YAAaC,EAAMD,aAChB8N,KAIQD,EAziBD,SAAC,GAMR,IALLkf,EAKI,EALJA,YACAC,EAII,EAJJA,mBACAC,EAGI,EAHJA,qBACAjtB,EAEI,EAFJA,YAEI,KADJO,QAE4BuL,mBAAS,KADjC,mBACG5L,EADH,KACWokB,EADX,OAEoBxY,mBAAS,IAF7B,mBAEGyY,EAFH,KAESC,EAFT,OAG8B1Y,mBAAS,QAHvC,mBAGG2Y,EAHH,KAGcC,EAHd,OAI8C5Y,mBAAS,GAJvD,mBAIG6Y,EAJH,KAIsBC,EAJtB,OAKoB9Y,mBAAS,GAL7B,mBAKGqS,EALH,KAKSC,EALT,OAMgCtS,mBAAS,IANzC,mBAMG+Y,EANH,KAMeC,EANf,OAOoChZ,mBAAS,IAP7C,mBAOGohB,EAPH,KAOiBC,EAPjB,OAQwBrhB,mBAAS,IARjC,mBAQGzK,EARH,KAQW0jB,EARX,OAUsBjZ,mBAAS,IAV/B,mBAUGshB,EAVH,KAUUC,EAVV,OAWsCvhB,mBAAS,IAX/C,mBAWGwhB,EAXH,KAWkBC,EAXlB,OAY0BzhB,oBAAS,GAZnC,oBAYGsZ,GAZH,MAYYC,GAZZ,MAcJpZ,qBAAU,WAAM,4CACd,4BAAAiC,EAAA,sEACmB/E,KADnB,OACMxD,EADN,OAEE0nB,EAAS1nB,EAAKuM,KAAI,SAACxN,GAAD,OAAOtE,OAAOC,OAAO,GAAIqE,EAAG,CAAE6L,UAAU,QAF5D,4CADc,uBAAC,WAAD,wBAMd6B,KACC,CAACgT,KAEJnZ,qBAAU,WACR,IAAIqZ,EAAG,aAAO8H,GACVA,EAAM9gB,SACJjL,IACgB,SAAdojB,EACFa,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OACfA,EAAE9D,aAAayP,cAAckH,SAASlW,EAAOgP,kBAExB,UAAdoU,IACTa,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OACfA,EAAE3D,MAAMsP,cAAckH,SAASlW,EAAOgP,oBAKxCwU,IACFS,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OAAOA,EAAE6f,OAASM,MAGjCqI,IACF5H,EAAMA,EAAIhO,QAAO,SAAC5S,GAAD,OAAOA,EAAEwjB,SAAWgF,OAGzCK,EAAiBjI,KAChB,CAACjkB,EAAQwjB,EAAYuI,EAAOF,IAG/B,IAAI3H,GAAa,CAAc,GAAZpH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GAC/CoH,GAAW,IAAM+H,EAAchhB,SACjCiZ,GAAW,GAAKA,GAAW,IAAMA,GAAW,GAAK+H,EAAchhB,SAGjE,IAAMkZ,GAAW,uCAAG,8CAAAtX,EAAA,0FAEhB4W,EAAuB,QAATP,EAAiB,GAAKA,KAElChU,EAAW+c,EAAchW,QAAO,SAAC5S,GAAD,OAAOA,EAAE6L,aAEhCjE,OANK,oBAOD,SAAXpM,EAPY,gBAQd6sB,EAAYxc,EAAS,IACrByc,IATc,8BAWVrkB,EAAS,GACE,WAAXzI,EACFyI,EAAM,OAAa,UACC,eAAXzI,EACTyI,EAAM,OAAa,WACC,UAAXzI,EACTyI,EAAM,OAAa,UACC,aAAXzI,IACTyI,EAAM,OAAa,UAnBP,UAqBEgB,GACd4G,EAAS2B,KAAI,SAACxN,GAAD,OAAOA,EAAE+P,OACtBlE,EAAS2B,KAAI,SAACxN,GAAD,OAAO1E,EAAY0E,EAAE+P,KAAKA,OACvC9L,GAxBY,SAqBVxC,EArBU,QA2BNuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,cAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,gBACPC,QAAS,iCACTvB,KAAM,aAGVklB,IAAYD,IACRoI,EAVC,eAUqBxtB,GAC1BuQ,EAAS/B,SAAQ,SAAC9J,GAChB8oB,EAAe9oB,EAAE+P,KAAKyT,OAASvf,EAAM,UAEvC7E,EAAMwK,SAAS,CACbnO,KAAM,kBACNH,YAAawtB,KApDH,4CAAH,qDA2DXC,GAAS,uCAAG,WAAO9kB,EAAQc,EAAKG,GAApB,eAAAsE,EAAA,sEACAvE,GAAkBF,EAAKG,EAAMjB,GAD7B,QACZxC,EADY,QAERuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,cAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,gBACPC,QAAS,iCACTvB,KAAM,aAGVklB,IAAYD,KApBE,2CAAH,0DAuBT4C,GAAU,CAAC,QAAS,aAAc,WAAY,UAE9CvC,GAAU,CAAC,QAAS,OAAQ,aAAc,WAAY,UAC5D,OACE,yBAAK5gB,UAAU,+BACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCAAf,SACA,yBAAKA,UAAU,kBAAf,+BAEF,yBACEA,UAAU,qDACVsK,QAAS,kBAAM8d,MAFjB,aAQJ,yBAAKpoB,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,0BACb,yBACEA,UAAS,mBACPqoB,EAAe,YAAc,gBAE/B/d,QAAS,kBAAMge,EAAgB,MAJjC,QAMQC,EAAM9gB,OANd,KAtBK,CAAC,SAAU,WAAY,WA8BlB4F,KAAI,SAACxN,EAAG2H,GAAJ,OACZ,kBAAC,IAAMqM,SAAP,CAAgBvG,IAAG,iBAAY9F,IAC7B,yBAAKxH,UAAU,4BAAf,KACA,yBACEA,UAAS,kCACPqoB,IAAiBxoB,EAAI,eAAiB,aAExCyK,QAAS,kBAAMge,EAAgBzoB,KAE9BA,EANH,KAMQ0oB,EAAM9V,QAAO,SAAC7S,GAAD,OAAOA,EAAEyjB,SAAWxjB,KAAG4H,OAN5C,UAWN,yBAAKzH,UAAU,0CACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,qBACbC,SAAU,SAACsC,GAAD,OAAWrB,EAAU0D,GAAQrC,KACvC1C,MAAO+E,GACP9E,QAAShjB,GAAkB,gBAC3B2E,UAAU,gCAIhB,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,qBACbC,SAAU,SAACsC,GAAD,OACRnB,EAAQ,CAAC,MAAO,gBAAiB,QAAQmB,KAE3C1C,MAAO,CAAC,MAAO,gBAAiB,QAChCC,QAASqB,GAAc,cACvB1f,UAAU,gCAIhB,yBACEsK,QAAS,kBAAMqW,IAAY,IAC3B3gB,UAAU,yEAFZ,WAQJ,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CACEue,aAAa,QACbC,SAAU,SAACsC,GAAD,OAAWjB,EAAa,CAAC,OAAQ,SAASiB,KACpD9gB,UAAU,qBACVoe,MAAO,CAAC,OAAQ,SAChBC,QAAO,oBAAeuB,MAG1B,yBAAK5f,UAAU,uBACb,yBAAKA,UAAU,4BACb,kBAAC,KAAD,CACEmO,SAAS,OACT5N,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRsI,MAAO,UAGX,2BACEzY,UAAU,8BACV4K,MAAOpO,EACPuS,SAAU,SAACC,GACTA,EAAEC,UACFiR,EAAUlR,EAAEG,OAAOvE,aAM7B,yBAAK5K,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEwe,SAAU,SAACsC,GAAD,OAAWjB,EAAa,CAAC,OAAQ,SAASiB,KACpD9gB,UAAU,sCACVoe,MAAO,CAAC,OAAQ,SAChBC,QAAO,oBAAeuB,KAExB,yBAAK5f,UAAU,yBACb,kBAAC,KAAD,CACEmO,SAAS,OACT5N,MAAO,CACL8F,SAAU,WACV4H,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRsI,MAAO,UAGX,2BACE7N,MAAOpO,EACPuS,SAAU,SAACC,GACTA,EAAEC,UACFiR,EAAUlR,EAAEG,OAAOvE,QAErB5K,UAAU,wBACVO,MAAO,CAAEwgB,SAAU,eAM7B,yBAAK/gB,UAAU,kBACb,kBAAC,KAAD,CACEO,MAAO,CAAEwgB,SAAU,QACnBC,aAAc,WACZjB,EACED,EAAoB,EAAI,EACpBA,EAAoB,EACpBA,IAGRmB,cAAe,WACblB,EACED,EAAoB,GAAK,EACrBA,EAAoB,EACpBA,KAIR,yBAAK9f,UAAU,oBACb,2BAAOA,UAAU,yBACf,+BACE,4BACE,wBAAIA,UAAU,eACZ,kBAAC,GAAD,CACEqK,MAAO,UACP6W,QACEuH,EACG9V,MAAM+N,GAAW,GAAIA,GAAW,IAChCjO,QAAO,SAAC5S,GAAD,OAAOA,EAAE6L,YAAUjE,SAC7BiZ,GAAW,GAAKA,GAAW,GAE7B3R,SAAU,SAACC,GACT0Z,GAAiB,SAAC9Z,GAEhB,IADA,IAAI6R,EAAG,aAAO7R,GAERpH,EAAIkZ,GAAW,GACnBlZ,EAAIkZ,GAAW,GACflZ,IAEAiZ,EAAIjZ,GAAGkE,SAAWsD,EAAEG,OAAO+R,QAE7B,OAAOT,SAKf,wBAAIzgB,UAAU,wCACZ,yBAAKA,UAAU,qBAAf,gBACA,yBAAKA,UAAU,qBAAf,SAEF,wBAAIA,UAAU,qDACX4gB,GAAQd,IAEVc,GAAQvT,KAAI,SAACoY,EAAGC,GAAJ,OACX,wBACE1lB,UAAU,oDACVsN,IAAG,iBAAYoY,IAEf,6BAAMD,SAKd,+BACGgD,EAAchhB,OACbghB,EACG9V,MAAmB,GAAZ2G,EAAO,GAAqB,GAAZA,EAAO,GAAS,GACvCjM,KAAI,SAACxN,EAAG2H,GAAJ,OACH,wBACExH,UAAU,2BACVsN,IAAG,yBAAoB9F,IAEvB,wBAAIxH,UAAU,eACZ,kBAAC,GAAD,CACEqK,MAAO,UACP6W,QAASrhB,EAAE6L,SACXqD,SAAU,SAACC,GACT0Z,GAAiB,SAAC9Z,GAChB,IAAI6R,EAAG,aAAO7R,GAGd,OAFA6R,EAAiB,GAAZnH,EAAO,GAAS9R,GAAGkE,SACtBsD,EAAEG,OAAO+R,QACJT,SAKf,wBAAIlgB,MAAO,CAAEyS,WAAY,WACvB,6BACE,yBAAKzS,MAAO,CAAEyS,WAAY,WACxB,yBAAKhT,UAAU,uBACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OAAShP,EAAE7D,MAAX,SAIrB,yBAAKgE,UAAU,sCACb,yBAAKA,UAAU,kCAAkCO,MAAO,CAACuS,SAAS,UAC/DjT,EAAE9D,cAEL,yBAAKiE,UAAU,UACb,yBACEA,UAAU,8BACVsK,QAAS,WACP4d,EAAYroB,GACZsoB,MAJJ,QASA,yBAAKnoB,UAAU,QAAf,KACA,yBACEA,UAAU,8BACVsK,QAAS,WACPse,GACE,CAAEvF,OAAQ,WACV,CAACxjB,EAAE+P,KACH,CAACzU,EAAY0E,EAAE+P,KAAKA,QAN1B,SAYA,yBAAK5P,UAAU,QAAf,KACA,yBACEA,UAAU,6BACVsK,QAAO,sBAAE,8BAAAjB,EAAA,sE/CjKfzE,E+CmKU,CAAC/E,EAAE+P,K/CnKR7K,E+CoKK,CAAC5J,EAAY0E,EAAE+P,KAAKA,K/CnKzDhP,EAAgB,8BAA+B,CAAEgE,MAAKG,S+CgKZ,QACHzD,EADG,QAKCuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,cAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,gBACPC,QACE,iCACFvB,KAAM,aAGVklB,IAAYD,KACRoI,EAXC,eAYAxtB,IAEU0E,EAAE+P,KAAKyT,OACpB,UAEFpkB,EAAMwK,SAAS,CACbnO,KAAM,kBACNH,YAAawtB,KAjCV,iC/CjKhB,IAAC/jB,EAAKG,I+CiKU,QAFX,eA+CV,wBACE/E,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGN,6BAAMjgB,EAAE3D,QAEV,wBACE8D,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGLjgB,EAAE6f,MAEL,wBACE1f,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGLjgB,EAAEgpB,WACCC,kBAAQjpB,EAAEgpB,YACV,WAEN,wBACE7oB,UAAS,UACe,IAAtB8f,EACI,eACA,2BAGLjgB,EAAEkpB,cACCD,kBAAQjpB,EAAEkpB,eACV,WAEN,wBACE/oB,UAAS,UACM,WAAbH,EAAEwjB,OACE,aACa,aAAbxjB,EAAEwjB,OACF,cACA,cALG,YAOe,IAAtBvD,EACI,eACA,2BAGLjgB,EAAEwjB,YAKX,4BACE,wBAAIjC,QAAS,EAAGphB,UAAU,qBAA1B,yBAUd,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,YACb,kBAAC,GAAD,CACEsT,MAAOpI,KAAKmM,KAAKoR,EAAchhB,OAAS,GACxCgB,QAAS6Q,EACT/F,WAAYgG,aCxOfvQ,oBAPf,SAAc5N,EAAO6N,GACnB,OAAO,aACL9N,YAAaC,EAAMD,aAChB8N,KAIQD,EArTI,SAAC,GAA8B,IAA5BoZ,EAA2B,EAA3BA,QAASjnB,EAAkB,EAAlBA,YAAkB,EACjB8L,mBAAS,CACrCpL,WAAY,GACZC,UAAW,GACXC,aAAc,GACdG,MAAO,GACP8sB,SAAU,GACV9iB,SAAU,GACV+iB,YAAa,GACb5F,OAAQ,SACR3D,KAAM,SAVuC,mBACxCwJ,EADwC,KAC/BC,EAD+B,OAajBliB,mBAAS,IAbQ,mBAaxCgG,EAbwC,KAa/BC,EAb+B,OAejBjG,oBAAS,GAfQ,mBAexC0B,EAfwC,KAe/BQ,EAf+B,KAiBzCyU,EAAc,CAClB,CACEC,MAAOqL,EAAQhtB,MACf2N,MAAO,qBAET,CACEgU,MAAOxS,GAAc6d,EAAQhtB,OAC7B2N,MAAO,sBAET,CACEgU,MAAOqL,EAAQhjB,SACf2D,MAAO,wBAET,CACEgU,MAAO,UAAUvS,KAAK4d,EAAQhjB,WAAa,KAAKoF,KAAK4d,EAAQhjB,UAC7D2D,MAAO,0CAET,CACEgU,MAAOqL,EAAQhjB,WAAagjB,EAAQD,YACpCpf,MAAO,yBAET,CACEgU,MAAOqL,EAAQhjB,SAASuB,QAAU,EAClCoC,MAAO,+CAGT,CACEgU,OAAQtiB,OAAOyb,OAAO7b,GACnBkS,KAAI,SAACxN,GAAD,OAAOA,EAAE3D,SACbwW,SAASwW,EAAQhtB,OACpB2N,MAAO,gCAIL6Z,EAAW,CAAC,SAAU,WAAY,WAClC0F,EAAQ,CAAC,gBAAiB,QAEhC,OACE,yBAAKppB,UAAU,6BACb,yBAAKA,UAAU,SAASO,MAAO,CAAEuS,SAAU,UACzC,yBAAK9S,UAAU,0CACb,yBAAKA,UAAU,6BAAf,YACA,yBAAKA,UAAU,UAAf,uBAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,uBAAf,cACA,yBAAKA,UAAU,kBACb,2BACEoP,YAAY,EACZxE,MAAOse,EAAQrtB,WACfkT,SAAU,SAACC,GACTA,EAAEC,UACFka,GAAW,SAACva,GAAD,OACTrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB/S,WAAYmT,EAAEG,OAAOvE,YAI3BtP,KAAK,OACL0E,UAAU,6BAIhB,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uBAAf,aACA,yBAAKA,UAAU,kBACb,2BACEoP,YAAY,EACZxE,MAAOse,EAAQptB,UACfiT,SAAU,SAACC,GACTA,EAAEC,UACFka,GAAW,SAACva,GAAD,OACTrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB9S,UAAWkT,EAAEG,OAAOvE,YAI1BtP,KAAK,OACL0E,UAAU,8BAKlB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,eACb,2BACEoP,YAAY,EACZxE,MAAOse,EAAQntB,aACfgT,SAAU,SAACC,GACTA,EAAEC,UACFka,GAAW,SAACva,GAAD,OACTrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB7S,aAAciT,EAAEG,OAAOvE,YAI7BtP,KAAK,OACL0E,UAAU,4BAGd,yBAAKA,UAAU,qBAAf,2CAIF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,UACA,yBAAKA,UAAU,UACb,2BACEoP,YAAY,EACZxE,MAAOse,EAAQhtB,MACf6S,SAAU,SAACC,GACTA,EAAEC,UACFka,GAAW,SAACva,GAAD,OACTrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB1S,MAAO8S,EAAEG,OAAOvE,YAItBtP,KAAK,OACL0E,UAAU,6BAIhB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,aACA,yBAAKA,UAAU,eACb,2BACEoP,YAAY,EACZxE,MAAOse,EAAQhjB,SACf6I,SAAU,SAACC,GACTA,EAAEC,UACFka,GAAW,SAACva,GAAD,OACTrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB1I,SAAU8I,EAAEG,OAAOvE,YAIzBtP,KAAK,WACL0E,UAAU,4BAGd,yBAAKA,UAAU,qBAAf,sEAKF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,qBACA,yBAAKA,UAAU,eACb,2BACEoP,YAAY,EACZxE,MAAOse,EAAQD,YACfla,SAAU,SAACC,GACTA,EAAEC,UACFka,GAAW,SAACva,GAAD,OACTrT,OAAOC,OAAO,GAAIoT,EAAM,CACtBqa,YAAaja,EAAEG,OAAOvE,YAI5BtP,KAAK,WACL0E,UAAU,4BAGd,yBAAKA,UAAU,qBAAf,sEAIF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eAAf,UACA,kBAAC,GAAD,CACEue,aAAa,QACbC,SAAU,SAACsC,GAAD,OACRqI,GAAW,SAACva,GAAD,OACTrT,OAAOC,OAAO,GAAIoT,EAAM,CACtByU,OAAQK,EAAS5C,SAIvB1C,MAAOsF,EACPrF,QAAS6K,EAAQ7F,OAAS6F,EAAQ7F,OAAS,SAC3CrjB,UAAU,8BAIhB,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eAAf,QACA,kBAAC,GAAD,CACEue,aAAa,QACbC,SAAU,SAACsC,GAAD,OACRqI,GAAW,SAACva,GAAD,OACTrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB8Q,KAAM0J,EAAMtI,SAIlB1C,MAAOgL,EACP/K,QAAS6K,EAAQxJ,KAAOwJ,EAAQxJ,KAAO,SACvC1f,UAAU,+BAKlB,yBACEO,MAAO,CAAEzB,OAAQ,OAAQ6Q,QAAS1C,EAAU,EAAI,GAChDjN,UAAU,iDAETiN,GAEH,yBAAKjN,UAAU,kBACb,yBACEA,UAAU,4EACVsK,QAAS,kBAAM8X,MAFjB,UAMA,yBACEpiB,UAAU,kEACVsK,QAAO,sBAAE,8BAAAjB,EAAA,2DACH2U,EAAUJ,EAAYnL,QAAO,SAAC5S,GAAD,OAAQA,EAAEge,UAC/BpW,OAFL,gBAGLyF,EAAW8Q,EAAQ,GAAGnU,OAHjB,8BAKLV,GAAW,GALN,ShDjFZvI,EAAgB,sBgDuF0BsoB,GAN9B,OAMD5nB,EANC,OAOL6H,GAAW,GACP7H,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,cAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,eACPC,QAAS,gCACTvB,KAAM,aAGV2D,EAAMwK,SAAS,CACbnO,KAAM,qBACNG,WAAW,gBACR6F,EAAIjD,GAAK9C,OAAOC,OAAO,GAAI0tB,EAAS,CACnCG,QAAS/nB,EAAIjD,GACbuR,IAAKtO,EAAIgoB,SAIflH,KAnCG,6CAwCT,kBAAC,GAAD,CACE/X,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASA,EACTnJ,KAAM,KAtDV,cCwEKwJ,oBAPf,SAAc5N,EAAO6N,GACnB,OAAO,aACLzL,2BAA4BpC,EAAM2B,SAASS,4BACxCyL,KAIQD,EAvTE,SAAC,GAA0D,IAAxDugB,EAAuD,EAAvDA,YAAanH,EAA0C,EAA1CA,QAAS5kB,EAAiC,EAAjCA,2BAAiC,EAC3CyJ,mBAAS,CACrCpL,WAAY,GACZC,UAAW,GACXC,aAAc,GACdG,MAAO,GACP8sB,SAAU,GACV9iB,SAAU,GACV+iB,YAAa,GACb5F,OAAQ,SACR3D,KAAM,kBAViE,mBAClEwJ,EADkE,KACzDC,EADyD,OAa3CliB,mBAAS,IAbkC,mBAalEgG,EAbkE,KAazDC,EAbyD,OAe3CjG,oBAAS,GAfkC,mBAelE0B,EAfkE,KAezDQ,EAfyD,KAiBzE/B,qBAAU,WACJmiB,GACFJ,EACE5tB,OAAOC,OAAO,GAAI+tB,EAAa,CAAEN,YAAa,GAAI/iB,SAAU,QAG/D,CAACqjB,IAEJniB,qBAAU,WACRjI,OAAO8b,SAAS,EAAG,KAClB,IAEH,IAAM2C,EAAc,CAClB,CACEC,MAAOqL,EAAQntB,aAAa0L,QAAUjK,EACtCqM,MAAO,4BAET,CACEgU,MAAO,UAAUvS,KAAK4d,EAAQhjB,WAAa,KAAKoF,KAAK4d,EAAQhjB,UAC7D2D,MAAO,0CAET,CACEgU,MAAOqL,EAAQhjB,WAAagjB,EAAQD,YACpCpf,MAAO,yBAET,CACEgU,MAAOqL,EAAQhjB,SAASuB,QAAU,EAClCoC,MAAO,gDAIL6Z,EAAW,CAAC,SAAU,WAAY,WAClC0F,EAAQ,CAAC,gBAAiB,QAEhC,OACE,yBAAKppB,UAAU,6BACb,yBAAKA,UAAU,SAASO,MAAO,CAAEuS,SAAU,UACzC,yBAAK9S,UAAU,0CACb,yBAAKA,UAAU,6BAAf,aACA,yBAAKA,UAAU,UAAf,uBAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,uBAAf,cACA,yBAAKA,UAAU,kBACb,2BACEoP,YAAY,EACZxE,MAAOse,EAAQrtB,WACfkT,SAAU,SAACC,GACTA,EAAEC,UACFka,GAAW,SAACva,GAAD,OACTrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB/S,WAAYmT,EAAEG,OAAOvE,YAI3BtP,KAAK,OACL0E,UAAU,6BAIhB,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uBAAf,aACA,yBAAKA,UAAU,kBACb,2BACEoP,YAAY,EACZxE,MAAOse,EAAQptB,UACfiT,SAAU,SAACC,GACTA,EAAEC,UACFka,GAAW,SAACva,GAAD,OACTrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB9S,UAAWkT,EAAEG,OAAOvE,YAI1BtP,KAAK,OACL0E,UAAU,8BAKlB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,eACb,2BACEoP,YAAY,EACZxE,MAAOse,EAAQntB,aACfgT,SAAU,SAACC,GACTA,EAAEC,UACFka,GAAW,SAACva,GAAD,OACTrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB7S,aAAciT,EAAEG,OAAOvE,YAI7BtP,KAAK,OACL0E,UAAU,4BAGd,yBAAKA,UAAU,qBAAf,2CAIF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,SACA,yBAAKA,UAAU,UACb,2BACEoP,YAAY,EACZxE,MAAOse,EAAQhtB,MACf6S,SAAU,SAACC,GACTA,EAAEC,UACFka,GAAW,SAACva,GAAD,OACTrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB1S,MAAO8S,EAAEG,OAAOvE,YAItBtP,KAAK,OACL0E,UAAU,6BAIhB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,YACA,yBAAKA,UAAU,eACb,2BACEoP,YAAY,EACZxE,MAAOse,EAAQhjB,SACf6I,SAAU,SAACC,GACTA,EAAEC,UACFka,GAAW,SAACva,GAAD,OACTrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB1I,SAAU8I,EAAEG,OAAOvE,YAIzBtP,KAAK,WACL0E,UAAU,4BAGd,yBAAKA,UAAU,qBAAf,sEAKF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,oBACA,yBAAKA,UAAU,eACb,2BACEoP,YAAY,EACZxE,MAAOse,EAAQD,YACfla,SAAU,SAACC,GACTA,EAAEC,UACFka,GAAW,SAACva,GAAD,OACTrT,OAAOC,OAAO,GAAIoT,EAAM,CACtBqa,YAAaja,EAAEG,OAAOvE,YAI5BtP,KAAK,WACL0E,UAAU,4BAGd,yBAAKA,UAAU,qBAAf,sEAIF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eAAf,UACA,kBAAC,GAAD,CACEue,aAAa,QACbC,SAAU,SAACsC,GAAD,OACRqI,GAAW,SAACva,GAAD,OACTrT,OAAOC,OAAO,GAAIoT,EAAM,CACtByU,OAAQK,EAAS5C,SAIvB1C,MAAOsF,EACPrF,QAAS6K,EAAQ7F,OAAS6F,EAAQ7F,OAAS,SAC3CrjB,UAAU,8BAIhB,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eAAf,QACA,kBAAC,GAAD,CACEue,aAAa,QACbC,SAAU,SAACsC,GAAD,OACRqI,GAAW,SAACva,GAAD,OACTrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB8Q,KAAM0J,EAAMtI,SAIlB1C,MAAOgL,EACP/K,QAAS6K,EAAQxJ,KAAOwJ,EAAQxJ,KAAO,SACvC1f,UAAU,+BAKlB,yBACEO,MAAO,CAAEzB,OAAQ,OAAQ6Q,QAAS1C,EAAU,EAAI,GAChDjN,UAAU,iDAETiN,GAEH,yBAAKjN,UAAU,kBACb,yBACEA,UAAU,4EACVsK,QAAS,kBAAM8X,MAFjB,UAMA,yBACEpiB,UAAU,kEACVsK,QAAO,sBAAE,oCAAAjB,EAAA,yDACHmgB,GAAY,EACZ7U,EAFG,eAEcuU,GACjBA,EAAQhjB,WACN8X,EAAUJ,EAAYnL,QAAO,SAAC5S,GAAD,OAAQA,EAAEge,UAC/BpW,SACV+hB,GAAY,EACZtc,EAAW8Q,EAAQ,GAAGnU,QAGC,KAAvB8K,EAAUzO,kBACLyO,EAAUzO,gBACVyO,EAAUsU,cAEfO,EAdG,wBAeLrgB,GAAW,GAfN,SjDjFZvI,EAAgB,oBiDiGwB+T,GAhB5B,OAgBDrT,EAhBC,OAiBL6H,GAAW,GACP7H,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,cAIV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,eACPC,QAAS,gCACTvB,KAAM,cAGNG,EAAawD,EAAMwqB,WAAWtuB,YAAY+tB,EAAQtZ,MAC3CyT,OAAS6F,EAAQ7F,OAC5B5nB,EAAWikB,KAAOwJ,EAAQxJ,KAC1BzgB,EAAMwK,SAAS,CAAEnO,KAAM,qBAAsBG,eAC7C2mB,KAxCG,6CA6CT,kBAAC,GAAD,CACE/X,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,QAASA,EACTnJ,KAAM,KA3DV,cC5NJkqB,GAOQ,EAPRA,GAQS,EARTA,GASc,EATdA,GAUgB,EAVhBA,GAWW,GAXXA,GAYa,GAZbA,GAac,GAbdA,GAcgB,GAdhBA,GAeM,GAfNA,GAgBQ,GAoKC1gB,oBAPf,SAAc5N,EAAO6N,GACnB,OAAO,aACLlK,oBAAqB3D,EAAM2D,qBACxBkK,KAIQD,EAjKQ,SAAC,GAA6B,IAA3BjK,EAA0B,EAA1BA,oBAA0B,EACpBkI,mBAAS,GADW,mBAC3CiW,EAD2C,KAClCC,EADkC,OAEdlW,mBAAS,MAFK,mBAE3C0iB,EAF2C,KAE/BnK,EAF+B,OAGZvY,mBAAS,MAHG,mBAG3C2iB,EAH2C,KAG9BtI,EAH8B,OAIFra,mBAAS,MAJP,mBAI3C4iB,EAJ2C,KAIzBrH,EAJyB,OAKRvb,mBAAS,MALD,mBAK3C6iB,EAL2C,KAK5BhF,EAL4B,OAMF7d,mBAAS,MANP,mBAM3C8iB,EAN2C,KAMzBxD,EANyB,OAOlBtf,mBAAS,MAPS,mBAO3C+iB,EAP2C,KAOjC9B,EAPiC,KAQlD,OACE,yBACEloB,UAAU,wCACVO,MAAO,CAAE4b,UAAWhd,OAAO4Y,cAE3B,yBAAK/X,UAAU,UACb,yBAAKA,UAAU,mDACb,kBAAC,GAAD,CACEod,aAAcre,EACdoe,WAAYA,EACZD,QAASA,IAEX,yBACEld,UAAU,6BACVO,MAAO,CAAEb,MAAO,UAEhB,kBAAC,GAAD,CACEwd,QAASA,EACTC,WAAYA,KAGhB,yBAAKnd,UAAU,OACZkd,GAAW,GACV,yBACEld,UAAU,mCACVO,MAAO,CAAEqL,aAAc,UAEvB,yBAAK5L,UAAU,2BACb,kBAAC,KAAD,CACEmO,SAAS,OACT7D,QAAS,kBACP6S,EACc,IAAZD,GAA6B,IAAZA,EACb,EACY,IAAZA,GAA6B,IAAZA,EACjB,EACY,KAAZA,GAA8B,KAAZA,EAClB,EACY,KAAZA,GAA8B,KAAZA,EAClB,EACY,KAAZA,GAA8B,KAAZA,EAClB,EACA,QAOH,IAAZA,EACC,kBAAC,GAAD,MACc,IAAZA,EACF,kBAAC,GAAD,CACEkL,qBAAsB,kBAAMjL,EAAWuM,KACvCxB,YAAa,SAAC+B,GAAD,OAAO/B,EAAY+B,IAChC9B,mBAAoB,kBAAMhL,EAAWuM,OAEzB,IAAZxM,EACF,kBAAC,GAAD,CACEsC,cAAe,SAAC2G,GAAD,OAAS3G,EAAc2G,IACtC5G,qBAAsB,kBAAMpC,EAAWuM,KACvCpI,eAAgB,SAAC6E,GAAD,OAAS7E,EAAe6E,IACxC9E,sBAAuB,kBACrBlE,EAAWuM,OAGD,IAAZxM,EACF,kBAAC,GAAD,CACEwF,4BAA6B,kBAC3BvF,EAAWuM,KAEblH,oBAAqB,SAAC0H,GAAD,OAAS1H,EAAoB0H,IAClDzH,2BAA4B,WAC1BtF,EAAWuM,OAGD,IAAZxM,EACF,kBAAC,GAAD,CACE6H,0BAA2B,kBACzB5H,EAAWuM,KAEb5E,iBAAkB,SAACqF,GAAD,OAAUrF,EAAiBqF,IAC7CnF,wBAAyB,kBACvB7H,EAAWuM,OAGD,IAAZxM,EACF,kBAAC,GAAD,CACEuJ,6BAA8B,kBAC5BtJ,EAAWuM,KAEbnD,oBAAqB,SAAC6D,GAAD,OAAS7D,EAAoB6D,IAClD5D,2BAA4B,kBAC1BrJ,EAAWuM,OAGD,IAAZxM,EACF,kBAAC,GAAD,CACEiF,cAAewH,EACfvH,QAAS,kBAAMjF,EAAW,MAEd,IAAZD,EACF,kBAAC,GAAD,CACEqF,eAAgBqH,EAChBxH,QAAS,kBAAMjF,EAAW,MAEd,IAAZD,EACF,kBAAC,GAAD,CACEkF,QAAS,kBAAMjF,EAAW,IAC1BqG,oBAAqBqG,IAET,IAAZ3M,EACF,kBAAC,GAAD,CAAoBkF,QAAS,kBAAMjF,EAAW,MAChC,KAAZD,EACF,kBAAC,GAAD,CACEyI,iBAAkBmE,EAClB1H,QAAS,kBAAMjF,EAAW,MAEd,KAAZD,EACF,kBAAC,GAAD,CAAiBkF,QAAS,kBAAMjF,EAAW,MAC7B,KAAZD,EACF,kBAAC,GAAD,CACEuK,oBAAqBsC,EACrB3H,QAAS,kBAAMjF,EAAW,MAEd,KAAZD,EACF,kBAAC,GAAD,CACEkF,QAAS,kBAAMjF,EAAW,MAEd,KAAZD,EACF,kBAAC,GAAD,CACEqM,YAAaS,EACb5H,QAAS,kBAAMjF,EAAW,MAEd,KAAZD,EACF,kBAAC,GAAD,CAAYkF,QAAS,kBAAMjF,EAAW,MAEtC,UCnLRkN,GAAY,uCAAG,WAAO3oB,GAAP,eAAA2H,EAAA,sEACHihB,EAAc5oB,GADX,QACfJ,EADe,QAEXuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZrB,KAAM,UACNsB,MAAO,QACPC,QAASyE,EAAIuI,UAIjB0gB,aAAaC,QAAQ,oBAAqBlpB,EAAIrF,OAC9CgD,EAAMwK,SAAS,CAAEnO,KAAM,WAAYM,KAAM0F,IACzC6P,EAAQtB,KAAK,MAdI,2CAAH,sDAwIHpO,GAtHD,WAAO,IAAD,EACQwF,mBAAS,IADjB,mBACX/K,EADW,KACJuuB,EADI,OAEcxjB,mBAAS,IAFvB,mBAEXf,EAFW,KAEDwkB,EAFC,KAGlB,OACE,yBACE1qB,UAAU,gFACVO,MAAO,CAAEzB,OAAQK,OAAO4Y,cAExB,yBAAK/X,UAAU,gFACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,sDACb,yBACEA,UAAU,wEACVsK,QAAS,kBAAM6G,EAAQtB,KAAK,MAC5BtP,MAAO,CAAE0N,IAAK,OAAQgC,KAAM,SAE5B,kBAAC,KAAD,CAAejQ,UAAU,SAL3B,gBAOA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,sBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,iCAAf,iBAIN,yBACEA,UAAU,6DACVO,MAAO,CACL4b,UAAWhd,OAAO4Y,YAAc,MAGlC,yBAAK/X,UAAU,6BACb,yBAAKA,UAAU,kDACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,kBAAf,uBACA,yBAAKA,UAAU,UAAf,+EAMJ,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,eAAf,SACA,yBAAKA,UAAU,UACb,2BACE1E,KAAK,OACL0E,UAAU,yBACV4K,MAAO1O,EACP6S,SAAU,SAACC,GACTA,EAAEC,UACFwb,EAASzb,EAAEG,OAAOvE,YAK1B,yBAAK5K,UAAU,uBACb,yBAAKA,UAAU,eAAf,YACA,yBAAKA,UAAU,UACb,2BACE1E,KAAK,WACL0E,UAAU,yBACV4K,MAAO1E,EACP6I,SAAU,SAACC,GACTA,EAAEC,UACFyb,EAAY1b,EAAEG,OAAOvE,QAEvB+f,UAAW,SAAC3b,GACQ,KAAdA,EAAE4b,SACJP,GAAa,CAAEnuB,QAAOgK,kBAMhC,yBAAKlG,UAAU,uBACb,yBACEA,UAAU,uCACVsK,QAAS,kBAAM+f,GAAa,CAAEnuB,QAAOgK,eAFvC,UAOF,yBACElG,UAAU,yCACVO,MAAO,CAAE4N,SAAU,SAEnB,yBAAKnO,UAAU,iBAAf,yBACyB,IACvB,0BACEA,UAAU,0BACVsK,QAAS,kBAAM6G,EAAQtB,KAAK,aAF9B,YAOF,yBACE7P,UAAU,mCACVsK,QAAS,kBAAM6G,EAAQtB,KAAK,sBAF9B,6B,6FChGPgb,GAvBO,SAAC,GAAc,IAAZvvB,EAAW,EAAXA,KACvB,OACE,yBAAK0E,UAAU,uBACb,yBAAKA,UAAU,yBACb,kBAAC,KAAD,CACE8qB,SAAU,OACVC,SACW,mBAATzvB,EACI0vB,KACS,mBAAT1vB,EACA2vB,KACS,yBAAT3vB,EACA4vB,KACA,GAENC,eAAgB,kBAAM,+BACtBC,QAAS,kBAAM9hB,QAAQC,IAAI,mBC2PtBP,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACLhM,gBAAiB7B,EAAM2B,SAASE,gBAChCO,2BAA4BpC,EAAM2B,SAASS,4BACxCyL,KAIQD,EApQA,SAAC,GAAqD,IAAnDxL,EAAkD,EAAlDA,2BAA4BP,EAAsB,EAAtBA,gBAAsB,EACxCgK,mBAAS,IAD+B,mBAC3D/K,EAD2D,KACpDuuB,EADoD,OAElCxjB,mBAAS,IAFyB,mBAE3Df,EAF2D,KAEjDwkB,EAFiD,OAGpBzjB,mBAAS,IAHW,mBAG3DokB,EAH2D,KAG1CC,EAH0C,OAIhCrkB,oBAAS,GAJuB,mBAI3DskB,EAJ2D,KAIhDC,EAJgD,OAKdvkB,oBAAS,GALK,mBAK3DwkB,EAL2D,KAKvCC,EALuC,OAMpCzkB,mBAAS,IAN2B,mBAM3DgG,EAN2D,KAMlDC,EANkD,OAOxBjG,mBAAS,IAPe,mBAO3D0kB,EAP2D,KAO5CC,EAP4C,KAS5DhO,EAAc,CAClB,CAAEC,MAAOxS,GAAcnP,GAAQ2N,MAAO,sBACtC,CACEgU,MAAO3hB,EAAM4S,MAAM,KAAK,GAAGrH,OAASjK,EACpCqM,MAAO,qBAET,CACEgU,MAAO,UAAUvS,KAAKpF,IAAa,KAAKoF,KAAKpF,GAC7C2D,MAAO,0CAET,CACEgU,MAAO3X,IAAamlB,EACpBxhB,MAAO,yBAET,CACEgU,MAAO3X,EAASuB,QAAU,EAC1BoC,MAAO,+CAET,CACEgU,MAAO0N,EACP1hB,MAAO,2BAGT,CACEgU,MAAO4N,EACP5hB,MAAO,oEAILwgB,EAAY,uCAAG,8BAAAhhB,EAAA,yDAEK,KADpBwiB,EAAWjO,EAAYnL,QAAO,SAAC5S,GAAD,OAAQA,EAAEge,UAC/BpW,OAFM,gCrDxBd7G,EAAgB,eqD2BY,CAAE1E,QAAOgK,aAHvB,QAGb5E,EAHa,QAITsZ,SACN3b,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,mBACPC,QACE,yEACFvB,KAAM,aAIV2D,EAAMwK,SAAS,CACbnO,KAAM,qBACNG,WAAW,gBAAI6F,EAAI7F,WAAW4tB,QAAU/nB,EAAI7F,cAE9C0V,EAAQtB,KAAK,WAEb5Q,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZE,QAASyE,EAAIuI,MACbvO,KAAM,UACNsB,MAAO,2BA1BI,sBA+BjBsQ,EAAW2e,EAAS,GAAGhiB,OA/BN,2CAAH,qDAmClB,OACE,yBACE7J,UAAU,wFACVO,MAAO,CAAE4b,UAAWhd,OAAO4Y,cAE3B,kBAAC,GAAD,CAAOnR,KAAM+kB,EAAezd,QAAS,kBAAM0d,EAAiB,MAC1D,kBAAC,GAAD,CAAetwB,KAAMqwB,KAEvB,yBAAK3rB,UAAU,gFACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,6CACb,yBAAKA,UAAU,sDACb,yBACEA,UAAU,wEACVsK,QAAS,kBAAM6G,EAAQtB,KAAK,MAC5BtP,MAAO,CAAE0N,IAAK,OAAQgC,KAAM,SAE5B,kBAAC,KAAD,CAAejQ,UAAU,SAL3B,gBAOA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,sBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,iCAAf,iBAIN,yBACEA,UAAU,6DACVO,MAAO,CACL4b,UAAWhd,OAAO4Y,YAAc,MAGlC,yBAAK/X,UAAU,wBACb,yBAAKA,UAAU,6CACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,kBAAf,oBAOJ,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,eAAf,SACA,yBAAKA,UAAU,UACb,2BACE1E,KAAK,QACL0E,UAAU,yBACV4K,MAAO1O,EACP6S,SAAU,SAACC,GACTA,EAAEC,UACFwb,EAASzb,EAAEG,OAAOvE,YAK1B,yBAAK5K,UAAU,uBACb,yBAAKA,UAAU,eAAf,YACA,yBAAKA,UAAU,eACb,2BACE1E,KAAK,WACL0E,UAAU,yBACV4K,MAAO1E,EACP6I,SAAU,SAACC,GACTA,EAAEC,UACFyb,EAAY1b,EAAEG,OAAOvE,WAI3B,yBAAK5K,UAAU,kCAAf,oEAKF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,oBACA,yBAAKA,UAAU,eACb,2BACE1E,KAAK,WACL0E,UAAU,yBACV4K,MAAOygB,EACPV,UAAW,SAAC3b,GACQ,KAAdA,EAAE4b,SACJP,KAGJtb,SAAU,SAACC,GACTA,EAAEC,UACFqc,EAAmBtc,EAAEG,OAAOvE,WAIlC,yBAAK5K,UAAU,kCAAf,oEAKF,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACE8rB,QAAS7uB,EACT8R,SAAU,SAACnE,GACLA,GACF4gB,GAAa,OAKrB,yBAAKxrB,UAAU,kBACb,yBAAKA,UAAU,iBACb,kBAAC,GAAD,CACEqK,MAAO,UACP6W,QAASuK,EACT1c,SAAU,SAACC,GACT0c,EAAsB1c,EAAEG,OAAO+R,aAIrC,yBAAKlhB,UAAU,OAAf,gCACgC,IAC9B,0BACEsK,QAAS,kBACPshB,EAAiB,yBAEnB5rB,UAAU,YAJZ,wBAOQ,IATV,MAUM,IACJ,0BACEA,UAAU,WACVsK,QAAS,kBAAMshB,EAAiB,oBAFlC,oBAQJ,yBACErrB,MAAO,CAAEzB,OAAQ,OAAQ6Q,QAAS1C,EAAU,EAAI,GAChDjN,UAAU,iDAETiN,GAEH,yBAAKjN,UAAU,uBACb,yBACEA,UAAU,uCACVsK,QAAS+f,GAFX,mBAOF,yBACErqB,UAAU,qCACVO,MAAO,CAAE4N,SAAU,SAEnB,yBAAKnO,UAAU,YAAf,wBACwB,IACtB,0BACEA,UAAU,0BACVsK,QAAS,kBAAM6G,EAAQtB,KAAK,YAF9B,sBCrIT7G,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACL9N,YAAaC,EAAMD,YACnBwB,aAAcvB,EAAMuB,cACjBsM,KAIQD,EA3GD,SAAC,GAAmC,IAAjCrM,EAAgC,EAAhCA,aAAgC,KAAlBxB,YACC8L,oBAAS,IADQ,mBACxC8kB,EADwC,KAC/BC,EAD+B,OAEjB/kB,oBAAS,GAFQ,mBAExCnK,EAFwC,KAE/BmvB,EAF+B,KA8C/C,OA3CA7kB,qBAAU,WACR,IAAI8kB,EAOJ,OANKvvB,EAAaG,UAChBovB,EAAUC,YAAW,WACnBF,GAAW,KACV,MAGE,YACAtvB,EAAaG,SAAWovB,GAC3BE,aAAaF,MAGhB,CAACvvB,IAEJyK,qBAAU,WACJtK,IAAYivB,IACd9sB,EAAMwK,SAAS,CACbnO,KAAM,sBACNqB,aAAc,CAAEG,SAAS,KAE3BmvB,GAAW,MAEZ,CAACnvB,EAASivB,IAEb3kB,qBAAU,WACR,GACwB,YAAtBzK,EAAarB,MACmB,kBAAzBqB,EAAaE,QACpB,CACA,IAAIwvB,EAAoB,CACtB/wB,KAAM,SACNurB,QAAS,uBACTc,UAAW,CAAC,cACZrE,WAAYnlB,KAAKC,MACjBmlB,SAAUplB,KAAKC,MACf8kB,YAAahiB,KAAKC,UAAUxE,EAAaE,SAASiN,QAAQ,KAAM,IAChEuZ,OAAQ,QAEV1d,GAAmB0mB,MAEpB,CAAC1vB,EAAaE,UAGf,yBACEyvB,YAAa,kBAAMN,GAAW,IAC9BO,aAAc,kBAAMP,GAAW,IAC/BhsB,UAAU,8CACVO,MAAO,CACLuS,SAAU,QACV5C,OAAQvT,EAAaG,QAAU,QAAU,SAG3C,yBAAKkD,UAAU,sBACZrD,EAAarB,MACZ,yBAAK0E,UAAU,iBACU,YAAtBrD,EAAarB,KACZ,kBAAC,KAAD,CACE8S,YAAY,MACZD,SAAS,OACTnO,UAAU,iBAGZ,kBAAC,KAAD,CACEoO,YAAY,MACZD,SAAS,OACTnO,UAAU,kBAKlB,yBAAKA,UAAU,wBAAwBrD,EAAaC,OACpD,yBACEoD,UAAU,4BACVsK,QAAS,kBACPrL,EAAMwK,SAAS,CACbnO,KAAM,sBACNqB,aAAc,CAAEG,SAAS,OAI7B,kBAAC,KAAD,CAAKqR,SAAS,OAAOnO,UAAU,iBAInC,yBAAKA,UAAU,iCACU,YAAtBrD,EAAarB,MACsB,kBAAzBqB,EAAaE,QAClB,gBAEFF,EAAaE,aCsLVmM,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACLrN,KAAMR,EAAMQ,KACZF,QAASN,EAAMM,SACZuN,KAIQD,EA9QI,SAAC,GASb,IARLsH,EAQI,EARJA,OACA1U,EAOI,EAPJA,KACAF,EAMI,EANJA,QAMI,IALJ8wB,gBAKI,MALO,eAKP,EAJJ1b,EAII,EAJJA,SACAD,EAGI,EAHJA,iBAGI,IAFJ4b,aAEI,aADJpe,sBACI,MADa,aACb,IACoBpH,mBAAS,GAD7B,mBACGqS,EADH,KACSC,EADT,OAGwCtS,mBAAS,IAHjD,mBAGGuJ,EAHH,KAGmBC,EAHnB,OAIkCxJ,oBAAS,GAJ3C,mBAIGyJ,EAJH,KAIgBC,EAJhB,KAMJ,OACE,kBAAC,IAAMkD,SAAP,KACE,kBAAC,GAAD,CAAOjN,KAAM8J,EAAaxC,QAAS,kBAAMyC,GAAe,KACtD,kBAAC,GAAD,CACE1O,QAASuO,EACT5D,QAAS,kBAAM+D,GAAe,OAIlC,yBAAK3Q,UAAU,OACZsQ,EACEqC,MAfe,IAgBK2G,EAAO,GAhBZ,IAiBKA,EAAO,GAjBZ,IAmBfjM,KAAI,SAACxN,EAAG2H,GACP,IAAIklB,EAAgBhxB,EAAQmE,EAAEoK,UAC1B,CACE5L,GAAIwB,EAAEoK,SACNrN,MAAOlB,EAAQmE,EAAEoK,UAAUkJ,YAC3B7U,YAAa5C,EAAQmE,EAAEoK,UAAUiJ,aACjC1U,aAAc9C,EAAQmE,EAAEoK,UAAUyL,mBAClChX,OAAQhD,EAAQmE,EAAEoK,UAAUmJ,cAE9B,CACE/U,GAAIwB,EAAEoK,SACNrN,MAAO,GACP0B,YAAa,GACbI,OAAQ,GACRF,aAAc,IAEpB,OACE,yBACE8O,IAAG,iBAAY9F,GACfxH,UAAU,uDAEI,gBAAbwsB,GAA8BC,EAC7B,yBACEzsB,UAAU,6EACVO,MAAO,CACLqL,aAAc,QACdmF,OAAQ,EACRjS,OAAQ,OACRsL,cAAe,SAGjB,kBAAC,IAAMyJ,SAAP,KACE,kBAAC,GAAD,CACE3K,MAAOwjB,EACP9wB,KAAMA,IAEM,aAAb4wB,EACC,kBAAC,IAAM3Y,SAAP,KACE,yBAAK7T,UAAU,SACf,kBAAC,GAAD,CACEqO,eAAgB,WACdyC,EAAS4b,GACT7b,GAAiB,GACjBxC,KAEFzS,KAAMA,EACNqG,QAASyqB,EAAcruB,MAI3B,KAKN,GAEF,yBAAK2B,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,2DACb,yBACEgR,IAAG,oBAAe0b,EAAcruB,IAChCqB,MAAM,OACNa,MAAO,CAAE0Q,aAAc,QACvBC,IACEwb,EAAcpuB,YAAd,yCACsCouB,EAAcpuB,aAChD,yDAGR,yBACEgM,QAAS,kBACP6G,EAAQtB,KAAR,iBAAuB6c,EAAcruB,MAEvC2B,UAAU,sEACVO,MAAO,CACL0P,KAAM,EACNhC,IAAK,EACL5H,SAAU,WACV0K,OAAQ,EACRE,aAAc,SAGhB,yBACEjR,UAAU,uDACVsK,QAAS,SAAC0E,GACRA,EAAEoC,kBACFX,EAAkBic,EAAcruB,IAChCsS,GAAe,KAGjB,kBAAC,KAAD,CACEpQ,MAAO,CACL4N,SAAU,OACV9D,MAAO,QACPE,YAAa,cAOzB,yBAAKvK,UAAU,iBACb,yBACEA,UAAU,mDACVsK,QAAS,kBAAM6G,EAAQtB,KAAR,iBAAuB6c,EAAcruB,OAEpD,yBAAK2B,UAAU,iBAAiB0sB,EAAc9vB,QAEhD,yBAAKoD,UAAU,kCACb,yBAAKA,UAAU,iBACZ0sB,EAAchuB,OAAO+I,OAClBilB,EAAchuB,OAAOsN,KAAK,KAC1B,YAGR,yBAAKhM,UAAU,2CACb,kBAAC,GAAD,CACER,KAAK,QACLkM,WACE9P,EAAKF,QAAQgxB,EAAcruB,KAEvB,mBADAzC,EAAKF,QAAQgxB,EAAcruB,IAAI2R,UAIrC9G,MAAOwjB,EACPjsB,MAAM,OACNT,UAAU,YACV4K,MACElP,EAAQgxB,EAAcruB,IAClB3C,EAAQgxB,EAAcruB,IAAIkR,eAC1B,KAGR,kBAAC,GAAD,CACE/P,KAAK,QACLkM,WACE9P,EAAKF,QAAQgxB,EAAcruB,KAEvB,cADAzC,EAAKF,QAAQgxB,EAAcruB,IAAI2R,UAIrC9G,MAAOwjB,EACPjsB,MAAM,QACNT,UAAU,YACV4K,MACElP,EAAQgxB,EAAcruB,IAClB3C,EAAQgxB,EAAcruB,IAAImR,UAC1B,KAGR,kBAAC,GAAD,CACEhQ,KAAK,QACLkM,WACE9P,EAAKF,QAAQgxB,EAAcruB,KAEvB,YADAzC,EAAKF,QAAQgxB,EAAcruB,IAAI2R,UAIrC9G,MAAOwjB,EACP1sB,UAAU,YACVS,MAAM,sBACNmK,MACElP,EAAQgxB,EAAcruB,IAClB3C,EAAQgxB,EAAcruB,IAAIoR,QAC1B,KAGR,kBAAC,GAAD,CACEjQ,KAAK,QACLiB,MAAM,OACNmK,MACElP,EAAQgxB,EAAcruB,IAClB3C,EAAQgxB,EAAcruB,IAAIqR,SAC1B,GAENhE,WACE9P,EAAKF,QAAQgxB,EAAcruB,KAEvB,aADAzC,EAAKF,QAAQgxB,EAAcruB,IAAI2R,UAIrC9G,MAAOwjB,KAGX,yBAAK1sB,UAAU,mCACC,gBAAbwsB,EACC,kBAAC,IAAM3Y,SAAP,KACE,kBAAC,GAAD,CACE3K,MAAOwjB,EACP9wB,KAAMA,IAEM,aAAb4wB,EACC,kBAAC,IAAM3Y,SAAP,KACE,yBAAK7T,UAAU,SACf,kBAAC,GAAD,CACEqO,eAAgBA,EAChBzS,KAAMA,EACNqG,QAASyqB,EAAcruB,MAI3B,IAIJ,WASlB,yBAAK2B,UAAU,sCACb,yBAAKA,UAAU,YACb,kBAACoX,GAAD,CACE5D,WAAY,CACVC,YAAa,aACb/H,SAAU,uBAEZ4H,MAAOpI,KAAKmM,KAAK/G,EAAO7I,OAjPV,IAkPdgB,QAAS6Q,EACT/F,WAAYgG,UChKToT,GA/EE,SAAC,GAAsD,IAApDrc,EAAmD,EAAnDA,OAAQmc,EAA2C,EAA3CA,MAAOpe,EAAoC,EAApCA,eAAgB3S,EAAoB,EAApBA,QAASE,EAAW,EAAXA,KAAW,EAC3BqL,mBAAS,GADkB,mBAC9D2lB,EAD8D,KAC/CC,EAD+C,KAE/DnuB,EAtBc,SAAC4R,EAAQ5U,GAC7B,IAAIgD,EAAS,CAAC,OAgBd,OAfA4R,EAAO3G,SAAQ,SAAC9J,GACVnE,EAAQmE,EAAEoK,WACZvO,EAAQmE,EAAEoK,UAAUmJ,aAAazJ,SAAQ,SAAC8H,GACpCA,EAAE9S,KACCD,EAAOgU,SAASjB,EAAE9S,OACrBD,EAAOmR,KAAK4B,EAAE9S,MAGXD,EAAOgU,SAASjB,IACnB/S,EAAOmR,KAAK4B,SAMf/S,EAKQ8c,CAAclL,EAAQ5U,GAFgC,EAI3CuL,oBAAS,GAJkC,mBAI9DiC,EAJ8D,KAIvD4H,EAJuD,OAK3B7J,oBAAS,GALkB,mBAK9D2J,EAL8D,KAK/CC,EAL+C,KAOrE,OACE,yBAAK7Q,UAAU,eACb,kBAAC,GAAD,CACEkJ,MAAOA,EACPtN,KAAMA,EACNgL,KAAMgK,EACN1C,QAAS,WACP2C,GAAiB,GACjBxC,OAGJ,yBAAKrO,UAAU,yEACb,yBAAKA,UAAU,YACZtB,EAAO+I,OAAS,EACf,kBAAC,KAAD,CACElH,MAAO,CACLqS,QAAS,SACTlT,MAAO,OACPqT,UAAW,OACXC,WAAY,WAGbtU,EAAO2O,KAAI,SAACxN,EAAG2H,GAAJ,OACV,yBACE8C,QAAS,WACPuiB,EAAiBrlB,IAEnBjH,MAAO,CAAE6P,QAAS,gBAClB9C,IAAG,kCAA6B9F,GAChCxH,UAAS,eACP4sB,IAAkBplB,EACd,mCACA,kCAGL3H,OAKP,KAILyQ,EAAO7I,OACN,kBAAC,GAAD,CACEoJ,iBAAkBA,EAClBC,SAAUA,EACVzC,eAAgBA,EAChBoe,MAAOA,EACPD,SAAS,WACTlc,OAAQA,EAAOmC,QACb,SAAC5S,GAAD,OACGnE,EAAQmE,EAAEoK,WACTvO,EAAQmE,EAAEoK,UAAUmJ,aAAaV,SAC/BhU,EAAOkuB,KAEe,QAA1BluB,EAAOkuB,QAIb,yBACE5sB,UAAU,yEACVO,MAAO,CAAEzB,OAAQ,UAFnB,4DCLO6tB,GAhEE,SAAC,GAAyB,IAAvBrc,EAAsB,EAAtBA,OAAQ5U,EAAc,EAAdA,QAAc,EACEuL,mBAAS,GADX,mBACjC2lB,EADiC,KAClBC,EADkB,KAElCnuB,EAtBc,SAAC4R,EAAQ5U,GAC7B,IAAIgD,EAAS,CAAC,OAgBd,OAfA4R,EAAO3G,SAAQ,SAAC9J,GACVnE,EAAQmE,EAAEoK,WACZvO,EAAQmE,EAAEoK,UAAUmJ,aAAazJ,SAAQ,SAAC8H,GACpCA,EAAE9S,KACCD,EAAOgU,SAASjB,EAAE9S,OACrBD,EAAOmR,KAAK4B,EAAE9S,MAGXD,EAAOgU,SAASjB,IACnB/S,EAAOmR,KAAK4B,SAMf/S,EAKQ8c,CAAclL,EAAQ5U,GAErC,OACE,yBAAKsE,UAAU,eACb,yBAAKA,UAAU,yEACb,yBAAKA,UAAU,YACZtB,EAAO+I,OAAS,EACf,kBAAC,KAAD,CACElH,MAAO,CACLqS,QAAS,SACTE,SAAU,OACVC,UAAW,OACXC,WAAY,WAGbtU,EAAO2O,KAAI,SAACxN,EAAG2H,GAAJ,OACV,yBACE8C,QAAS,WACPuiB,EAAiBrlB,IAEnBjH,MAAO,CAAE6P,QAAS,gBAClB9C,IAAG,kCAA6B9F,GAChCxH,UAAS,eACP4sB,IAAkBplB,EACd,mCACA,kCAGL3H,OAKP,KAILyQ,EAAO7I,OACN,kBAAC,GAAD,CACE+kB,SAAS,cACTlc,OAAQA,EAAOmC,QACb,SAAC5S,GAAD,OACGnE,EAAQmE,EAAEoK,WACTvO,EAAQmE,EAAEoK,UAAUmJ,aAAaV,SAC/BhU,EAAOkuB,KAEe,QAA1BluB,EAAOkuB,QAIb,yBACE5sB,UAAU,yEACVO,MAAO,CAAEzB,OAAQ,UAFnB,wGC2ZOkK,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACL9N,YAAaC,EAAMD,YACnBO,QAASN,EAAMM,SACZuN,KAIQD,EAxdC,SAAC,GAOV,IANL7M,EAMI,EANJA,QACAhB,EAKI,EALJA,YACAO,EAII,EAJJA,QACA+wB,EAGI,EAHJA,MACA7wB,EAEI,EAFJA,KACA4S,EACI,EADJA,eACI,EAE4BvH,mBAAS,IAFrC,mBAEG2N,EAFH,KAEaZ,EAFb,OAIsC/M,oBAAS,GAJ/C,mBAIG2J,EAJH,KAIkBC,EAJlB,OAKsB5J,oBAAS,GAL/B,mBAKGiC,EALH,KAKU4H,EALV,OAMwB7J,oBAAS,GANjC,mBAMGjF,EANH,KAMW2T,EANX,OAQ8D1O,oBAC/D,GATC,mBAQG+N,EARH,KAQ8BjB,EAR9B,OAWwC9M,oBAAU,GAXlD,mBAWGgS,EAXH,KAWmBC,EAXnB,OAcoBjS,oBAAU,GAd9B,mBAcGqS,EAdH,KAcSC,EAdT,OAeoCtS,mBAAS,GAf7C,mBAeGsO,EAfH,KAeiBC,EAfjB,KAkBEC,EAAoB5D,iBAAO,MAKjCzK,qBAAU,WAAM,4CACd,4BAAAiC,EAAA,0DACqC,IAA/B2L,EADN,gCAEqBjS,EAAkBiS,GAFvC,OAEQlU,EAFR,OAGIkT,GAAY,SAACpF,GAAD,OACVrT,OAAOC,OAAO,GAAIoT,EAAlBrT,OAAA,KAAAA,CAAA,GAA2ByZ,EAA4BlU,OAJ7D,4CADc,uBAAC,WAAD,wBASdyM,KACC,CAACyH,IAGJ,IAAIgF,GAAqB,IAAVV,EAAc,EAAIA,EAEjC,OACE,yBAAKtZ,UAAU,6BACb,kBAAC,GAAD,CACEyO,aAAa,EACb7H,KAAMgK,EACN1C,QAAS,kBAAM2C,GAAiB,IAChC3H,MAAOA,EACPlH,OAAQA,EACRpG,KAAMA,EACN4S,eAAgBA,IAElB,yBAAKxO,UAAU,UACb,yBAAKA,UAAU,sBAAsBsI,IAAKmN,IACzCtZ,EAAQsL,OACPtL,EACGwW,MAhCY,GAiCVqH,EAAW,GAjCD,GAkCVA,EAAW,GAlCD,GAoCZ3M,KAAI,SAACxN,EAAG2H,GAAJ,OACH9L,EAAQmE,EAAEoK,UACR,kBAAC,IAAM4J,SAAP,CAAgBvG,IAAG,0BAAqB9F,IACtC,yBACE8F,IAAG,iBAAY9F,GACfxH,UAAU,wDAEV,yBACEA,UAAU,4CACVO,MAAO,CAAEuS,SAAU,UAEnB,yBAAK9S,UAAU,uBACb,yBACEgR,IAAKtV,EAAQmE,EAAEoK,UAAUiJ,aACzB5I,QAAS,kBAAM6G,EAAQtB,KAAR,iBAAuBhQ,EAAEoK,YACxCvK,MAAM,OACNa,MAAO,CAAE0Q,aAAc,QACvBC,IAAG,yCACDxV,EAAQmE,EAAEoK,UAAUiJ,kBAK5B,yBAAKlT,UAAU,0BACb,yBAAKA,UAAU,8EACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,6BACVO,MAAO,CACLsO,gBAAgB,sCAAD,OACbnT,EAAQmE,EAAEoK,UAAUiJ,aADP,SAMrB,yBAAKlT,UAAU,OACb,yBAAKA,UAAU,kCACZtE,EAAQmE,EAAEoK,UAAUkJ,YADvB,KAEGzX,EACCmE,EAAEoK,UACFyL,mBAAmBtJ,UAAU,EAAG,GAJpC,QAUN,yBAAKpM,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAY0E,EAAE4U,QACVtZ,EAAY0E,EAAE4U,QAAQzY,MACtB,GAHS,SAQrB,yBAAKgE,UAAU,YACb,yBAAKA,UAAU,gDACb,yBAAKA,UAAU,sBACZ7E,EAAY0E,EAAE4U,QACXtZ,EAAY0E,EAAE4U,QAAQ1Y,aACtB,QAMd,yBAAKiE,UAAU,YACb,yBAAKA,UAAU,6BACb,0BAAMA,UAAU,iBAAhB,oBAGA,0BAAMA,UAAU,4BACb0W,KAAKC,OAAO,IAAIxY,KAAK0B,EAAE6W,MAAO,iBAEhC+V,EACC,kBAAC,IAAM5Y,SAAP,KACE,kBAAC,GAAD,CACEvN,OAAO,EACPD,SAAS,MACTI,QAAQ,aACRF,MAAM,OACNC,QAAS,SAAC2D,GAAD,OACP,yBAAKnK,UAAU,6BAAf,iBAKF,yBACEA,UAAU,4DACVsK,QAAO,sBAAE,sBAAAjB,EAAA,sDACPyH,EAAS,CACPtS,aACE9C,EAAQmE,EAAEoK,UACPyL,mBACL9Y,MAAOlB,EAAQmE,EAAEoK,UAAUkJ,YAC3B9U,GAAI3C,EAAQmE,EAAEoK,UAAUL,UAE1B+L,EAAU9V,GACVgR,GAAiB,GATV,4CAYT,kBAAC,KAAD,CAAU1C,SAAS,WAGvB,kBAAC,GAAD,CACE7H,OAAO,EACPD,SAAS,MACTI,QAAQ,aACRF,MAAM,OACNC,QAAS,SAAC2D,GAAD,OACP,yBAAKnK,UAAU,6BAAf,mBAKF,yBACEA,UAAU,4DACVsK,QAAO,sBAAE,kCAAAjB,EAAA,sEAEL6P,EAAkBrZ,EAAE+P,KAFf,SAGWtN,EAAazC,GAHxB,OAGDyB,EAHC,OAIL4X,GAAmB,GACf5X,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAM,0BACNtB,KAAM,UACNuB,QAASyE,EAAIuI,UAIjB5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAM,UACNtB,KAAM,UACNuB,QACE,kCAIFlB,EAASD,EAAQmE,EAAEoK,WAIN,KAHbmQ,EAAUze,EACZkE,EAAElE,QACFqO,WAAU,SAACqQ,GAAD,OAAOA,IAAMxa,EAAE4U,YAEzB9Y,EAAOkE,EAAElE,QAAQ4S,OAAO6L,EAAS,GAEnCnb,EAAMwK,SAAS,CACbnO,KAAM,iBACNK,OAAO,gBAAIkE,EAAEoK,SAAWtO,YAGtBoU,EAvBC,eAuBkBnU,EAAKF,UACTmE,EAAEoK,UACrBhL,EAAMwK,SAAS,CACbnO,KAAM,cACNiB,aAAc,CACZb,QAASqU,KAGbvB,KA7CG,0GAkDRyK,IAAmBpZ,EAAE+P,IACpB,yBAAK5P,UAAU,aACb,kBAAC,GAAD,CACEqK,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,SAAS,EACTnJ,KAAM,MAIV,kBAAC,KAAD,CAAS2O,SAAS,YAM1B,MAMR,yBAAKnO,UAAU,wEACZH,EAAEmC,QAEL,yBAAKhC,UAAU,qCACZH,EAAElE,OACY,YAAbkE,EAAElE,OACA,kBAAC,EAAD,CAAQ6D,KAAM,KAEd,kBAAC,IAAD,CACEiB,MACe,mBAAbZ,EAAElE,OACE,OACa,cAAbkE,EAAElE,OACF,QACa,YAAbkE,EAAElE,OACF,sBACA,OAEN+E,IAAI,WACJlB,KAAM,KAIV,IAGJ,yBAAKQ,UAAU,8BACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,oEACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACZH,EAAE+W,MAAMnP,QAEX,yBAAKzH,UAAU,kBACb,kBAAC,IAAD,CACEmO,SAAS,OACTnO,UAAU,gBAGd,yBAAKA,UAAU,iBACZH,EAAE+U,SAASnN,QAEd,yBAAKzH,UAAU,iBACb,kBAAC,IAAD,CACEsK,QAAS,WACPyJ,EACEiB,IAA8BnV,EAAE+P,KAC3B,EACD/P,EAAE+P,MAGVzB,SAAS,OACTnO,UAAU,wDAU5B,kBAAC6W,GAAA,EAAD,CACEC,GAAI9B,IAA8BnV,EAAE+P,IACpC5P,UAAU,QAEV,yBAAKA,UAAU,wBAAf,aACa4U,EAAS/U,EAAE+P,KAAOgF,EAAS/U,EAAE+P,KAAKnI,OAAS,EADxD,KAGCmN,EAAS/U,EAAE+P,KACRgF,EAAS/U,EAAE+P,KACR+C,MACC4C,GAAgBA,EAAe,GAC/BA,GAAgBA,EAAe,GA3TjC,GA6TClI,KAAI,SAACzN,EAAGsX,GAAJ,OACH,yBACE5J,IAAG,kBAAa0H,EAAb,YAA0CkC,GAC7ClX,UAAU,6DAEV,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAYyE,EAAE6U,QACVtZ,EAAYyE,EAAE6U,QAAQzY,MACtB,GAHS,SAQrB,yBAAKgE,UAAU,OACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAYyE,EAAE6U,QACVtZ,EAAYyE,EAAE6U,QAAQzY,MACtB,GAHS,SAQrB,yBAAKgE,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,oCACZ7E,EAAYyE,EAAE6U,QACXtZ,EAAYyE,EAAE6U,QAAQ1Y,aACtB,IAEN,yBAAKiE,UAAU,4BACZ0W,KAAKC,OACJ,IAAIxY,KAAKyB,EAAE8W,MACX,oBAOV,yBAAK1W,UAAU,6DACZJ,EAAE8C,SAEL,yBAAK1C,UAAU,6DACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACZJ,EAAEgX,MAAMnP,QAEX,yBAAKzH,UAAU,kBACb,kBAAC,IAAD,CACEmO,SAAS,OACTnO,UAAU,uCAS5B,GACJ,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,YACb,kBAACoX,GAAD,CACE9D,MAAOpI,KAAKmM,KACVzC,EAAS/U,EAAE+P,KACPgF,EAAS/U,EAAE+P,KAAKnI,OAxYtB,EAyYM,GAENgB,QAAS8M,EACThC,WAAYiC,EACZhC,WAAY,CACVC,YAAa,aACb/H,SAAU,6BAQtB,MAIN,yBACE1L,UAAU,8DACVO,MAAO,CAAEzB,OAAQ,UAFnB,mIAQF,yBAAKkB,UAAU,qEACb,yBAAKA,UAAU,iCACb,kBAACoX,GAAD,CACE5D,WAAY,CACVC,YAAa,aACb/H,SAAU,uBAEZ4H,MAAOpI,KAAKmM,KAAKlb,EAAQsL,OAzad,GA0aXgB,QAASuR,EACTzG,WAAYgG,WChLXvQ,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACL9N,YAAaC,EAAMD,YACnBO,QAASN,EAAMM,SACZuN,KAIQD,EA1RE,SAAC,GAOX,IANL4L,EAMI,EANJA,SACAzZ,EAKI,EALJA,YACAO,EAII,EAJJA,QACA+wB,EAGI,EAHJA,MACA7wB,EAEI,EAFJA,KACAqY,EACI,EADJA,gBACI,EAEoBhN,oBAAU,GAF9B,mBAEGqS,EAFH,KAESC,EAFT,KAIE9D,EAAoB5D,iBAAO,MAJ7B,EAMsB5K,oBAAS,GAN/B,mBAMGiC,EANH,KAMU4H,EANV,OAO8B7J,oBAAS,GAPvC,mBAOGuS,EAPH,KAOcC,EAPd,OAQ0BxS,oBAAS,GARnC,mBAQGvE,EARH,KAQY2W,EARZ,OAS0CpS,oBAAU,GATpD,mBASG8R,EATH,KASoBC,EATpB,KAaAgB,GAAqB,IAAVV,EAAc,EAAIA,EAEjC,OACE,yBAAKtZ,UAAU,6BACb,kBAAC,GAAD,CACE0C,QAASA,EACTuR,gBAAiBA,EACjBD,YAAa,aACb9K,MAAOA,EACPtC,KAAM4S,EACNtL,QAAS,kBAAMuL,GAAa,IAC5B7d,KAAMA,IAER,yBAAKoE,UAAU,UACb,yBAAKA,UAAU,sBAAsBsI,IAAKmN,IACzCb,EAASnN,OACRmN,EACGjC,MApBY,GAqBVqH,EAAW,GArBD,GAsBVA,EAAW,GAtBD,GAwBZ3M,KAAI,SAACxN,EAAG2H,GAAJ,OACH,yBACE8F,IAAG,kBAAa9F,GAChBxH,UAAU,wDAEV,yBACEA,UAAU,4CACVO,MAAO,CAAEuS,SAAU,UAEnB,yBAAK9S,UAAU,uBACb,yBACEgR,IAAKtV,EAAQmE,EAAEoK,UAAUiJ,aACzB5I,QAAS,kBAAM6G,EAAQtB,KAAR,iBAAuBhQ,EAAEoK,YACxCvK,MAAM,OACNa,MAAO,CAAE0Q,aAAc,QACvBC,IAAG,yCACDxV,EAAQmE,EAAEoK,UAAUiJ,kBAK5B,yBAAKlT,UAAU,0BACb,yBAAKA,UAAU,8EACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,6BACVO,MAAO,CACLsO,gBAAgB,sCAAD,OACbnT,EAAQmE,EAAEoK,UAAUiJ,aADP,SAYrB,yBAAKlT,UAAU,OACb,yBAAKA,UAAU,kCACZtE,EAAQmE,EAAEoK,UAAUkJ,YADvB,KAEGzX,EAAQmE,EAAEoK,UAAUyL,mBAAmBtJ,UACtC,EACA,OAMV,yBAAKpM,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAY0E,EAAE4U,QACVtZ,EAAY0E,EAAE4U,QAAQzY,MACtB,GAHS,SAQrB,yBAAKgE,UAAU,YACb,yBAAKA,UAAU,gDACb,yBAAKA,UAAU,yBACZ7E,EAAY0E,EAAE4U,QACXtZ,EAAY0E,EAAE4U,QAAQ1Y,aACtB,QAMd,yBAAKiE,UAAU,YACb,yBAAKA,UAAU,6BACb,0BAAMA,UAAU,iBAAhB,gBACA,0BAAMA,UAAU,4BACb0W,KAAKC,OAAO,IAAIxY,KAAK0B,EAAE6W,MAAO,iBAEhC+V,EACC,kBAAC,IAAM5Y,SAAP,KACE,kBAAC,GAAD,CACEvN,OAAO,EACPD,SAAS,MACTI,QAAQ,aACRF,MAAM,OACNC,QAAS,SAAC2D,GAAD,OACP,yBAAKnK,UAAU,6BAAf,kBAKF,yBACEA,UAAU,4DACVsK,QAAO,sBAAE,sBAAAjB,EAAA,sDACPyH,EAAS,CACPtS,aACE9C,EAAQmE,EAAEoK,UAAUyL,mBACtB9Y,MAAOlB,EAAQmE,EAAEoK,UAAUkJ,YAC3B9U,GAAI3C,EAAQmE,EAAEoK,UAAUL,UAE1ByP,EAAWxZ,GACX4Z,GAAa,GARN,4CAWT,kBAAC,KAAD,CAAUtL,SAAS,WAGvB,kBAAC,GAAD,CACE7H,OAAO,EACPD,SAAS,MACTI,QAAQ,aACRF,MAAM,OACNC,QAAS,SAAC2D,GAAD,OACP,yBAAKnK,UAAU,6BAAf,oBAKF,yBACEA,UAAU,4DACVsK,QAAO,sBAAE,4BAAAjB,EAAA,6DACP2P,EAAmBnZ,EAAE+P,KADd,SAES/M,EAAchD,EAAE+P,KAFzB,OAEHtO,EAFG,OAGP0X,GAAoB,GAChB1X,EAAIuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAM,0BACNtB,KAAM,UACNuB,QAASyE,EAAIuI,UAIjB5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAM,UACNtB,KAAM,UACNuB,QAAS,kCAGboX,KAtBK,4CA0BR8E,IAAoBlZ,EAAE+P,IACrB,yBAAK5P,UAAU,aACb,kBAAC,GAAD,CACEqK,MAAO,QACP9J,MAAO,CACL8F,SAAU,WACV4J,KAAM,OACNhC,IAAK,EACLiC,OAAQ,EACRC,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEd1H,SAAS,EACTnJ,KAAM,MAIV,kBAAC,KAAD,CAAS2O,SAAS,YAM1B,MAMR,yBAAKnO,UAAU,8DACZH,EAAE6C,SAEL,yBAAK1C,UAAU,8BACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,oEACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACZH,EAAE+W,MAAMnP,QAEX,yBAAKzH,UAAU,kBACb,kBAAC,IAAD,CACEmO,SAAS,OACTnO,UAAU,0BAYhC,yBACEA,UAAU,8DACVO,MAAO,CAAEzB,OAAQ,UAFnB,uHAQF,yBAAKkB,UAAU,qEACb,yBAAKA,UAAU,iCACb,kBAACoX,GAAD,CACE5D,WAAY,CACVC,YAAa,aACb/H,SAAU,uBAEZ4H,MAAOpI,KAAKmM,KAAKzC,EAASnN,OAtPf,GAuPXgB,QAASuR,EACTzG,WAAYgG,W,UCRXuT,GAxQK,SAAC,GAMd,IALLlxB,EAKI,EALJA,KACAyS,EAII,EAJJA,eACA0e,EAGI,EAHJA,gBACA7e,EAEI,EAFJA,QACA7L,EACI,EADJA,OACI,EACwB4E,mBAAS,CACnCpL,WAAY,GACZC,UAAW,GACXC,aAAc,GACdC,MAAO,GACPkK,SAAU,GACV8mB,gBAAiB,GACjBpd,IAAK,GACL3T,MAAO,KATL,mBACG6H,EADH,KACWmpB,EADX,OAY0BhmB,mBAAS,IAZnC,mBAYGgG,EAZH,KAYYC,EAZZ,KAcEggB,EAAgBrb,iBAAO,MAE7BzK,qBAAU,WACJxL,EAAKI,OACPixB,GAAU,SAACre,GAAD,OACRrT,OAAOC,OAAO,GAAIoT,EAAM,CACtB/S,WAAYD,EAAKC,WACjBC,UAAWF,EAAKE,UAChBC,aAAcH,EAAKG,aACnBG,MAAON,EAAKM,MACZF,MAAOJ,EAAKI,MACZC,MAAOL,EAAKK,aAIjB,CAACL,EAAKC,aAET,IAAMsxB,EAAgB,uCAAG,WAAOne,GAAP,qBAAA3F,EAAA,6DACnB+jB,EAAYpe,EAAEG,OAAOke,MAAM,GAC3BvF,EAAU,CACZwF,UAAW,EACXC,iBAAkB,IAClBC,cAAc,GALO,kBAQQC,aAAiBL,EAAWtF,GARpC,cAQf4F,EARe,gBASCD,KAAiBE,mBAAmBD,GATrC,OASfE,EATe,OAUrBX,GAAU,SAACre,GAAD,OAAUrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE5S,MAAO4xB,OAVhC,4GAAH,sDAchBhQ,EAAc,CAClB,CACEC,MAAO,UAAUvS,KAAKxH,EAAOoC,WAAa,KAAKoF,KAAKxH,EAAOoC,UAC3D2D,MAAO,0CAET,CACEgU,MAAO/Z,EAAOoC,WAAapC,EAAOkpB,gBAClCnjB,MAAO,yBAET,CACEgU,MAAO/Z,EAAOoC,SAASuB,QAAU,EACjCoC,MAAO,gDAIX,OACE,kBAAC,GAAD,CAAOjD,KAAMmmB,EAAiB7e,QAASA,GACrC,yBAAKlO,UAAU,gFACb,yBAAKA,UAAU,qCAAf,kBACA,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,yCACb,yBACEA,UAAU,iFACVO,MAAO,CAAEsO,gBAAgB,OAAD,OAAS/K,EAAO9H,MAAhB,OAExB,2BACEoT,YAAY,EACZL,SAAUoe,EACV7xB,KAAK,OACL0E,UAAU,SACVsI,IAAK4kB,MAKX,yBACEltB,UAAU,qCACVsK,QAAS,kBAAM4iB,EAAczkB,QAAQsW,UAFvC,kBAQJ,yBAAK/e,UAAU,uBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,6BAAf,cACA,yBAAKA,UAAU,kBACb,2BACEoP,YAAY,EACZ9T,KAAK,OACL0E,UAAU,yBACV4K,MAAO9G,EAAOjI,WACdkT,SAAU,SAACC,GACTA,EAAEC,UACFge,GAAU,SAACre,GAAD,OACRrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE/S,WAAYmT,EAAEG,OAAOvE,gBAMzD,yBAAK5K,UAAU,UACb,yBAAKA,UAAU,6BAAf,aACA,yBAAKA,UAAU,kBACb,2BACEoP,YAAY,EACZ9T,KAAK,OACL0E,UAAU,yBACV4K,MAAO9G,EAAOhI,UACdiT,SAAU,SAACC,GACTA,EAAEC,UACFge,GAAU,SAACre,GAAD,OACRrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE9S,UAAWkT,EAAEG,OAAOvE,iBAO1D,yBAAK5K,UAAU,uBACb,yBAAKA,UAAU,qBAAf,SACA,yBAAKA,UAAU,UACb,2BACE+d,UAAQ,EACR3O,YAAY,EACZ9T,KAAK,OACL0E,UAAU,mDACV4K,MAAO9G,EAAO5H,UAIpB,yBAAK8D,UAAU,uBACb,yBAAKA,UAAU,qBAAf,gBACA,yBAAKA,UAAU,UACb,2BACEoP,YAAY,EACZ9T,KAAK,OACL0E,UAAU,yBACV4K,MAAO9G,EAAO/H,aACdgT,SAAU,SAACC,GACTA,EAAEC,UACFge,GAAU,SAACre,GAAD,OACRrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE7S,aAAciT,EAAEG,OAAOvE,gBAM3D,yBAAK5K,UAAU,uBACb,yBAAKA,UAAU,qBAAf,YACA,yBAAKA,UAAU,UACb,2BACE1E,KAAK,WACL8T,YAAY,EACZpP,UAAU,yBACV4K,MAAO9G,EAAOoC,SACd6I,SAAU,SAACC,GACTA,EAAEC,UACFge,GAAU,SAACre,GAAD,OACRrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE1I,SAAU8I,EAAEG,OAAOvE,gBAMvD,yBAAK5K,UAAU,uBACb,yBAAKA,UAAU,qBAAf,oBACA,yBAAKA,UAAU,UACb,2BACEoP,YAAY,EACZ9T,KAAK,WACL0E,UAAU,yBACV4K,MAAO9G,EAAOkpB,gBACdje,SAAU,SAACC,GACTA,EAAEC,UACFge,GAAU,SAACre,GAAD,OACRrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEoe,gBAAiBhe,EAAEG,OAAOvE,gBAM9D,yBACE5K,UAAU,oEACVO,MAAO,CAAEzB,OAAQ,OAAQ6Q,QAAS1C,EAAU,EAAI,IAE/CA,GAEH,yBAAKjN,UAAU,kBACb,yBACEA,UAAU,4EACVsK,QAAS4D,GAFX,UAMA,yBACElO,UAAU,6DACVsK,QAAO,sBAAE,gCAAAjB,EAAA,2DACHwiB,EAAWjO,EAAYnL,QAAO,SAAC5S,GAAD,OAAQA,EAAEge,UAC/BpW,SAAU3D,EAAOoC,SAFvB,gBAGLgH,EAAW2e,EAAS,GAAGhiB,OAHlB,8BAKDgkB,EAAc,GAClBtyB,OAAO6gB,KAAKtY,GAAQ6F,SAAQ,SAAC9J,GACvBiE,EAAOjE,KACTguB,EAAYhuB,GAAKiE,EAAOjE,OARvB,SAWWgE,EAASgqB,GAXpB,QAWDvsB,EAXC,QAYIuI,MAuBP5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASyE,EAAIuI,MACbvO,KAAM,cA3BV2D,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,kBACPC,QAAS,wCACTvB,KAAM,aAGV2D,EAAMwK,SAAS,CACbnO,KAAM,qBACNG,WAAW,gBAAI4G,EAASf,EAAIwsB,qBAG9B7uB,EAAMwK,SAAS,CACbnO,KAAM,cACNiB,aAAc+E,EAAIkI,cAGpB6E,IACAH,IACAqc,aAAY,kBAAwBjpB,EAAIysB,UAjCrC,6CAFX,YC0GK/kB,oBATf,SAAc5N,EAAO6N,GACnB,OAAO,aACLrN,KAAMR,EAAMQ,KACZF,QAASN,EAAMM,QACfP,YAAaC,EAAMD,aAChB8N,KAIQD,EAhTC,SAACzJ,GACf,IAAM3D,EAAO2D,EAAM3D,KACbyG,EAAS9C,EAAM+a,MAAMxO,OAAOzJ,OAC5BlH,EAAcoE,EAAMpE,YACpBO,EAAU6D,EAAM7D,QAChBsyB,EAAezuB,EAAM+a,MAAMxO,OAAOoR,QALf,EAOajW,mBAAS,CAC7C7K,SAAU,GACVwY,SAAU,GACVvY,YAAa,GACbF,QAAS,GACTN,WAAY,GACZC,UAAW,KAbY,mBAOlBmyB,EAPkB,KAOLC,EAPK,OAgBmBjnB,oBAAS,GAhB5B,mBAgBlBuH,EAhBkB,KAgBFuH,EAhBE,OAiBqB9O,oBAAS,GAjB9B,mBAiBlBgN,EAjBkB,KAiBD6B,EAjBC,OAkBK7O,mBAAS,IAlBd,mBAkBlB9K,EAlBkB,KAkBT0Y,EAlBS,OAmBO5N,mBAAS,IAnBhB,mBAmBlB2N,EAnBkB,KAmBRZ,EAnBQ,KAqBnBma,EAAiBtc,kBAAO,GACxBuc,EAAkBvc,kBAAO,GAtBN,EAwBK5K,mBAAS,GAxBd,mBAwBlBiW,EAxBkB,KAwBTC,EAxBS,OAyBqBlW,oBAAS,GAzB9B,mBAyBlB8lB,EAzBkB,KAyBDsB,EAzBC,OA2BmBpnB,oBAAS,GA3B5B,mBA2BlBoH,EA3BkB,KA2BFigB,EA3BE,KAgGzB,OAnEAlnB,qBAAU,WAAM,4CACd,4BAAAiC,EAAA,0DACMhH,EADN,gCAEoBkB,EAAQlB,GAF5B,QAEQf,EAFR,QAGauI,OACPqkB,EAAe5sB,GAJrB,4CADc,uBAAC,WAAD,wBASdiM,KACC,CAAClL,EAAQgM,EAAgBzS,EAAKQ,SAASqL,SAE1CL,qBAAU,gBACaP,IAAjBmnB,GACF7Q,GAAY6Q,KAEb,CAACA,IAEJ5mB,qBAAU,WAAM,4CACd,8BAAAiC,EAAA,yDAEgB,IAAZ6T,GACCiR,EAAe1lB,UAChBwlB,EAAY9xB,QAAQsL,OAJxB,uBAMI0mB,EAAe1lB,SAAU,EAN7B,SAOoBjF,EAAeyqB,EAAY9xB,SAP/C,QAOQmF,EAPR,QAQauI,OACPgL,EAAWvT,EAAIwY,WATrB,0BAWyB,IAAZoD,GAAkBkR,EAAgB3lB,QAX/C,wBAYI2lB,EAAgB3lB,SAAU,EAZ9B,UAaoB9E,EAAgBsqB,EAAYrZ,UAbhD,SAaQtT,EAbR,QAcauI,OACPmK,EAAY1S,EAAIwY,WAftB,6CADc,uBAAC,WAAD,wBAoBdvM,KACC,CAAC2P,EAAS+Q,EAAY9xB,QAAQsL,SAEjCL,qBAAU,WAAM,4CACd,4BAAAiC,EAAA,0DACM8kB,EAAe1lB,QADrB,uBAEIqN,GAAoB7B,GAFxB,SAGoBzQ,EAAeyqB,EAAY9xB,SAH/C,QAGQmF,EAHR,QAIauI,OACPgL,EAAWvT,EAAIwY,WALrB,4CADc,uBAAC,WAAD,wBAUdvM,KACC,CAACiB,IAEJpH,qBAAU,WAAM,4CACd,4BAAAiC,EAAA,0DACM+kB,EAAgB3lB,QADtB,uBAEI6lB,GAAmBjgB,GAFvB,SAGoB1K,EAAgBsqB,EAAYrZ,UAHhD,QAGQtT,EAHR,QAIauI,OACPmK,EAAY1S,EAAIwY,WALtB,4CADc,uBAAC,WAAD,wBAUdvM,KACC,CAAC0G,IAGF,yBAAKjU,UAAU,iBAAiBO,MAAO,CAAE4b,UAAW,UAClD,kBAAC,GAAD,CACE9Z,OAAQA,EACRgM,eAAgB,kBAAMigB,GAAmBjgB,IACzC0e,gBAAiBA,EACjBnxB,KAAMA,EACNsS,QAAS,kBAAMmgB,GAAmB,MAEpC,yBAAKruB,UAAU,+CACb,yBAAKA,UAAU,4HACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,kEACb,yBACEA,UAAU,sDACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAYkH,GAAUlH,EAAYkH,GAAQrG,MAAQ,GADrC,QAKnB,yBAAKgE,UAAU,sBACZiuB,EAAYpyB,YAAcoyB,EAAYnyB,UACrC,yBAAKkE,UAAU,gFACb,yBAAKA,UAAU,iBACZiuB,EAAYpyB,WAAaoyB,EAAYpyB,WAAa,IAErD,yBAAKmE,UAAU,YACZiuB,EAAYnyB,UAAYmyB,EAAYnyB,UAAY,KAIrD,yBAAKkE,UAAU,qEAAf,sBAKF,yBAAKA,UAAU,qFACb,yBAAKA,UAAU,gBAAgBO,MAAO,CAAEuS,SAAU,UAAlD,IAEG3X,EAAYkH,GACTlH,EAAYkH,GAAQtG,aACpB,KAGPH,EAAKgU,MAAQvN,EACZ,yBAAKrC,UAAU,kEACb,yBACEA,UAAU,mDACVsK,QAAS,kBAAM+jB,GAAmB,KAFpC,iBAQF,MAKR,yBAAKruB,UAAU,sBACb,yBAAKA,UAAU,kEACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,2CAAf,YAGA,yBAAKA,UAAU,gDACZiuB,EAAY7xB,SAASqL,SAG1B,yBAAKzH,UAAU,gCACb,yBAAKA,UAAU,2CAAf,WAGA,yBAAKA,UAAU,gDACZiuB,EAAY5xB,YAAYoL,SAG7B,yBAAKzH,UAAU,gCACb,yBAAKA,UAAU,2CAAf,WAGA,yBAAKA,UAAU,oEACZiuB,EAAY9xB,QAAQsL,SAGzB,yBAAKzH,UAAU,mBACb,yBAAKA,UAAU,2CAAf,YAGA,yBAAKA,UAAU,gDACZiuB,EAAYrZ,SAASnN,YAOhC,yBAAKzH,UAAU,wFACb,yBAAKA,UAAU,UACb,kBAAC,KAAD,CACEO,MAAO,CACLuS,SAAU,OACVC,UAAW,OACXC,WAAY,WAGd,yBACEhT,UAAU,oFACVO,MAAO,CACLguB,UAAW,wBACXC,aACc,IAAZtR,EACI,4BACA,yBAER5S,QAAS,kBAAM6S,EAAW,KAT5B,YAaA,yBACE5c,MAAO,CACLguB,UAAW,wBACXC,aACc,IAAZtR,EACI,4BACA,yBAERld,UAAU,oFACVsK,QAAS,kBAAM6S,EAAW,KAT5B,WAaA,yBACE5c,MAAO,CACLguB,UAAW,wBACXC,aACc,IAAZtR,EACI,4BACA,yBAERld,UAAU,oFACVsK,QAAS,kBAAM6S,EAAW,KAT5B,WAaA,yBACE5c,MAAO,CACLguB,UAAW,wBACXC,aACc,IAAZtR,EACI,4BACA,yBAERld,UAAU,oFACVsK,QAAS,kBAAM6S,EAAW,KAT5B,eAgBO,IAAZD,EACC,kBAAC,GAAD,CACExhB,QAASA,EACT2S,eAAgB,kBAAMigB,GAAmBjgB,IACzCiC,OAAQ2d,EAAY7xB,SACpBqwB,MAAO7wB,EAAKgU,MAAQqe,EAAYre,IAChChU,KAAMA,IAEM,IAAZshB,EACF,kBAACuR,GAAD,CACE/yB,QAASA,EACT4U,OAAQ2d,EAAY5xB,cAER,IAAZ6gB,EACF,kBAAC,GAAD,CACE1O,eAAgB,kBAAMuH,GAAmBvH,IACzC5S,KAAMA,EACNF,QAASA,EACTS,QAASA,EACTswB,MAAO7wB,EAAKgU,MAAQqe,EAAYre,MAEpB,IAAZsN,EACF,kBAAC,GAAD,CACEjJ,gBAAiB,kBAAM6B,GAAoB7B,IAC3CrY,KAAMA,EACNF,QAASA,EACTkZ,SAAUA,EACV6X,MAAO7wB,EAAKgU,MAAQqe,EAAYre,MAGlC,QC1OK8e,GA/DM,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,WAAqB7nB,GAAW,EAApBnL,KAAoB,mDAC3DizB,EAAc9nB,EAAK+nB,cAAcriB,IAD0B,EAEjCxF,mBAAS,CAAE8nB,OAAO,EAAOlR,OAAO,IAFC,mBAE1DmR,EAF0D,KAEhDC,EAFgD,KA6CjE,OAzCA7nB,qBAAU,WAAM,4CACd,8BAAAiC,EAAA,yDAEgB,QADVpN,EAAQsuB,aAAa2E,QAAQ,uBACVjzB,EAAMwL,OAF/B,gBAGIwnB,GAAY,SAACrgB,GAAD,OAAUrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEmgB,OAAO,OAH3D,sCAKqBptB,EAAe,CAC9B1F,UANN,QAKQ6E,EALR,QAQc+I,OAiBRsH,EAAQtB,KAAK,KACb5Q,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,yBACPC,QAAS,2CACTvB,KAAM,cAtBQ,kBAAdwF,EAAK4e,KACPuP,GAAY,SAACrgB,GAAD,OACVrT,OAAOC,OAAO,GAAIoT,EAAM,CAAEmgB,OAAO,EAAMlR,OAAO,QAGhD5e,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,yBACPC,QAAS,oDACTvB,KAAM,aAGV6V,EAAQtB,KAAK,MAtBrB,4CADc,uBAAC,WAAD,wBAsCdtC,KACC,IAEIyhB,EAASD,MACd,kBAAC,IAAD,iBACMhoB,EADN,CAEEooB,OAAQ,SAAC5vB,GACP,OAAOyvB,EAASnR,MACd,kBAAC8Q,EAAcpvB,GAEf,kBAAC,IAAD,CACE6vB,GAAI,CAAEC,SAAUT,EAAYxzB,MAAO,CAAEyzB,YAAaA,UAM1D,+B,UCuBWS,GApFM,WAAO,IAAD,EACiBroB,mBAAS,IAD1B,mBAClB6b,EADkB,KACHC,EADG,KAGrBwM,GAAwB,EAExBC,EAAsBjF,aAAa2E,QAAQ,+BAG7CM,EADEA,EACoBtuB,KAAKuuB,MAAMD,GAEX,GAVC,qBAaX1M,GAbW,IAazB,2BAA6B,CAAC,IAArBjjB,EAAoB,QAC3B,IAAK2vB,EAAoB9c,SAAS7S,EAAEqjB,aAAc,CAChDqM,EAAwB1vB,EACxB,QAhBqB,oCAoBGoH,oBAAS,GApBZ,mBAoBlByoB,EApBkB,KAoBVC,EApBU,KAmCzB,OAbAvoB,qBAAU,WAAM,4CACd,4BAAAiC,EAAA,sEACmBhE,KADnB,QACMvE,EADN,QAEY+I,OACJ/I,EAAK2G,QACPsb,EAAiBjiB,GAJvB,4CADc,uBAAC,WAAD,wBAUdyM,KACC,IAEIgiB,GACLA,EAAsBrM,cACrBwM,EACD,yBACE1vB,UAAS,sEACwB,YAA/BuvB,EAAsBj0B,KAClB,aAC+B,gBAA/Bi0B,EAAsBj0B,KACtB,aAC+B,UAA/Bi0B,EAAsBj0B,KACtB,YACA,KAGN,yBACEgP,QAAS,WACPqlB,GAAU,GACVH,EAAoB3f,KAAK0f,EAAsBrM,aAE/CqH,aAAaC,QACX,8BACAtpB,KAAKC,UAAUquB,KAGnBxvB,UAAU,yGACVO,MAAO,CAAEkY,MAAO,OAAQxK,IAAK,EAAGiC,OAAQ,EAAGC,OAAQ,OAAQY,OAAQ,IAEnE,kBAAC,KAAD,CAAK/Q,UAAU,eAEjB,yBAAKA,UAAU,uCACb,yBAAKA,UAAU,yCACb,yBACEA,UAAU,kCACVO,MAAO,CAAEb,MAAO,UAElB,yBAAKM,UAAU,yBACb,yBAAKA,UAAU,yCACZuvB,EAAsBrM,cAG3B,yBAAKljB,UAAU,WAAWO,MAAO,CAAEb,MAAO,aAKhD,ICvDW4mB,OA3Bf,SAAuB/mB,GACrB,OACE,uBAAKS,UAAU,8CACb,uBACEA,UAAU,+BACVO,MAAO,CAAE0N,IAAK,MAAOwK,MAAO,MAAOtK,SAAU,SAE5C5O,EAAM+T,MAAQ/T,EAAM+T,MAAQ,GAE/B,qCAAK7T,QAAQ,gBAAgBC,MAAM,QAAWH,GAC5C,wBACEU,EAAE,+JACFF,KAAK,YAEP,wBACEE,EAAE,6YACFF,KAAK,YAEP,wBACEE,EAAE,4JACFF,KAAK,e,UCyDAiJ,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACLrN,KAAMR,EAAMQ,KACZF,QAASN,EAAMM,SACZuN,KAIQD,EA1EY,SAAC,GAAyB,IAAvBsH,EAAsB,EAAtBA,OAAQhG,EAAc,EAAdA,QACpC,OACE,yBAAKtK,UAAU,OACZsQ,EAAOjD,KAAI,SAACxN,EAAG2H,GAAJ,OACV,yBACE8F,IAAG,iBAAY9F,GACfxH,UAAU,0BACVO,MAAO,CAAEqvB,UAAW,QAASC,SAAU,GACvCvlB,QAAS,WACP6G,EAAQtB,KAAR,iBAAuBhQ,EAAElB,KAAF,gBAAkBkB,EAAExB,IAAOwB,EAAExB,KACpDiM,MAGF,yBAAKtK,UAAU,kBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,yCACb,yBACEA,UAAU,6BACVO,MAAO,CACLsO,gBAAgB,OAAD,OACbhP,EAAEvB,YAAF,yCACsCuB,EAAEvB,aACpC,uDAHS,UASvB,yBAAK0B,UAAU,OACb,yBACEA,UAAU,qCACVsK,QAAS,kBAAM6G,EAAQtB,KAAR,iBAAuBhQ,EAAExB,OAExC,yBAAK2B,UAAU,iBACZH,EAAEjD,MAAQiD,EAAEjD,MAAQiD,EAAElB,OAG3B,yBAAKqB,UAAU,kCACb,yBAAKA,UAAU,gBAAgBO,MAAO,CAAEuS,SAAU,SAC/CjT,EAAEwR,UAAU5J,OACT5H,EAAEwR,UACChE,KAAI,SAACiE,GACJ,IAAIwe,EAAa3vB,EAAqBqR,MACpC,SAACC,GAAD,OAAOA,EAAEpT,KAAOiT,KAEdye,EAAc3vB,EAAqBoR,MACrC,SAACC,GAAD,OAAOA,EAAEpT,KAAOiT,KAElB,OAAOwe,EACHA,EAAWnxB,KACXoxB,EACAA,EAAYpxB,KACZ,aAELqN,KAAK,KACR,sBCiHPhD,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACL9N,YAAaC,EAAMD,YACnBO,QAASN,EAAMM,SACZuN,KAIQD,EAtKa,SAAC,GAAuC,IAArC7M,EAAoC,EAApCA,QAAShB,EAA2B,EAA3BA,YAAaO,EAAc,EAAdA,QAAc,EACCuL,oBAC/D,GAF8D,mBAC1D+N,EAD0D,KAC/BjB,EAD+B,KASjE,OAAO5X,EACJwW,MACC,EACA,GAEDtF,KAAI,SAACxN,EAAG2H,GAAJ,OACH,yBACE8C,QAAS,kBAAM6G,EAAQtB,KAAR,iBAAuBhQ,EAAEoK,YACxCqD,IAAG,iBAAY9F,GACfxH,UAAU,+EAEV,yBACEA,UAAU,4CACVO,MAAO,CAAEuS,SAAU,UAEnB,yBAAK9S,UAAU,uBACb,yBACEgR,IAAKtV,EAAQmE,EAAEoK,UAAUiJ,aACzBxT,MAAM,OACNa,MAAO,CAAE0Q,aAAc,OAAQwF,OAAQ,WACvCvF,IAAG,yCACDxV,EAAQmE,EAAEoK,UAAUiJ,kBAK5B,yBAAKlT,UAAU,0BACb,yBAAKA,UAAU,8EACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,6BACVO,MAAO,CACLsO,gBAAgB,sCAAD,OACbnT,EAAQmE,EAAEoK,UAAUiJ,aADP,SAMrB,yBAAKlT,UAAU,OACb,yBAAKA,UAAU,0BACZtE,EAAQmE,EAAEoK,UAAUkJ,YADvB,KAEGzX,EAAQmE,EAAEoK,UAAUyL,mBAAmBtJ,UAAU,EAAG,IAEvD,yBAAKpM,UAAU,6BACb,yBAAKA,UAAU,iBAAiBH,EAAEuT,kBAK1C,yBAAKpT,UAAU,UACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,oCACVO,MAAO,CACLsO,gBAAgB,OAAD,OACb1T,EAAY0E,EAAE4U,QACVtZ,EAAY0E,EAAE4U,QAAQzY,MACtB,GAHS,SAQrB,yBAAKgE,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,sBACZ7E,EAAY0E,EAAE4U,QACXtZ,EAAY0E,EAAE4U,QAAQ1Y,aACtB,QAMd,yBAAKiE,UAAU,YACb,yBAAKA,UAAU,kBACb,0BAAMA,UAAU,QAAhB,oBACA,0BAAMA,UAAU,cACb0W,KAAKC,OAAO,IAAIxY,KAAK0B,EAAE6W,MAAO,sBAO3C,yBAAK1W,UAAU,gDACZH,EAAEmC,QAEL,yBAAKhC,UAAU,iDACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,6DACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACZH,EAAElE,OACD,yBAAK4E,MAAO,CAAEqL,aAAc,SAC1B,kBAAC,IAAD,CACEnL,MACe,mBAAbZ,EAAElE,OACE,OACa,cAAbkE,EAAElE,OACF,QACa,YAAbkE,EAAElE,OACF,sBACA,OAEN+E,IAAI,WACJlB,KAAM,MAIV,KAIN,yBAAKQ,UAAU,iBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBAAiBH,EAAE+W,MAAMnP,QACxC,yBAAKzH,UAAU,kBACb,kBAAC,IAAD,CACEmO,SAAS,OACTnO,UAAU,gBAGd,yBAAKA,UAAU,iBAAiBH,EAAE+U,SAASnN,QAC3C,yBAAKzH,UAAU,YACb,kBAAC,IAAD,CACEsK,QAAS,WACPyJ,EACEiB,IAA8BnV,EAAE+P,KAAO,EAAI/P,EAAE+P,MAGjDzB,SAAS,OACTnO,UAAU,8DCkDnBgJ,oBATf,SAAc5N,EAAO6N,GACnB,OAAO,aACLrN,KAAMR,EAAMQ,KACZY,OAAQpB,EAAMoB,OACdO,SAAU3B,EAAM2B,UACbkM,KAIQD,EA/LG,SAACzJ,GACjB,IAAMywB,EAAa,CAAC,MAAO,SAAU,SAAU,WACzCtzB,EAAW6C,EAAM/C,OAAOE,SACxBK,EAAWwC,EAAMxC,SAHI,EAIDkK,mBAAS,IAJR,mBAIpBxK,EAJoB,KAIbwzB,EAJa,OAKGhpB,mBAAS,IALZ,mBAKpB9K,EALoB,KAKX0Y,EALW,OAMC5N,mBAAS,IANV,mBAMpBqJ,EANoB,KAMZ2B,EANY,OAOChL,mBAAS,IAPV,mBAOpByU,EAPoB,KAOZC,EAPY,OAQW1U,oBAAS,GARpB,mBAQpBipB,EARoB,KAQPC,EARO,KASrBC,EAAeve,kBAAO,GAEtBmK,EAAS,WACb/c,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS,uDACTvB,KAAM,cAwDZ,OApDA8L,qBAAU,WAAM,4CACd,gCAAAiC,EAAA,0DACM5M,EADN,oBAEI0zB,GAAe,GACfC,EAAa3nB,SAAU,EACN,YAAb/L,GAAuC,QAAbA,EAJlC,iCAK0ByH,GAAc1H,GALxC,QAKUN,EALV,QAMmB0N,OACNumB,EAAa3nB,SAChBoM,EAAW1Y,EAAQwW,MAAM,EAAG,IARtC,wBAYMkC,EAAW,IAZjB,WAeqB,WAAbnY,GAAsC,QAAbA,EAfjC,kCAgByB8P,GAAa/P,EAAOM,EAASC,gBAhBtD,SAgBUsT,EAhBV,QAkBiBlD,QACJgjB,EAAa3nB,SAChBwJ,EAAU3B,EAAOlD,QAAQuF,MAAM,EAAG,KAGpCqJ,IAvBR,wBA0BM/J,EAAU,IA1BhB,WA4BqB,WAAbvV,GAAsC,QAAbA,EA5BjC,kCA6ByBgQ,GAAajQ,EAAOM,EAASC,gBA7BtD,SA6BU0e,EA7BV,QA8BiBtO,QACJgjB,EAAa3nB,SAChBkT,EAAUD,EAAOtO,QAAQuF,MAAM,EAAG,KAGpCqJ,IAnCR,wBAsCML,EAAU,IAtChB,gCAyCIyU,EAAa3nB,SAAU,EACvB0nB,GAAe,GACfle,EAAU,IACV0J,EAAU,IACV9G,EAAW,IA7Cf,6CADc,uBAAC,WAAD,wBAiDdtH,KACC,CAAC9Q,EAAOC,IAGT,yBAAKsD,UAAU,wBACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEue,aAAa,WACbH,MAAO4R,EACPxR,SAAU,SAACsC,GAAD,OACR7hB,EAAMwK,SAAS,CACbnO,KAAM,gBACNkB,OAAQ,CAAEE,SAAUszB,EAAWlP,OAGnC9Z,aAAc,QACdhH,UAAU,gCACVqe,QAAS3hB,IAEX,yBAAKsD,UAAU,yBACb,2BACEqwB,OAAM,sBAAE,sBAAAhnB,EAAA,sEACA,IAAIinB,SAAQ,SAACC,GAAD,OAAapE,WAAWoE,EAAS,QAD7C,OAENJ,GAAe,GAFT,2CAIRK,QAAO,sBAAE,sBAAAnnB,EAAA,+EAAY8mB,GAAe,IAA3B,2CACTvlB,MAAOnO,EACPg0B,QAAS,SAACzhB,GACU,KAAdA,EAAE4b,UACJqF,EAAS,IACThxB,EAAMwK,SAAS,CACbnO,KAAM,gBACNkB,OAAQ,CAAEC,WAEZ0U,EAAQtB,KAAK,aAGjBd,SAAU,SAACC,GACTA,EAAEC,UACFghB,EAASjhB,EAAEG,OAAOvE,QAEpBtP,KAAK,OACL8T,YAAY,EACZpP,UAAS,gBAEX,kBAAC,KAAD,CACEsK,QAAS,kBAAM6G,EAAQtB,KAAK,YAC5B1B,SAAS,OACTnO,UAAU,8CACVO,MAAO,CAAE0N,IAAK,EAAGiC,OAAQ,EAAGuI,MAAO,OAAQtI,OAAQ,YAIzD,yBACEnQ,UAAU,qEACVO,MAAO,CAAE0N,IAAI,OAASgC,KAAM,EAAG2O,UAAW,UAE1C,yBAAK5e,UAAU,UACZkwB,EACC,kBAAC,IAAMrc,SAAP,KACGvD,EAAO7I,OACN,kBAAC,IAAMoM,SAAP,KACE,yBAAK7T,UAAU,6CAAf,WACWsQ,EAAO7I,OADlB,KAGA,kBAAC,GAAD,CACE6C,QAAS,kBAAM2lB,EAAS,KACxB3f,OAAQA,KAIZ,GAEDoL,EAAOjU,OACN,kBAAC,IAAMoM,SAAP,KACE,yBAAK7T,UAAU,6CAAf,WACW0b,EAAOjU,OADlB,KAGA,kBAAC,GAAD,CACE6I,OAAQoL,EACRpR,QAAS,kBAAM2lB,EAAS,QAI5B,GAED9zB,EAAQsL,OACP,kBAAC,IAAMoM,SAAP,KACE,yBAAK7T,UAAU,6CAAf,YACY7D,EAAQsL,OADpB,KAGA,kBAAC,GAAD,CACEtL,QAASA,EACTmO,QAAS,kBAAM2lB,EAAS,QAI5B,IAIJ,IAGJ,yBAAKjwB,UAAU,iBCmNV0wB,oBAAmB1nB,aATlC,SAAc5N,EAAO6N,GACnB,OAAO,aACLrN,KAAMR,EAAMQ,KACZY,OAAQpB,EAAMoB,OACduC,oBAAqB3D,EAAM2D,qBACxBkK,KAI2BD,EA1XnB,SAACzJ,GACd,IAAM3D,EAAO2D,EAAM3D,KACbmD,EAAsBQ,EAAMR,oBAC5BD,EAASS,EAAMT,OAHG,EAKmBmI,oBAAS,GAL5B,mBAKjB0pB,EALiB,KAKFC,EALE,KAMlBC,EAAahf,iBAAO,KANF,EAOU5K,mBAAS,MAPnB,mBAOjB6pB,EAPiB,KAONC,EAPM,OAQkB9pB,mBAAS,IAR3B,mBAQjB3K,EARiB,KAQFoqB,EARE,KASlBsK,EAAiBnf,iBAAO,MAExBof,EAAWC,cA4CjB,OA1CA9pB,qBAAU,WACR,SAAS+pB,IACP,IAAIC,EAAUjyB,OAAOiyB,QACjBP,EAAWpoB,QAAU2oB,EACvBL,EAAa,QAEbA,EAAa,MAEfF,EAAWpoB,QAAU2oB,EAEnBR,EADc,IAAZQ,GAQN,OAFAjyB,OAAO6Y,iBAAiB,SAAUmZ,GAE3B,WACLhyB,OAAO8Y,oBAAoB,SAAUkZ,MAEtC,IAEH/pB,qBAAU,WAAM,4CACd,4BAAAiC,EAAA,0DACMzN,EAAKU,cADX,gCAEqBmJ,GAAqB7J,EAAKU,eAF/C,QAEQwE,EAFR,QAGc+I,OACR6c,EACE5lB,EAAKuM,KAAI,SAACxN,GAAD,OAAOtE,OAAOC,OAAO,GAAIqE,EAAG,CAAEwxB,MAAM,QALrD,4CADc,uBAAC,WAAD,wBAWd9jB,KACC,CAAC3R,IAEJwL,qBAAU,WACJtI,GACFG,EAAMwK,SAAS,CAAEnO,KAAM,aAAcwD,aAEtC,CAACA,IAEyB,WAAtBmyB,EAAS5B,UACQ,YAAtB4B,EAAS5B,UACa,qBAAtB4B,EAAS5B,UACR4B,EAAS5B,SAAS3c,SAAS,mBAmT5B,8BAlTA,yBACE1S,UAAU,cACVO,MAAO,CACL8F,SAAU,SACV0K,OAAQ,GACRmN,WAAY,WACZjQ,IAAmB,OAAd6iB,EAAqB,MAArB,WAAiChyB,EAAjC,MACLmR,KAAM,EACNwI,MAAO,IAGT,kBAAC,GAAD,MACA,yBACEzY,UAAS,6DACN2wB,EAA6B,GAAb,aAGnB,yBACE3wB,UAAS,gBACe,WAAtBixB,EAAS5B,SAAwB,qBAAuB,KAG1D,yBAAKrvB,UAAU,mFACb,yBAAKA,UAAU,mEACb,yBACEA,UAAU,gDACVsK,QAAS,kBAAM6G,EAAQtB,KAAK,OAE5B,yBAAK7P,UAAU,kBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,YACb,yBAAKA,UAAU,0BAAf,cACA,yBACEA,UAAU,gDACVO,MAAO,CAAE4N,SAAU,OAAQxC,UAAW,UAFxC,gBASN,yBACE3L,UAAU,mCACVsK,QAAS,kBAAM6G,EAAQtB,KAAK,OAE5B,yBAAK7P,UAAU,qBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,0BAAf,cACA,yBACEA,UAAU,gDACVO,MAAO,CAAE4N,SAAU,OAAQxC,UAAW,UAFxC,eAQJ,yBAAK3L,UAAU,8BACb,kBAAC,GAAD,CAAWnB,aAAcC,KAE3B,yBAAKkB,UAAU,YACb,yBAAKA,UAAU,kBACZpE,EAAKG,aACJ,yBAAKiE,UAAU,YACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEwG,QAAS,SAAC2D,GAAD,OACP,yBACEnK,UAAU,6CACVO,MAAO,CACLuS,SAAU,QACVpT,MAAO,OACPkf,UAAW,UAGZtiB,EAAcmL,OACbnL,EAAc+Q,KAAI,SAACxN,EAAG2H,GAAJ,OAChB,yBACE8F,IAAG,uBAAkB9F,GACrBxH,UAAS,4BACPwH,IAAMlL,EAAcmL,OAAS,EACzB,iBACA,KAGN,yBAAKzH,UAAU,0CACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,YACZH,EAAEgnB,SAEL,yBAAK7mB,UAAU,0CACb,+BACG0W,KAAKC,OACJ,IAAIxY,KAAK0B,EAAEyjB,YACX,oBAMV,yBAAKtjB,UAAU,iCACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,uBACZH,EAAEqjB,aAEL,yBAAKljB,UAAU,YACb,kBAAC,KAAD,CACEsK,QAAO,sBAAE,8BAAAjB,EAAA,sEpEkDZhL,EoEhDOwB,EAAE+P,IpEgDLvN,EoE/CGzG,EAAKgU,IpEgD1ChP,EAAgB,6BAA8B,CAAEvC,KAAIgE,WoEnDV,cAKEwH,QACHynB,EAAoBryB,EAAMwqB,WAC3B7tB,KAAKU,eAIU,KAHdi1B,EAAWD,EAAkBtnB,WAC/B,SAACwnB,GAAD,OAAOA,IAAM3xB,EAAE+P,SAGf0hB,EAAkB/iB,OAChBgjB,EACA,GAGJtyB,EAAMwK,SAAS,CACbnO,KAAM,cACNiB,aAAc,CACZD,cAAeg1B,MApBd,iCpEkDb,IAACjzB,EAAIgE,IoElDQ,OAyBT8L,SAAS,OACTnO,UAAU,kDAQtB,yBAAKA,UAAU,kCAAf,6CAON,yBAAKA,UAAU,YACb,kBAAC,GAAD,CACEsT,MAAOhX,EAAcmL,aAO/B,GAEF,yBAAKzH,UAAU,uBACZpE,EAAKG,aACJ,yBAAKiE,UAAU,qCACb,kBAAC,GAAD,CACEwG,QAAS,SAAC2D,GAAD,OACP,yBACE5J,MAAO,CACL0Q,aAAc,MACdjD,SAAU,SACV+S,SAAS,GAAD,OAAK5W,EAAL,QAGK,kBAAdvO,EAAK8jB,KACJ,yBACE1f,UAAU,6BACVsK,QAAS,WACP0mB,EAAevoB,QAAQsW,QACvB5N,EAAQtB,KAAR,YAJJ,kBAUA,GAEF,yBACE7P,UAAU,6BACVsK,QAAS,WACP0mB,EAAevoB,QAAQsW,QACvB5N,EAAQtB,KAAR,mBAAyBjU,EAAKgU,QAJlC,cASA,yBACE5P,UAAU,6BACVsK,QAAS,WACP0mB,EAAevoB,QAAQsW,QACvB5N,EAAQtB,KAAR,mBAAyBjU,EAAKgU,IAA9B,SAJJ,cASA,yBACE5P,UAAU,6BACVsK,QAAS,WACP0mB,EAAevoB,QAAQsW,QACvB5N,EAAQtB,KAAR,mBAAyBjU,EAAKgU,IAA9B,SAJJ,eASA,yBACE5P,UAAU,eACVsK,QAAS,WACP0mB,EAAevoB,QAAQsW,QACvBwL,aAAakH,WAAW,qBACxBxyB,EAAMwK,SAAS,CACbnO,KAAM,WACNM,KAAM,CACJC,WAAY,GACZC,UAAW,GACXC,aAAc,GACdC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPR,QAAS,GACTS,QAAS,GACTC,SAAU,GACVC,YAAa,GACbC,cAAe,MAGnB6U,EAAQtB,KAAK,OArBjB,aA6BJ,yBAAK7P,UAAU,SAASsI,IAAK0oB,GAC3B,yBAAKhxB,UAAU,oDACb,yBACEA,UAAU,kDACVO,MAAO,CACLsO,gBAAgB,OAAD,OAASjT,EAAKI,MAAd,KACfirB,OAAQ,qBAGZ,yBAAKjnB,UAAU,mCACb,yBACEA,UAAU,gBACVO,MAAO,CAAEuS,SAAU,UAElBlX,EAAKG,eAGV,yBAAKiE,UAAU,6BACb,kBAAC,KAAD,CAAemO,SAAS,cAOlC,yBAAKnO,UAAU,kDACb,yBACEA,UAAU,iCACVsK,QAAS,WACP6G,EAAQtB,KAAK,YAHjB,SAQA,yBACE7P,UAAU,iCACVsK,QAAS,kBAAM6G,EAAQtB,KAAK,aAF9B,YASiB,WAAtBohB,EAAS5B,SACR,kBAAC,IAAD,CACErvB,UAAU,uDACVmO,SAAS,OACT7D,QAAS,kBACPrL,EAAMwK,SAAS,CACbnO,KAAM,4BACN0D,UAAWD,OAKjB,aCnPHiK,oBARf,SAAc5N,EAAO6N,GACnB,OAAO,aACLrN,KAAMR,EAAMQ,KACZmB,SAAU3B,EAAM2B,UACbkM,KAIQD,EAzHA,SAAC,GAAwB,IAAtBpN,EAAqB,EAArBA,KAAMmB,EAAe,EAAfA,SAChB0f,EAAY,CAChB,CAAE9d,KAAM,OAAQkC,KAAM,IAAK6wB,WAAW,GACtC,CACE/yB,KAAM,cACN+yB,UAAW91B,EAAKG,aAChB8E,KAAMjF,EAAKgU,IAAL,mBAAuBhU,EAAKgU,IAA5B,MAAsC,UAE9C,CACE8hB,UAAW91B,EAAKG,aAChB4C,KAAM,aACNkC,KAAMjF,EAAKgU,IAAL,mBAAuBhU,EAAKgU,IAA5B,MAAsC,UAE9C,CAAEjR,KAAM,WAAYkC,KAAM,IAAK6wB,WAAW,GAC1C,CAAE/yB,KAAM,UAAWkC,KAAM,IAAK6wB,WAAW,IAGrCnU,EAAc,CAClB,CAAEb,KAAMc,KAAa3c,KAAM9D,EAASc,cACpC,CAAE6e,KAAMe,KAAa5c,KAAM9D,EAASe,eACpC,CAAE4e,KAAMgB,KAAc7c,KAAM9D,EAASiB,cACrC,CAAE0e,KAAMiB,KAAW9c,KAAM9D,EAASgB,cAG9B4zB,EAAgB,CACpB,CAAEhzB,KAAM,iBAAkBkC,KAAM,mBAChC,CAAElC,KAAM,iBAAkBkC,KAAM,mBAChC,CAAElC,KAAM,uBAAwBkC,KAAM,0BAGlCowB,EAAWC,cAEjB,MAA6B,WAAtBD,EAAS5B,UACQ,YAAtB4B,EAAS5B,UACa,qBAAtB4B,EAAS5B,UACR4B,EAAS5B,SAAS3c,SAAS,mBA0E5B,GAzEA,yBAAK1S,UAAU,iEACb,yBACEA,UAAS,kCACe,WAAtBixB,EAAS5B,SAAwB,qBAAuB,KAG1D,yBAAKrvB,UAAU,0EACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,kBACZyc,EACEhK,QAAO,SAAC5S,GAAD,OAAOA,EAAE6xB,aAChBrkB,KAAI,SAACxN,EAAG2H,GAAJ,OACH,yBACE8F,IAAG,sBAAiB9F,GACpBxH,UAAU,yCACVsK,QAAS,kBAAM6G,EAAQtB,KAAKhQ,EAAEgB,QAE7BhB,EAAElB,WAKb,yBAAKqB,UAAU,gCACb,yBAAKA,UAAU,kEACZud,EAAYlQ,KAAI,SAACxN,EAAG2H,GAAJ,OACf,yBACE8F,IAAG,sBAAiB9F,GACpBxH,UAAS,sDACPwH,IAAM+V,EAAY9V,OAAS,EAAI,IAAM,MAGvC,yBACEzH,UAAU,uDACVsK,QAAS,WACPnL,OAAOyH,KAAK/G,EAAEgB,QAGhB,kBAAChB,EAAE6c,KAAH,CAAQvO,SAAS,OAAOnO,UAAU,sBAO9C,yBAAKA,UAAU,oEACb,yBAAKA,UAAU,iBAAf,6BACA,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,kBACZ2xB,EAActkB,KAAI,SAACxN,EAAG2H,GAAJ,OACjB,kBAAC,IAAMqM,SAAP,CAAgBvG,IAAG,sBAAiB9F,IAClC,yBACExH,UAAU,0CACVsK,QAAS,kBAAM6G,EAAQtB,KAAKhQ,EAAEgB,QAE7BhB,EAAElB,MAEL,yBACEqB,UAAU,0CACVsK,QAAS,kBAAM6G,EAAQtB,KAAKhQ,EAAEgB,QAE7BhB,EAAElB,KAAKmQ,MAAM,KAAK,IAEpBtH,IAAMmqB,EAAclqB,OAAS,GAC5B,yBAAKzH,UAAU,QAAf,iBC0NLgJ,oBATf,SAAc5N,EAAO6N,GACnB,OAAO,aACLrN,KAAMR,EAAMQ,KACZF,QAASN,EAAMM,QACfqB,SAAU3B,EAAM2B,UACbkM,KAIQD,EAvTD,SAACzJ,GACb,IAAM0C,EAAU1C,EAAM+a,MAAMxO,OAAO7J,QAC7BvG,EAAU6D,EAAM7D,QAChBwG,EAAS3C,EAAMxC,SAASC,eAExBpB,EAAO2D,EAAM3D,KALI,EAOyBqL,oBAAU,GAPnC,mBAOhB2qB,EAPgB,KAOEC,EAPF,OASG5qB,mBAAS,CACjC3I,YAAa,GACbI,OAAQ,GACR9B,MAAO,GACP6B,SAAU,GACV8b,SAAU,GACVC,KAAM,GACN5b,QAAS,EACTJ,aAAc,GACdH,GAAI,KAlBiB,mBAShB6K,EATgB,KAST4H,EATS,OAsBe7J,oBAAS,GAtBxB,mBAsBhByJ,EAtBgB,KAsBHC,EAtBG,KA+DvB,OAvCAvJ,qBAAU,WAEJ8B,EAAMtM,OACRsG,EAAegG,KAEhB,CAACA,EAAMtM,QAEVwK,qBAAU,WAAM,4CAEd,oCAAAiC,EAAA,0DACMpH,IAAWC,EADjB,iCAEqBmK,GAAUpK,EAASC,GAFxC,cAEQpB,EAFR,OAGIgQ,GAAS,SAAClC,GAAD,OACPrT,OAAOC,OACL,GACAoT,EACArT,OAAOC,OAAO,GAAIsF,EAAM,CACtBlE,MAAOkE,EAAKnC,KACZH,aAAcsC,EAAK6Z,qBAT7B,SAawBpO,GAAWtK,EAASC,GAb5C,OAaQ2Y,EAbR,OAcQiX,EAAcjX,EAAQE,KACtBF,EAAQE,KAAKvJ,MAAK,SAAC3R,GAAD,MAAiB,aAAVA,EAAEmb,OAC3B,KACAT,EAAWuX,EAAcA,EAAYnzB,KAAO,UAC5C6b,EAAOK,EAAQL,KAAOK,EAAQL,KAAKnN,KAAI,SAACxN,GAAD,OAAOA,EAAElB,QAAQ,GAC5DmC,EAAKyZ,SAAWA,EAChBzZ,EAAK0Z,KAAOA,EACZ1J,GAAS,SAAClC,GAAD,OAAUrT,OAAOC,OAAO,GAAIoT,EAAM,CAAE2L,WAAUC,YArB3D,6CAFc,sBACdrb,OAAO8b,SAAS,EAAG,GADL,mCA2Bd1N,KACC,CAACtL,EAASC,IAKX,yBAAKlC,UAAU,8EACb,yBACEA,UAAU,4CACVO,MAAO,CACL0N,IAAK,EACLgC,KAAM,IAGR,yBACEjQ,UAAU,oBACVO,MAAO,CAAEzB,OAAQK,OAAO4Y,YAAa/J,SAAU,WAE/C,yBAAKhO,UAAU,qBACb,yBACEgR,IAAK9H,EAAM5K,YACXoB,MAAM,OACNwR,IAAG,0CAAqChI,EAAM5K,eAEhD,yBACE0B,UAAU,gCACVO,MAAO,CACLsS,WAAY,iDACZ5E,IAAK,EACLgC,KAAM,MAIZ,yBACEjQ,UAAU,gCACVO,MAAO,CACLsS,WAAY,2CACZ5E,IAAK,EACLgC,KAAM,OAKd,kBAAC,GAAD,CAAOrJ,KAAM8J,EAAaxC,QAAS,kBAAMyC,GAAe,KACtD,kBAAC,GAAD,CACE1O,QAASA,EACT2K,QAAS,kBAAM+D,GAAe,OAGlC,yBAAK3Q,UAAU,yDACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,2BACb,yBACEgR,IAAK9H,EAAM5K,YACXiC,MAAO,CAAE0Q,aAAc,QACvBvR,MAAM,QACNwR,IAAG,0CAAqChI,EAAM5K,eAEhD,yBACEgM,QAAS,kBAAM6G,EAAQtB,KAAR,iBAAuB3G,EAAM7K,MAC5C2B,UAAU,sEACVO,MAAO,CACL0P,KAAM,EACNhC,IAAK,EACL5H,SAAU,WACV0K,OAAQ,EACRE,aAAc,SAGhB,yBACEjR,UAAU,uDACVsK,QAAS,SAAC0E,GACRA,EAAEoC,kBACFT,GAAe,KAGjB,kBAAC,KAAD,CACEpQ,MAAO,CACL4N,SAAU,OACV9D,MAAO,QACPE,YAAa,cAOzB,yBAAKvK,UAAU,yBACb,yBACEA,UAAU,mCACVO,MAAO,CAAEwQ,OAAQ,IAEjB,yBAAK/Q,UAAU,UACb,yBAAKA,UAAU,qBACZkJ,EAAMtM,MADT,KACkBsM,EAAM1K,aAAa4N,UAAU,EAAG,GADlD,KAGA,yBAAKpM,UAAU,wCACb,yBAAKA,UAAU,iBACZkJ,EAAMxK,OAAO2O,KAAI,SAACxN,GAAD,OAAOA,EAAElB,QAAMqN,KAAK,OAG1C,yBAAKhM,UAAU,uBACb,yBAAKA,UAAU,iCAAf,aACA,yBAAKA,UAAU,6BACZ+K,GAAe7B,EAAMtK,WAG1B,yBAAKoB,UAAU,kCACZkJ,EAAMzK,UAET,yBAAKuB,UAAU,uBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iBAAf,aACA,yBAAKA,UAAU,kCACZkJ,EAAMqR,SAAWrR,EAAMqR,SAAW,aAIzC,yBAAKva,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iBAAf,SACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,kBACb,yBACEA,UAAU,+CACVsK,QAAS,SAAC0E,GAENA,EAAEkM,cAAcC,UAAUC,SACxB,gBAGFpM,EAAEkM,cAAcC,UAAUE,OACxB,gBAGFrM,EAAEkM,cAAcC,UAAUG,IAAI,kBAIjCpS,EAAMsR,KAAKxO,KAAK,cAO7B,yBAAKhM,UAAU,uBACb,kBAAC,GAAD,CACE0L,WACE9P,EAAKF,QAAQwN,EAAM7K,KACsB,mBAArCzC,EAAKF,QAAQwN,EAAM7K,IAAI2R,UAG7B9G,MAAOA,EACPzI,MAAM,OACNT,UAAU,YACV4K,MACElP,EAAQwN,EAAM7K,IAAM3C,EAAQwN,EAAM7K,IAAIkR,eAAiB,IAG3D,kBAAC,GAAD,CACE7D,WACE9P,EAAKF,QAAQwN,EAAM7K,KACsB,cAArCzC,EAAKF,QAAQwN,EAAM7K,IAAI2R,UAG7B9G,MAAOA,EACPzI,MAAM,QACNT,UAAU,YACV4K,MAAOlP,EAAQwN,EAAM7K,IAAM3C,EAAQwN,EAAM7K,IAAImR,UAAY,IAE3D,kBAAC,GAAD,CACE9D,WACE9P,EAAKF,QAAQwN,EAAM7K,KACsB,YAArCzC,EAAKF,QAAQwN,EAAM7K,IAAI2R,UAG7B9G,MAAOA,EACPlJ,UAAU,YACVS,MAAM,sBACNmK,MAAOlP,EAAQwN,EAAM7K,IAAM3C,EAAQwN,EAAM7K,IAAIoR,QAAU,IAEzD,kBAAC,GAAD,CACEhP,MAAM,OACNmK,MAAOlP,EAAQwN,EAAM7K,IAAM3C,EAAQwN,EAAM7K,IAAIqR,SAAW,EACxDhE,WACE9P,EAAKF,QAAQwN,EAAM7K,KACsB,aAArCzC,EAAKF,QAAQwN,EAAM7K,IAAI2R,UAG7B9G,MAAOA,KAGX,yBAAKlJ,UAAU,uBACb,yBAAKA,UAAU,iBAAf,iBACA,yBAAKA,UAAU,6BACZ0W,KAAKC,OAAO,IAAIxY,KAAK+K,EAAM1K,cAAe,mBAG/C,yBAAKwB,UAAU,kEACb,yBACEA,UAAU,wDACVsK,QAAS,WACF1O,EAAKK,MAUR41B,EAAoBD,EAAmB,GATvC3yB,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,qCACTvB,KAAM,eAThB,aAkBE,kBAAC,KAAD,CACE6S,SAAS,OACTnO,UAAU,UAGd,kBAAC,GAAD,CAAgBkJ,MAAOA,EAAOtN,KAAMA,SAM9C,kBAAC,GAAD,CACEsN,MAAOA,EACPtN,KAAMA,EACNg2B,iBAAkBA,KAGtB,yBAAK5xB,UAAU,UACb,kBAAC,GAAD,WClSO+xB,GAnBO,WAKpB,OAJA3qB,qBAAU,WACRjI,OAAO8b,SAAS,EAAG,KAClB,IAGD,yBAAKjb,UAAU,sBAAsBO,MAAO,CAAE4b,UAAW,UACvD,yBAAKnc,UAAU,yBACb,kBAAC,KAAD,CACE8qB,SAAU,OACVC,SAAUiH,KACV7G,eAAgB,kBAAM,+BACtBC,QAAS,kBAAM9hB,QAAQC,IAAI,mBCOtB2hB,GAnBY,WAKzB,OAJA9jB,qBAAU,WACRjI,OAAO8b,SAAS,EAAG,KAClB,IAGD,yBAAKjb,UAAU,sBAAsBO,MAAO,CAAE4b,UAAW,UACvD,yBAAKnc,UAAU,yBACb,kBAAC,KAAD,CACE8qB,SAAU,OACVC,SAAUiH,KACV7G,eAAgB,kBAAM,+BACtBC,QAAS,kBAAM9hB,QAAQC,IAAI,mBCMtByhB,GAlBO,WAIpB,OAHA5jB,qBAAU,WACRjI,OAAO8b,SAAS,EAAG,KAClB,IAED,yBAAKjb,UAAU,sBAAsBO,MAAO,CAAE4b,UAAW,UACvD,yBAAKnc,UAAU,yBACb,kBAAC,KAAD,CACE8qB,SAAU,OACVC,SAAUiH,KACV7G,eAAgB,kBAAM,+BACtBC,QAAS,kBAAM9hB,QAAQC,IAAI,mBCuHtB9H,GA9HD,WAAO,IAAD,EACQwF,mBAAS,IADjB,mBACX/K,EADW,KACJuuB,EADI,OAEYxjB,mBAAS,IAFrB,mBAEXgG,EAFW,KAEFC,EAFE,KAGZmd,EAAY,uCAAG,WAAOnuB,GAAP,eAAAmN,EAAA,yDACdgC,GAAcnP,GADA,gBAEjBgR,EAAW,sBAFM,sCAIDlH,GAAsB9J,GAJrB,QAIboF,EAJa,QAKTuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZrB,KAAM,UACNsB,MAAO,QACPC,QAASyE,EAAIuI,UAIjB5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZrB,KAAM,UACNsB,MAAO,2BACPC,QACE,0GAGNsU,EAAQtB,KAAK,WAxBE,2CAAH,sDA6BlB,OACE,yBACE7P,UAAU,gFACVO,MAAO,CAAEzB,OAAQK,OAAO4Y,cAExB,yBAAK/X,UAAU,gFACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,sDACb,yBACEA,UAAU,wEACVsK,QAAS,kBAAM6G,EAAQtB,KAAK,MAC5BtP,MAAO,CAAE0N,IAAK,OAAQgC,KAAM,SAE5B,kBAAC,KAAD,CAAejQ,UAAU,SAL3B,gBAOA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,sBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,iCAAf,iBAIN,yBACEA,UAAU,6DACVO,MAAO,CACL4b,UAAWhd,OAAO4Y,YAAc,MAGlC,yBAAK/X,UAAU,gDACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBAAf,oBACA,yBAAKA,UAAU,UAAf,+DAIF,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,eAAf,SACA,yBAAKA,UAAU,UACb,2BACE1E,KAAK,OACL0E,UAAU,yBACV4K,MAAO1O,EACPyuB,UAAW,SAAC3b,GACQ,KAAdA,EAAE4b,SACJP,EAAanuB,IAGjB6S,SAAU,SAACC,GACTA,EAAEC,UACFwb,EAASzb,EAAEG,OAAOvE,YAK1B,yBAAK5K,UAAU,uBACb,yBACEA,UAAU,uCACVsK,QAAS,kBAAM+f,EAAanuB,KAF9B,uBAOF,yBACEqE,MAAO,CAAEzB,OAAQ,OAAQ6Q,QAAS1C,EAAU,EAAI,GAChDjN,UAAU,iDAETiN,GAEH,yBAAKjN,UAAU,sCACb,yBACEA,UAAU,yBACVsK,QAAS,kBAAM6G,EAAQtB,KAAK,YAF9B,SAMA,yBACE7P,UAAU,oBACVsK,QAAS,kBAAM6G,EAAQtB,KAAK,aAF9B,mBC4CHoiB,GA3JW,SAAC1yB,GACzB,IAAItD,EAAQsD,EAAM+a,MAAMxO,OAAO7P,MADI,EAEHgL,mBAAS,IAFN,mBAE5Bf,EAF4B,KAElBwkB,EAFkB,OAGWzjB,mBAAS,IAHpB,mBAG5BokB,EAH4B,KAGXC,EAHW,OAILrkB,mBAAS,IAJJ,mBAI5BgG,EAJ4B,KAInBC,EAJmB,KAK7B0Q,EAAc,CAClB,CACEC,MAAO,UAAUvS,KAAKpF,IAAa,KAAKoF,KAAKpF,GAC7C2D,MAAO,0CAET,CACEgU,MAAO3X,IAAamlB,EACpBxhB,MAAO,yBAET,CACEgU,MAAO3X,EAASuB,QAAU,EAC1BoC,MAAO,gDAGLwgB,EAAY,uCAAG,WAAOnkB,EAAUjK,GAAjB,iBAAAoN,EAAA,yDAEK,KADpBwiB,EAAWjO,EAAYnL,QAAO,SAAC5S,GAAD,OAAQA,EAAEge,UAC/BpW,OAFM,gCAGDxB,GAAcC,EAAUjK,GAHvB,QAGbqF,EAHa,QAITuI,MACN5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZrB,KAAM,UACNsB,MAAO,QACPC,QAASyE,EAAIuI,UAIjB5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZrB,KAAM,UACNsB,MAAO,mBACPC,QAAS,kDAGbsU,EAAQtB,KAAK,WAtBE,sBAyBjB3C,EAAW2e,EAAS,GAAGhiB,OAzBN,2CAAH,wDA4BlB,OACE,yBACE7J,UAAU,gFACVO,MAAO,CAAEzB,OAAQK,OAAO4Y,cAExB,yBAAK/X,UAAU,gFACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,sDACb,yBACEA,UAAU,wEACVsK,QAAS,kBAAM6G,EAAQtB,KAAK,MAC5BtP,MAAO,CAAE0N,IAAK,OAAQgC,KAAM,SAE5B,kBAAC,KAAD,CAAejQ,UAAU,SAL3B,gBAOA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,sBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,iCAAf,iBAIN,yBACEA,UAAU,6DACVO,MAAO,CACL4b,UAAWhd,OAAO4Y,YAAc,MAGlC,yBAAK/X,UAAU,gDACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBAAf,kBACA,yBAAKA,UAAU,UAAf,uCAIF,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,UACb,2BACE1E,KAAK,WACL0E,UAAU,yBACV4K,MAAO1E,EACP6I,SAAU,SAACC,GACTA,EAAEC,UACFyb,EAAY1b,EAAEG,OAAOvE,YAK7B,yBAAK5K,UAAU,8CACb,yBAAKA,UAAU,eAAf,wBACA,yBAAKA,UAAU,UACb,2BACE1E,KAAK,WACL0E,UAAU,yBACV4K,MAAOygB,EACPV,UAAW,SAAC3b,GACQ,KAAdA,EAAE4b,SACJP,EAAankB,EAAUjK,IAG3B8S,SAAU,SAACC,GACTA,EAAEC,UACFqc,EAAmBtc,EAAEG,OAAOvE,YAKpC,yBAAK5K,UAAU,uBACb,yBACEA,UAAU,uCACVsK,QAAS,kBAAM+f,EAAankB,EAAUjK,KAFxC,qBAOF,yBACEsE,MAAO,CAAEzB,OAAQ,OAAQ6Q,QAAS1C,EAAU,EAAI,GAChDjN,UAAU,iDAETiN,GAEH,yBAAKjN,UAAU,sCACb,yBACEA,UAAU,yBACVsK,QAAS,kBAAM6G,EAAQtB,KAAK,YAF9B,SAMA,yBACE7P,UAAU,oBACVsK,QAAS,kBAAM6G,EAAQtB,KAAK,aAF9B,mBCmBHqiB,OAxIf,WAoEE,OAnEA9qB,qBAAU,WAAM,4CACd,8BAAAiC,EAAA,yDACEhF,IAAY,SAACtH,GACNA,EAAS8M,MAeZ5K,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,kBACPC,QACE,uGACFvB,KAAM,aApBLyB,EAAS0K,OAWZxI,EAAMwK,SAAS,CAAEnO,KAAM,kBAAmByB,SAAUA,EAAS,KAV7DkC,EAAMwK,SAAS,CACbnO,KAAM,mBACNqB,aAAc,CACZC,MAAO,kBACPC,QACE,uGACFvB,KAAM,gBAmBhBsG,GAAc,SAAC8H,GACb,IAAIhO,EAAU,GACdgO,EAAWC,SAAQ,SAAC9J,GAClBnE,EAAQmE,EAAE+J,SAAW/J,KAEvBZ,EAAMwK,SAAS,CAAEnO,KAAM,cAAeI,eAGxCoG,GAAkB,SAACqwB,GACjB,IAAIh3B,EAAc,GAClBg3B,EAAexoB,SAAQ,SAAC9J,GACtB1E,EAAY0E,EAAEwpB,SAAWxpB,KAE3BZ,EAAMwK,SAAS,CAAEnO,KAAM,kBAAmBH,mBAI1B,QADdi3B,EAAY7H,aAAa2E,QAAQ,wBACXkD,EAAU3qB,OA9CtC,gCA+CoB9F,EAAe,CAAE1F,MAAOm2B,IA/C5C,QA+CQ9wB,EA/CR,QAgDauI,OACP5K,EAAMwK,SAAS,CAAEnO,KAAM,WAAYM,KAAM0F,IAjD/C,4CADc,uBAAC,WAAD,wBAgEdiM,KACC,IAGD,kBAAC,IAAD,CAAUtO,MAAOA,GACf,kBAAC,IAAD,CAAQkS,QAASA,GACf,yBAAKnR,UAAU,wBACb,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEqyB,OAAK,EACLxxB,KAAK,wBACL8iB,UAAWuH,KAEb,kBAAC,IAAD,CACEmH,OAAK,EACLxxB,KAAK,kBACL8iB,UAAWoO,KAEb,kBAAC,IAAD,CACEM,OAAK,EACLxxB,KAAK,kBACL8iB,UAAWqH,KAEb,kBAAC,IAAD,CAAOqH,OAAK,EAACxxB,KAAK,IAAI8iB,UAAW2O,KACjC,kBAAC,IAAD,CACED,OAAK,EACLxxB,KAAK,uCACL8iB,UAAW4O,KAEb,kBAAC,IAAD,CACEF,OAAK,EACLxxB,KAAK,4BACL8iB,UAAW4O,KAEb,kBAAC,IAAD,CAAOF,OAAK,EAACxxB,KAAK,kBAAkB8iB,UAAW4O,KAC/C,kBAAC,IAAD,CAAOF,OAAK,EAACxxB,KAAK,mBAAmB8iB,UAAW6O,KAChD,kBAAC,IAAD,CAAOH,OAAK,EAACxxB,KAAK,UAAU8iB,UAAW8O,KACvC,kBAAC,GAAD,CACEJ,OAAK,EACLxxB,KAAK,SACL+tB,WAAW,SACXD,UAAW+D,KAEb,kBAAC,IAAD,CAAOL,OAAK,EAACxxB,KAAK,SAAS8iB,UAAWliB,KACtC,kBAAC,IAAD,CAAO4wB,OAAK,EAACxxB,KAAK,UAAU8iB,UAAWgP,KACvC,kBAAC,IAAD,CACEN,OAAK,EACLxxB,KAAK,mBACL8iB,UAAWiP,KAEb,kBAAC,IAAD,CACEP,OAAK,EACLxxB,KAAK,yBACL8iB,UAAW1d,KAEb,kBAAC,IAAD,CACEosB,OAAK,EACLxxB,KAAK,4BACL8iB,UAAWkP,KAEb,kBAAC,IAAD,CAAOR,OAAK,EAACxxB,KAAK,mBAAmB8iB,UAAWkP,MAElD,kBAAC,GAAD,MACA,kBAAC,GAAD,UCzJVC,IAAS3D,OACP,kBAAC,IAAM4D,WAAP,KACE,kBAAC,GAAD,OAEFzrB,SAAS0rB,eAAe,W","file":"static/js/main.759c35ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TermsAndConditions.43670da6.docx\";","module.exports = __webpack_public_path__ + \"static/media/PrivacyPolicy.f98adba2.docx\";","module.exports = __webpack_public_path__ + \"static/media/CookiesPolicy.b364bd24.docx\";","import { createStore, combineReducers } from \"redux\";\r\n\r\nfunction userReducer(\r\n  state = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    display_name: \"\",\r\n    photo: \"\",\r\n    token: \"\",\r\n    email: \"\",\r\n    ratings: {},\r\n    reviews: [],\r\n    wishlist: [],\r\n    watchedlist: [],\r\n    notifications: [],\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return action.user;\r\n    case \"UPDATE_USER\":\r\n      return Object.assign({}, state, action.userProperty);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction publicUsersReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case \"SET_PUBLICUSERS\":\r\n      return action.publicUsers;\r\n    case \"UPDATE_PUBLICUSERS\":\r\n      return Object.assign({}, state, action.publicUser);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction ratingsReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case \"SET_RATINGS\":\r\n      return action.ratings;\r\n    case \"UPDATE_RATINGS\":\r\n      return Object.assign({}, state, action.rating);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction notificationReducer(\r\n  state = { title: \"\", message: \"\", expired: true },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case \"SET_NOTIFICATION\":\r\n      return action.notification;\r\n    case \"UPDATE_NOTIFICATION\":\r\n      return Object.assign({}, state, action.notification);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction searchReducer(state = { query: \"\", category: \"All\" }, action) {\r\n  switch (action.type) {\r\n    case \"SET_SEARCH\":\r\n      return action.search;\r\n    case \"UPDATE_SEARCH\":\r\n      return Object.assign({}, state, action.search);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction navbarHeightReducer(state = 0, action) {\r\n  switch (action.type) {\r\n    case \"SET_HEIGHT\":\r\n      return action.height;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction dashboardMenuReducer(state = false, action) {\r\n  switch (action.type) {\r\n    case \"SET_DASHBOARD_MENU_OPENED\":\r\n      return action.isOpened;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction settingsReducer(\r\n  state = {\r\n    movies_api_key: \"\",\r\n    captcha_api_key: \"6Lc_87cZAAAAAHRx49G1d-mM3gxWM_RKLAA41T3U\",\r\n    movie_data_api: \"\",\r\n    latest_movies_api: \"\",\r\n    no_popular_reviews: 5,\r\n    no_popular_movies: 5,\r\n    no_allowed_reviews: 5,\r\n    no_comment_characters: 400,\r\n    no_display_name_characters: 40,\r\n    no_review_words: 80,\r\n    bg_image_refresh_time_days: 1,\r\n    bg_image_refresh_time_hours: 0,\r\n    bg_image_refresh_time_minutes: 0,\r\n    FacebookLink: \"\",\r\n    InstagramLink: \"\",\r\n    TwitterLink: \"\",\r\n    LinkedinLink: \"\",\r\n    current_bg_movie: {\r\n      date_set: Date.now(),\r\n      id: \"300671\",\r\n      poster_path: \"/4qnEeVPM8Yn5dIVC4k4yyjrUXeR.jpg\",\r\n      backdrop_path: \"/ayDMYGUNVvXS76wQgFwTiUIDNb5.jpg\",\r\n      release_date: \"2016-01-13\",\r\n      overview:\r\n        \"An American Ambassador is killed during an attack at a U.S. compound in Libya as a security team struggles to make sense out of the chaos.\",\r\n      title: \"13 Hours: The Secret Soldiers of Benghazi\",\r\n      genres: [\r\n        { id: 28, name: \"Action\" },\r\n        { id: 36, name: \"History\" },\r\n        { id: 53, name: \"Thriller\" },\r\n      ],\r\n      runtime: 144,\r\n    },\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case \"SET_SETTINGS\":\r\n      return action.settings;\r\n    case \"UPDATE_SETTINGS\":\r\n      return Object.assign({}, state, action.settings);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  publicUsers: publicUsersReducer,\r\n  ratings: ratingsReducer,\r\n  user: userReducer,\r\n  search: searchReducer,\r\n  notification: notificationReducer,\r\n  settings: settingsReducer,\r\n  navbarHeight: navbarHeightReducer,\r\n  dashboardMenuOpened: dashboardMenuReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import * as React from \"react\";\r\n\r\nfunction OkIcon(props) {\r\n  let size = props.size ? props.size : 16;\r\n  return (\r\n    <svg\r\n      id=\"prefix__svg8\"\r\n      viewBox=\"0 0 4.233 4.233\"\r\n      height={size}\r\n      width={size}\r\n      {...props}\r\n    >\r\n      <defs id=\"prefix__defs2\">\r\n        <style id=\"style899\">\r\n          {\r\n            \".prefix__b{font-size:6px;font-family:OpenSans-Semibold,Open Sans;font-weight:600}\"\r\n          }\r\n        </style>\r\n      </defs>\r\n      <g transform=\"translate(-20.26 -2.608)\" id=\"prefix__layer1\">\r\n        <g transform=\"matrix(.26458 0 0 .26458 20.26 2.608)\" id=\"prefix__g928\">\r\n          <rect\r\n            y={0}\r\n            x={0}\r\n            width={16}\r\n            height={16}\r\n            rx={8}\r\n            id=\"prefix__rect903\"\r\n            fill=\"#fff\"\r\n          />\r\n          <text\r\n            className=\"prefix__b\"\r\n            transform=\"translate(5 6)\"\r\n            id=\"prefix__text907\"\r\n          >\r\n            <tspan x={0} y={0} id=\"prefix__tspan905\">\r\n              {\"50\"}\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            className=\"prefix__b\"\r\n            transform=\"translate(5 14)\"\r\n            id=\"prefix__text911\"\r\n          >\r\n            <tspan x={0} y={0} id=\"prefix__tspan909\">\r\n              {\"50\"}\r\n            </tspan>\r\n          </text>\r\n          <path\r\n            d=\"M6374.557 553h9\"\r\n            transform=\"translate(-6370.950 -545)\"\r\n            id=\"prefix__path913\"\r\n            fill=\"none\"\r\n            stroke=\"#000\"\r\n          />\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default OkIcon;\r\n","import React from \"react\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport OkIcon from \"./images/OkIcon\";\r\n\r\nexport const OfficialMoviesGenres = [\r\n  { id: 28, name: \"Action\" },\r\n  { id: 12, name: \"Adventure\" },\r\n  { id: 16, name: \"Animation\" },\r\n  { id: 35, name: \"Comedy\" },\r\n  { id: 80, name: \"Crime\" },\r\n  { id: 99, name: \"Documentary\" },\r\n  { id: 18, name: \"Drama\" },\r\n  { id: 10751, name: \"Family\" },\r\n  { id: 14, name: \"Fantasy\" },\r\n  { id: 36, name: \"History\" },\r\n  { id: 27, name: \"Horror\" },\r\n  { id: 10402, name: \"Music\" },\r\n  { id: 9648, name: \"Mystery\" },\r\n  { id: 10749, name: \"Romance\" },\r\n  { id: 878, name: \"Science Fiction\" },\r\n  { id: 10770, name: \"TV Movie\" },\r\n  { id: 53, name: \"Thriller\" },\r\n  { id: 10752, name: \"War\" },\r\n  { id: 37, name: \"Western\" },\r\n];\r\nexport const MoviesGenresMap = {\r\n  28: \"Action\",\r\n  12: \"Adventure\",\r\n  16: \"Animation\",\r\n  35: \"Comedy\",\r\n  80: \"Crime\",\r\n  99: \"Documentary\",\r\n  18: \"Drama\",\r\n  10751: \"Family\",\r\n  14: \"Fantasy\",\r\n  36: \"History\",\r\n  27: \"Horror\",\r\n  10402: \"Music\",\r\n  9648: \"Mystery\",\r\n  10749: \"Romance\",\r\n  878: \"Science Fiction\",\r\n  10770: \"TV Movie\",\r\n  53: \"Thriller\",\r\n  10752: \"War\",\r\n  37: \"Western\",\r\n};\r\n\r\nexport const OfficialSeriesGenres = [\r\n  {\r\n    id: 10759,\r\n    name: \"Action & Adventure\",\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"Animation\",\r\n  },\r\n  {\r\n    id: 35,\r\n    name: \"Comedy\",\r\n  },\r\n  {\r\n    id: 80,\r\n    name: \"Crime\",\r\n  },\r\n  {\r\n    id: 99,\r\n    name: \"Documentary\",\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"Drama\",\r\n  },\r\n  {\r\n    id: 10751,\r\n    name: \"Family\",\r\n  },\r\n  {\r\n    id: 10762,\r\n    name: \"Kids\",\r\n  },\r\n  {\r\n    id: 9648,\r\n    name: \"Mystery\",\r\n  },\r\n  {\r\n    id: 10763,\r\n    name: \"News\",\r\n  },\r\n  {\r\n    id: 10764,\r\n    name: \"Reality\",\r\n  },\r\n  {\r\n    id: 10765,\r\n    name: \"Sci-Fi & Fantasy\",\r\n  },\r\n  {\r\n    id: 10766,\r\n    name: \"Soap\",\r\n  },\r\n  {\r\n    id: 10767,\r\n    name: \"Talk\",\r\n  },\r\n  {\r\n    id: 10768,\r\n    name: \"War & Politics\",\r\n  },\r\n  {\r\n    id: 37,\r\n    name: \"Western\",\r\n  },\r\n];\r\n\r\nexport const SeriesGenresMap = {\r\n  10759: \"Action & Adventure\",\r\n  16: \"Animation\",\r\n  35: \"Comedy\",\r\n  80: \"Crime\",\r\n  99: \"Documentary\",\r\n  18: \"Drama\",\r\n  10751: \"Family\",\r\n  10762: \"Kids\",\r\n  9648: \"Mystery\",\r\n  10763: \"News\",\r\n  10764: \"Reality\",\r\n  10765: \"Sci-Fi & Fantasy\",\r\n  10766: \"Soap\",\r\n  10767: \"Talk\",\r\n  10768: \"War & Politics\",\r\n  37: \"Western\",\r\n};\r\n\r\nexport const Ratings = [\r\n  {\r\n    name: \"excellent_rate\",\r\n    element: (\r\n      <div className=\"text-center py-3\" style={{ lineHeight: \"100%\" }}>\r\n        <Emoji emoji=\"fire\" set=\"facebook\" size={24} />\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    name: \"good_rate\",\r\n    element: (\r\n      <div className=\"text-center py-3\" style={{ lineHeight: \"100%\" }}>\r\n        <Emoji emoji=\"heart\" set=\"facebook\" size={24} />\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    name: \"ok_rate\",\r\n    element: (\r\n      <div className=\"text-center py-3\" style={{ lineHeight: \"100%\" }}>\r\n        <OkIcon size={34} />\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    name: \"bad_rate\",\r\n    element: (\r\n      <div className=\"text-center py-3\" style={{ lineHeight: \"100%\" }}>\r\n        <Emoji emoji=\"shit\" set=\"facebook\" size={24} />\r\n      </div>\r\n    ),\r\n  },\r\n];\r\n","import { ServerUrl } from \"../Settings\";\r\n\r\nconst origin = ServerUrl;\r\n\r\nconst SendPostRequest = (path, data) => {\r\n  return fetch(`${origin}${path}`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nconst SendGetRequest = (path) => {\r\n  return fetch(`${origin}${path}`).then((res) => res.json());\r\n};\r\n\r\nexport const CreateError = () => {\r\n  return SendGetRequest(\"/error\");\r\n};\r\n\r\nexport const FindOrCreateMovie = (movie) => {\r\n  return SendPostRequest(\"/movie/findOrCreate\", movie);\r\n};\r\n\r\nexport const Signup = (user) => {\r\n  return SendPostRequest(\"/user/signup\", user);\r\n};\r\n\r\nexport const Login = (credentials) => {\r\n  return SendPostRequest(\"/user/login\", credentials);\r\n};\r\n\r\nexport const LoginWithToken = (token) => {\r\n  return SendPostRequest(\"/user/loginWithToken\", token);\r\n};\r\n\r\nexport const GetAllRatings = (callback) => {\r\n  SendGetRequest(\"/ratings/get/all\").then((res) => callback(res));\r\n};\r\n\r\nexport const GetAllPublicUsers = (callback) => {\r\n  return SendGetRequest(\"/publicUsers/get/all\").then((res) => callback(res));\r\n};\r\n\r\nexport const RateMovie = (rate, movieId, user, apiKey) => {\r\n  return SendPostRequest(\"/ratings/update\", { rate, movieId, user, apiKey });\r\n};\r\n\r\nexport const WriteReview = (review, movieId, user, apiKey) => {\r\n  return SendPostRequest(\"/reviews/add\", { review, movieId, user, apiKey });\r\n};\r\n\r\nexport const EditReview = (review, prevReview, userId) => {\r\n  return SendPostRequest(\"/reviews/edit\", { review, prevReview, userId });\r\n};\r\n\r\nexport const DeleteReview = (review) => {\r\n  return SendPostRequest(\"/reviews/delete\", { review });\r\n};\r\n\r\nexport const GetMovieReviews = (movieId) => {\r\n  return SendPostRequest(\"/reviews/get/movie\", { movieId });\r\n};\r\n\r\nexport const GetMoviePromotedReviews = (movieId) => {\r\n  return SendPostRequest(\"/reviews/getPromoted/movie\", { movieId });\r\n};\r\n\r\nexport const WriteComment = (comment, user) => {\r\n  return SendPostRequest(\"/comments/update\", { user, comment });\r\n};\r\n\r\nexport const EditComment = (comment, commentId) => {\r\n  return SendPostRequest(\"/comments/edit\", { commentId, comment });\r\n};\r\n\r\nexport const DeleteComment = (commentId) => {\r\n  return SendPostRequest(\"/comments/delete\", { commentsIds: [commentId] });\r\n};\r\n\r\nexport const GetReviewComments = (reviewId) => {\r\n  return SendPostRequest(\"/comments/get/review\", { reviewId });\r\n};\r\n\r\nexport const AddToWishList = (user, movieId, apiKey) => {\r\n  return SendPostRequest(\"/movie/addToWishlist\", { user, movieId, apiKey });\r\n};\r\n\r\nexport const RemoveFromWishList = (user, movieId) => {\r\n  return SendPostRequest(\"/movie/removeFromWishlist\", { user, movieId });\r\n};\r\n\r\nexport const AddViewToMovie = (movieId, apiKey) => {\r\n  return SendPostRequest(\"/movie/views/add\", { movieId, apiKey });\r\n};\r\n\r\nexport const LikeReview = (user, reviewId) => {\r\n  return SendPostRequest(\"/reviews/like\", { user, reviewId });\r\n};\r\n\r\nexport const LikeComment = (user, commentId) => {\r\n  return SendPostRequest(\"/comments/like\", { user, commentId });\r\n};\r\n\r\nexport const ReportReview = (user, reviewId) => {\r\n  return SendPostRequest(\"/reviews/report\", { user, reviewId });\r\n};\r\n\r\nexport const ReportComment = (user, commentId) => {\r\n  return SendPostRequest(\"/comments/report\", { user, commentId });\r\n};\r\n\r\nexport const GetUser = (userId) => {\r\n  return SendPostRequest(\"/users/get\", { userId });\r\n};\r\n\r\nexport const GetUserReviews = (reviewIds) => {\r\n  return SendPostRequest(\"/reviews/get/user\", { reviewIds });\r\n};\r\n\r\nexport const GetUserReview = (userId, movieId) => {\r\n  return SendPostRequest(\"/reviews/get/user/one\", { userId, movieId });\r\n};\r\n\r\nexport const GetUserComments = (commentIds) => {\r\n  return SendPostRequest(\"/comments/get/user\", { commentIds });\r\n};\r\n\r\nexport const EditUser = (update) => {\r\n  return SendPostRequest(\"/users/edit\", { update });\r\n};\r\n\r\nexport const GetPopularReviews = (limit) => {\r\n  return SendPostRequest(\"/reviews/get/popular\", { limit });\r\n};\r\n\r\nexport const GetRecentReviews = (limit) => {\r\n  return SendPostRequest(\"/reviews/get/recent\", { limit });\r\n};\r\n\r\nexport const GetRecommendations = (limit) => {\r\n  return SendPostRequest(\"/movies/get/recommended\", { limit });\r\n};\r\n\r\nexport const SearchReviews = (query) => {\r\n  return SendPostRequest(\"/reviews/search\", { query });\r\n};\r\n\r\nexport const UpdateOrCreateSettings = (settings) => {\r\n  return SendPostRequest(\"/settings/updateOrCreate\", settings);\r\n};\r\n\r\nexport const GetSettings = (callback) => {\r\n  SendGetRequest(\"/settings/get\").then((res) => callback(res));\r\n};\r\n\r\nexport const GetUsers = () => {\r\n  return SendGetRequest(\"/admin/users/get\");\r\n};\r\n\r\nexport const EditUserForAdmin = (update) => {\r\n  return SendPostRequest(\"/admin/users/edit\", update);\r\n};\r\n\r\nexport const CreateUserForAdmin = (user) => {\r\n  return SendPostRequest(\"/admin/users/create\", user);\r\n};\r\n\r\nexport const GetReviews = () => {\r\n  return SendGetRequest(\"/admin/reviews/get\");\r\n};\r\n\r\nexport const GetComments = () => {\r\n  return SendGetRequest(\"/admin/comments/get\");\r\n};\r\n\r\nexport const EditReviewForAdmin = (review, user) => {\r\n  return SendPostRequest(\"/admin/reviews/edit\", { review, user });\r\n};\r\nexport const EditCommentForAdmin = (comment, user) => {\r\n  return SendPostRequest(\"/admin/comments/edit\", { comment, user });\r\n};\r\n\r\nexport const DeleteMultipleReviews = (ids) => {\r\n  return SendPostRequest(\"/admin/reviews/delete\", ids);\r\n};\r\n\r\nexport const DeleteMultipleComments = (ids) => {\r\n  return SendPostRequest(\"/admin/comments/delete\", ids);\r\n};\r\n\r\nexport const EditMultipleUsers = (ids, pids, update) => {\r\n  return SendPostRequest(\"/admin/users/editMultiple\", { ids, pids, update });\r\n};\r\n\r\nexport const GetAnnouncements = () => {\r\n  return SendGetRequest(\"/admin/announcements/get\");\r\n};\r\n\r\nexport const CreateAnnouncement = (announcement) => {\r\n  return SendPostRequest(\"/admin/announcements/create\", announcement);\r\n};\r\n\r\nexport const DeleteMultipleAnnouncements = (ids) => {\r\n  return SendPostRequest(\"/admin/announcements/delete\", ids);\r\n};\r\n\r\nexport const EditAnnouncement = (announcement) => {\r\n  return SendPostRequest(\"/admin/announcements/edit\", announcement);\r\n};\r\n\r\nexport const GetActiveAnnouncements = () => {\r\n  return SendGetRequest(\"/announcements/getActive\");\r\n};\r\n\r\nexport const GetPromotions = () => {\r\n  return SendGetRequest(\"/admin/promotions/get\");\r\n};\r\n\r\nexport const CreatePromotions = (promotions) => {\r\n  return SendPostRequest(\"/admin/promotions/create\", promotions);\r\n};\r\n\r\nexport const EditPromotion = (promotion) => {\r\n  return SendPostRequest(\"/admin/promotions/edit\", promotion);\r\n};\r\n\r\nexport const DeleteMultiplePromotions = (ids, update) => {\r\n  return SendPostRequest(\"/admin/promotions/delete\", { ids, update });\r\n};\r\n\r\nexport const GetUserNotifications = (ids) => {\r\n  return SendPostRequest(\"/user/notifications/get/\", { ids });\r\n};\r\n\r\nexport const DeleteUserNotification = (id, userId) => {\r\n  return SendPostRequest(\"/user/notifications/delete\", { id, userId });\r\n};\r\n\r\nexport const GetNotifications = () => {\r\n  return SendGetRequest(\"/admin/notifications/get\");\r\n};\r\n\r\nexport const CreateNotification = (notification) => {\r\n  return SendPostRequest(\"/admin/notifications/create\", notification);\r\n};\r\n\r\nexport const EditNotification = (notification) => {\r\n  return SendPostRequest(\"/admin/notifications/edit\", notification);\r\n};\r\n\r\nexport const DeleteMultipleNotifications = (ids, update) => {\r\n  return SendPostRequest(\"/admin/notifications/delete\", { ids, update });\r\n};\r\n\r\nexport const MoveMovieToWatchList = (user, movieId, apiKey) => {\r\n  return SendPostRequest(\"/movie/moveToWatchedList\", { user, movieId, apiKey });\r\n};\r\n\r\nexport const GetReview = (reviewId) => {\r\n  return SendPostRequest(\"/reviews/getOne\", { reviewId });\r\n};\r\n\r\nexport const ChangeBackgroundMovie = (apiKey) => {\r\n  return SendPostRequest(\"/changeBackgroundMovie\", { apiKey });\r\n};\r\n\r\nexport const DeleteMultipleUsers = (ids, pids) => {\r\n  return SendPostRequest(\"/admin/users/deleteMultiple\", { ids, pids });\r\n};\r\n\r\nexport const GetPromotedReviews = () => {\r\n  return SendGetRequest(\"/reviews/getPromoted\");\r\n};\r\n\r\nexport const SendPasswordResetLink = (email) => {\r\n  return SendPostRequest(\"/user/password/sendResetLink\", { email });\r\n};\r\n\r\nexport const ResetPassword = (password, token) => {\r\n  return SendPostRequest(\"/user/password/reset\", { token, password });\r\n};\r\n","export const ServerUrl =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://localhost:5000\"\r\n    : \"https://calm-coast-57354.herokuapp.com\";\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"react-tippy/dist/tippy.css\";\r\nimport { Tooltip } from \"react-tippy\";\r\n\r\nconst Popover = ({\r\n  className,\r\n  onOpen = () => {},\r\n  position = \"bottom\",\r\n  arrow = true,\r\n  theme = \"light\",\r\n  content = () => {},\r\n  trigger = \"click\",\r\n  delay = 0,\r\n  animation = \"scale\",\r\n  open = undefined,\r\n  onHide = () => {},\r\n  popoverWidth = \"auto\",\r\n  ...rest\r\n}) => {\r\n  const [contentWidth, setContentWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    return function cleanUp() {\r\n      let popovers = document.getElementsByClassName(\"tippy-popper\");\r\n      for (let i = 0; i < popovers.length; i++) {\r\n        popovers[i].parentNode.removeChild(popovers[i]);\r\n      }\r\n    };\r\n  }, []);\r\n  const [wasShowed, setWasShowed] = useState(false);\r\n  return (\r\n    <Tooltip\r\n      onShow={() => {\r\n        if (!wasShowed) {\r\n          setWasShowed(true);\r\n          onOpen();\r\n        }\r\n      }}\r\n      onHide={onHide}\r\n      delay={delay}\r\n      hideDelay={0}\r\n      html={content(contentWidth)}\r\n      position={position}\r\n      trigger={trigger}\r\n      theme={theme}\r\n      arrow={arrow}\r\n      interactive={true}\r\n      animation={animation}\r\n      open={open}\r\n      unmountHTMLWhenHide={true}\r\n      className={className}\r\n    >\r\n      {React.cloneElement(\r\n        rest.children,\r\n        Object.assign({}, rest.children.props, {\r\n          ref: (el) => {\r\n            if (el) {\r\n              if (contentWidth === 0) {\r\n                setContentWidth(el.getBoundingClientRect().width);\r\n              }\r\n              if (rest.children) {\r\n                const { ref } = rest.children;\r\n                if (ref && \"current\" in ref) {\r\n                  ref.current = el;\r\n                }\r\n                if (typeof ref === \"function\") {\r\n                  ref(el);\r\n                }\r\n              }\r\n            }\r\n          },\r\n        })\r\n      )}\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Popover;\r\n","import React from \"react\";\r\n\r\nconst Loader = ({ loading, size = 50, theme = \"light\" }) => {\r\n  return (\r\n    loading && (\r\n      <div className=\"w-100 h-100 d-flex flex-center\">\r\n        <div\r\n          className={`loader-${theme}`}\r\n          style={{ width: `${size}px`, height: `${size}px` }}\r\n        ></div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import * as React from \"react\";\r\n\r\nfunction RemoveIcon(props) {\r\n  let size = props.size ? props.size : 20;\r\n  return (\r\n    <svg viewBox=\"0 0 4.928 2.882\" height={size} width={size} {...props}>\r\n      <g\r\n        transform=\"translate(-19.41 -12.996)\"\r\n        fillOpacity={0.988}\r\n        paintOrder=\"markers fill stroke\"\r\n      >\r\n        <rect\r\n          rx={0}\r\n          y={12.996}\r\n          x={19.41}\r\n          height={0.6}\r\n          width={3.449}\r\n          ry={0.084}\r\n        />\r\n        <rect\r\n          width={3.449}\r\n          height={0.6}\r\n          x={19.415}\r\n          y={14.098}\r\n          rx={0}\r\n          ry={0.077}\r\n        />\r\n        <rect\r\n          width={2.238}\r\n          height={0.551}\r\n          x={19.423}\r\n          y={15.226}\r\n          rx={0}\r\n          ry={0.071}\r\n        />\r\n        <rect\r\n          rx={0}\r\n          y={15.226}\r\n          x={22.1}\r\n          height={0.551}\r\n          width={2.238}\r\n          ry={0.077}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default RemoveIcon;\r\n","import React, { useState } from \"react\";\r\nimport { MdPlaylistAdd } from \"react-icons/md\";\r\nimport store from \"../../store/store\";\r\nimport { AddToWishList, GetAllRatings } from \"../../server/DatabaseApi\";\r\nimport Popover from \"../utility/Popover\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { connect } from \"react-redux\";\r\nimport RemoveIcon from \"../../images/RemoveIcon\";\r\n\r\nconst WishlistButton = ({ user, movie, apiKey }) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleClick = async (message) => {\r\n    try {\r\n      console.log(\"movie id wishlist\", movie.id);\r\n      if (user.display_name) {\r\n        if (movie.id) {\r\n          setLoading(true);\r\n          let res = await AddToWishList(user, movie.id, apiKey);\r\n          setLoading(false);\r\n          if (res.updatedUser) {\r\n            store.dispatch({\r\n              type: \"UPDATE_USER\",\r\n              userProperty: res.updatedUser,\r\n            });\r\n            store.dispatch({\r\n              type: \"SET_NOTIFICATION\",\r\n              notification: {\r\n                title: `Movie ${message} wishlist`,\r\n                message: `Movie successfully ${message} your wishlist`,\r\n                type: \"success\",\r\n              },\r\n            });\r\n            GetAllRatings((ratingsArr) => {\r\n              let ratings = {};\r\n              ratingsArr.forEach((x) => {\r\n                ratings[x.tmdb_id] = x;\r\n              });\r\n              store.dispatch({ type: \"SET_RATINGS\", ratings });\r\n            });\r\n          } else {\r\n            store.dispatch({\r\n              type: \"SET_NOTIFICATION\",\r\n              notification: {\r\n                title: \"Error\",\r\n                message: JSON.stringify(res.error).replace(/\"/g, \"\"),\r\n                type: \"failure\",\r\n              },\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        store.dispatch({\r\n          type: \"SET_NOTIFICATION\",\r\n          notification: {\r\n            title: \"Action not allowed\",\r\n            message: \"You need to login to add movie to wishlist\",\r\n            type: \"failure\",\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      store.dispatch({\r\n        type: \"SET_NOTIFICATION\",\r\n        notification: {\r\n          title: \"Action failed\",\r\n          message: \"Couldn't add movie to wishlist\",\r\n          type: \"failure\",\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const currentlyAdded =\r\n    user.wishlist.findIndex((x) => x.movie_id === movie.id.toString()) !== -1;\r\n  const isInWatchlist =\r\n    user.watchedlist.findIndex((x) => x.movie_id === movie.id.toString()) !==\r\n    -1;\r\n\r\n  return !isInWatchlist ? (\r\n    <Popover\r\n      theme=\"dark\"\r\n      position=\"top\"\r\n      content={(w) => (\r\n        <div className=\"px-3 py-2\">\r\n          {currentlyAdded ? \"Remove from wishlist\" : \"Add to wishlist\"}\r\n        </div>\r\n      )}\r\n      trigger=\"mouseenter\"\r\n    >\r\n      <div\r\n        style={{ pointerEvents: \"all\" }}\r\n        className={`btn-custom ${\r\n          currentlyAdded ? \"btn-custom-danger\" : \"btn-custom-iconic\"\r\n        }`}\r\n      >\r\n        {loading ? (\r\n          <Loader size={30} loading={loading} color={\"white\"}></Loader>\r\n        ) : currentlyAdded ? (\r\n          <RemoveIcon\r\n            color={\"white\"}\r\n            fill={\"white\"}\r\n            onClick={() => handleClick(\"removed from\")}\r\n            size={28}\r\n          ></RemoveIcon>\r\n        ) : (\r\n          <MdPlaylistAdd\r\n            onClick={() => handleClick(\"added to\")}\r\n            className=\"text-title-xl\"\r\n            style={{ marginRight: \"-5px\" }}\r\n          ></MdPlaylistAdd>\r\n        )}\r\n      </div>\r\n    </Popover>\r\n  ) : (\r\n    \"\"\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    apiKey: state.settings.movies_api_key,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(WishlistButton);\r\n","export const nFormatter = (num, digits) => {\r\n  var si = [\r\n    { value: 1, symbol: \"\" },\r\n    { value: 1e3, symbol: \"K\" },\r\n    { value: 1e6, symbol: \"M\" },\r\n    { value: 1e9, symbol: \"G\" },\r\n    { value: 1e12, symbol: \"T\" },\r\n    { value: 1e15, symbol: \"P\" },\r\n    { value: 1e18, symbol: \"E\" },\r\n  ];\r\n  var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n  var i;\r\n  for (i = si.length - 1; i > 0; i--) {\r\n    if (num >= si[i].value) {\r\n      break;\r\n    }\r\n  }\r\n  return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\r\n};\r\n\r\nexport const FormatDuration = (minutes) => {\r\n  let h = Math.floor(minutes / 60);\r\n  let m = minutes - h * 60;\r\n  return `${h}h ${m}m`;\r\n};\r\nexport const validateEmail = (email) => {\r\n  // eslint-disable-next-line\r\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n};\r\n","import React from \"react\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport { nFormatter } from \"../../utilities/Functions\";\r\nimport { connect } from \"react-redux\";\r\nimport OkIcon from \"../../images/OkIcon\";\r\n\r\nconst ReactionButton = ({\r\n  emoji,\r\n  onClick,\r\n  size = \"normal\",\r\n  allowRate = false,\r\n  selected,\r\n  className,\r\n  value,\r\n}) => {\r\n  return (\r\n    <div\r\n      onClick={async () => {\r\n        if (allowRate) {\r\n          if (onClick) {\r\n            onClick();\r\n          }\r\n        }\r\n      }}\r\n      className={`col-auto btn-reaction-${size} ${\r\n        allowRate ? \"btn-reaction\" : \"\"\r\n      }${selected ? \" btn-reaction-selected\" : \"\"}${\r\n        className ? ` ${className}` : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"row no-gutters align-items-center h-100 justify-content-center\">\r\n        {value !== undefined && value !== null ? (\r\n          <div className={`col mr-${size !== \"small\" ? \"2\" : \"1\"}`}>\r\n            {nFormatter(value.length, 1)}\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"col-auto\">\r\n          {emoji === \"heavy_division_sign\" ? (\r\n            <div style={{ marginTop: size === \"normal\" ? \"-2px\" : \"-4px\" }}>\r\n              <OkIcon\r\n                size={size === \"small\" ? 14 : size === \"normal\" ? 16 : 28}\r\n              ></OkIcon>\r\n            </div>\r\n          ) : (\r\n            <div style={{ marginBottom: size === \"normal\" ? \"-6px\" : \"-2px\" }}>\r\n              <Emoji\r\n                emoji={emoji}\r\n                set=\"facebook\"\r\n                size={size === \"small\" ? 14 : size === \"normal\" ? 16 : 28}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(ReactionButton);\r\n","// const apikey = \"3a194d2f01cf050ac9ff97073d4a009c\";\r\nconst origin = \"https://api.themoviedb.org/3\";\r\n\r\nconst FormatRequestUrl = (path, params = [], apiKey) => {\r\n  return `${origin}${path}?api_key=${apiKey}&${[\"language=en-US\"]\r\n    .concat(params)\r\n    .join(\"&\")}`;\r\n};\r\n\r\nexport const GetTrendingMovies = () => {\r\n  return fetch(\r\n    FormatRequestUrl(\r\n      \"/trending/movie/week\",\r\n      [],\r\n      \"3a194d2f01cf050ac9ff97073d4a009c\"\r\n    )\r\n  ).then((res) => res.json());\r\n};\r\n\r\nexport const GetPopularMoviesByGenre = (genres, apiKey) => {\r\n  return fetch(\r\n    FormatRequestUrl(\r\n      \"/discover/movie\",\r\n      [\"sort_by=popularity.desc\", `with_genres=${genres.join(\",\")}`],\r\n      apiKey\r\n    )\r\n  ).then((res) => res.json());\r\n};\r\n\r\nexport const GetTrailers = (movieId, apiKey) => {\r\n  let finalId =\r\n    movieId.substring(0, 6) === \"serie-\" ? movieId.substring(6) : movieId;\r\n  return fetch(\r\n    FormatRequestUrl(\r\n      `/${\r\n        movieId.substring(0, 6) === \"serie-\" ? \"tv\" : \"movie\"\r\n      }/${finalId}/videos`,\r\n      [],\r\n      apiKey\r\n    )\r\n  ).then((res) => res.json());\r\n};\r\n\r\nexport const GetOfficialMoviesGenres = () => {\r\n  return fetch(FormatRequestUrl(\"/genre/movie/list\")).then((res) => res.json());\r\n};\r\n\r\nexport const GetTvShow = (movieId, apiKey) => {\r\n  return fetch(FormatRequestUrl(`/tv/${movieId}`, [], apiKey)).then((res) =>\r\n    res.json()\r\n  );\r\n};\r\n\r\nexport const GetMovie = (movieId, apiKey) => {\r\n  return fetch(FormatRequestUrl(`/movie/${movieId}`, [], apiKey)).then((res) =>\r\n    res.json()\r\n  );\r\n};\r\n\r\nexport const GetCredits = (movieId, apiKey) => {\r\n  let finalId =\r\n    movieId.substring(0, 6) === \"serie-\" ? movieId.substring(6) : movieId;\r\n  return fetch(\r\n    FormatRequestUrl(\r\n      `/${\r\n        movieId.substring(0, 6) === \"serie-\" ? \"tv\" : \"movie\"\r\n      }/${finalId}/credits`,\r\n      [],\r\n      apiKey\r\n    )\r\n  ).then((res) => res.json());\r\n};\r\n\r\nexport const SearchMovies = (query, apiKey) => {\r\n  let url = FormatRequestUrl(\"/search/movie\", [`query=${query}`], apiKey);\r\n  return fetch(url).then((res) => res.json());\r\n};\r\n\r\nexport const SearchSeries = (query, apiKey) => {\r\n  let url = FormatRequestUrl(\r\n    \"/search/tv\",\r\n    [`query=${encodeURI(query)}`],\r\n    apiKey\r\n  );\r\n  return fetch(url).then((res) => res.json());\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport \"simplebar/dist/simplebar.min.css\";\r\nimport { GetTrailers } from \"../../server/MoviesApi\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst TrailerPlayer = ({\r\n  movieId,\r\n  settings,\r\n  onEnded,\r\n  modalOpened,\r\n  setIsEmpty = () => {},\r\n}) => {\r\n  const [videoIds, setVideoIds] = useState([]);\r\n  const [problem, setProblem] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (movieId && settings.movies_api_key) {\r\n        let trailers = await GetTrailers(movieId, settings.movies_api_key);\r\n        if (!trailers.results || !trailers.results.length) {\r\n          setProblem(\"We couldn't find trailer for this movie\");\r\n          setIsEmpty();\r\n        } else {\r\n          setVideoIds(trailers.results.map((x) => x.key));\r\n        }\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, [movieId, settings.movies_api_key]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <div className=\"col-xl-33 col-lg-36 col-md-39 col-sm-42 col-60\">\r\n      <div className=\"row no-gutters\">\r\n        {videoIds.length && modalOpened ? (\r\n          <div className=\"col-60\">\r\n            <div className=\"trailer-player-wrapper\">\r\n              <ReactPlayer\r\n                onEnded={onEnded}\r\n                config={{\r\n                  youtube: {\r\n                    playerVars: { showinfo: 0, iv_load_policy: 3 },\r\n                  },\r\n                }}\r\n                playing\r\n                className=\"trailer-player\"\r\n                controls\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                url={`https://www.youtube.com/watch?v=${videoIds[0]}`}\r\n              />\r\n            </div>\r\n          </div>\r\n        ) : problem ? (\r\n          <div className=\"text-white h4 m-auto\">{problem}</div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    settings: state.settings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(TrailerPlayer);\r\n","import React, { useEffect } from \"react\";\r\nimport { BsX } from \"react-icons/bs\";\r\n\r\nconst Modal = (props) => {\r\n  useEffect(() => {\r\n    if (props.open) {\r\n      document.body.style.overflow = \"hidden\";\r\n    } else {\r\n      document.body.style.overflow = \"visible\";\r\n    }\r\n  }, [props.open]);\r\n\r\n  return (\r\n    <div\r\n      className={`container-fluid w-100 h-100 modal-container px-0 text-white overflow-auto${\r\n        !props.open ? \" d-none\" : \"\"\r\n      }`}\r\n    >\r\n      <div\r\n        className=\"row no-gutters justify-content-end\"\r\n        style={{ position: \"sticky\", top: 0 }}\r\n      >\r\n        <div onClick={props.onClose} className=\"modal-closer\">\r\n          <BsX fontSize=\"24px\" strokeWidth=\"2px\"></BsX>\r\n        </div>\r\n      </div>\r\n      <div className=\"row no-gutters h-100 align-items-center justify-content-center\">\r\n        {React.cloneElement(\r\n          props.children,\r\n          Object.assign({}, props.children.props, { modalOpened: props.open })\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport { MdRemoveRedEye } from \"react-icons/md\";\r\nimport Popover from \"../utility/Popover\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { MoveMovieToWatchList } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst MoveToWatchedButton = ({\r\n  user,\r\n  movieId,\r\n  refreshProfile = () => {},\r\n  apiKey,\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleClick = async () => {\r\n    if (user.display_name) {\r\n      if (movieId) {\r\n        setLoading(true);\r\n        let res = await MoveMovieToWatchList(user, movieId, apiKey);\r\n        setLoading(false);\r\n        if (res.updatedUser) {\r\n          let wishlist = [...user.wishlist];\r\n          let movieIndex = wishlist.findIndex((x) => x.movie_id === movieId);\r\n          if (movieIndex !== -1) {\r\n            wishlist.splice(movieIndex);\r\n          }\r\n          store.dispatch({\r\n            type: \"UPDATE_USER\",\r\n            userProperty: res.updatedUser,\r\n          });\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: `Movie marked as watched`,\r\n              message: `Movie successfully added to your watched list`,\r\n              type: \"success\",\r\n            },\r\n          });\r\n          store.dispatch({\r\n            type: \"UPDATE_RATINGS\",\r\n            rating: {\r\n              [movieId]: res.rating,\r\n            },\r\n          });\r\n          refreshProfile();\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Error\",\r\n              message: JSON.stringify(res.error).replace(/\"/g, \"\"),\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      store.dispatch({\r\n        type: \"SET_NOTIFICATION\",\r\n        notification: {\r\n          title: \"Action not allowed\",\r\n          message: \"You need to login to add movie to wishlist\",\r\n          type: \"failure\",\r\n        },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Popover\r\n      theme=\"dark\"\r\n      position=\"top\"\r\n      content={(w) => <div className=\"px-3 py-2\">Mark as watched</div>}\r\n      trigger=\"mouseenter\"\r\n    >\r\n      <div\r\n        className=\"btn-custom btn-custom-iconic\"\r\n        style={{ pointerEvents: \"all\" }}\r\n      >\r\n        {loading ? (\r\n          <Loader size={30} loading={loading} color={\"white\"}></Loader>\r\n        ) : (\r\n          <MdRemoveRedEye\r\n            onClick={handleClick}\r\n            className=\"text-title-xl\"\r\n          ></MdRemoveRedEye>\r\n        )}\r\n      </div>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    apiKey: state.settings.movies_api_key,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(MoveToWatchedButton);\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"../utility/Modal\";\r\nimport ReactionButton from \"./ReactionButton\";\r\nimport { WriteReview, EditReview } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst AddReview = ({\r\n  open,\r\n  onClose,\r\n  movie,\r\n  user,\r\n  review,\r\n  refreshReviews = () => {},\r\n  settings,\r\n  ratings,\r\n  userIsOwner,\r\n}) => {\r\n  const [newReview, setNewReview] = useState({\r\n    review: \"\",\r\n    rating: \"\",\r\n  });\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (review) {\r\n      setNewReview((prev) =>\r\n        Object.assign({}, prev, {\r\n          review: review.review,\r\n          rating: review.rating,\r\n        })\r\n      );\r\n    }\r\n  }, [review]);\r\n  return movie ? (\r\n    <Modal open={open} onClose={onClose}>\r\n      <div className=\"col-xl-42 p-4 bg-over-root-lighter rounded mx-4\">\r\n        <div className=\"row no-gutters h5 mb-4\">\r\n          {userIsOwner ? \"Edit\" : \"Add\"} Review - {movie.title} (\r\n          {movie.release_date.substring(0, 4)})\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-auto pr-3 d-none d-md-block\">\r\n            <div\r\n              className=\"square-70 rounded-circle bg-image\"\r\n              style={{ backgroundImage: `url(${user.photo})` }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"row no-gutters d-flex d-md-none mb-3 justify-content-between\">\r\n              <div className=\"col-auto pr-3\">\r\n                <div\r\n                  className=\"square-70 rounded-circle bg-image\"\r\n                  style={{ backgroundImage: `url(${user.photo})` }}\r\n                ></div>\r\n              </div>\r\n              <div\r\n                className={`d-flex align-items-end col-auto ${\r\n                  newReview.review.split(\" \").length <=\r\n                  settings.no_review_words - 1\r\n                    ? \"text-muted\"\r\n                    : \"text-danger\"\r\n                }`}\r\n              >\r\n                {newReview.review\r\n                  ? settings.no_review_words -\r\n                    newReview.review.split(\" \").length\r\n                  : settings.no_review_words}{\" \"}\r\n                words left\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters mb-2\" style={{ height: \"150px\" }}>\r\n              <textarea\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  let text = e.target.value;\r\n                  if (text.split(\" \").length <= settings.no_review_words) {\r\n                    setNewReview((prev) =>\r\n                      Object.assign({}, prev, { review: text })\r\n                    );\r\n                  }\r\n                }}\r\n                value={newReview.review}\r\n                spellCheck={false}\r\n                placeholder=\"Add your review...\"\r\n                style={{ resize: \"none\" }}\r\n                className=\"w-100 h-100 textarea\"\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-between mb-2\">\r\n              <div className=\"col-auto\">\r\n                <div className=\"row no-gutters\">\r\n                  <ReactionButton\r\n                    allowRate={true}\r\n                    size={\"big\"}\r\n                    onClick={() =>\r\n                      setNewReview((prev) =>\r\n                        Object.assign({}, prev, { rating: \"excellent_rate\" })\r\n                      )\r\n                    }\r\n                    selected={newReview.rating === \"excellent_rate\"}\r\n                    emoji=\"fire\"\r\n                    className={`mr-2 mb-2`}\r\n                    value={\r\n                      ratings[movie.id] ? ratings[movie.id].excellent_rate : 0\r\n                    }\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    allowRate={true}\r\n                    size={\"big\"}\r\n                    onClick={() =>\r\n                      setNewReview((prev) =>\r\n                        Object.assign({}, prev, { rating: \"good_rate\" })\r\n                      )\r\n                    }\r\n                    selected={newReview.rating === \"good_rate\"}\r\n                    emoji=\"heart\"\r\n                    className={`mr-2 mb-2`}\r\n                    value={ratings[movie.id] ? ratings[movie.id].good_rate : 0}\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    allowRate={true}\r\n                    size={\"big\"}\r\n                    onClick={() =>\r\n                      setNewReview((prev) =>\r\n                        Object.assign({}, prev, { rating: \"ok_rate\" })\r\n                      )\r\n                    }\r\n                    selected={newReview.rating === \"ok_rate\"}\r\n                    emoji=\"heavy_division_sign\"\r\n                    className={`mr-2 mb-2`}\r\n                    value={ratings[movie.id] ? ratings[movie.id].ok_rate : 0}\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    allowRate={true}\r\n                    size={\"big\"}\r\n                    onClick={() =>\r\n                      setNewReview((prev) =>\r\n                        Object.assign({}, prev, { rating: \"bad_rate\" })\r\n                      )\r\n                    }\r\n                    emoji=\"shit\"\r\n                    selected={newReview.rating === \"bad_rate\"}\r\n                    className={`mr-2`}\r\n                    value={ratings[movie.id] ? ratings[movie.id].bad_rate : 0}\r\n                  ></ReactionButton>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className={`d-none d-md-block col-auto ${\r\n                  newReview.review.split(\" \").length <=\r\n                  settings.no_review_words - 1\r\n                    ? \"text-muted\"\r\n                    : \"text-danger\"\r\n                }`}\r\n              >\r\n                {newReview.review\r\n                  ? settings.no_review_words -\r\n                    newReview.review.split(\" \").length\r\n                  : settings.no_review_words}{\" \"}\r\n                words left\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"row no-gutters align-items-center text-danger justify-content-end\"\r\n              style={{ height: \"30px\", opacity: problem ? 1 : 0 }}\r\n            >\r\n              {problem}\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-md-end justify-content-center\">\r\n              <div\r\n                className=\"btn-custom btn-custom-primary btn-small position-relative\"\r\n                onClick={async () => {\r\n                  try {\r\n                    if (!newReview.rating) {\r\n                      setProblem(\"Select rating\");\r\n                    } else if (!newReview.review) {\r\n                      setProblem(\"Review is empty\");\r\n                    } else {\r\n                      setLoading(true);\r\n                      let res = userIsOwner\r\n                        ? await EditReview(newReview, review, user._id)\r\n                        : await WriteReview(\r\n                            newReview,\r\n                            movie.id,\r\n                            user,\r\n                            settings.movies_api_key\r\n                          );\r\n                      setLoading(false);\r\n                      setNewReview({ review: \"\", rating: \"\" });\r\n                      if (res.error) {\r\n                        store.dispatch({\r\n                          type: \"SET_NOTIFICATION\",\r\n                          notification: {\r\n                            title: `Couldn't ${\r\n                              userIsOwner ? \"edit\" : \"add\"\r\n                            } review`,\r\n                            type: \"failure\",\r\n                            message: JSON.stringify(res.error).replace(\r\n                              /\"/g,\r\n                              \"\"\r\n                            ),\r\n                          },\r\n                        });\r\n                      } else {\r\n                        store.dispatch({\r\n                          type: \"SET_NOTIFICATION\",\r\n                          notification: {\r\n                            title: `You successfully ${\r\n                              userIsOwner ? \"edited\" : \"wrote\"\r\n                            } review`,\r\n                            type: \"success\",\r\n                            message: `Your review was successfully ${\r\n                              userIsOwner ? \"edited\" : \"added\"\r\n                            }`,\r\n                          },\r\n                        });\r\n\r\n                        store.dispatch({\r\n                          type: \"UPDATE_RATINGS\",\r\n                          rating: {\r\n                            [movie.id]: res.rating,\r\n                          },\r\n                        });\r\n\r\n                        if (!userIsOwner) {\r\n                          let watchedlist = [...user.watchedlist];\r\n                          watchedlist.push({ movie_id: movie.id.toString() });\r\n                          let reviewsList = [...user.reviews];\r\n                          reviewsList.push(res.reviewId);\r\n                          store.dispatch({\r\n                            type: \"UPDATE_USER\",\r\n                            userProperty: {\r\n                              watchedlist,\r\n                              reviews: reviewsList,\r\n                            },\r\n                          });\r\n                        }\r\n\r\n                        let userRatings = { ...user.ratings };\r\n                        userRatings[movie.id] = {\r\n                          movie_id: movie.id,\r\n                          rate_type: newReview.rating,\r\n                        };\r\n\r\n                        store.dispatch({\r\n                          type: \"UPDATE_USER\",\r\n                          userProperty: {\r\n                            ratings: userRatings,\r\n                          },\r\n                        });\r\n\r\n                        onClose();\r\n                        refreshReviews();\r\n                      }\r\n                    }\r\n                  } catch (er) {}\r\n                }}\r\n              >\r\n                <Loader\r\n                  color={\"white\"}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    left: \"10px\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    margin: \"auto\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                  loading={loading}\r\n                  size={20}\r\n                ></Loader>\r\n                Submit\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  ) : (\r\n    \"\"\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    settings: state.settings,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(AddReview);\r\n","import React, { useState } from \"react\";\r\nimport { OfficialMoviesGenres, OfficialSeriesGenres } from \"../../Data\";\r\nimport history from \"../../History\";\r\nimport WishlistButton from \"./WishlistButton\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactionButton from \"./ReactionButton\";\r\nimport TrailerPlayer from \"./TrailerPlayer\";\r\nimport Modal from \"../utility/Modal\";\r\nimport { BsPlayFill } from \"react-icons/bs\";\r\nimport MoveToWatchedButton from \"./MoveToWatchedButton\";\r\nimport AddReview from \"./AddReview\";\r\n\r\nconst MoviesList = ({ movies, user, ratings, prefix = \"\" }) => {\r\n  const [trailerMovieId, setTrailerMovieId] = useState(\"\");\r\n  const [openTrailer, setOpenTrailer] = useState(false);\r\n  const [addReviewOpen, setAddReviewOpen] = useState(false);\r\n\r\n  const [movie, setMovie] = useState(false); // movie to add review for\r\n  return (\r\n    <div className=\"row justify-content-end\">\r\n      <Modal open={openTrailer} onClose={() => setOpenTrailer(false)}>\r\n        <TrailerPlayer\r\n          movieId={trailerMovieId}\r\n          onEnded={() => setOpenTrailer(false)}\r\n        ></TrailerPlayer>\r\n      </Modal>\r\n      <AddReview\r\n        open={addReviewOpen}\r\n        onClose={() => setAddReviewOpen(false)}\r\n        movie={movie}\r\n        user={user}\r\n      ></AddReview>\r\n      {movies.map((x, i) => {\r\n        return (\r\n          <div\r\n            key={`result-${i}`}\r\n            className=\"col-lg-12 col-md-15 col-sm-20 col-60 p-3 text-white\"\r\n          >\r\n            <div\r\n              className=\"row no-gutters justify-content-end position-relative px-2 d-none d-sm-flex\"\r\n              style={{\r\n                marginBottom: \"-51px\",\r\n                zIndex: 5,\r\n                height: \"44px\",\r\n                pointerEvents: \"none\",\r\n              }}\r\n            >\r\n              <WishlistButton movie={x} user={user}></WishlistButton>\r\n              <div className=\"pr-1\"></div>\r\n              <MoveToWatchedButton\r\n                refreshProfile={() => {\r\n                  setMovie(x);\r\n                  setAddReviewOpen(true);\r\n                }}\r\n                user={user}\r\n                movieId={x.id}\r\n              ></MoveToWatchedButton>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-sm-60 col-auto mr-3 mr-sm-0\">\r\n                <div className=\"row no-gutters mb-2 position-relative movies-list-image\">\r\n                  <img\r\n                    alt={x.poster_path}\r\n                    width=\"100%\"\r\n                    style={{ borderRadius: \"13px\" }}\r\n                    className=\"img-clickable\"\r\n                    src={\r\n                      x.poster_path\r\n                        ? `https://image.tmdb.org/t/p/w342${x.poster_path}`\r\n                        : \"https://critics.io/img/movies/poster-placeholder.png\"\r\n                    }\r\n                  ></img>\r\n                  <div\r\n                    onClick={() =>\r\n                      history.push(`/movie/${x.name ? `serie-${x.id}` : x.id}`)\r\n                    }\r\n                    className=\"col-60 h-100 text-white d-flex flex-center img-cover cursor-pointer\"\r\n                    style={{\r\n                      left: 0,\r\n                      top: 0,\r\n                      position: \"absolute\",\r\n                      zIndex: 4,\r\n                      borderRadius: \"13px\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      className=\"square-50 rounded-circle d-flex flex-center play-btn\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        setTrailerMovieId(x.id);\r\n                        setOpenTrailer(true);\r\n                      }}\r\n                    >\r\n                      <BsPlayFill\r\n                        style={{\r\n                          fontSize: \"30px\",\r\n                          color: \"white\",\r\n                          marginRight: \"-5px\",\r\n                        }}\r\n                      ></BsPlayFill>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-60 col\">\r\n                <div\r\n                  className=\"row no-gutters text-title-md mb-0 cursor-pointer\"\r\n                  onClick={() => history.push(`/movie/${x.id}`)}\r\n                >\r\n                  <div className=\"text-truncate\">\r\n                    {x.title ? x.title : x.name}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters text-muted mb-2\">\r\n                  <div className=\"text-truncate\">\r\n                    {x.genre_ids.length\r\n                      ? x.genre_ids\r\n                          .map((gid) => {\r\n                            let genre = x.title // movies have title, series - name\r\n                              ? OfficialMoviesGenres.find((g) => g.id === gid)\r\n                              : OfficialSeriesGenres.find((g) => g.id === gid);\r\n\r\n                            return genre ? genre.name : \"unknown\";\r\n                          })\r\n                          .join(\"/\")\r\n                      : \"unknown\"}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters justify-content-sm-end mb-2\">\r\n                  <ReactionButton\r\n                    selected={\r\n                      user.ratings[x.id]\r\n                        ? user.ratings[x.id].rate_type === \"excellent_rate\"\r\n                        : false\r\n                    }\r\n                    movie={x}\r\n                    emoji=\"fire\"\r\n                    className=\"mr-1 mb-2\"\r\n                    size=\"small\"\r\n                    value={ratings[x.id] ? ratings[x.id].excellent_rate : []}\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    size=\"small\"\r\n                    selected={\r\n                      user.ratings[x.id]\r\n                        ? user.ratings[x.id].rate_type === \"good_rate\"\r\n                        : false\r\n                    }\r\n                    movie={x}\r\n                    emoji=\"heart\"\r\n                    className=\"mr-1 mb-2\"\r\n                    value={ratings[x.id] ? ratings[x.id].good_rate : []}\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    size=\"small\"\r\n                    selected={\r\n                      user.ratings[x.id]\r\n                        ? user.ratings[x.id].rate_type === \"ok_rate\"\r\n                        : false\r\n                    }\r\n                    movie={x}\r\n                    className=\"mr-1 mb-2\"\r\n                    emoji=\"heavy_division_sign\"\r\n                    value={ratings[x.id] ? ratings[x.id].ok_rate : []}\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    size=\"small\"\r\n                    emoji=\"shit\"\r\n                    value={ratings[x.id] ? ratings[x.id].bad_rate : []}\r\n                    selected={\r\n                      user.ratings[x.id]\r\n                        ? user.ratings[x.id].rate_type === \"bad_rate\"\r\n                        : false\r\n                    }\r\n                    movie={x}\r\n                  ></ReactionButton>\r\n                </div>\r\n                <div className=\"row no-gutters d-flex d-sm-none\">\r\n                  <WishlistButton movie={x} user={user}></WishlistButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(MoviesList);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport MoviesList from \"./MoviesList\";\r\nimport { GetPopularMoviesByGenre } from \"../../server/MoviesApi\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport \"simplebar/dist/simplebar.min.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst genresPairs = [\r\n  { name: \"All\", genresIds: [] },\r\n  { name: \"Suspense & Thriller\", genresIds: [27, 53] },\r\n  { name: \"Action & Adventure\", genresIds: [28, 12] },\r\n  { name: \"Romance\", genresIds: [10749] },\r\n  { name: \"Crime & Drama\", genresIds: [80, 18] },\r\n  { name: \"Sci-Fi\", genresIds: [878] },\r\n  { name: \"History & Documentary\", genresIds: [36, 99] },\r\n];\r\n\r\nconst PopularMovies = ({ apiKey, settings, user }) => {\r\n  const horizontalMenu = useRef();\r\n\r\n  const [genresIds, setGenresIds] = useState([]);\r\n  const [genreName, setGenreName] = useState(\"All\");\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const [userWishList, setUserWishList] = useState([]);\r\n  const [userWatchedList, setUserWatchedList] = useState([]);\r\n\r\n  const [filteredMovies, setFilteredMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setUserWishList(user.wishlist.map((x) => x.movie_id));\r\n      setUserWatchedList(user.watchedlist.map((x) => x.movie_id));\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (apiKey && settings.no_popular_movies) {\r\n        let data = await GetPopularMoviesByGenre(genresIds, apiKey);\r\n        setMovies(data.results);\r\n      }\r\n    }\r\n    getData();\r\n  }, [genresIds, apiKey, settings]);\r\n\r\n  useEffect(() => {\r\n    horizontalMenu.current.recalculate();\r\n  }, [movies]);\r\n\r\n  useEffect(() => {\r\n    if (movies) {\r\n      setFilteredMovies(\r\n        movies\r\n          .filter(\r\n            (x) =>\r\n              !userWishList.includes(x.id.toString()) &&\r\n              !userWatchedList.includes(x.id.toString())\r\n          )\r\n          .slice(0, settings.no_popular_movies)\r\n      );\r\n    }\r\n  }, [userWatchedList, userWishList, movies]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <div className=\"row no-gutters justify-content-center text-white\">\r\n      <div className=\"col-60 py-3 px-md-5 px-4 content-container\">\r\n        <div className=\"row no-gutters h5\">\r\n          <div\r\n            className=\"col-auto\"\r\n            style={{\r\n              padding: \"6px 30px 6px 0px\",\r\n              background: \"linear-gradient(to left, #ff0037, transparent)\",\r\n              borderRadius: \"0 4px 4px 0\",\r\n            }}\r\n          >\r\n            Popular Movies\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters text-light\">\r\n          Most watched movies in last 30 days\r\n        </div>\r\n        <div className=\"row no-gutters justify-content-end text-light align-items-center mb-4\">\r\n          <div className=\"col-auto\">\r\n            <SimpleBar\r\n              ref={horizontalMenu}\r\n              style={{\r\n                padding: \"14px 0\",\r\n                maxWidth: \"100%\",\r\n                overflowX: \"auto\",\r\n                whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              {genresPairs.map((x, i) => (\r\n                <div\r\n                  onClick={() => {\r\n                    setGenreName(x.name);\r\n                    setGenresIds(x.genresIds);\r\n                  }}\r\n                  style={{ display: \"inline-block\" }}\r\n                  key={`genre-for-popular-movie-${i}`}\r\n                  className={`px-4 ${\r\n                    genreName === x.name\r\n                      ? \"btn-tertiary-selected text-white\"\r\n                      : \"btn-tertiary text-light-white\"\r\n                  }`}\r\n                >\r\n                  {x.name}\r\n                </div>\r\n              ))}\r\n            </SimpleBar>\r\n          </div>\r\n        </div>\r\n        <MoviesList movies={filteredMovies}></MoviesList>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    settings: state.settings,\r\n    user: state.user,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(PopularMovies);\r\n","import React from \"react\";\r\nimport history from \"../../History\";\r\n\r\nconst Recommendations = ({ movies }) => {\r\n  return (\r\n    <div className=\"row no-gutters\">\r\n      {movies.map((x, i) => (\r\n        <div\r\n          className=\"col-sm-15 col-md-12 col-lg-15 col-60 pr-2 pb-2 text-white position-relative\"\r\n          key={`recommended-today-movie-${i}`}\r\n        >\r\n          <div className=\"row no-gutters\">\r\n            <div className=\"col-sm-60 col-auto mr-3 mr-sm-0\">\r\n              <img\r\n                alt={x.movie_poster}\r\n                className=\"img-clickable movies-list-image\"\r\n                onClick={() => history.push(`/movie/${x.movie_id}`)}\r\n                width=\"100%\"\r\n                style={{\r\n                  borderRadius: \"13px\",\r\n                }}\r\n                src={`https://image.tmdb.org/t/p/w154${x.movie_poster}`}\r\n              ></img>\r\n            </div>\r\n            <div className=\"col-sm-60 col d-block d-sm-none\">\r\n              <div\r\n                className=\"row no-gutters cursor-pointer\"\r\n                onClick={() => history.push(`/movie/${x.movie_id}`)}\r\n              >\r\n                {x.movie_title}\r\n              </div>\r\n              <div className=\"row no-gutters text-muted\">\r\n                <small className=\"text-truncate\">{x.movie_genres}</small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recommendations;\r\n","import React, { useEffect } from \"react\";\r\nimport { BsChevronRight, BsChevronLeft } from \"react-icons/bs\";\r\n\r\nconst Pagination = ({\r\n  count,\r\n  current,\r\n  setCurrent,\r\n  classNames = { selected: \"input-light-selected\", notSelected: \"input-light\" },\r\n}) => {\r\n  let first =\r\n    current === count ? current - 2 : current - 1 >= 1 ? current - 1 : current;\r\n  let second = first + 1;\r\n  let third = second + 1;\r\n\r\n  useEffect(() => {\r\n    if (count === 1) {\r\n      setCurrent(1);\r\n    }\r\n  }, [count]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return count > 1 ? (\r\n    <React.Fragment>\r\n      <div className=\"row no-gutters d-flex d-lg-none user-select-none\">\r\n        <div\r\n          className={`col-auto ${classNames[\"notSelected\"]} px-3 mr-1 cursor-pointer`}\r\n          onClick={() => setCurrent(current - 1 >= 1 ? current - 1 : current)}\r\n        >\r\n          <BsChevronLeft fontSize=\"16px\"></BsChevronLeft>\r\n        </div>\r\n        <div\r\n          className={`${classNames[\"selected\"]} col-auto text-center mr-1`}\r\n          style={{ width: \"50px\" }}\r\n        >\r\n          {current}\r\n        </div>\r\n        <div\r\n          className={`col-auto ${classNames[\"notSelected\"]} px-3 cursor-pointer`}\r\n          onClick={() =>\r\n            setCurrent(current + 1 <= count ? current + 1 : current)\r\n          }\r\n        >\r\n          <BsChevronRight fontSize=\"16px\"></BsChevronRight>\r\n        </div>\r\n      </div>\r\n      <div className=\"row no-gutters user-select-none d-none d-lg-flex\">\r\n        <div\r\n          className={`col-auto ${classNames[\"notSelected\"]} px-3 mr-1 cursor-pointer`}\r\n          onClick={() => setCurrent(current - 1 >= 1 ? current - 1 : current)}\r\n        >\r\n          Previous\r\n        </div>\r\n        {first - 1 >= 1 && (\r\n          <div\r\n            className={`col-auto ${classNames[\"notSelected\"]} text-center mr-1 cursor-pointer`}\r\n            style={{ width: \"50px\" }}\r\n            onClick={() => setCurrent(first - 1 >= 1 ? first - 1 : first)}\r\n          >\r\n            ...\r\n          </div>\r\n        )}\r\n        {first >= 1 && (\r\n          <div\r\n            style={{ width: \"50px\" }}\r\n            className={`px-0 col-auto ${\r\n              current === first\r\n                ? classNames[\"selected\"]\r\n                : classNames[\"notSelected\"]\r\n            } text-center mr-1 cursor-pointer`}\r\n            onClick={() => setCurrent(first)}\r\n          >\r\n            {first}\r\n          </div>\r\n        )}\r\n\r\n        {second <= count && second >= 1 && (\r\n          <div\r\n            style={{ width: \"50px\" }}\r\n            className={`px-0 col-auto ${\r\n              current === second\r\n                ? classNames[\"selected\"]\r\n                : classNames[\"notSelected\"]\r\n            } text-center mr-1 cursor-pointer`}\r\n            onClick={() => setCurrent(second)}\r\n          >\r\n            {second}\r\n          </div>\r\n        )}\r\n        {third <= count && third >= 1 && (\r\n          <div\r\n            className={`px-0 col-auto ${\r\n              current === third\r\n                ? classNames[\"selected\"]\r\n                : classNames[\"notSelected\"]\r\n            } text-center mr-1 cursor-pointer`}\r\n            style={{ width: \"50px\" }}\r\n            onClick={() => setCurrent(third)}\r\n          >\r\n            {third}\r\n          </div>\r\n        )}\r\n\r\n        {third + 1 <= count && (\r\n          <div\r\n            onClick={() => setCurrent(third + 1 <= count ? third + 1 : current)}\r\n            className={`col-auto ${classNames[\"notSelected\"]} text-center mr-1 cursor-pointer`}\r\n            style={{ width: \"50px\" }}\r\n          >\r\n            ...\r\n          </div>\r\n        )}\r\n        <div\r\n          className={`col-auto ${classNames[\"notSelected\"]} px-3 cursor-pointer`}\r\n          onClick={() =>\r\n            setCurrent(current + 1 <= count ? current + 1 : current)\r\n          }\r\n        >\r\n          Next\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  ) : (\r\n    \"\"\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"../utility/Modal\";\r\nimport { WriteComment } from \"../../server/DatabaseApi\";\r\nimport Loader from \"../utility/Loader\";\r\nimport store from \"../../store/store\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ReplyToReview = ({\r\n  open,\r\n  onClose,\r\n  user,\r\n  review,\r\n  movie,\r\n  reviewAuthor,\r\n  setComments,\r\n  setReviewIdOfVisibleComments,\r\n  refreshComments,\r\n  refreshReviews,\r\n  settings,\r\n}) => {\r\n  const [newComment, setNewComment] = useState({ comment: \"\" });\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  return (\r\n    <Modal open={open} onClose={onClose}>\r\n      <div className=\"col-xl-42 p-4 bg-over-root-lighter rounded mx-4\">\r\n        <div className=\"row no-gutters h5 mb-4\">\r\n          Reply to {reviewAuthor.display_name}\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-auto pr-3 d-none d-md-block\">\r\n            <div\r\n              className=\"square-70 rounded-circle bg-image\"\r\n              style={{ backgroundImage: `url(${user.photo})` }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"row no-gutters d-flex d-md-none justify-content-between mb-3\">\r\n              <div className=\"col-auto pr-3\">\r\n                <div\r\n                  className=\"square-70 rounded-circle bg-image\"\r\n                  style={{ backgroundImage: `url(${user.photo})` }}\r\n                ></div>\r\n              </div>\r\n              <div\r\n                className={`col-auto d-flex align-items-end ${\r\n                  newComment.comment.length <=\r\n                  settings.no_comment_characters - 1\r\n                    ? \"text-muted\"\r\n                    : \"text-danger\"\r\n                }`}\r\n              >\r\n                {newComment.comment\r\n                  ? settings.no_comment_characters - newComment.comment.length\r\n                  : settings.no_comment_characters}{\" \"}\r\n                characters left\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters mb-2\" style={{ height: \"150px\" }}>\r\n              <textarea\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  let text = e.target.value;\r\n                  if (text.length <= settings.no_comment_characters) {\r\n                    setNewComment((prev) =>\r\n                      Object.assign({}, prev, { comment: text })\r\n                    );\r\n                  }\r\n                }}\r\n                value={newComment.comment}\r\n                spellCheck={false}\r\n                placeholder=\"Add your comment...\"\r\n                style={{ resize: \"none\" }}\r\n                className=\"w-100 h-100 textarea\"\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-md-end justify-content-center\">\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters justify-content-end\">\r\n                  <div\r\n                    className={`col-auto d-none d-md-block ${\r\n                      newComment.comment.length <=\r\n                      settings.no_comment_characters - 1\r\n                        ? \"text-muted\"\r\n                        : \"text-danger\"\r\n                    }`}\r\n                  >\r\n                    {newComment.comment\r\n                      ? settings.no_comment_characters -\r\n                        newComment.comment.length\r\n                      : settings.no_comment_characters}{\" \"}\r\n                    characters left\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div\r\n                  className=\"row no-gutters align-items-center text-danger justify-content-end\"\r\n                  style={{ height: \"30px\", opacity: problem ? 1 : 0 }}\r\n                >\r\n                  {problem}\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"btn-custom btn-custom-primary btn-small\"\r\n                onClick={async () => {\r\n                  if (!newComment.comment) {\r\n                    setProblem(\"Type comment\");\r\n                  } else {\r\n                    if (user.token) {\r\n                      setLoading(true);\r\n                      let finalComment = Object.assign({}, newComment, {\r\n                        author_name: user.display_name,\r\n                        movie_id: movie.id,\r\n                        comment_id: review.comment_id,\r\n                        review_id: review._id,\r\n                        review: review.review,\r\n                        review_author: review.author,\r\n                        notificationReceivers: review.notificationReceivers,\r\n                      });\r\n                      let finalUser = { ...user };\r\n                      delete finalUser[\"photo\"];\r\n                      setNewComment({ comment: \"\" });\r\n                      let res = await WriteComment(\r\n                        finalComment,\r\n                        finalUser,\r\n                        movie\r\n                      );\r\n                      setLoading(false);\r\n                      if (res.error) {\r\n                        store.dispatch({\r\n                          type: \"SET_NOTIFICATION\",\r\n                          notification: {\r\n                            title: \"Couldn't add your comment\",\r\n                            type: \"failure\",\r\n                            message: JSON.stringify(res.error).replace(\r\n                              /\"/g,\r\n                              \"\"\r\n                            ),\r\n                          },\r\n                        });\r\n                      } else {\r\n                        store.dispatch({\r\n                          type: \"SET_NOTIFICATION\",\r\n                          notification: {\r\n                            title: \"You successfully writed comment\",\r\n                            type: \"success\",\r\n                            message: \"Your comment successfully added\",\r\n                          },\r\n                        });\r\n                        onClose();\r\n                        setReviewIdOfVisibleComments(review._id);\r\n                        refreshComments();\r\n                        refreshReviews();\r\n                      }\r\n                    } else {\r\n                      setProblem(\"You need to login to write comment\");\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <Loader\r\n                  color={\"white\"}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    left: \"10px\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    margin: \"auto\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                  loading={loading}\r\n                  size={20}\r\n                ></Loader>\r\n                Send\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    settings: state.settings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(ReplyToReview);\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport date from \"date-and-time\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport { MdThumbUp, MdChatBubble, MdFlag } from \"react-icons/md\";\r\nimport {\r\n  GetReviewComments,\r\n  GetPopularReviews,\r\n  GetPromotedReviews,\r\n  LikeReview,\r\n  LikeComment,\r\n  ReportComment,\r\n  ReportReview,\r\n} from \"../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport Paigination from \"../utility/Paigination\";\r\nimport history from \"../../History\";\r\nimport ReplyToReview from \"./ReplyToReview\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport Popover from \"../utility/Popover\";\r\nimport OkIcon from \"../../images/OkIcon\";\r\n\r\nconst PopularReviews = ({ publicUsers, settings, user, ratings }) => {\r\n  //comments object.Its property will be review id.\r\n  const [comments, setComments] = useState({});\r\n\r\n  const [reviews, setReviews] = useState([]);\r\n  const [promotedReviews, setPromotedReviews] = useState([]);\r\n\r\n  const [reviewIdOfVisibleComments, setReviewIdOfVisibleComments] = useState(\r\n    -1\r\n  );\r\n\r\n  const [loadingComment, setLoadingComment] = useState(-1);\r\n  const [loadingReview, setLoadingReview] = useState(-1);\r\n  const [loadingReport, setLoadingReport] = useState(-1);\r\n\r\n  const page = 1;\r\n  const [commentsPage, setCommentsPage] = useState(1);\r\n\r\n  // reference to top of the reviews block to scroll into view after changing the page\r\n  const topOfReviewsBlock = useRef(null);\r\n\r\n  const [review, setReview] = useState({\r\n    movie_title: \"\",\r\n    movie_id: \"\",\r\n    movie_genres: \"\",\r\n    movie_release_date: \"\",\r\n    movie_poster: \"\",\r\n  });\r\n\r\n  const [addReplyOpen, setAddReplyOpen] = useState(false);\r\n\r\n  //state to refresh comments after writing it\r\n  const [refreshComments, setRefreshComments] = useState(false);\r\n\r\n  //state to refresh reviews after writing it\r\n  const [refreshReviews, setRefreshReviews] = useState(false);\r\n\r\n  const commentsPerPage = 5;\r\n  const reviewsPerPage = 8;\r\n\r\n  const [promotedContents, setPromotedContents] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (reviewIdOfVisibleComments !== -1) {\r\n        let data = await GetReviewComments(reviewIdOfVisibleComments);\r\n\r\n        let commentsObj = {};\r\n        data.forEach((x) => {\r\n          commentsObj[x._id] = x;\r\n        });\r\n        setComments((prev) =>\r\n          Object.assign({}, prev, { [reviewIdOfVisibleComments]: commentsObj })\r\n        );\r\n      }\r\n    }\r\n    getData();\r\n  }, [reviewIdOfVisibleComments, refreshComments]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (settings.no_popular_reviews) {\r\n        let promoted = await GetPromotedReviews();\r\n        let promotedContentIds = [];\r\n        let promoContents = {};\r\n        if (!promoted.error) {\r\n          promoted.forEach((x) => {\r\n            promotedContentIds.push(x.content_id);\r\n            promoContents[x.content_id] = x;\r\n          });\r\n        }\r\n        setPromotedContents(promoContents);\r\n\r\n        let data = await GetPopularReviews(settings.no_popular_reviews);\r\n        if (!data.error) {\r\n          let promReviews = [],\r\n            notPromotedReviews = [];\r\n          data.forEach((x) => {\r\n            if (promotedContentIds.includes(x._id)) {\r\n              x.promoted = true;\r\n              promReviews.push(x);\r\n            } else {\r\n              notPromotedReviews.push(x);\r\n            }\r\n          });\r\n          setPromotedReviews(promReviews);\r\n          setReviews(notPromotedReviews);\r\n        }\r\n      }\r\n    }\r\n    getData();\r\n  }, [settings, refreshReviews]);\r\n\r\n  const renderComments = (ids, review) => {\r\n    return ids.map((x, ind) => {\r\n      return comments[review._id][x] ? (\r\n        <React.Fragment>\r\n          <div\r\n            style={{\r\n              marginLeft: `${\r\n                comments[review._id][x].notificationReceivers.length * 60 - 30\r\n              }px`,\r\n            }}\r\n            key={`comment-${reviewIdOfVisibleComments}-${ind}`}\r\n            className={`row no-gutters p-4 bg-over-root-lighter rounded mb-2 indented-comment`}\r\n          >\r\n            <div className=\"col-auto pr-4 d-none d-md-block\">\r\n              <div\r\n                className=\"bg-image rounded-circle square-70\"\r\n                style={{\r\n                  backgroundImage: `url(${\r\n                    publicUsers[comments[review._id][x].author]\r\n                      ? publicUsers[comments[review._id][x].author].photo\r\n                      : \"\"\r\n                  })`,\r\n                }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"row no-gutters justify-content-between align-items-center mb-2\">\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters\">\r\n                    <div className=\"col-auto pr-2 d-block d-md-none\">\r\n                      <div\r\n                        className=\"bg-image rounded-circle square-40\"\r\n                        style={{\r\n                          backgroundImage: `url(${\r\n                            publicUsers[comments[review._id][x].author]\r\n                              ? publicUsers[comments[review._id][x].author]\r\n                                  .photo\r\n                              : \"\"\r\n                          })`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"col-auto mr-3 text-title-md mb-0\">\r\n                      {publicUsers[comments[review._id][x].author]\r\n                        ? publicUsers[comments[review._id][x].author]\r\n                            .display_name\r\n                        : \"\"}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters align-items-center\">\r\n                    <div className=\"col-auto\">\r\n                      <div className=\"row no-gutters align-items-center\">\r\n                        <div className=\"col-auto mr-2\">Commented on</div>\r\n                        <div className=\"col-auto mr-3 text-muted\">\r\n                          {date.format(\r\n                            new Date(comments[review._id][x].date),\r\n                            \"MMM DD, YYYY\"\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <Popover\r\n                      arrow={false}\r\n                      position=\"top\"\r\n                      trigger=\"mouseenter\"\r\n                      theme=\"dark\"\r\n                      content={(w) => (\r\n                        <div className=\"py-2 px-3 rounded bg-over-root\">\r\n                          Report Abuse\r\n                        </div>\r\n                      )}\r\n                    >\r\n                      <div\r\n                        className=\"col-auto text-muted btn-tertiary-small d-flex flex-center\"\r\n                        onClick={async () => {\r\n                          if (user.token) {\r\n                            setLoadingReport(x);\r\n                            let res = await ReportComment(user, x);\r\n                            setLoadingReport(-1);\r\n                            if (res.error) {\r\n                              store.dispatch({\r\n                                type: \"SET_NOTIFICATION\",\r\n                                notification: {\r\n                                  title: \"Error\",\r\n                                  message: res.error,\r\n                                  type: \"failure\",\r\n                                },\r\n                              });\r\n                            } else {\r\n                              store.dispatch({\r\n                                type: \"SET_NOTIFICATION\",\r\n                                notification: {\r\n                                  title: \"Comment reported\",\r\n                                  message:\r\n                                    \"Comment was successfully reported. We will review it soon.\",\r\n                                  type: \"success\",\r\n                                },\r\n                              });\r\n                            }\r\n                          } else {\r\n                            store.dispatch({\r\n                              type: \"SET_NOTIFICATION\",\r\n                              notification: {\r\n                                title: \"Login required\",\r\n                                message: \"You need to login to report comment\",\r\n                                type: \"failure\",\r\n                              },\r\n                            });\r\n                          }\r\n                        }}\r\n                      >\r\n                        {loadingReport === x ? (\r\n                          <div className=\"square-20\">\r\n                            <Loader\r\n                              color={\"white\"}\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                left: \"10px\",\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                margin: \"auto\",\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                              }}\r\n                              loading={true}\r\n                              size={20}\r\n                            ></Loader>\r\n                          </div>\r\n                        ) : (\r\n                          <MdFlag fontSize=\"24px\"></MdFlag>\r\n                        )}\r\n                      </div>\r\n                    </Popover>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row no-gutters text-light mb-3 font-weight-300 text-break\">\r\n                {comments[review._id][x].comment}\r\n              </div>\r\n              <div className=\"row no-gutters justify-content-end align-items-center\">\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters align-items-center\">\r\n                    <div className=\"col-auto mr-2\">\r\n                      {comments[review._id][x].likes.length}\r\n                    </div>\r\n                    <div className=\"col-auto mr-2 \">\r\n                      {loadingComment === ind ? (\r\n                        <div className=\"square-20\">\r\n                          <Loader\r\n                            color={\"white\"}\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              left: \"10px\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                            loading={loadingComment === ind}\r\n                            size={20}\r\n                          ></Loader>\r\n                        </div>\r\n                      ) : (\r\n                        <MdThumbUp\r\n                          onClick={async () => {\r\n                            if (user.token) {\r\n                              if (user._id !== comments[review._id][x].author) {\r\n                                setLoadingComment(ind);\r\n                                let res = await LikeComment(user, x);\r\n                                setLoadingComment(-1);\r\n                                if (res.error) {\r\n                                  store.dispatch({\r\n                                    type: \"SET_NOTIFICATION\",\r\n                                    notification: {\r\n                                      title: \"Error\",\r\n                                      message: res.error,\r\n                                      type: \"failure\",\r\n                                    },\r\n                                  });\r\n                                } else {\r\n                                  setRefreshComments(!refreshComments);\r\n                                }\r\n                              } else {\r\n                                store.dispatch({\r\n                                  type: \"SET_NOTIFICATION\",\r\n                                  notification: {\r\n                                    title: \"Action not allowed\",\r\n                                    message:\r\n                                      \"You can not like your own comment\",\r\n                                    type: \"failure\",\r\n                                  },\r\n                                });\r\n                              }\r\n                            } else {\r\n                              store.dispatch({\r\n                                type: \"SET_NOTIFICATION\",\r\n                                notification: {\r\n                                  title: \"Login required\",\r\n                                  message: \"You need to login to like review\",\r\n                                  type: \"failure\",\r\n                                },\r\n                              });\r\n                            }\r\n                          }}\r\n                          fontSize=\"24px\"\r\n                          className=\"text-green scale-transition cursor-pointer\"\r\n                        ></MdThumbUp>\r\n                      )}\r\n                    </div>\r\n                    <div\r\n                      className=\"col-auto text-orange btn-tertiary\"\r\n                      onClick={() => {\r\n                        if (!user.token) {\r\n                          store.dispatch({\r\n                            type: \"SET_NOTIFICATION\",\r\n                            notification: {\r\n                              title: \"Login required\",\r\n                              message: \"You need to login to write review.\",\r\n                              type: \"failure\",\r\n                            },\r\n                          });\r\n                        } else {\r\n                          setReview(\r\n                            Object.assign({}, review, {\r\n                              comment_id: x,\r\n                              notificationReceivers: comments[review._id][\r\n                                x\r\n                              ].notificationReceivers.concat([\r\n                                publicUsers[comments[review._id][x].author],\r\n                              ]),\r\n                            })\r\n                          );\r\n                          setAddReplyOpen(true);\r\n                        }\r\n                      }}\r\n                    >\r\n                      Reply\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {renderComments(comments[review._id][x].comments, review)}\r\n        </React.Fragment>\r\n      ) : (\r\n        \"\"\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"row no-gutters justify-content-center text-white\">\r\n      <div className=\"col-60 content-container py-3 px-md-5 px-4\">\r\n        <div className=\"row no-gutters h5\">\r\n          <div\r\n            className=\"col-auto\"\r\n            style={{\r\n              padding: \"6px 30px 6px 0px\",\r\n              background: \"linear-gradient(to left, #ff0037, transparent)\",\r\n              borderRadius: \"0 4px 4px 0\",\r\n            }}\r\n          >\r\n            Popular Reviews\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters text-light mb-3\">\r\n          Most commented reviews in last 30 days\r\n        </div>\r\n        <div className=\"row no-gutters mb-2\" ref={topOfReviewsBlock}></div>\r\n        {promotedReviews\r\n          .concat(reviews)\r\n          .slice(\r\n            (page - 1) * reviewsPerPage,\r\n            (page - 1) * reviewsPerPage + reviewsPerPage\r\n          )\r\n          .map((x, i) => {\r\n            let rating = promotedContents[x._id]\r\n              ? promotedContents[x._id].content.rating\r\n              : x.rating;\r\n            let review = promotedContents[x._id]\r\n              ? promotedContents[x._id].content.review\r\n              : x.review;\r\n            return (\r\n              <React.Fragment key={`fragment-review-${i}`}>\r\n                <div\r\n                  key={`review-${i}`}\r\n                  className=\"row no-gutters p-4 bg-over-root-lighter rounded mb-2\"\r\n                >\r\n                  <div\r\n                    className=\"col-sm-auto col-20 pr-4 d-none d-sm-block\"\r\n                    style={{ maxWidth: \"150px\" }}\r\n                  >\r\n                    <div className=\"row no-gutters mb-1\">\r\n                      <img\r\n                        alt={`poster-of-${x.movie_id}`}\r\n                        onClick={() => history.push(`/movie/${x.movie_id}`)}\r\n                        width=\"100%\"\r\n                        style={{ borderRadius: \"13px\", cursor: \"pointer\" }}\r\n                        src={`https://image.tmdb.org/t/p/w154${\r\n                          ratings[x.movie_id]\r\n                            ? ratings[x.movie_id].movie_poster\r\n                            : \"https://critics.io/img/movies/poster-placeholder.png\"\r\n                        }`}\r\n                      ></img>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col d-flex flex-column\">\r\n                    <div className=\"row no-gutters justify-content-between align-items-center mb-2 flex-grow-0\">\r\n                      <div className=\"col-60 d-block d-sm-none mb-3\">\r\n                        <div className=\"row no-gutters mb-1\">\r\n                          <div className=\"col-auto pr-3\">\r\n                            <div\r\n                              className=\"square-70 rounded bg-image\"\r\n                              style={{\r\n                                backgroundImage: `url(https://image.tmdb.org/t/p/w154${\r\n                                  ratings[x.movie_id]\r\n                                    ? ratings[x.movie_id].movie_poster\r\n                                    : \"https://critics.io/img/movies/poster-placeholder.png\"\r\n                                })`,\r\n                              }}\r\n                            ></div>\r\n                          </div>\r\n                          <div className=\"col\">\r\n                            <div className=\"row no-gutters text-white mb-0\">\r\n                              {ratings[x.movie_id]\r\n                                ? ratings[x.movie_id].movie_title\r\n                                : \"\"}{\" \"}\r\n                              (\r\n                              {ratings[x.movie_id]\r\n                                ? ratings[\r\n                                    x.movie_id\r\n                                  ].movie_release_date.substring(0, 4)\r\n                                : \"\"}\r\n                              )\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-60\">\r\n                        <div className=\"row no-gutters justify-content-between\">\r\n                          <div className=\"col-auto mb-2\">\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                              <div className=\"col-auto pr-2\">\r\n                                <div\r\n                                  className=\"bg-image rounded-circle square-40\"\r\n                                  style={{\r\n                                    backgroundImage: `url(${\r\n                                      publicUsers[x.author]\r\n                                        ? publicUsers[x.author].photo\r\n                                        : \"\"\r\n                                    })`,\r\n                                  }}\r\n                                ></div>\r\n                              </div>\r\n                              <div className=\"col-auto\">\r\n                                <div className=\"row no-gutters align-items-center text-white\">\r\n                                  <div className=\"col-auto mr-3 mb-0\">\r\n                                    {publicUsers[x.author]\r\n                                      ? publicUsers[x.author].display_name\r\n                                      : \"\"}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-auto\">\r\n                            <div className=\"row no-gutters text-white align-items-center\">\r\n                              <span className=\"mr-2 col-auto\">Posted on</span>\r\n                              <span className=\"text-muted col-auto mr-2\">\r\n                                {date.format(new Date(x.date), \"MMM DD, YYYY\")}\r\n                              </span>\r\n                              <Popover\r\n                                arrow={false}\r\n                                position=\"top\"\r\n                                trigger=\"mouseenter\"\r\n                                theme=\"dark\"\r\n                                content={(w) => (\r\n                                  <div className=\"py-2 px-3 rounded bg-root\">\r\n                                    Report Abuse\r\n                                  </div>\r\n                                )}\r\n                              >\r\n                                <div\r\n                                  className=\"col-auto text-muted btn-tertiary-small d-flex flex-center\"\r\n                                  onClick={async () => {\r\n                                    if (user.token) {\r\n                                      setLoadingReport(x._id);\r\n                                      let res = await ReportReview(user, x._id);\r\n                                      setLoadingReport(-1);\r\n                                      if (res.error) {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Error\",\r\n                                            message: res.error,\r\n                                            type: \"failure\",\r\n                                          },\r\n                                        });\r\n                                      } else {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Review reported\",\r\n                                            message:\r\n                                              \"Review was successfully reported. We will review it soon.\",\r\n                                            type: \"success\",\r\n                                          },\r\n                                        });\r\n                                      }\r\n                                    } else {\r\n                                      store.dispatch({\r\n                                        type: \"SET_NOTIFICATION\",\r\n                                        notification: {\r\n                                          title: \"Login required\",\r\n                                          message:\r\n                                            \"You need to login to report review\",\r\n                                          type: \"failure\",\r\n                                        },\r\n                                      });\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  {loadingReport === x._id ? (\r\n                                    <div className=\"square-20\">\r\n                                      <Loader\r\n                                        color={\"white\"}\r\n                                        style={{\r\n                                          position: \"absolute\",\r\n                                          left: \"10px\",\r\n                                          top: 0,\r\n                                          bottom: 0,\r\n                                          margin: \"auto\",\r\n                                          display: \"flex\",\r\n                                          alignItems: \"center\",\r\n                                        }}\r\n                                        loading={true}\r\n                                        size={20}\r\n                                      ></Loader>\r\n                                    </div>\r\n                                  ) : (\r\n                                    <MdFlag fontSize=\"24px\"></MdFlag>\r\n                                  )}\r\n                                </div>\r\n                              </Popover>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row no-gutters text-light mb-3 font-size-14 flex-grow-0 font-weight-300 text-break\">\r\n                      {review}\r\n                    </div>\r\n\r\n                    <div className=\"row no-gutters flex-grow-1 align-items-bottom\">\r\n                      <div className=\"col-60 d-flex flex-column justify-content-end\">\r\n                        <div className=\"row no-gutters justify-content-between align-items-center text-white\">\r\n                          <div className=\"col-auto\">\r\n                            <div className=\"row no-gutters\">\r\n                              <div style={{ marginBottom: \"-6px\" }}>\r\n                                {rating === \"ok_rate\" ? (\r\n                                  <OkIcon size={24}></OkIcon>\r\n                                ) : (\r\n                                  <Emoji\r\n                                    emoji={\r\n                                      rating === \"excellent_rate\"\r\n                                        ? \"fire\"\r\n                                        : rating === \"good_rate\"\r\n                                        ? \"heart\"\r\n                                        : rating === \"ok_rate\"\r\n                                        ? \"heavy-division-sign\"\r\n                                        : \"shit\"\r\n                                    }\r\n                                    set=\"facebook\"\r\n                                    size={24}\r\n                                  />\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-auto px-0\">\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                              <div className=\"col-auto mr-2\">\r\n                                {x.likes.length}\r\n                              </div>\r\n                              <div className=\"col-auto mr-2 \">\r\n                                {loadingReview === i ? (\r\n                                  <div className=\"square-20\">\r\n                                    <Loader\r\n                                      color={\"white\"}\r\n                                      style={{\r\n                                        position: \"absolute\",\r\n                                        left: \"10px\",\r\n                                        top: 0,\r\n                                        bottom: 0,\r\n                                        margin: \"auto\",\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                      }}\r\n                                      loading={loadingReview === i}\r\n                                      size={20}\r\n                                    ></Loader>\r\n                                  </div>\r\n                                ) : (\r\n                                  <MdThumbUp\r\n                                    onClick={async () => {\r\n                                      if (user.token) {\r\n                                        if (user._id !== x.author) {\r\n                                          setLoadingReview(i);\r\n                                          let res = await LikeReview(\r\n                                            user,\r\n                                            x._id\r\n                                          );\r\n                                          setLoadingReview(-1);\r\n                                          if (res.error) {\r\n                                            store.dispatch({\r\n                                              type: \"SET_NOTIFICATION\",\r\n                                              notification: {\r\n                                                title: \"Error\",\r\n                                                message: res.error,\r\n                                                type: \"failure\",\r\n                                              },\r\n                                            });\r\n                                          } else {\r\n                                            setRefreshReviews(!refreshReviews);\r\n                                          }\r\n                                        } else {\r\n                                          store.dispatch({\r\n                                            type: \"SET_NOTIFICATION\",\r\n                                            notification: {\r\n                                              title: \"Action not allowed\",\r\n                                              message:\r\n                                                \"You can not like your own review\",\r\n                                              type: \"failure\",\r\n                                            },\r\n                                          });\r\n                                        }\r\n                                      } else {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Login required\",\r\n                                            message:\r\n                                              \"You need to login to like review\",\r\n                                            type: \"failure\",\r\n                                          },\r\n                                        });\r\n                                      }\r\n                                    }}\r\n                                    fontSize=\"24px\"\r\n                                    className=\"text-green scale-transition cursor-pointer\"\r\n                                  ></MdThumbUp>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-auto mr-2\">\r\n                                {x.comments.length}\r\n                              </div>\r\n                              <div className=\"col-auto mr-2\">\r\n                                <MdChatBubble\r\n                                  onClick={() => {\r\n                                    setReviewIdOfVisibleComments(\r\n                                      reviewIdOfVisibleComments === x._id\r\n                                        ? -1\r\n                                        : x._id\r\n                                    );\r\n                                  }}\r\n                                  fontSize=\"24px\"\r\n                                  className=\"text-orange scale-transition cursor-pointer\"\r\n                                ></MdChatBubble>\r\n                              </div>\r\n                              <div\r\n                                className=\"col-auto text-orange btn-tertiary\"\r\n                                onClick={() => {\r\n                                  if (!user.token) {\r\n                                    store.dispatch({\r\n                                      type: \"SET_NOTIFICATION\",\r\n                                      notification: {\r\n                                        title: \"Login required\",\r\n                                        message:\r\n                                          \"You need to login to write review.\",\r\n                                        type: \"failure\",\r\n                                      },\r\n                                    });\r\n                                  } else {\r\n                                    setReview(\r\n                                      Object.assign({}, x, {\r\n                                        notificationReceivers: [\r\n                                          publicUsers[x.author],\r\n                                        ],\r\n                                      })\r\n                                    );\r\n                                    setAddReplyOpen(true);\r\n                                  }\r\n                                }}\r\n                              >\r\n                                Reply\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <Collapse\r\n                  in={reviewIdOfVisibleComments === x._id}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <div\r\n                    className=\"py-2 text-light\"\r\n                    style={{ marginLeft: \"30px\" }}\r\n                  >\r\n                    Comments (\r\n                    {comments[x._id]\r\n                      ? Object.values(comments[x._id]).length\r\n                      : 0}\r\n                    )\r\n                  </div>\r\n                  {comments[x._id]\r\n                    ? renderComments(\r\n                        Object.values(comments[x._id])\r\n                          .filter((a) => a.notificationReceivers.length === 1)\r\n                          .map((b) => b._id),\r\n                        x\r\n                      )\r\n                    : \"\"}\r\n                  <div className=\"row no-gutters justify-content-end mt-2\">\r\n                    <div className=\"col-auto ml-4\">\r\n                      <Paigination\r\n                        count={Math.ceil(\r\n                          comments[x._id]\r\n                            ? comments[x._id].length / commentsPerPage\r\n                            : 1\r\n                        )}\r\n                        current={commentsPage}\r\n                        setCurrent={setCommentsPage}\r\n                        classNames={{\r\n                          notSelected: \"input-dark\",\r\n                          selected: \"input-dark-selected\",\r\n                        }}\r\n                      ></Paigination>\r\n                    </div>\r\n                  </div>\r\n                </Collapse>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        <ReplyToReview\r\n          refreshReviews={() => setRefreshReviews(!refreshReviews)}\r\n          setReviewIdOfVisibleComments={setReviewIdOfVisibleComments}\r\n          refreshComments={() => setRefreshComments(!refreshComments)}\r\n          setComments={setComments}\r\n          movie={{\r\n            id: review.movie_id,\r\n          }}\r\n          reviewAuthor={\r\n            publicUsers[review.author]\r\n              ? publicUsers[review.author]\r\n              : { display_name: \"\" }\r\n          }\r\n          review={review}\r\n          open={addReplyOpen}\r\n          onClose={() => setAddReplyOpen(false)}\r\n          user={user}\r\n        ></ReplyToReview>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    settings: state.settings,\r\n    ratings: state.ratings,\r\n    user: state.user,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(PopularReviews);\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport date from \"date-and-time\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport { MdThumbUp, MdChatBubble, MdFlag } from \"react-icons/md\";\r\nimport {\r\n  GetReviewComments,\r\n  GetRecentReviews,\r\n  LikeReview,\r\n  LikeComment,\r\n  ReportComment,\r\n  ReportReview,\r\n} from \"../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport Paigination from \"../utility/Paigination\";\r\nimport history from \"../../History\";\r\nimport ReplyToReview from \"./ReplyToReview\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport Popover from \"../utility/Popover\";\r\nimport OkIcon from \"../../images/OkIcon\";\r\n\r\nconst RecentReviews = ({ publicUsers, user, ratings }) => {\r\n  //comments object.Its property will be review id.\r\n  const [comments, setComments] = useState({});\r\n\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  const [reviewIdOfVisibleComments, setReviewIdOfVisibleComments] = useState(\r\n    -1\r\n  );\r\n\r\n  const [loadingComment, setLoadingComment] = useState(-1);\r\n  const [loadingReview, setLoadingReview] = useState(-1);\r\n  const [loadingReport, setLoadingReport] = useState(-1);\r\n\r\n  const page = 1;\r\n  const [commentsPage, setCommentsPage] = useState(1);\r\n\r\n  // reference to top of the reviews block to scroll into view after changing the page\r\n  const topOfReviewsBlock = useRef(null);\r\n\r\n  // boolean variable to display \"add review\" modal or not\r\n  const [addReplyOpen, setAddReplyOpen] = useState(false);\r\n\r\n  const [review, setReview] = useState({\r\n    movie_title: \"\",\r\n    movie_id: \"\",\r\n    movie_genres: \"\",\r\n    movie_release_date: \"\",\r\n    movie_poster: \"\",\r\n  });\r\n\r\n  //state to refresh comments after writing it\r\n  const [refreshComments, setRefreshComments] = useState(false);\r\n\r\n  //state to refresh reviews after writing it\r\n  const [refreshReviews, setRefreshReviews] = useState(false);\r\n\r\n  const commentsPerPage = 5;\r\n  const reviewsPerPage = 8;\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (reviewIdOfVisibleComments !== -1) {\r\n        let data = await GetReviewComments(reviewIdOfVisibleComments);\r\n        let commentsObj = {};\r\n        data.forEach((x) => {\r\n          commentsObj[x._id] = x;\r\n        });\r\n        setComments((prev) =>\r\n          Object.assign({}, prev, { [reviewIdOfVisibleComments]: commentsObj })\r\n        );\r\n      }\r\n    }\r\n    getData();\r\n  }, [reviewIdOfVisibleComments, refreshComments]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let res = await GetRecentReviews(10);\r\n      if (!res.error) {\r\n        setReviews(res);\r\n      }\r\n    }\r\n    getData();\r\n  }, [refreshReviews]);\r\n\r\n  const renderComments = (ids, review) => {\r\n    return ids.map((x, ind) => {\r\n      return comments[review._id][x] ? (\r\n        <React.Fragment>\r\n          <div\r\n            style={{\r\n              marginLeft: `${\r\n                comments[review._id][x].notificationReceivers.length * 60 - 30\r\n              }px`,\r\n            }}\r\n            key={`comment-${reviewIdOfVisibleComments}-${ind}`}\r\n            className={`row no-gutters p-4 bg-over-root-lighter rounded mb-2 indented-comment`}\r\n          >\r\n            <div className=\"col-auto pr-4 d-none d-md-block\">\r\n              <div\r\n                className=\"bg-image rounded-circle square-70\"\r\n                style={{\r\n                  backgroundImage: `url(${\r\n                    publicUsers[comments[review._id][x].author]\r\n                      ? publicUsers[comments[review._id][x].author].photo\r\n                      : \"\"\r\n                  })`,\r\n                }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"row no-gutters justify-content-between align-items-center mb-2\">\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters\">\r\n                    <div className=\"col-auto pr-2 d-block d-md-none\">\r\n                      <div\r\n                        className=\"bg-image rounded-circle square-40\"\r\n                        style={{\r\n                          backgroundImage: `url(${\r\n                            publicUsers[comments[review._id][x].author]\r\n                              ? publicUsers[comments[review._id][x].author]\r\n                                  .photo\r\n                              : \"\"\r\n                          })`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"col-auto mr-3 text-title-md mb-0\">\r\n                      {publicUsers[comments[review._id][x].author]\r\n                        ? publicUsers[comments[review._id][x].author]\r\n                            .display_name\r\n                        : \"\"}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters align-items-center\">\r\n                    <div className=\"col-auto\">\r\n                      <div className=\"row no-gutters align-items-center\">\r\n                        <div className=\"col-auto mr-2\">Commented on</div>\r\n                        <div className=\"col-auto mr-3 text-muted\">\r\n                          {date.format(\r\n                            new Date(comments[review._id][x].date),\r\n                            \"MMM DD, YYYY\"\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <Popover\r\n                      arrow={false}\r\n                      position=\"top\"\r\n                      trigger=\"mouseenter\"\r\n                      theme=\"dark\"\r\n                      content={(w) => (\r\n                        <div className=\"py-2 px-3 rounded bg-over-root\">\r\n                          Report Abuse\r\n                        </div>\r\n                      )}\r\n                    >\r\n                      <div\r\n                        className=\"col-auto text-muted btn-tertiary-small d-flex flex-center\"\r\n                        onClick={async () => {\r\n                          if (user.token) {\r\n                            setLoadingReport(x);\r\n                            let res = await ReportComment(user, x);\r\n                            setLoadingReport(-1);\r\n                            if (res.error) {\r\n                              store.dispatch({\r\n                                type: \"SET_NOTIFICATION\",\r\n                                notification: {\r\n                                  title: \"Error\",\r\n                                  message: res.error,\r\n                                  type: \"failure\",\r\n                                },\r\n                              });\r\n                            } else {\r\n                              store.dispatch({\r\n                                type: \"SET_NOTIFICATION\",\r\n                                notification: {\r\n                                  title: \"Comment reported\",\r\n                                  message:\r\n                                    \"Comment was successfully reported. We will review it soon.\",\r\n                                  type: \"success\",\r\n                                },\r\n                              });\r\n                            }\r\n                          } else {\r\n                            store.dispatch({\r\n                              type: \"SET_NOTIFICATION\",\r\n                              notification: {\r\n                                title: \"Login required\",\r\n                                message: \"You need to login to report comment\",\r\n                                type: \"failure\",\r\n                              },\r\n                            });\r\n                          }\r\n                        }}\r\n                      >\r\n                        {loadingReport === x ? (\r\n                          <div className=\"square-20\">\r\n                            <Loader\r\n                              color={\"white\"}\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                left: \"10px\",\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                margin: \"auto\",\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                              }}\r\n                              loading={true}\r\n                              size={20}\r\n                            ></Loader>\r\n                          </div>\r\n                        ) : (\r\n                          <MdFlag fontSize=\"24px\"></MdFlag>\r\n                        )}\r\n                      </div>\r\n                    </Popover>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row no-gutters text-light mb-3 font-weight-300 text-break\">\r\n                {comments[review._id][x].comment}\r\n              </div>\r\n              <div className=\"row no-gutters justify-content-end align-items-center\">\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters align-items-center\">\r\n                    <div className=\"col-auto mr-2\">\r\n                      {comments[review._id][x].likes.length}\r\n                    </div>\r\n                    <div className=\"col-auto mr-2 \">\r\n                      {loadingComment === ind ? (\r\n                        <div className=\"square-20\">\r\n                          <Loader\r\n                            color={\"white\"}\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              left: \"10px\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                            loading={loadingComment === ind}\r\n                            size={20}\r\n                          ></Loader>\r\n                        </div>\r\n                      ) : (\r\n                        <MdThumbUp\r\n                          onClick={async () => {\r\n                            if (user.token) {\r\n                              if (user._id !== comments[review._id][x].author) {\r\n                                setLoadingComment(ind);\r\n                                let res = await LikeComment(user, x);\r\n                                setLoadingComment(-1);\r\n                                if (res.error) {\r\n                                  store.dispatch({\r\n                                    type: \"SET_NOTIFICATION\",\r\n                                    notification: {\r\n                                      title: \"Error\",\r\n                                      message: res.error,\r\n                                      type: \"failure\",\r\n                                    },\r\n                                  });\r\n                                } else {\r\n                                  setRefreshComments(!refreshComments);\r\n                                }\r\n                              } else {\r\n                                store.dispatch({\r\n                                  type: \"SET_NOTIFICATION\",\r\n                                  notification: {\r\n                                    title: \"Action not allowed\",\r\n                                    message:\r\n                                      \"You can not like your own comment\",\r\n                                    type: \"failure\",\r\n                                  },\r\n                                });\r\n                              }\r\n                            } else {\r\n                              store.dispatch({\r\n                                type: \"SET_NOTIFICATION\",\r\n                                notification: {\r\n                                  title: \"Login required\",\r\n                                  message: \"You need to login to like review\",\r\n                                  type: \"failure\",\r\n                                },\r\n                              });\r\n                            }\r\n                          }}\r\n                          fontSize=\"24px\"\r\n                          className=\"text-green scale-transition cursor-pointer\"\r\n                        ></MdThumbUp>\r\n                      )}\r\n                    </div>\r\n                    <div\r\n                      className=\"col-auto text-orange btn-tertiary\"\r\n                      onClick={() => {\r\n                        if (!user.token) {\r\n                          store.dispatch({\r\n                            type: \"SET_NOTIFICATION\",\r\n                            notification: {\r\n                              title: \"Login required\",\r\n                              message: \"You need to login to write review.\",\r\n                              type: \"failure\",\r\n                            },\r\n                          });\r\n                        } else {\r\n                          setReview(\r\n                            Object.assign({}, review, {\r\n                              comment_id: x,\r\n                              notificationReceivers: comments[review._id][\r\n                                x\r\n                              ].notificationReceivers.concat([\r\n                                publicUsers[comments[review._id][x].author],\r\n                              ]),\r\n                            })\r\n                          );\r\n                          setAddReplyOpen(true);\r\n                        }\r\n                      }}\r\n                    >\r\n                      Reply\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {renderComments(comments[review._id][x].comments, review)}\r\n        </React.Fragment>\r\n      ) : (\r\n        \"\"\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"row no-gutters justify-content-center text-white\">\r\n      <div className=\"col-60 content-container py-3 px-md-5 px-4\">\r\n        <div className=\"row no-gutters h5\">\r\n          <div\r\n            className=\"col-auto\"\r\n            style={{\r\n              padding: \"6px 30px 6px 0px\",\r\n              background: \"linear-gradient(to left, #ff0037, transparent)\",\r\n              borderRadius: \"0 4px 4px 0\",\r\n            }}\r\n          >\r\n            Recent Reviews\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters text-light mb-3\">\r\n          Most recent reviews in days\r\n        </div>\r\n        <div className=\"row no-gutters mb-2\" ref={topOfReviewsBlock}></div>\r\n        {reviews\r\n          .slice(\r\n            (page - 1) * reviewsPerPage,\r\n            (page - 1) * reviewsPerPage + reviewsPerPage\r\n          )\r\n          .map((x, i) => (\r\n            <React.Fragment key={`fragment-review-${i}`}>\r\n              <div\r\n                key={`review-${i}`}\r\n                className=\"row no-gutters p-4 bg-over-root-lighter rounded mb-2\"\r\n              >\r\n                <div\r\n                  className=\"col-sm-auto col-20 pr-4 d-none d-sm-block\"\r\n                  style={{ maxWidth: \"150px\" }}\r\n                >\r\n                  <div className=\"row no-gutters mb-1\">\r\n                    <img\r\n                      alt={`poster-of-${x.movie_id}`}\r\n                      onClick={() => history.push(`/movie/${x.movie_id}`)}\r\n                      width=\"100%\"\r\n                      style={{ borderRadius: \"13px\", cursor: \"pointer\" }}\r\n                      src={`https://image.tmdb.org/t/p/w154${\r\n                        ratings[x.movie_id]\r\n                          ? ratings[x.movie_id].movie_poster\r\n                          : \"https://critics.io/img/movies/poster-placeholder.png\"\r\n                      }`}\r\n                    ></img>\r\n                  </div>\r\n                  {/* <div className=\"row no-gutters text-white h6 mb-0\">\r\n                    {x.movie_title} ({x.movie_release_date.substring(0, 4)})\r\n                  </div>\r\n                  <div className=\"row no-gutters text-muted\">\r\n                    <div className=\"text-truncate\">{x.movie_genres}</div>\r\n                  </div> */}\r\n                </div>\r\n                <div className=\"col d-flex flex-column\">\r\n                  <div className=\"row no-gutters justify-content-between align-items-center mb-2 flex-grow-0\">\r\n                    <div className=\"col-60 d-block d-sm-none mb-3\">\r\n                      <div className=\"row no-gutters mb-1\">\r\n                        <div className=\"col-auto pr-3\">\r\n                          <div\r\n                            className=\"square-70 rounded bg-image\"\r\n                            style={{\r\n                              backgroundImage: `url(https://image.tmdb.org/t/p/w154${\r\n                                ratings[x.movie_id]\r\n                                  ? ratings[x.movie_id].movie_poster\r\n                                  : \"https://critics.io/img/movies/poster-placeholder.png\"\r\n                              })`,\r\n                            }}\r\n                          ></div>\r\n                          {/* <img\r\n                            onClick={() => history.push(`/movie/${x.id}`)}\r\n                            width=\"100%\"\r\n                            style={{ borderRadius: \"13px\" }}\r\n                            src={`https://image.tmdb.org/t/p/w154${x.movie_poster}`}\r\n                          ></img> */}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                          <div className=\"row no-gutters text-white mb-0\">\r\n                            {ratings[x.movie_id]\r\n                              ? ratings[x.movie_id].movie_title\r\n                              : \"\"}{\" \"}\r\n                            (\r\n                            {ratings[x.movie_id]\r\n                              ? ratings[\r\n                                  x.movie_id\r\n                                ].movie_release_date.substring(0, 4)\r\n                              : \"\"}\r\n                            )\r\n                          </div>\r\n                          {/* <div className=\"row no-gutters text-muted\">\r\n                            <div className=\"text-truncate\">\r\n                              {x.movie_genres}\r\n                            </div>\r\n                          </div> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-60\">\r\n                      <div className=\"row no-gutters justify-content-between\">\r\n                        <div className=\"col-auto mb-2\">\r\n                          <div className=\"row no-gutters align-items-center\">\r\n                            <div className=\"col-auto pr-2\">\r\n                              <div\r\n                                className=\"bg-image rounded-circle square-40\"\r\n                                style={{\r\n                                  backgroundImage: `url(${\r\n                                    publicUsers[x.author]\r\n                                      ? publicUsers[x.author].photo\r\n                                      : \"\"\r\n                                  })`,\r\n                                }}\r\n                              ></div>\r\n                            </div>\r\n                            <div className=\"col-auto\">\r\n                              <div className=\"row no-gutters align-items-center text-white\">\r\n                                <div className=\"col-auto mr-3 mb-0\">\r\n                                  {publicUsers[x.author]\r\n                                    ? publicUsers[x.author].display_name\r\n                                    : \"\"}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                          <div className=\"row no-gutters text-white align-items-center\">\r\n                            <span className=\"mr-2 col-auto\">Posted on</span>\r\n                            <span className=\"text-muted col-auto mr-2\">\r\n                              {date.format(new Date(x.date), \"MMM DD, YYYY\")}\r\n                            </span>\r\n                            <Popover\r\n                              arrow={false}\r\n                              position=\"top\"\r\n                              trigger=\"mouseenter\"\r\n                              theme=\"dark\"\r\n                              content={(w) => (\r\n                                <div className=\"py-2 px-3 rounded bg-root\">\r\n                                  Report Abuse\r\n                                </div>\r\n                              )}\r\n                            >\r\n                              <div\r\n                                className=\"col-auto text-muted btn-tertiary-small d-flex flex-center\"\r\n                                onClick={async () => {\r\n                                  if (user.token) {\r\n                                    setLoadingReport(x._id);\r\n                                    let res = await ReportReview(user, x._id);\r\n                                    setLoadingReport(-1);\r\n                                    if (res.error) {\r\n                                      store.dispatch({\r\n                                        type: \"SET_NOTIFICATION\",\r\n                                        notification: {\r\n                                          title: \"Error\",\r\n                                          message: res.error,\r\n                                          type: \"failure\",\r\n                                        },\r\n                                      });\r\n                                    } else {\r\n                                      store.dispatch({\r\n                                        type: \"SET_NOTIFICATION\",\r\n                                        notification: {\r\n                                          title: \"Review reported\",\r\n                                          message:\r\n                                            \"Review was successfully reported. We will review it soon.\",\r\n                                          type: \"success\",\r\n                                        },\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    store.dispatch({\r\n                                      type: \"SET_NOTIFICATION\",\r\n                                      notification: {\r\n                                        title: \"Login required\",\r\n                                        message:\r\n                                          \"You need to login to report review\",\r\n                                        type: \"failure\",\r\n                                      },\r\n                                    });\r\n                                  }\r\n                                }}\r\n                              >\r\n                                {loadingReport === x._id ? (\r\n                                  <div className=\"square-20\">\r\n                                    <Loader\r\n                                      color={\"white\"}\r\n                                      style={{\r\n                                        position: \"absolute\",\r\n                                        left: \"10px\",\r\n                                        top: 0,\r\n                                        bottom: 0,\r\n                                        margin: \"auto\",\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                      }}\r\n                                      loading={true}\r\n                                      size={20}\r\n                                    ></Loader>\r\n                                  </div>\r\n                                ) : (\r\n                                  <MdFlag fontSize=\"24px\"></MdFlag>\r\n                                )}\r\n                              </div>\r\n                            </Popover>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row no-gutters text-light mb-3 font-size-14 flex-grow-0 font-weight-300 text-break\">\r\n                    {x.review}\r\n                  </div>\r\n\r\n                  <div className=\"row no-gutters flex-grow-1 align-items-bottom\">\r\n                    <div className=\"col-60 d-flex flex-column justify-content-end\">\r\n                      <div className=\"row no-gutters justify-content-between align-items-center text-white\">\r\n                        <div className=\"col-auto\">\r\n                          <div className=\"row no-gutters\">\r\n                            {x.rating ? (\r\n                              x.rating === \"ok_rate\" ? (\r\n                                <OkIcon size={24}></OkIcon>\r\n                              ) : (\r\n                                <div style={{ marginBottom: \"-6px\" }}>\r\n                                  <Emoji\r\n                                    emoji={\r\n                                      x.rating === \"excellent_rate\"\r\n                                        ? \"fire\"\r\n                                        : x.rating === \"good_rate\"\r\n                                        ? \"heart\"\r\n                                        : x.rating === \"ok_rate\"\r\n                                        ? \"heavy-division-sign\"\r\n                                        : \"shit\"\r\n                                    }\r\n                                    set=\"facebook\"\r\n                                    size={24}\r\n                                  />\r\n                                </div>\r\n                              )\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-auto px-0\">\r\n                          <div className=\"row no-gutters align-items-center\">\r\n                            <div className=\"col-auto mr-2\">\r\n                              {x.likes.length}\r\n                            </div>\r\n                            <div className=\"col-auto mr-2 \">\r\n                              {loadingReview === i ? (\r\n                                <div className=\"square-20\">\r\n                                  <Loader\r\n                                    color={\"white\"}\r\n                                    style={{\r\n                                      position: \"absolute\",\r\n                                      left: \"10px\",\r\n                                      top: 0,\r\n                                      bottom: 0,\r\n                                      margin: \"auto\",\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                    loading={loadingReview === i}\r\n                                    size={20}\r\n                                  ></Loader>\r\n                                </div>\r\n                              ) : (\r\n                                <MdThumbUp\r\n                                  onClick={async () => {\r\n                                    if (user.token) {\r\n                                      if (user._id !== x.author) {\r\n                                        setLoadingReview(i);\r\n                                        let res = await LikeReview(user, x._id);\r\n                                        setLoadingReview(-1);\r\n                                        if (res.error) {\r\n                                          store.dispatch({\r\n                                            type: \"SET_NOTIFICATION\",\r\n                                            notification: {\r\n                                              title: \"Error\",\r\n                                              message: res.error,\r\n                                              type: \"failure\",\r\n                                            },\r\n                                          });\r\n                                        } else {\r\n                                          setRefreshReviews(!refreshReviews);\r\n                                        }\r\n                                      } else {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Action not allowed\",\r\n                                            message:\r\n                                              \"You can not like your own review\",\r\n                                            type: \"failure\",\r\n                                          },\r\n                                        });\r\n                                      }\r\n                                    } else {\r\n                                      store.dispatch({\r\n                                        type: \"SET_NOTIFICATION\",\r\n                                        notification: {\r\n                                          title: \"Login required\",\r\n                                          message:\r\n                                            \"You need to login to like review\",\r\n                                          type: \"failure\",\r\n                                        },\r\n                                      });\r\n                                    }\r\n                                  }}\r\n                                  fontSize=\"24px\"\r\n                                  className=\"text-green scale-transition cursor-pointer\"\r\n                                ></MdThumbUp>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"col-auto mr-2\">\r\n                              {x.comments.length}\r\n                            </div>\r\n                            <div className=\"col-auto mr-2\">\r\n                              <MdChatBubble\r\n                                onClick={() => {\r\n                                  setReviewIdOfVisibleComments(\r\n                                    reviewIdOfVisibleComments === x._id\r\n                                      ? -1\r\n                                      : x._id\r\n                                  );\r\n                                }}\r\n                                fontSize=\"24px\"\r\n                                className=\"text-orange scale-transition cursor-pointer\"\r\n                              ></MdChatBubble>\r\n                            </div>\r\n                            <div\r\n                              className=\"col-auto text-orange btn-tertiary\"\r\n                              onClick={() => {\r\n                                if (!user.token) {\r\n                                  store.dispatch({\r\n                                    type: \"SET_NOTIFICATION\",\r\n                                    notification: {\r\n                                      title: \"Login required\",\r\n                                      message:\r\n                                        \"You need to login to write review.\",\r\n                                      type: \"failure\",\r\n                                    },\r\n                                  });\r\n                                } else {\r\n                                  setReview(\r\n                                    Object.assign({}, x, {\r\n                                      notificationReceivers: [\r\n                                        publicUsers[x.author],\r\n                                      ],\r\n                                    })\r\n                                  );\r\n                                  setAddReplyOpen(true);\r\n                                }\r\n                              }}\r\n                            >\r\n                              Reply\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Collapse\r\n                in={reviewIdOfVisibleComments === x._id}\r\n                className=\"mb-3\"\r\n              >\r\n                <div className=\"py-2 text-light\" style={{ marginLeft: \"30px\" }}>\r\n                  Comments (\r\n                  {comments[x._id] ? Object.values(comments[x._id]).length : 0})\r\n                </div>\r\n                {comments[x._id]\r\n                  ? renderComments(\r\n                      Object.values(comments[x._id])\r\n                        .filter((a) => a.notificationReceivers.length === 1)\r\n                        .map((b) => b._id),\r\n                      x\r\n                    )\r\n                  : \"\"}\r\n                <div className=\"row no-gutters mt-2 justify-content-end\">\r\n                  <div className=\"col-auto ml-4\">\r\n                    <Paigination\r\n                      count={Math.ceil(\r\n                        comments[x._id]\r\n                          ? comments[x._id].length / commentsPerPage\r\n                          : 1\r\n                      )}\r\n                      current={commentsPage}\r\n                      setCurrent={setCommentsPage}\r\n                      classNames={{\r\n                        notSelected: \"input-dark\",\r\n                        selected: \"input-dark-selected\",\r\n                      }}\r\n                    ></Paigination>\r\n                  </div>\r\n                </div>\r\n              </Collapse>\r\n            </React.Fragment>\r\n          ))}\r\n        <ReplyToReview\r\n          refreshReviews={() => setRefreshReviews(!refreshReviews)}\r\n          setReviewIdOfVisibleComments={setReviewIdOfVisibleComments}\r\n          refreshComments={() => setRefreshComments(!refreshComments)}\r\n          setComments={setComments}\r\n          movie={{\r\n            id: review.movie_id,\r\n          }}\r\n          reviewAuthor={\r\n            publicUsers[review.author]\r\n              ? publicUsers[review.author]\r\n              : { display_name: \"\" }\r\n          }\r\n          review={review}\r\n          open={addReplyOpen}\r\n          onClose={() => setAddReplyOpen(false)}\r\n          user={user}\r\n        ></ReplyToReview>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    user: state.user,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(RecentReviews);\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport PopularMovies from \"./PopularMovies\";\r\nimport TrailerPlayer from \"./TrailerPlayer\";\r\nimport Modal from \"../utility/Modal\";\r\nimport ReactionButton from \"./ReactionButton\";\r\nimport { FormatDuration } from \"../../utilities/Functions\";\r\nimport { connect } from \"react-redux\";\r\nimport WishlistButton from \"./WishlistButton\";\r\nimport Recommendations from \"./Recommendations\";\r\nimport PopularReviews from \"./PopularReviews\";\r\nimport RecentReviews from \"./RecentReviews\";\r\nimport { GetRecommendations } from \"../../server/DatabaseApi\";\r\n\r\nconst GetClosestValidWidth = () => {\r\n  let backdropSizes = [300, 780, 1280];\r\n  let closestSize = 1280;\r\n  let minDifference = 1280;\r\n  backdropSizes.forEach((x) => {\r\n    let diff = Math.abs(window.innerWidth - x);\r\n    if (diff < minDifference) {\r\n      minDifference = diff;\r\n      closestSize = x;\r\n    }\r\n  });\r\n  return closestSize;\r\n};\r\n\r\nfunction useWindowSize() {\r\n  const [height, setHeight] = useState(0);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setHeight(window.innerHeight);\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n  return height;\r\n}\r\n\r\nconst Home = ({ publicUsers, ratings, user, settings, navbarHeight }) => {\r\n  const height = useWindowSize();\r\n  const [recommendedMovies, setRecommendedMovies] = useState([]);\r\n  const [openTrailer, setOpenTrailer] = useState(false);\r\n  const [backgroundMovie, setBackgroundMovie] = useState({\r\n    backdrop_path: \"\",\r\n    poster_path: \"\",\r\n    runtime: 0,\r\n    title: \"\",\r\n    overview: \"\",\r\n    id: \"\",\r\n    release_date: \"\",\r\n    genres: [],\r\n  });\r\n  const [trailerIsEmpty, setTrailerIsEmpty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      setBackgroundMovie(settings.current_bg_movie);\r\n      if (settings.movies_api_key) {\r\n        let res = await GetRecommendations(8);\r\n        if (!res.error) {\r\n          setRecommendedMovies(res);\r\n        }\r\n      }\r\n    }\r\n    getData();\r\n  }, [settings]);\r\n\r\n  return (\r\n    <div className=\"row no-gutters\" style={{ marginTop: `-${navbarHeight}px` }}>\r\n      <div className=\"col-60\">\r\n        <div\r\n          className=\"row no-gutters align-items-end position-relative overflow-hidden\"\r\n          style={{ height: height }}\r\n        >\r\n          <div\r\n            className=\"position-absolute w-100 h-100\"\r\n            style={{\r\n              top: 0,\r\n              left: 0,\r\n              zIndex: 2,\r\n              background: `linear-gradient(180deg, rgba(0, 0, 0, 0.3) 72%, black)`,\r\n            }}\r\n          ></div>\r\n          <Modal open={openTrailer} onClose={() => setOpenTrailer(false)}>\r\n            <TrailerPlayer\r\n              setIsEmpty={() => setTrailerIsEmpty(true)}\r\n              movieId={backgroundMovie.id}\r\n              onEnded={() => setOpenTrailer(false)}\r\n            ></TrailerPlayer>\r\n          </Modal>\r\n          <div\r\n            className=\"col-60 position-absolute\"\r\n            style={{\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              maxWidth: \"1200px\",\r\n              margin: \"auto\",\r\n            }}\r\n          >\r\n            <div className=\"position-relative\">\r\n              <img\r\n                alt={backgroundMovie.poster_path}\r\n                className=\"d-block d-lg-none\"\r\n                width=\"100%\"\r\n                src={`https://image.tmdb.org/t/p/w500${backgroundMovie.poster_path}`}\r\n              ></img>\r\n              <img\r\n                alt={backgroundMovie.poster_path}\r\n                className=\"d-none d-lg-block\"\r\n                width=\"100%\"\r\n                src={`https://image.tmdb.org/t/p/w${GetClosestValidWidth(\r\n                  \"backdrop\"\r\n                )}${backgroundMovie.backdrop_path}`}\r\n              ></img>\r\n              <div\r\n                className=\"position-absolute w-100 h-100\"\r\n                style={{\r\n                  background:\r\n                    \"linear-gradient(rgba(0, 0, 0, 0.3) 90%, black), linear-gradient(to right, black, transparent, black)\",\r\n                  top: 0,\r\n                  left: 0,\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"col-60 px-md-5 px-4 py-4 position-relative mx-auto content-container\"\r\n            style={{\r\n              zIndex: 5,\r\n            }}\r\n          >\r\n            <div className=\"row no-gutters justify-content-between position-relative\">\r\n              <div className=\"col-60 col-sm-40 col-lg-30 d-flex flex-column justify-content-end text-white\">\r\n                <div className=\"row no-gutters align-items-center\">\r\n                  <div className=\"col-auto mr-3\">\r\n                    <div\r\n                      className=\"row no-gutters mb-2 text-title-lg align-items-center\"\r\n                      style={{\r\n                        fontWeight: \"700\",\r\n                      }}\r\n                    >\r\n                      {backgroundMovie.title}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters align-items-center\">\r\n                      <ReactionButton\r\n                        selected={\r\n                          user.ratings[backgroundMovie.id]\r\n                            ? user.ratings[backgroundMovie.id].rate_type ===\r\n                              \"excellent_rate\"\r\n                            : false\r\n                        }\r\n                        movie={backgroundMovie}\r\n                        emoji=\"fire\"\r\n                        className=\"mr-2 mb-2\"\r\n                        value={\r\n                          ratings[backgroundMovie.id]\r\n                            ? ratings[backgroundMovie.id].excellent_rate\r\n                            : []\r\n                        }\r\n                      ></ReactionButton>\r\n                      <ReactionButton\r\n                        selected={\r\n                          user.ratings[backgroundMovie.id]\r\n                            ? user.ratings[backgroundMovie.id].rate_type ===\r\n                              \"good_rate\"\r\n                            : false\r\n                        }\r\n                        movie={backgroundMovie}\r\n                        emoji=\"heart\"\r\n                        className=\"mr-2 mb-2\"\r\n                        value={\r\n                          ratings[backgroundMovie.id]\r\n                            ? ratings[backgroundMovie.id].good_rate\r\n                            : []\r\n                        }\r\n                      ></ReactionButton>\r\n                      <ReactionButton\r\n                        selected={\r\n                          user.ratings[backgroundMovie.id]\r\n                            ? user.ratings[backgroundMovie.id].rate_type ===\r\n                              \"ok_rate\"\r\n                            : false\r\n                        }\r\n                        movie={backgroundMovie}\r\n                        className=\"mr-2 mb-2\"\r\n                        emoji=\"heavy_division_sign\"\r\n                        value={\r\n                          ratings[backgroundMovie.id]\r\n                            ? ratings[backgroundMovie.id].ok_rate\r\n                            : []\r\n                        }\r\n                      ></ReactionButton>\r\n                      <ReactionButton\r\n                        className=\"mb-2\"\r\n                        selected={\r\n                          user.ratings[backgroundMovie.id]\r\n                            ? user.ratings[backgroundMovie.id].rate_type ===\r\n                              \"bad_rate\"\r\n                            : false\r\n                        }\r\n                        movie={backgroundMovie}\r\n                        emoji=\"shit\"\r\n                        value={\r\n                          ratings[backgroundMovie.id]\r\n                            ? ratings[backgroundMovie.id].bad_rate\r\n                            : []\r\n                        }\r\n                      ></ReactionButton>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters text-light mb-4 font-weight-300 text-clamp-6\">\r\n                  {backgroundMovie.overview}\r\n                </div>\r\n                <div className=\"row no-gutters mb-md-5 mb-4\">\r\n                  <div className=\"col-auto mr-2 d-flex\">\r\n                    {backgroundMovie.release_date.substring(0, 4)}\r\n                    <strong className=\"px-3\">•</strong>\r\n                    <div>\r\n                      <div className=\"d-none d-md-block\">\r\n                        {backgroundMovie.genres\r\n                          .slice(0, 3)\r\n                          .map((x) => x.name)\r\n                          .join(\"/\")}\r\n                      </div>\r\n                      <div className=\"d-block d-md-none\">\r\n                        {backgroundMovie.genres\r\n                          .slice(0, 2)\r\n                          .map((x) => x.name)\r\n                          .join(\"/\")}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <strong className=\"px-3\">•</strong>\r\n                    {FormatDuration(backgroundMovie.runtime)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters mb-md-4 mb-2\">\r\n                  {!trailerIsEmpty ? (\r\n                    <div\r\n                      className=\"col-auto mr-3 btn-custom btn-custom-primary btn-small\"\r\n                      onClick={() => setOpenTrailer(true)}\r\n                    >\r\n                      Play Trailer\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  <WishlistButton\r\n                    movie={backgroundMovie}\r\n                    user={user}\r\n                  ></WishlistButton>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-23 d-none d-lg-block\">\r\n                <div\r\n                  className=\"row no-gutters h5 text-white\"\r\n                  style={{\r\n                    padding: \"6px 10px\",\r\n                    background:\r\n                      \"linear-gradient(to right, #ff0037, transparent)\",\r\n                    borderRadius: \"4px 0 0 4px\",\r\n                    // marginLeft: \"10px\",\r\n                    marginBottom: \"11px\",\r\n                  }}\r\n                >\r\n                  Today's Recommendation\r\n                </div>\r\n                <Recommendations\r\n                  movies={recommendedMovies}\r\n                  user={user}\r\n                  ratings={ratings}\r\n                ></Recommendations>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters d-flex d-lg-none\">\r\n          <div className=\" col-60 py-4 px-md-5 px-4 content-container\">\r\n            <div className=\"row no-gutters justify-content-end\">\r\n              <div className=\"col-60\">\r\n                <div\r\n                  className=\"row no-gutters h5 text-white\"\r\n                  style={{\r\n                    padding: \"6px 10px\",\r\n                    background:\r\n                      \"linear-gradient(to right, #ff0037, transparent)\",\r\n                    borderRadius: \"4px 0 0 4px\",\r\n                    // marginLeft: \"10px\",\r\n                    marginBottom: \"18px\",\r\n                  }}\r\n                >\r\n                  Todays's Recommendation\r\n                </div>\r\n                <Recommendations\r\n                  movies={recommendedMovies}\r\n                  user={user}\r\n                  ratings={ratings}\r\n                ></Recommendations>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <PopularMovies apiKey={settings.movies_api_key}></PopularMovies>\r\n        <PopularReviews></PopularReviews>\r\n        <RecentReviews></RecentReviews>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUser: state.publicUsers,\r\n    ratings: state.ratings,\r\n    settings: state.settings,\r\n    user: state.user,\r\n    navbarHeight: state.navbarHeight,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Home);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"../utility/Modal\";\r\nimport { EditComment as editFn } from \"../../server/DatabaseApi\";\r\nimport Loader from \"../utility/Loader\";\r\nimport store from \"../../store/store\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst EditComment = ({\r\n  open,\r\n  onClose,\r\n  user,\r\n  comment,\r\n  refreshComments,\r\n  settings,\r\n}) => {\r\n  const [newComment, setNewComment] = useState({ comment: \"\" });\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (comment) {\r\n      setNewComment((prev) => Object.assign({}, prev, comment));\r\n    }\r\n  }, [comment]);\r\n\r\n  return (\r\n    <Modal open={open} onClose={onClose}>\r\n      <div className=\"col-xl-42 p-4 bg-over-root-lighter rounded mx-4\">\r\n        <div className=\"row no-gutters h5 mb-4\">Edit comment</div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-auto pr-3 d-none d-md-block\">\r\n            <div\r\n              className=\"square-70 rounded-circle bg-image\"\r\n              style={{ backgroundImage: `url(${user.photo})` }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"row no-gutters d-flex d-md-none justify-content-between mb-3\">\r\n              <div className=\"col-auto pr-3\">\r\n                <div\r\n                  className=\"square-70 rounded-circle bg-image\"\r\n                  style={{ backgroundImage: `url(${user.photo})` }}\r\n                ></div>\r\n              </div>\r\n              <div\r\n                className={`col-auto d-flex align-items-end ${\r\n                  newComment.comment.length <=\r\n                  settings.no_comment_characters - 1\r\n                    ? \"text-muted\"\r\n                    : \"text-danger\"\r\n                }`}\r\n              >\r\n                {newComment.comment\r\n                  ? settings.no_comment_characters - newComment.comment.length\r\n                  : settings.no_comment_characters}{\" \"}\r\n                characters left\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters mb-2\" style={{ height: \"150px\" }}>\r\n              <textarea\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  let text = e.target.value;\r\n                  if (text.length <= settings.no_comment_characters) {\r\n                    setNewComment((prev) =>\r\n                      Object.assign({}, prev, { comment: text })\r\n                    );\r\n                  }\r\n                }}\r\n                value={newComment.comment}\r\n                spellCheck={false}\r\n                placeholder=\"Add your comment...\"\r\n                style={{ resize: \"none\" }}\r\n                className=\"w-100 h-100 textarea\"\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-md-end justify-content-center\">\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters justify-content-end\">\r\n                  <div\r\n                    className={`col-auto d-none d-md-block ${\r\n                      newComment.comment.length <=\r\n                      settings.no_comment_characters - 1\r\n                        ? \"text-muted\"\r\n                        : \"text-danger\"\r\n                    }`}\r\n                  >\r\n                    {newComment.comment\r\n                      ? settings.no_comment_characters -\r\n                        newComment.comment.length\r\n                      : settings.no_comment_characters}{\" \"}\r\n                    characters left\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div\r\n                  className=\"row no-gutters align-items-center text-danger justify-content-end\"\r\n                  style={{ height: \"30px\", opacity: problem ? 1 : 0 }}\r\n                >\r\n                  {problem}\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"btn-custom btn-custom-primary btn-small\"\r\n                onClick={async () => {\r\n                  if (!newComment.comment) {\r\n                    setProblem(\"Type comment\");\r\n                  } else {\r\n                    if (user.token) {\r\n                      setLoading(true);\r\n                      let res = await editFn(newComment, comment._id);\r\n                      setLoading(false);\r\n                      if (res.error) {\r\n                        store.dispatch({\r\n                          type: \"SET_NOTIFICATION\",\r\n                          notification: {\r\n                            title: \"Couldn't edit your comment\",\r\n                            type: \"failure\",\r\n                            message: res.error,\r\n                          },\r\n                        });\r\n                      } else {\r\n                        store.dispatch({\r\n                          type: \"SET_NOTIFICATION\",\r\n                          notification: {\r\n                            title: \"You successfully edited comment\",\r\n                            type: \"success\",\r\n                            message: \"Your comment successfully edited\",\r\n                          },\r\n                        });\r\n                        onClose();\r\n                        refreshComments();\r\n                      }\r\n                    } else {\r\n                      setProblem(\"You need to login to write comment\");\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <Loader\r\n                  color={\"white\"}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    left: \"10px\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    margin: \"auto\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                  loading={loading}\r\n                  size={20}\r\n                ></Loader>\r\n                Submit\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    settings: state.settings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(EditComment);\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport date from \"date-and-time\";\r\nimport { nFormatter } from \"../../utilities/Functions\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport { MdThumbUp, MdChatBubble, MdFlag } from \"react-icons/md\";\r\nimport { BsPencil, BsTrash } from \"react-icons/bs\";\r\nimport ReplyToReview from \"./ReplyToReview\";\r\nimport AddReview from \"./AddReview\";\r\nimport {\r\n  GetMovieReviews,\r\n  GetMoviePromotedReviews,\r\n  GetReviewComments,\r\n  LikeReview,\r\n  LikeComment,\r\n  ReportReview,\r\n  DeleteReview,\r\n  ReportComment,\r\n  DeleteComment,\r\n} from \"../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport Paigination from \"../utility/Paigination\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport Popover from \"../utility/Popover\";\r\nimport OkIcon from \"../../images/OkIcon\";\r\nimport EditComment from \"./EditComment\";\r\n\r\nconst MovieReviews = ({\r\n  movie,\r\n  user,\r\n  publicUsers,\r\n  refreshReviewsFromParent,\r\n  seekReviewId,\r\n  seekCommentId,\r\n  ratings,\r\n}) => {\r\n  // local reviews object in order to be able to update it quickly instead of waiting for real changes in database\r\n  const [reviews, setReviews] = useState([]);\r\n  const [promotedReviews, setPromotedReviews] = useState([]);\r\n\r\n  const [loadingComment, setLoadingComment] = useState(-1);\r\n  const [loadingReview, setLoadingReview] = useState(-1);\r\n  const [loadingReport, setLoadingReport] = useState(-1);\r\n  const [deletingComment, setDeletingComment] = useState(-1);\r\n  const [deletingReview, setDeletingReview] = useState(-1);\r\n  const [userIsOwnerOfReview, setUserIsOwnerOfReview] = useState(false);\r\n\r\n  //admin can edit review and rating in promotions section. So promotions have edited content.\r\n  const [promotedContents, setPromotedContents] = useState({});\r\n\r\n  //comments object.Its property will be review id.\r\n  const [comments, setComments] = useState({});\r\n  const [comment, setComment] = useState(false);\r\n\r\n  //\r\n  const [reviewIdOfVisibleComments, setReviewIdOfVisibleComments] = useState(\r\n    seekCommentId ? seekReviewId : -1\r\n  );\r\n\r\n  // partitioning reviews into pages (8 reviews per page)\r\n  const [page, setPage] = useState(-1);\r\n  const [commentsPage, setCommentsPage] = useState(1);\r\n\r\n  // reference to top of the reviews block to scroll into view after changing the page\r\n  const topOfReviewsBlock = useRef(null);\r\n\r\n  // boolean variable to display \"add review\" modal or not\r\n  const [addReviewOpen, setAddReviewOpen] = useState(false);\r\n  const [replyOpen, setReplyOpen] = useState(false);\r\n  const [editCommentOpen, setEditCommentOpen] = useState(false);\r\n\r\n  // boolean variable to display \"add review\" modal or not\r\n  const [review, setReview] = useState(\"\");\r\n\r\n  //state to refresh comments after writing it\r\n  const [refreshComments, setRefreshComments] = useState(false);\r\n\r\n  //state to refresh reviews after writing it\r\n  const [refreshReviews, setRefreshReviews] = useState(false);\r\n\r\n  const commentsPerPage = 5;\r\n  const reviewsPerPage = 8;\r\n\r\n  const [scrolledOnce, setScrolledOnce] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (reviewIdOfVisibleComments !== -1) {\r\n        let data = await GetReviewComments(reviewIdOfVisibleComments);\r\n        let commentsObj = {};\r\n        data.forEach((x) => {\r\n          commentsObj[x._id] = x;\r\n        });\r\n        setComments((prev) =>\r\n          Object.assign({}, prev, { [reviewIdOfVisibleComments]: commentsObj })\r\n        );\r\n      }\r\n    }\r\n    getData();\r\n  }, [reviewIdOfVisibleComments, refreshComments]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (movie.id) {\r\n        let promoted = await GetMoviePromotedReviews(movie.id);\r\n        let promotedContentIds = [];\r\n        let promoContents = {};\r\n        if (!promoted.error) {\r\n          promoted.forEach((x) => {\r\n            promotedContentIds.push(x.content_id);\r\n            promoContents[x.content_id] = x;\r\n          });\r\n        }\r\n        setPromotedContents(promoContents);\r\n        let data = await GetMovieReviews(movie.id);\r\n        if (!data.error) {\r\n          let promReviews = [],\r\n            notPromotedReviews = [];\r\n          data.reverse().forEach((x) => {\r\n            if (x._id === seekReviewId) {\r\n              promReviews.unshift(x);\r\n            } else if (promotedContentIds.includes(x._id)) {\r\n              x.promoted = true;\r\n              promReviews.push(x);\r\n            } else {\r\n              notPromotedReviews.push(x);\r\n            }\r\n          });\r\n          setPromotedReviews(promReviews);\r\n          setReviews(notPromotedReviews);\r\n        }\r\n      }\r\n    }\r\n    getData();\r\n  }, [movie, refreshReviews, refreshReviewsFromParent]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const renderComments = (ids, review) => {\r\n    return ids.map((x, ind) => {\r\n      return comments[review._id][x] ? (\r\n        <React.Fragment\r\n          key={`comment-fragment-${reviewIdOfVisibleComments}-${ind}`}\r\n        >\r\n          <div\r\n            ref={(el) => {\r\n              if (x === seekCommentId && el && !scrolledOnce) {\r\n                setScrolledOnce(true);\r\n                el.scrollIntoView({ behavior: \"smooth\" });\r\n                // reviewToSeek.current = el;\r\n              }\r\n            }}\r\n            style={{\r\n              marginLeft: `${\r\n                comments[review._id][x].notificationReceivers.length * 60 - 30\r\n              }px`,\r\n            }}\r\n            key={`comment-${reviewIdOfVisibleComments}-${ind}`}\r\n            className={`indented-comment row no-gutters p-4 bg-over-root-lighter rounded mb-2${\r\n              x === seekCommentId ? \" fading-shadow\" : \"\"\r\n            }`}\r\n          >\r\n            <div className=\"col-auto pr-4 d-none d-md-block\">\r\n              <div\r\n                className=\"bg-image rounded-circle square-70\"\r\n                style={{\r\n                  backgroundImage: `url(${\r\n                    publicUsers[comments[review._id][x].author]\r\n                      ? publicUsers[comments[review._id][x].author].photo\r\n                      : \"\"\r\n                  })`,\r\n                }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"row no-gutters justify-content-between align-items-center mb-2\">\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters\">\r\n                    <div className=\"col-auto pr-2 d-block d-md-none\">\r\n                      <div\r\n                        className=\"bg-image rounded-circle square-40\"\r\n                        style={{\r\n                          backgroundImage: `url(${\r\n                            publicUsers[comments[review._id][x].author]\r\n                              ? publicUsers[comments[review._id][x].author]\r\n                                  .photo\r\n                              : \"\"\r\n                          })`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                      <div className=\"row no-gutters align-items-center\">\r\n                        <div className=\"col-auto mr-3 text-title-md mb-0\">\r\n                          {publicUsers[comments[review._id][x].author]\r\n                            ? publicUsers[comments[review._id][x].author]\r\n                                .display_name\r\n                            : \"\"}\r\n                        </div>\r\n                        <div className=\"col-auto mr-3 text-muted\">\r\n                          {date.format(\r\n                            new Date(comments[review._id][x].date),\r\n                            \"MMM DD, YYYY\"\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {user._id === comments[review._id][x].author ? (\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Popover\r\n                        arrow={false}\r\n                        position=\"top\"\r\n                        trigger=\"mouseenter\"\r\n                        theme=\"dark\"\r\n                        content={(w) => (\r\n                          <div className=\"py-2 px-3 rounded bg-root\">\r\n                            Edit comment\r\n                          </div>\r\n                        )}\r\n                      >\r\n                        <div\r\n                          className=\"col-auto text-muted btn-tertiary-small d-flex flex-center\"\r\n                          onClick={async () => {\r\n                            setComment(comments[review._id][x]);\r\n                            setEditCommentOpen(true);\r\n                          }}\r\n                        >\r\n                          <BsPencil fontSize=\"24px\"></BsPencil>\r\n                        </div>\r\n                      </Popover>\r\n                      <Popover\r\n                        arrow={false}\r\n                        position=\"top\"\r\n                        trigger=\"mouseenter\"\r\n                        theme=\"dark\"\r\n                        content={(w) => (\r\n                          <div className=\"py-2 px-3 rounded bg-root\">\r\n                            Delete comment\r\n                          </div>\r\n                        )}\r\n                      >\r\n                        <div\r\n                          className=\"col-auto text-muted btn-tertiary-small d-flex flex-center\"\r\n                          onClick={async () => {\r\n                            setDeletingComment(comments[review._id][x]._id);\r\n                            let res = await DeleteComment(\r\n                              comments[review._id][x]._id\r\n                            );\r\n                            setDeletingComment(-1);\r\n                            if (res.error) {\r\n                              store.dispatch({\r\n                                type: \"SET_NOTIFICATION\",\r\n                                notification: {\r\n                                  title: `Couldn't delete comment`,\r\n                                  type: \"failure\",\r\n                                  message: res.error,\r\n                                },\r\n                              });\r\n                            } else {\r\n                              store.dispatch({\r\n                                type: \"SET_NOTIFICATION\",\r\n                                notification: {\r\n                                  title: `Success`,\r\n                                  type: \"success\",\r\n                                  message: \"Comment successfully deleted\",\r\n                                },\r\n                              });\r\n                              setRefreshComments(!refreshComments);\r\n                              setRefreshReviews(!refreshReviews);\r\n                            }\r\n                          }}\r\n                        >\r\n                          {deletingComment === comments[review._id][x]._id ? (\r\n                            <div className=\"square-20\">\r\n                              <Loader\r\n                                color={\"white\"}\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  left: \"10px\",\r\n                                  top: 0,\r\n                                  bottom: 0,\r\n                                  margin: \"auto\",\r\n                                  display: \"flex\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                                loading={true}\r\n                                size={20}\r\n                              ></Loader>\r\n                            </div>\r\n                          ) : (\r\n                            <BsTrash fontSize=\"24px\"></BsTrash>\r\n                          )}\r\n                        </div>\r\n                      </Popover>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <Popover\r\n                    arrow={false}\r\n                    position=\"top\"\r\n                    trigger=\"mouseenter\"\r\n                    theme=\"dark\"\r\n                    content={(w) => (\r\n                      <div className=\"py-2 px-3 rounded bg-root\">\r\n                        Report Abuse\r\n                      </div>\r\n                    )}\r\n                  >\r\n                    <div\r\n                      className=\"col-auto text-muted btn-tertiary-small d-flex flex-center\"\r\n                      onClick={async () => {\r\n                        if (user.token) {\r\n                          setLoadingReport(x);\r\n                          let res = await ReportComment(user, x);\r\n                          setLoadingReport(-1);\r\n                          if (res.error) {\r\n                            store.dispatch({\r\n                              type: \"SET_NOTIFICATION\",\r\n                              notification: {\r\n                                title: \"Error\",\r\n                                message: res.error,\r\n                                type: \"failure\",\r\n                              },\r\n                            });\r\n                          } else {\r\n                            store.dispatch({\r\n                              type: \"SET_NOTIFICATION\",\r\n                              notification: {\r\n                                title: \"Comment reported\",\r\n                                message:\r\n                                  \"Comment was successfully reported. We will review it soon.\",\r\n                                type: \"success\",\r\n                              },\r\n                            });\r\n                          }\r\n                        } else {\r\n                          store.dispatch({\r\n                            type: \"SET_NOTIFICATION\",\r\n                            notification: {\r\n                              title: \"Login required\",\r\n                              message: \"You need to login to report comment\",\r\n                              type: \"failure\",\r\n                            },\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      {loadingReport === x ? (\r\n                        <div className=\"square-20\">\r\n                          <Loader\r\n                            color={\"white\"}\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              left: \"10px\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                            loading={true}\r\n                            size={20}\r\n                          ></Loader>\r\n                        </div>\r\n                      ) : (\r\n                        <MdFlag fontSize=\"24px\"></MdFlag>\r\n                      )}\r\n                    </div>\r\n                  </Popover>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"row no-gutters text-light mb-3 font-weight-300 text-break\">\r\n                {comments[review._id][x].comment}\r\n              </div>\r\n              <div className=\"row no-gutters justify-content-end align-items-center\">\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters align-items-center\">\r\n                    <div className=\"col-auto mr-2\">\r\n                      {comments[review._id][x].likes.length}\r\n                    </div>\r\n                    <div className=\"col-auto mr-2 \">\r\n                      {loadingComment === ind ? (\r\n                        <div className=\"square-20\">\r\n                          <Loader\r\n                            color={\"white\"}\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              left: \"10px\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                            loading={loadingComment === ind}\r\n                            size={20}\r\n                          ></Loader>\r\n                        </div>\r\n                      ) : (\r\n                        <MdThumbUp\r\n                          onClick={async () => {\r\n                            if (user.token) {\r\n                              if (user._id !== comments[review._id][x].author) {\r\n                                setLoadingComment(ind);\r\n                                let res = await LikeComment(user, x);\r\n                                setLoadingComment(-1);\r\n                                if (res.error) {\r\n                                  store.dispatch({\r\n                                    type: \"SET_NOTIFICATION\",\r\n                                    notification: {\r\n                                      title: \"Error\",\r\n                                      message: res.error,\r\n                                      type: \"failure\",\r\n                                    },\r\n                                  });\r\n                                } else {\r\n                                  setRefreshComments(!refreshComments);\r\n                                }\r\n                              } else {\r\n                                store.dispatch({\r\n                                  type: \"SET_NOTIFICATION\",\r\n                                  notification: {\r\n                                    title: \"Action not allowed\",\r\n                                    message:\r\n                                      \"You can not like your own comment\",\r\n                                    type: \"failure\",\r\n                                  },\r\n                                });\r\n                              }\r\n                            } else {\r\n                              store.dispatch({\r\n                                type: \"SET_NOTIFICATION\",\r\n                                notification: {\r\n                                  title: \"Login required\",\r\n                                  message: \"You need to login to like review\",\r\n                                  type: \"failure\",\r\n                                },\r\n                              });\r\n                            }\r\n                          }}\r\n                          fontSize=\"24px\"\r\n                          className=\"text-green scale-transition cursor-pointer\"\r\n                        ></MdThumbUp>\r\n                      )}\r\n                    </div>\r\n                    <div\r\n                      className=\"col-auto text-orange btn-tertiary\"\r\n                      onClick={() => {\r\n                        if (!user.token) {\r\n                          store.dispatch({\r\n                            type: \"SET_NOTIFICATION\",\r\n                            notification: {\r\n                              title: \"Login required\",\r\n                              message: \"You need to login to write review.\",\r\n                              type: \"failure\",\r\n                            },\r\n                          });\r\n                        } else {\r\n                          setReview(\r\n                            Object.assign({}, review, {\r\n                              comment_id: x,\r\n                              notificationReceivers: comments[review._id][\r\n                                x\r\n                              ].notificationReceivers.concat([\r\n                                publicUsers[comments[review._id][x].author],\r\n                              ]),\r\n                            })\r\n                          );\r\n                          setReplyOpen(true);\r\n                        }\r\n                      }}\r\n                    >\r\n                      Reply\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {renderComments(comments[review._id][x].comments, review)}\r\n        </React.Fragment>\r\n      ) : (\r\n        \"\"\r\n      );\r\n    });\r\n  };\r\n\r\n  //avoid scrolling on first render into view\r\n  const realPage = page === -1 ? 1 : page;\r\n\r\n  return (\r\n    <div className=\"row no-gutters\">\r\n      {reviews.length ? (\r\n        <div className=\"col-60 h5 mb-3\">\r\n          Reviews ({nFormatter(reviews.length, 1)})\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters mb-2\" ref={topOfReviewsBlock}></div>\r\n        {promotedReviews\r\n          .concat(reviews)\r\n          .slice(\r\n            (realPage - 1) * reviewsPerPage,\r\n            (realPage - 1) * reviewsPerPage + reviewsPerPage\r\n          )\r\n          .map((x, i) => {\r\n            let rating = promotedContents[x._id]\r\n              ? promotedContents[x._id].content.rating\r\n              : x.rating;\r\n            let review = promotedContents[x._id]\r\n              ? promotedContents[x._id].content.review\r\n              : x.review;\r\n            return (\r\n              <React.Fragment key={`review-fragment-${i}`}>\r\n                <div\r\n                  ref={(el) => {\r\n                    if (!seekCommentId) {\r\n                      if (x._id === seekReviewId && el && !scrolledOnce) {\r\n                        setScrolledOnce(true);\r\n                        el.scrollIntoView({ behavior: \"smooth\" });\r\n                        // reviewToSeek.current = el;\r\n                      }\r\n                    }\r\n                  }}\r\n                  key={`review-${i}`}\r\n                  className={`row no-gutters p-4 bg-over-root-lighter rounded mb-2${\r\n                    x._id === seekReviewId && !seekCommentId\r\n                      ? \" fading-shadow\"\r\n                      : \"\"\r\n                  }`}\r\n                >\r\n                  <div className=\"col-auto pr-4 d-none d-md-block\">\r\n                    <div\r\n                      className=\"bg-image rounded-circle square-70\"\r\n                      style={{\r\n                        backgroundImage: `url(${\r\n                          publicUsers[x.author ? x.author : x.content_author]\r\n                            ? publicUsers[\r\n                                x.author ? x.author : x.content_author\r\n                              ].photo\r\n                            : \"\"\r\n                        })`,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <div className=\"row no-gutters justify-content-between align-items-center mb-1\">\r\n                      <div className=\"col-auto\">\r\n                        <div className=\"row no-gutters align-items-center\">\r\n                          <div className=\"col-auto pr-2 d-block d-md-none\">\r\n                            <div\r\n                              className=\"bg-image rounded-circle square-40\"\r\n                              style={{\r\n                                backgroundImage: `url(${\r\n                                  publicUsers[x.author]\r\n                                    ? publicUsers[x.author].photo\r\n                                    : \"\"\r\n                                })`,\r\n                              }}\r\n                            ></div>\r\n                          </div>\r\n                          <div className=\"col-auto\">\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                              <div className=\"col-auto mr-3 text-title-md mb-0\">\r\n                                {publicUsers[x.author]\r\n                                  ? publicUsers[x.author].display_name\r\n                                  : \"\"}\r\n                              </div>\r\n                              <div className=\"col-auto mr-3 text-muted\">\r\n                                {date.format(new Date(x.date), \"MMM DD, YYYY\")}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {user._id === x.author ? (\r\n                        <div className=\"col-auto\">\r\n                          <div className=\"row no-gutters\">\r\n                            <Popover\r\n                              arrow={false}\r\n                              position=\"top\"\r\n                              trigger=\"mouseenter\"\r\n                              theme=\"dark\"\r\n                              content={(w) => (\r\n                                <div className=\"py-2 px-3 rounded bg-root\">\r\n                                  Edit review\r\n                                </div>\r\n                              )}\r\n                            >\r\n                              <div\r\n                                className=\"col-auto text-muted btn-tertiary-small d-flex flex-center\"\r\n                                onClick={async () => {\r\n                                  setReview(x);\r\n                                  setUserIsOwnerOfReview(true);\r\n                                  setAddReviewOpen(true);\r\n                                }}\r\n                              >\r\n                                <BsPencil fontSize=\"24px\"></BsPencil>\r\n                              </div>\r\n                            </Popover>\r\n                            <Popover\r\n                              arrow={false}\r\n                              position=\"top\"\r\n                              trigger=\"mouseenter\"\r\n                              theme=\"dark\"\r\n                              content={(w) => (\r\n                                <div className=\"py-2 px-3 rounded bg-root\">\r\n                                  Delete review\r\n                                </div>\r\n                              )}\r\n                            >\r\n                              <div\r\n                                className=\"col-auto text-muted btn-tertiary-small d-flex flex-center\"\r\n                                onClick={async () => {\r\n                                  setDeletingReview(x._id);\r\n                                  let res = await DeleteReview(x);\r\n                                  setDeletingReview(-1);\r\n                                  if (res.error) {\r\n                                    store.dispatch({\r\n                                      type: \"SET_NOTIFICATION\",\r\n                                      notification: {\r\n                                        title: `Couldn't delete comment`,\r\n                                        type: \"failure\",\r\n                                        message: res.error,\r\n                                      },\r\n                                    });\r\n                                  } else {\r\n                                    store.dispatch({\r\n                                      type: \"SET_NOTIFICATION\",\r\n                                      notification: {\r\n                                        title: `Success`,\r\n                                        type: \"success\",\r\n                                        message: \"Comment successfully deleted\",\r\n                                      },\r\n                                    });\r\n\r\n                                    let rating = ratings[movie.id];\r\n                                    let userInd = rating[x.rating].findIndex(\r\n                                      (r) => r === x.author\r\n                                    );\r\n                                    if (userInd !== -1) {\r\n                                      rating[x.rating].splice(userInd, 1);\r\n                                    }\r\n                                    store.dispatch({\r\n                                      type: \"UPDATE_RATINGS\",\r\n                                      rating: { [movie.id]: rating },\r\n                                    });\r\n\r\n                                    let userRatings = { ...user.ratings };\r\n                                    delete userRatings[movie.id];\r\n                                    store.dispatch({\r\n                                      type: \"UPDATE_USER\",\r\n                                      userProperty: {\r\n                                        ratings: userRatings,\r\n                                      },\r\n                                    });\r\n                                    setRefreshReviews(!refreshReviews);\r\n                                  }\r\n                                }}\r\n                              >\r\n                                {deletingReview === x._id ? (\r\n                                  <div className=\"square-20\">\r\n                                    <Loader\r\n                                      color={\"white\"}\r\n                                      style={{\r\n                                        position: \"absolute\",\r\n                                        left: \"10px\",\r\n                                        top: 0,\r\n                                        bottom: 0,\r\n                                        margin: \"auto\",\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                      }}\r\n                                      loading={true}\r\n                                      size={20}\r\n                                    ></Loader>\r\n                                  </div>\r\n                                ) : (\r\n                                  <BsTrash fontSize=\"24px\"></BsTrash>\r\n                                )}\r\n                              </div>\r\n                            </Popover>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <Popover\r\n                          arrow={false}\r\n                          position=\"top\"\r\n                          trigger=\"mouseenter\"\r\n                          theme=\"dark\"\r\n                          content={(w) => (\r\n                            <div className=\"py-2 px-3 rounded bg-root\">\r\n                              Report Abuse\r\n                            </div>\r\n                          )}\r\n                        >\r\n                          <div\r\n                            className=\"col-auto text-muted btn-tertiary-small d-flex flex-center\"\r\n                            onClick={async () => {\r\n                              if (user.token) {\r\n                                setLoadingReport(x._id);\r\n                                let res = await ReportReview(user, x._id);\r\n                                setLoadingReport(-1);\r\n                                if (res.error) {\r\n                                  store.dispatch({\r\n                                    type: \"SET_NOTIFICATION\",\r\n                                    notification: {\r\n                                      title: \"Error\",\r\n                                      message: res.error,\r\n                                      type: \"failure\",\r\n                                    },\r\n                                  });\r\n                                } else {\r\n                                  store.dispatch({\r\n                                    type: \"SET_NOTIFICATION\",\r\n                                    notification: {\r\n                                      title: \"Review reported\",\r\n                                      message:\r\n                                        \"Review was successfully reported. We will review it soon.\",\r\n                                      type: \"success\",\r\n                                    },\r\n                                  });\r\n                                }\r\n                              } else {\r\n                                store.dispatch({\r\n                                  type: \"SET_NOTIFICATION\",\r\n                                  notification: {\r\n                                    title: \"Login required\",\r\n                                    message:\r\n                                      \"You need to login to report review\",\r\n                                    type: \"failure\",\r\n                                  },\r\n                                });\r\n                              }\r\n                            }}\r\n                          >\r\n                            {loadingReport === x._id ? (\r\n                              <div className=\"square-20\">\r\n                                <Loader\r\n                                  color={\"white\"}\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    left: \"10px\",\r\n                                    top: 0,\r\n                                    bottom: 0,\r\n                                    margin: \"auto\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                  }}\r\n                                  loading={true}\r\n                                  size={20}\r\n                                ></Loader>\r\n                              </div>\r\n                            ) : (\r\n                              <MdFlag fontSize=\"24px\"></MdFlag>\r\n                            )}\r\n                          </div>\r\n                        </Popover>\r\n                      )}\r\n                    </div>\r\n\r\n                    <div className=\"row no-gutters text-light mb-3 font-weight-300 text-break\">\r\n                      <div className=\"text-break\">{review}</div>\r\n                    </div>\r\n                    <div className=\"row no-gutters justify-content-between align-items-center\">\r\n                      <div className=\"col-auto\">\r\n                        {rating === \"ok_rate\" ? (\r\n                          <OkIcon size={24}></OkIcon>\r\n                        ) : (\r\n                          <Emoji\r\n                            emoji={\r\n                              rating === \"excellent_rate\"\r\n                                ? \"fire\"\r\n                                : rating === \"good_rate\"\r\n                                ? \"heart\"\r\n                                : rating === \"ok_rate\"\r\n                                ? \"heavy_division_sign\"\r\n                                : \"shit\"\r\n                            }\r\n                            set=\"facebook\"\r\n                            size={24}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      <div className=\"col-auto\">\r\n                        <div className=\"row no-gutters align-items-center\">\r\n                          <div className=\"col-auto mr-2\">{x.likes.length}</div>\r\n                          <div className=\"col-auto mr-2 \">\r\n                            {loadingReview === i ? (\r\n                              <div className=\"square-20\">\r\n                                <Loader\r\n                                  color={\"white\"}\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    left: \"10px\",\r\n                                    top: 0,\r\n                                    bottom: 0,\r\n                                    margin: \"auto\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                  }}\r\n                                  loading={loadingReview === i}\r\n                                  size={20}\r\n                                ></Loader>\r\n                              </div>\r\n                            ) : (\r\n                              <MdThumbUp\r\n                                onClick={async () => {\r\n                                  if (user.token) {\r\n                                    if (user._id !== x.author) {\r\n                                      setLoadingReview(i);\r\n                                      let res = await LikeReview(user, x._id);\r\n                                      setLoadingReview(-1);\r\n                                      if (res.error) {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Error\",\r\n                                            message: res.error,\r\n                                            type: \"failure\",\r\n                                          },\r\n                                        });\r\n                                      } else {\r\n                                        setRefreshReviews(!refreshReviews);\r\n                                      }\r\n                                    } else {\r\n                                      store.dispatch({\r\n                                        type: \"SET_NOTIFICATION\",\r\n                                        notification: {\r\n                                          title: \"Action not allowed\",\r\n                                          message:\r\n                                            \"You can not like you own review\",\r\n                                          type: \"failure\",\r\n                                        },\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    store.dispatch({\r\n                                      type: \"SET_NOTIFICATION\",\r\n                                      notification: {\r\n                                        title: \"Login required\",\r\n                                        message:\r\n                                          \"You need to login to like review\",\r\n                                        type: \"failure\",\r\n                                      },\r\n                                    });\r\n                                  }\r\n                                }}\r\n                                fontSize=\"24px\"\r\n                                className=\"text-green scale-transition cursor-pointer\"\r\n                              ></MdThumbUp>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"col-auto mr-2\">\r\n                            {x.comments.length}\r\n                          </div>\r\n                          <div className=\"col-auto mr-2\">\r\n                            <MdChatBubble\r\n                              onClick={() => {\r\n                                setReviewIdOfVisibleComments(\r\n                                  reviewIdOfVisibleComments === x._id\r\n                                    ? -1\r\n                                    : x._id\r\n                                );\r\n                              }}\r\n                              fontSize=\"24px\"\r\n                              className=\"text-orange scale-transition cursor-pointer\"\r\n                            ></MdChatBubble>\r\n                          </div>\r\n                          <div\r\n                            className=\"col-auto text-orange btn-tertiary\"\r\n                            onClick={() => {\r\n                              setReview(\r\n                                Object.assign({}, x, {\r\n                                  notificationReceivers: [\r\n                                    publicUsers[x.author],\r\n                                  ],\r\n                                })\r\n                              );\r\n                              setReplyOpen(true);\r\n                            }}\r\n                          >\r\n                            Reply\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <Collapse\r\n                  in={reviewIdOfVisibleComments === x._id}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <div\r\n                    style={{ marginLeft: \"30px\" }}\r\n                    className=\"py-2 text-light\"\r\n                  >\r\n                    Comments (\r\n                    {comments[x._id]\r\n                      ? Object.values(comments[x._id]).length\r\n                      : 0}\r\n                    )\r\n                  </div>\r\n                  {comments[x._id]\r\n                    ? renderComments(\r\n                        Object.values(comments[x._id])\r\n                          .filter((a) => a.notificationReceivers.length === 1)\r\n                          .map((b) => b._id),\r\n                        x\r\n                      )\r\n                    : \"\"}\r\n                  <div className=\"row no-gutters justify-content-end\">\r\n                    <div className=\"col-auto\">\r\n                      <Paigination\r\n                        count={Math.ceil(\r\n                          comments[x._id]\r\n                            ? comments[x._id].length / commentsPerPage\r\n                            : 1\r\n                        )}\r\n                        current={commentsPage}\r\n                        setCurrent={setCommentsPage}\r\n                        classNames={{\r\n                          notSelected: \"input-dark\",\r\n                          selected: \"input-dark-selected\",\r\n                        }}\r\n                      ></Paigination>\r\n                    </div>\r\n                  </div>\r\n                </Collapse>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        <div className=\"row no-gutters justify-content-end pt-2\">\r\n          <div className=\"col-auto\">\r\n            <Paigination\r\n              classNames={{\r\n                notSelected: \"input-dark\",\r\n                selected: \"input-dark-selected\",\r\n              }}\r\n              count={Math.ceil(reviews.length / reviewsPerPage)}\r\n              current={realPage}\r\n              setCurrent={setPage}\r\n            ></Paigination>\r\n          </div>\r\n          <AddReview\r\n            userIsOwner={userIsOwnerOfReview}\r\n            open={addReviewOpen}\r\n            onClose={() => setAddReviewOpen(false)}\r\n            movie={movie}\r\n            review={review}\r\n            user={user}\r\n            refreshReviews={() => setRefreshReviews(!refreshReviews)}\r\n          ></AddReview>\r\n          <ReplyToReview\r\n            refreshReviews={() => setRefreshReviews(!refreshReviews)}\r\n            setReviewIdOfVisibleComments={setReviewIdOfVisibleComments}\r\n            refreshComments={() => setRefreshComments(!refreshComments)}\r\n            setComments={setComments}\r\n            movie={movie}\r\n            reviewAuthor={\r\n              publicUsers[review.author]\r\n                ? publicUsers[review.author]\r\n                : { display_name: \"\" }\r\n            }\r\n            review={review}\r\n            open={replyOpen}\r\n            onClose={() => setReplyOpen(false)}\r\n            user={user}\r\n          ></ReplyToReview>\r\n          <EditComment\r\n            comment={comment}\r\n            refreshComments={() => setRefreshComments(!refreshComments)}\r\n            setComments={() => {}}\r\n            movie={movie}\r\n            open={editCommentOpen}\r\n            onClose={() => setEditCommentOpen(false)}\r\n            user={user}\r\n          ></EditComment>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(MovieReviews);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { GetMovie, GetCredits, GetTvShow } from \"../../server/MoviesApi\";\r\nimport ReactionButton from \"./ReactionButton\";\r\nimport date from \"date-and-time\";\r\nimport Modal from \"../utility/Modal\";\r\nimport TrailerPlayer from \"./TrailerPlayer\";\r\nimport MovieReviews from \"./MovieReviews\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormatDuration } from \"../../utilities/Functions\";\r\nimport store from \"../../store/store\";\r\nimport { AddViewToMovie, GetUserReview } from \"../../server/DatabaseApi\";\r\nimport WishlistButton from \"./WishlistButton\";\r\nimport { FaRegPaperPlane } from \"react-icons/fa\";\r\nimport history from \"../../History\";\r\nimport { BsPlayFill, BsPencil } from \"react-icons/bs\";\r\nimport AddReview from \"./AddReview\";\r\n\r\nconst Movie = (props) => {\r\n  const movieId = props.match.params.movieId;\r\n  const ratings = props.ratings;\r\n  const apiKey = props.settings.movies_api_key;\r\n  const seekReviewId = props.match.params.reviewId;\r\n  const seekCommentId = props.match.params.commentId;\r\n  //user will be needed to write comments on reviews and to add reviews\r\n  const user = props.user;\r\n  const [review, setReview] = useState(false);\r\n  const [refreshReviews, setRefreshReviews] = useState(false);\r\n  const [trailerIsEmpty, setTrailerIsEmpty] = useState(false);\r\n  const [addReviewOpen, setAddReviewOpen] = useState(false);\r\n  const [movie, setMovie] = useState({\r\n    poster_path: \"\",\r\n    genres: [],\r\n    title: \"\",\r\n    overview: \"\",\r\n    director: [],\r\n    cast: [],\r\n    runtime: 0,\r\n    release_date: \"\",\r\n    id: \"\",\r\n  });\r\n\r\n  //boolean variable to display trailer modal or not.\r\n  const [openTrailer, setOpenTrailer] = useState(false);\r\n\r\n  useEffect(() => {\r\n    //check if movie fetched from api\r\n    if (movie.title) {\r\n      AddViewToMovie(movie.id, apiKey);\r\n      if (!(movie.id in ratings)) {\r\n        store.dispatch({\r\n          type: \"UPDATE_RATINGS\",\r\n          rating: {\r\n            [movie.id]: {\r\n              excellent_rate: [],\r\n              ok_rate: [],\r\n              bad_rate: [],\r\n              good_rate: [],\r\n              movie_poster: movie.poster_path,\r\n              movie_title: movie.title,\r\n              movie_genres: movie.genres.map((x) => x.name),\r\n              movie_release_date: movie.release_date,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n  }, [movie.title]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    async function getData() {\r\n      if (movieId && apiKey) {\r\n        let data;\r\n        if (movieId.substring(0, 6) === \"serie-\") {\r\n          let serieId = movieId.substring(6);\r\n          let serieData = await GetTvShow(serieId, apiKey);\r\n          data = Object.assign({}, serieData, {\r\n            title: serieData.name,\r\n            release_date: serieData.first_air_date,\r\n            id: movieId,\r\n          });\r\n        } else {\r\n          data = await GetMovie(movieId, apiKey);\r\n        }\r\n        data.release_date = data.release_date ? data.release_date : \"0\";\r\n        if (data.success !== undefined && !data.success) {\r\n        }\r\n        setMovie((prev) => Object.assign({}, prev, data));\r\n        let credits = await GetCredits(movieId, apiKey);\r\n        let directors = credits.crew\r\n          ? credits.crew.filter((x) => x.job === \"Director\").map((x) => x.name)\r\n          : [];\r\n        let director = directors.length\r\n          ? directors\r\n          : credits.crew.map((x) => x.name);\r\n        let cast = credits.cast ? credits.cast.map((x) => x.name) : [];\r\n        setMovie((prev) => Object.assign({}, prev, { director, cast }));\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, [movieId, apiKey]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let res = await GetUserReview(user._id, movieId);\r\n      if (res) {\r\n        if (!res.error) {\r\n          setReview(res);\r\n        }\r\n      } else {\r\n        setReview({ review: \"\", rating: \"\" });\r\n      }\r\n    }\r\n    if (user._id && movieId) {\r\n      getData();\r\n    }\r\n  }, [refreshReviews, user, movieId]);\r\n\r\n  // const director = movie.credits.crew.find((x) => x.job === \"Director\");\r\n\r\n  return (\r\n    <div className=\"row no-gutters justify-content-center bg-movie-over-root position-relative\">\r\n      <div\r\n        className=\"position-absolute w-100 d-block d-lg-none\"\r\n        style={{\r\n          top: 0,\r\n          left: 0,\r\n        }}\r\n      >\r\n        <div\r\n          className=\"position-relative\"\r\n          style={{ height: window.innerHeight, overflow: \"hidden\" }}\r\n        >\r\n          <div className=\"position-relative\">\r\n            <img\r\n              alt={movie.poster_path}\r\n              width=\"100%\"\r\n              src={\r\n                movie.poster_path\r\n                  ? `https://image.tmdb.org/t/p/w342/${movie.poster_path}`\r\n                  : \"https://critics.io/img/movies/poster-placeholder.png\"\r\n              }\r\n            ></img>\r\n            <div\r\n              className=\"position-absolute w-100 h-100\"\r\n              style={{\r\n                background: \"linear-gradient(rgba(0, 0, 0, 0.3) 90%, black)\",\r\n                top: 0,\r\n                left: 0,\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <div\r\n            className=\"position-absolute w-100 h-100\"\r\n            style={{\r\n              background: \"linear-gradient(rgb(0 0 0 / 30%), black)\",\r\n              top: 0,\r\n              left: 0,\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <Modal open={openTrailer} onClose={() => setOpenTrailer(false)}>\r\n        <TrailerPlayer\r\n          setIsEmpty={() => setTrailerIsEmpty(true)}\r\n          movieId={movieId}\r\n          onEnded={() => setOpenTrailer(false)}\r\n        ></TrailerPlayer>\r\n      </Modal>\r\n      <div className=\"col-60 text-white px-md-5 py-5 px-4 content-container\">\r\n        <div className=\"row no-gutters mb-5\">\r\n          <div className=\"col-auto mr-5 d-none d-lg-block\">\r\n            <div className=\"w-100 position-relative\">\r\n              <img\r\n                alt={movie.poster_path}\r\n                style={{ borderRadius: \"25px\" }}\r\n                width=\"300px\"\r\n                src={\r\n                  movie.poster_path\r\n                    ? `https://image.tmdb.org/t/p/w342/${movie.poster_path}`\r\n                    : \"https://critics.io/img/movies/poster-placeholder.png\"\r\n                }\r\n              ></img>\r\n              <div\r\n                onClick={() => history.push(`/movie/${movie.id}`)}\r\n                className=\"col-60 h-100 text-white d-flex flex-center img-cover cursor-pointer\"\r\n                style={{\r\n                  left: 0,\r\n                  top: 0,\r\n                  position: \"absolute\",\r\n                  zIndex: 4,\r\n                  borderRadius: \"13px\",\r\n                }}\r\n              >\r\n                {!trailerIsEmpty ? (\r\n                  <div\r\n                    className=\"square-60 rounded-circle d-flex flex-center play-btn\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      setOpenTrailer(true);\r\n                    }}\r\n                  >\r\n                    <BsPlayFill\r\n                      style={{\r\n                        fontSize: \"35px\",\r\n                        color: \"white\",\r\n                        marginRight: \"-5px\",\r\n                      }}\r\n                    ></BsPlayFill>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col position-relative\">\r\n            <div\r\n              className=\"row no-gutters position-relative\"\r\n              style={{ zIndex: 5 }}\r\n            >\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters align-items-center\">\r\n                  <div className=\"col-auto mr-3\">\r\n                    <div className=\"row no-gutters h5 mb-2 align-items-center\">\r\n                      {movie.title} ({movie.release_date.substring(0, 4)})\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters mb-2 align-items-center mt-2\">\r\n                      <ReactionButton\r\n                        selected={\r\n                          user.ratings[movie.id]\r\n                            ? user.ratings[movie.id].rate_type ===\r\n                              \"excellent_rate\"\r\n                            : false\r\n                        }\r\n                        movie={movie}\r\n                        emoji=\"fire\"\r\n                        className=\"mr-2 mb-2\"\r\n                        value={\r\n                          ratings[movie.id]\r\n                            ? ratings[movie.id].excellent_rate\r\n                            : []\r\n                        }\r\n                      ></ReactionButton>\r\n                      <ReactionButton\r\n                        selected={\r\n                          user.ratings[movie.id]\r\n                            ? user.ratings[movie.id].rate_type === \"good_rate\"\r\n                            : false\r\n                        }\r\n                        movie={movie}\r\n                        emoji=\"heart\"\r\n                        className=\"mr-2 mb-2\"\r\n                        value={\r\n                          ratings[movie.id] ? ratings[movie.id].good_rate : []\r\n                        }\r\n                      ></ReactionButton>\r\n                      <ReactionButton\r\n                        selected={\r\n                          user.ratings[movie.id]\r\n                            ? user.ratings[movie.id].rate_type === \"ok_rate\"\r\n                            : false\r\n                        }\r\n                        movie={movie}\r\n                        className=\"mr-2 mb-2\"\r\n                        emoji=\"heavy_division_sign\"\r\n                        value={\r\n                          ratings[movie.id] ? ratings[movie.id].ok_rate : []\r\n                        }\r\n                      ></ReactionButton>\r\n                      <ReactionButton\r\n                        className=\"mb-2\"\r\n                        emoji=\"shit\"\r\n                        value={\r\n                          ratings[movie.id] ? ratings[movie.id].bad_rate : []\r\n                        }\r\n                        selected={\r\n                          user.ratings[movie.id]\r\n                            ? user.ratings[movie.id].rate_type === \"bad_rate\"\r\n                            : false\r\n                        }\r\n                        movie={movie}\r\n                      ></ReactionButton>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row no-gutters text-movie-muted mb-2\">\r\n                  <div className=\"text-truncate\">\r\n                    {movie.genres.map((x) => x.name).join(\"/\")}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters mb-4\">\r\n                  <div className=\"col-auto font-weight-500 mr-2\">Duration:</div>\r\n                  <div className=\"col-auto text-movie-muted\">\r\n                    {FormatDuration(movie.runtime)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters mb-4 text-light\">\r\n                  {movie.overview}\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters\">\r\n                      <div className=\"col-auto mr-2\">Director:</div>\r\n                      <div className=\"col-auto col-sm mr-5 text-movie-muted\">\r\n                        {movie.director.length\r\n                          ? movie.director.join(\", \")\r\n                          : \"unknown\"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters\">\r\n                      <div className=\"col-auto mr-2\">Cast:</div>\r\n                      <div className=\"col-auto col-sm\">\r\n                        <div className=\"row no-gutters\">\r\n                          <div\r\n                            className=\"text-clamp-2 text-muted-light cursor-pointer\"\r\n                            onClick={(e) => {\r\n                              if (\r\n                                e.currentTarget.classList.contains(\r\n                                  \"text-clamp-2\"\r\n                                )\r\n                              ) {\r\n                                e.currentTarget.classList.remove(\r\n                                  \"text-clamp-2\"\r\n                                );\r\n                              } else {\r\n                                e.currentTarget.classList.add(\"text-clamp-2\");\r\n                              }\r\n                            }}\r\n                          >\r\n                            {movie.cast.length\r\n                              ? movie.cast.join(\", \")\r\n                              : \"unknown\"}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters mb-5\">\r\n                  <div className=\"col-auto mr-2\">Release date:</div>\r\n                  <div className=\"col-auto text-movie-muted\">\r\n                    {movie.release_date !== \"0\"\r\n                      ? date.format(\r\n                          new Date(movie.release_date),\r\n                          \"MMMM DD, YYYY\"\r\n                        )\r\n                      : \"unknown\"}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters justify-content-center justify-content-md-start\">\r\n                  <div\r\n                    className=\"col-auto mr-3 btn-custom btn-custom-primary btn-small\"\r\n                    onClick={() => {\r\n                      if (!user.token) {\r\n                        store.dispatch({\r\n                          type: \"SET_NOTIFICATION\",\r\n                          notification: {\r\n                            title: \"Login required\",\r\n                            message: \"You need to login to write review.\",\r\n                            type: \"failure\",\r\n                          },\r\n                        });\r\n                      } else {\r\n                        setAddReviewOpen(!addReviewOpen);\r\n                      }\r\n                    }}\r\n                  >\r\n                    {user.ratings[movie.id] ? (\r\n                      <React.Fragment>\r\n                        Edit Review\r\n                        <BsPencil fontSize=\"20px\" className=\"ml-2\"></BsPencil>\r\n                      </React.Fragment>\r\n                    ) : (\r\n                      <React.Fragment>\r\n                        Add Review\r\n                        <FaRegPaperPlane\r\n                          fontSize=\"20px\"\r\n                          className=\"ml-2\"\r\n                        ></FaRegPaperPlane>\r\n                      </React.Fragment>\r\n                    )}\r\n                  </div>\r\n                  <WishlistButton movie={movie} user={user}></WishlistButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <AddReview\r\n          userIsOwner={user.ratings[movie.id]}\r\n          open={addReviewOpen}\r\n          onClose={() => setAddReviewOpen(false)}\r\n          movie={movie}\r\n          review={review}\r\n          user={user}\r\n          refreshReviews={() => setRefreshReviews(!refreshReviews)}\r\n        ></AddReview>\r\n        <MovieReviews\r\n          refreshReviewsFromParent={refreshReviews}\r\n          userHasWrittenReview={user.ratings[movie.id]}\r\n          seekCommentId={seekCommentId}\r\n          seekReviewId={seekReviewId}\r\n          movie={movie}\r\n          user={user}\r\n        ></MovieReviews>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    ratings: state.ratings,\r\n    settings: state.settings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Movie);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { GetReviewComments } from \"../../server/DatabaseApi\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport OkIcon from \"../../images/OkIcon\";\r\nimport Paigination from \"../utility/Paigination\";\r\nimport history from \"../../History\";\r\nimport date from \"date-and-time\";\r\nimport { MdThumbUp, MdChatBubble } from \"react-icons/md\";\r\n\r\nconst ReviewsList = ({ reviews, publicUsers, ratings }) => {\r\n  const [reviewIdOfVisibleComments, setReviewIdOfVisibleComments] = useState(\r\n    -1\r\n  );\r\n\r\n  const page = 1;\r\n  const [commentsPage, setCommentsPage] = useState(1);\r\n\r\n  const [comments, setComments] = useState({});\r\n\r\n  const commentsPerPage = 5;\r\n  const reviewsPerPage = 8;\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (reviewIdOfVisibleComments !== -1) {\r\n        let data = await GetReviewComments(reviewIdOfVisibleComments);\r\n        setComments((prev) =>\r\n          Object.assign({}, prev, { [reviewIdOfVisibleComments]: data })\r\n        );\r\n      }\r\n    }\r\n    getData();\r\n  }, [reviewIdOfVisibleComments]);\r\n\r\n  return reviews\r\n    .slice(\r\n      (page - 1) * reviewsPerPage,\r\n      (page - 1) * reviewsPerPage + reviewsPerPage\r\n    )\r\n    .map((x, i) => (\r\n      <React.Fragment key={`fragment-review-${i}`}>\r\n        <div\r\n          key={`review-${i}`}\r\n          className=\"row no-gutters p-4 bg-over-root-lighter rounded mb-2\"\r\n        >\r\n          <div\r\n            className=\"col-sm-auto col-20 pr-4 d-none d-sm-block\"\r\n            style={{ maxWidth: \"150px\" }}\r\n          >\r\n            <div className=\"row no-gutters mb-1\">\r\n              <img\r\n                alt={ratings[x.movie_id].movie_poster}\r\n                onClick={() => history.push(`/movie/${x.movie_id}`)}\r\n                width=\"100%\"\r\n                style={{ borderRadius: \"13px\", cursor: \"pointer\" }}\r\n                src={`https://image.tmdb.org/t/p/w154${\r\n                  ratings[x.movie_id].movie_poster\r\n                }`}\r\n              ></img>\r\n            </div>\r\n          </div>\r\n          <div className=\"col d-flex flex-column\">\r\n            <div className=\"row no-gutters justify-content-between align-items-center mb-2 flex-grow-0\">\r\n              <div className=\"col-60 d-block d-sm-none mb-3\">\r\n                <div className=\"row no-gutters mb-1\">\r\n                  <div className=\"col-auto pr-3\">\r\n                    <div\r\n                      className=\"square-70 rounded bg-image\"\r\n                      style={{\r\n                        backgroundImage: `url(https://image.tmdb.org/t/p/w154${\r\n                          ratings[x.movie_id].movie_poster\r\n                        })`,\r\n                      }}\r\n                    ></div>\r\n                    {/* <img\r\n                    onClick={() => history.push(`/movie/${x.id}`)}\r\n                    width=\"100%\"\r\n                    style={{ borderRadius: \"13px\" }}\r\n                    src={`https://image.tmdb.org/t/p/w154${x.movie_poster}`}\r\n                  ></img> */}\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <div className=\"row no-gutters text-white h6 mb-0\">\r\n                      {ratings[x.movie_id].movie_title} (\r\n                      {ratings[x.movie_id].movie_release_date.substring(0, 4)}\r\n                    </div>\r\n                    <div className=\"row no-gutters text-muted\">\r\n                      <div className=\"text-truncate\">{x.movie_genres}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters justify-content-between\">\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters align-items-center\">\r\n                      <div className=\"col-auto pr-2\">\r\n                        <div\r\n                          className=\"bg-image rounded-circle square-40\"\r\n                          style={{\r\n                            backgroundImage: `url(${\r\n                              publicUsers[x.author]\r\n                                ? publicUsers[x.author].photo\r\n                                : \"\"\r\n                            })`,\r\n                          }}\r\n                        ></div>\r\n                      </div>\r\n                      <div className=\"col-auto\">\r\n                        <div className=\"row no-gutters align-items-center text-white\">\r\n                          <div className=\"col-auto mr-3 mb-0\">\r\n                            {publicUsers[x.author]\r\n                              ? publicUsers[x.author].display_name\r\n                              : \"\"}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters text-white\">\r\n                      <span className=\"mr-2\">Posted review on</span>\r\n                      <span className=\"text-muted\">\r\n                        {date.format(new Date(x.date), \"MMM DD, YYYY\")}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters text-light mb-3 font-size-14 flex-grow-0 font-weight-300\">\r\n              {x.review}\r\n            </div>\r\n\r\n            <div className=\"row no-gutters flex-grow-1 align-items-bottom\">\r\n              <div className=\"col-60 d-flex flex-column justify-content-end\">\r\n                <div className=\"row no-gutters justify-content-between align-items-center text-white\">\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters\">\r\n                      {x.rating ? (\r\n                        x.rating === \"ok_rate\" ? (\r\n                          <div style={{ marginTop: \"-4px\" }}>\r\n                            <OkIcon size={24}></OkIcon>\r\n                          </div>\r\n                        ) : (\r\n                          <div style={{ marginBottom: \"-6px\" }}>\r\n                            <Emoji\r\n                              emoji={\r\n                                x.rating === \"excellent_rate\"\r\n                                  ? \"fire\"\r\n                                  : x.rating === \"good_rate\"\r\n                                  ? \"heart\"\r\n                                  : x.rating === \"ok_rate\"\r\n                                  ? \"heavy-division-sign\"\r\n                                  : \"shit\"\r\n                              }\r\n                              set=\"facebook\"\r\n                              size={24}\r\n                            />\r\n                          </div>\r\n                        )\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-auto px-0\">\r\n                    <div className=\"row no-gutters align-items-center\">\r\n                      <div className=\"col-auto mr-2\">{x.likes.length}</div>\r\n                      <div className=\"col-auto mr-2 \">\r\n                        <MdThumbUp\r\n                          fontSize=\"24px\"\r\n                          className=\"text-green\"\r\n                        ></MdThumbUp>\r\n                      </div>\r\n                      <div className=\"col-auto mr-2\">{x.comments.length}</div>\r\n                      <div className=\"col-auto\">\r\n                        <MdChatBubble\r\n                          onClick={() => {\r\n                            setReviewIdOfVisibleComments(\r\n                              reviewIdOfVisibleComments === x._id ? -1 : x._id\r\n                            );\r\n                          }}\r\n                          fontSize=\"24px\"\r\n                          className=\"text-orange scale-transition cursor-pointer\"\r\n                        ></MdChatBubble>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Collapse in={reviewIdOfVisibleComments === x._id} className=\"mb-3\">\r\n          <div className=\"ml-4 h5 py-2 text-white\">\r\n            Comments ({comments[x._id] ? comments[x._id].length : 0})\r\n          </div>\r\n          {comments[x._id]\r\n            ? comments[x._id]\r\n                .slice(\r\n                  commentsPage * (commentsPage - 1),\r\n                  commentsPage * (commentsPage - 1) + commentsPerPage\r\n                )\r\n                .map((y, ind) => (\r\n                  <div\r\n                    key={`comment-${reviewIdOfVisibleComments}-${ind}`}\r\n                    className=\"row no-gutters p-4 bg-over-root-lighter rounded ml-4 mb-2\"\r\n                  >\r\n                    <div className=\"col-auto pr-4 d-none d-md-block\">\r\n                      <div\r\n                        className=\"bg-image rounded-circle square-70\"\r\n                        style={{\r\n                          backgroundImage: `url(${\r\n                            publicUsers[y.author]\r\n                              ? publicUsers[y.author].photo\r\n                              : \"\"\r\n                          })`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <div className=\"row no-gutters align-items-center mb-2\">\r\n                        <div className=\"col-auto pr-2 d-block d-md-none\">\r\n                          <div\r\n                            className=\"bg-image rounded-circle square-40\"\r\n                            style={{\r\n                              backgroundImage: `url(${\r\n                                publicUsers[y.author]\r\n                                  ? publicUsers[y.author].photo\r\n                                  : \"\"\r\n                              })`,\r\n                            }}\r\n                          ></div>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                          <div className=\"row no-gutters align-items-center\">\r\n                            <div className=\"col-auto mr-3 h6 text-white mb-0\">\r\n                              {publicUsers[y.author]\r\n                                ? publicUsers[y.author].display_name\r\n                                : \"\"}\r\n                            </div>\r\n                            <div className=\"col-auto mr-3 text-muted\">\r\n                              {date.format(new Date(y.date), \"MMM DD, YYYY\")}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"row no-gutters text-light mb-3\">\r\n                        {y.comment}\r\n                      </div>\r\n                      <div className=\"row no-gutters justify-content-between align-items-center\">\r\n                        <div className=\"col-auto\">\r\n                          <div className=\"row no-gutters align-items-center\">\r\n                            <div className=\"col-auto mr-2\">\r\n                              {y.likes.length}\r\n                            </div>\r\n                            <div className=\"col-auto mr-2 \">\r\n                              <MdThumbUp\r\n                                fontSize=\"24px\"\r\n                                className=\"text-green cursor-pointer\"\r\n                              ></MdThumbUp>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n            : \"\"}\r\n          <div className=\"row no-gutters mt-2 justify-content-end\">\r\n            <div className=\"col-auto ml-4\">\r\n              <Paigination\r\n                count={Math.ceil(\r\n                  comments[x._id] ? comments[x._id].length / commentsPerPage : 1\r\n                )}\r\n                current={commentsPage}\r\n                setCurrent={setCommentsPage}\r\n                classNames={{\r\n                  notSelected: \"input-dark\",\r\n                  selected: \"input-dark-selected\",\r\n                }}\r\n              ></Paigination>\r\n            </div>\r\n          </div>\r\n        </Collapse>\r\n      </React.Fragment>\r\n    ));\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(ReviewsList);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { SearchMovies, SearchSeries } from \"../../server/MoviesApi\";\r\nimport MoviesList from \"./MoviesList\";\r\nimport { SearchReviews } from \"../../server/DatabaseApi\";\r\nimport ReviewsList from \"./ReviewsList\";\r\nimport store from \"../../store/store\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport \"simplebar/dist/simplebar.min.css\";\r\nimport { OfficialMoviesGenres, OfficialSeriesGenres } from \"../../Data\";\r\n\r\nconst extractGenres = (movies) => {\r\n  let genres = { 0: \"All\" };\r\n  movies.forEach((x) => {\r\n    x.genre_ids.forEach((gid) => {\r\n      let genre = x.title // movies have title, series - name\r\n        ? OfficialMoviesGenres.find((g) => g.id === gid)\r\n        : OfficialSeriesGenres.find((g) => g.id === gid);\r\n      if (genre && genre.name) {\r\n        if (!(gid in genres)) {\r\n          genres[gid] = genre.name;\r\n        }\r\n      } else {\r\n      }\r\n    });\r\n  });\r\n  return genres;\r\n};\r\n\r\nconst SearchResults = ({ search, settings }) => {\r\n  const [reviews, setReviews] = useState([]);\r\n  const [movies, setMovies] = useState([]);\r\n  const [series, setSeries] = useState([]);\r\n  const [selectedMovieGenre, setSelectedMovieGenre] = useState(0);\r\n  const [selectedSerieGenre, setSelectedSerieGenre] = useState(0);\r\n  const category = search.category;\r\n\r\n  const onFail = () => {\r\n    store.dispatch({\r\n      type: \"SET_NOTIFICATION\",\r\n      notification: {\r\n        title: \"Error\",\r\n        message: \"You need to provide valid api key in admin dashboard\",\r\n        type: \"failure\",\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (search.query) {\r\n        if (category === \"Reviews\" || category === \"All\") {\r\n          let reviews = await SearchReviews(search.query);\r\n          if (!reviews.error) {\r\n            setReviews(reviews);\r\n          }\r\n        } else {\r\n          setReviews([]);\r\n        }\r\n        if (category === \"Movies\" || category === \"All\") {\r\n          let movies = await SearchMovies(\r\n            search.query,\r\n            settings.movies_api_key\r\n          );\r\n          if (movies.results) {\r\n            setMovies(movies.results);\r\n          } else {\r\n            onFail();\r\n          }\r\n        } else {\r\n          setMovies([]);\r\n        }\r\n        if (category === \"Series\" || category === \"All\") {\r\n          let series = await SearchSeries(\r\n            search.query,\r\n            settings.movies_api_key\r\n          );\r\n          if (series.results) {\r\n            setSeries(series.results);\r\n          } else {\r\n            onFail();\r\n          }\r\n        } else {\r\n          setSeries([]);\r\n        }\r\n      }\r\n    }\r\n    getData();\r\n  }, [search]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const moviesGenres = extractGenres(movies);\r\n  const seriesGenres = extractGenres(series);\r\n  return (\r\n    <div\r\n      className=\"row no-gutters justify-content-center bg-over-root\"\r\n      style={{ minHeight: window.innerHeight }}\r\n    >\r\n      <div className=\"col-60 d-flex flex-column\">\r\n        <div className=\"row no-gutters flex-grow-0\"></div>\r\n        <div className=\"row no-gutters flex-grow-1\">\r\n          <div className=\"col-60 d-flex flex-column\">\r\n            <div className=\"row no-gutters flex-grow-1 justify-content-center\">\r\n              <div className=\"col-60 p-5 text-white content-container d-flex flex-column\">\r\n                <div className=\"row no-gutters flex-grow-1\">\r\n                  <div className=\"col-60 mb-4\">\r\n                    <div className=\"row no-gutters h4\">Search Results</div>\r\n                    <div className=\"row no-gutters text-muted border-bottom pb-3\">\r\n                      Showing all results\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-60\">\r\n                    {movies.length ? (\r\n                      <div className=\"row no-gutters h5 mb-2\">\r\n                        Movies ({movies.length})\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    <div className=\"row no-gutters justify-content-end text-light align-items-center mb-4\">\r\n                      <div className=\"col-auto\">\r\n                        {Object.keys(moviesGenres).length > 1 ? (\r\n                          <SimpleBar\r\n                            style={{\r\n                              padding: \"14px 0\",\r\n                              width: \"100%\",\r\n                              overflowX: \"auto\",\r\n                              whiteSpace: \"nowrap\",\r\n                            }}\r\n                          >\r\n                            {Object.keys(moviesGenres).map((x, i) => (\r\n                              <div\r\n                                onClick={() => {\r\n                                  setSelectedMovieGenre(x);\r\n                                }}\r\n                                style={{ display: \"inline-block\" }}\r\n                                key={`genre-for-popular-movie-${i}`}\r\n                                className={`px-4 ${\r\n                                  +selectedMovieGenre === +x\r\n                                    ? \"btn-tertiary-selected text-white\"\r\n                                    : \"btn-tertiary text-light-white\"\r\n                                }`}\r\n                              >\r\n                                {moviesGenres[x]}\r\n                              </div>\r\n                            ))}\r\n                          </SimpleBar>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-60\">\r\n                    {movies.length ? (\r\n                      <React.Fragment>\r\n                        <MoviesList\r\n                          movies={movies.filter((x) => {\r\n                            return (\r\n                              x.genre_ids.includes(+selectedMovieGenre) ||\r\n                              +selectedMovieGenre === 0\r\n                            );\r\n                          })}\r\n                        ></MoviesList>\r\n                      </React.Fragment>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    <div className=\"py-2 row no-gutters\"></div>\r\n                    <div className=\"row no-gutters\">\r\n                      <div className=\"col-60\">\r\n                        {series.length ? (\r\n                          <div className=\"row no-gutters h5 mb-2\">\r\n                            Series ({series.length})\r\n                          </div>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                        <div className=\"row no-gutters justify-content-end text-light align-items-center mb-4\">\r\n                          <div className=\"col-auto\">\r\n                            {Object.keys(seriesGenres).length > 1 ? (\r\n                              <SimpleBar\r\n                                style={{\r\n                                  padding: \"14px 0\",\r\n                                  width: \"100%\",\r\n                                  overflowX: \"auto\",\r\n                                  whiteSpace: \"nowrap\",\r\n                                }}\r\n                              >\r\n                                {Object.keys(seriesGenres).map((x, i) => (\r\n                                  <div\r\n                                    onClick={() => {\r\n                                      setSelectedSerieGenre(x);\r\n                                    }}\r\n                                    style={{ display: \"inline-block\" }}\r\n                                    key={`genre-for-popular-movie-${i}`}\r\n                                    className={`px-4 ${\r\n                                      +selectedSerieGenre === +x\r\n                                        ? \"btn-tertiary-selected text-white\"\r\n                                        : \"btn-tertiary text-light-white\"\r\n                                    }`}\r\n                                  >\r\n                                    {seriesGenres[x]}\r\n                                  </div>\r\n                                ))}\r\n                              </SimpleBar>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {series.length ? (\r\n                      <React.Fragment>\r\n                        <MoviesList\r\n                          prefix={\"serie-\"}\r\n                          movies={series\r\n                            .filter((x) => {\r\n                              return (\r\n                                x.genre_ids.includes(+selectedSerieGenre) ||\r\n                                +selectedSerieGenre === 0\r\n                              );\r\n                            })\r\n                            .map((x) =>\r\n                              Object.assign({}, x, { id: `serie-${x.id}` })\r\n                            )}\r\n                        ></MoviesList>\r\n                      </React.Fragment>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    <div className=\"py-2 row no-gutters\"></div>\r\n                    {reviews.length ? (\r\n                      <React.Fragment>\r\n                        <div className=\"row no-gutters h5 mb-2\">\r\n                          Reviews ({reviews.length})\r\n                        </div>\r\n                        <ReviewsList reviews={reviews}></ReviewsList>\r\n                      </React.Fragment>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    settings: state.settings,\r\n    search: state.search,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(SearchResults);\r\n","import * as React from \"react\";\r\n\r\nfunction Logo(props) {\r\n  return (\r\n    <svg\r\n      fill={\"transparent\"}\r\n      id=\"logo__svg8\"\r\n      viewBox=\"0 0 98.1 111.451\"\r\n      height={\"100%\"}\r\n      {...props}\r\n    >\r\n      <defs id=\"logo__defs2\">\r\n        <clipPath clipPathUnits=\"userSpaceOnUse\" id=\"logo__clipPath923\">\r\n          <rect\r\n            id=\"logo__rect925\"\r\n            width={595.99}\r\n            height={569.726}\r\n            x={359.033}\r\n            y={144.727}\r\n            ry={10.993}\r\n            fill=\"#14bf4f\"\r\n            fillOpacity={0.52}\r\n            strokeWidth={2.513}\r\n            strokeLinecap=\"square\"\r\n            paintOrder=\"markers fill stroke\"\r\n          />\r\n        </clipPath>\r\n        <clipPath id=\"logo__clipPath857\" clipPathUnits=\"userSpaceOnUse\">\r\n          <rect\r\n            ry={11.18}\r\n            y={200.285}\r\n            x={462.025}\r\n            height={421.234}\r\n            width={370.77}\r\n            id=\"logo__rect859\"\r\n            fill=\"#14bf4f\"\r\n            fillOpacity={0.52}\r\n            strokeWidth={2.443}\r\n            strokeLinecap=\"square\"\r\n            paintOrder=\"markers fill stroke\"\r\n          />\r\n        </clipPath>\r\n      </defs>\r\n      <g id=\"logo__layer1\" transform=\"translate(-52.373 -23.252)\">\r\n        <g\r\n          id=\"logo__g917\"\r\n          transform=\"matrix(.26458 0 0 .26458 -69.87 -29.74)\"\r\n          clipPath=\"url(#logo__clipPath857)\"\r\n        >\r\n          <path id=\"logo__rect870\" d=\"M2-3h1286v1026H2z\" />\r\n          <g id=\"logo__g894\">\r\n            <path\r\n              id=\"logo__path872\"\r\n              d=\"M582.17 504.56c-.49.61-1.24.71-1.88 1.03-7.21 3.59-11.41 9.32-12.53 17.34-.5 3.58-.2 7.07.57 10.55.95 4.29 3.05 7.95 6.19 11.01.33.32.68.6 1 .93.28.29.36.64.07.96-.49.54-1.03 1.03-1.51 1.57-4.22 4.78-6.45 10.36-6.11 16.73.58 10.7 7.16 18.96 16.77 21.94.86.27 1.8.3 2.58.87.28.71-.29 1.17-.55 1.69-3.92 7.96-3.6 15.77.77 23.46.31.54.78 1 .83 1.69-.24.55-.76.33-1.16.37-.45.04-.91.01-1.36.01-12.73 0-25.46 0-38.19.01-3.46 0-6.91-.03-10.37.02-8.48.12-16.11-2.48-23.04-7.22-11.1-7.6-17.68-18.06-19.61-31.41-.2-1.35-.37-2.7-.37-4.07.01-16.55-.06-33.1.02-49.65.05-10.03 3.1-19.14 9.2-27.14 5.2-6.82 11.88-11.71 19.87-14.79 5.55-2.14 10.19-5.53 14.06-10.02 2.51-2.91 4.62-6.08 6.44-9.44 3.45-6.37 5.63-13.18 7.11-20.24 1.61-7.69 2.25-15.46 2.19-23.3-.03-4.01 1-7.74 3.02-11.18 3.25-5.51 7.97-9.16 14.2-10.7 12.53-3.11 25.43 6.37 26.53 18.57.59 6.57.3 13.07-.42 19.58-.59 5.33-1.33 10.64-2.39 15.9-1.48 7.32-3.67 14.43-6.41 21.38-.46 1.16-1.19 1.99-2.05 2.82-3.72 3.57-6.06 7.88-6.98 12.98-.98 5.4-.04 10.47 2.39 15.34.38.77 1.08 1.43 1.12 2.41z\"\r\n              className=\"logo__st0\"\r\n            />\r\n            <path\r\n              id=\"logo__path874\"\r\n              d=\"M652.59 618.75c.16-1.11.69-1.64 1.07-2.24 3.91-6.12 5.54-12.8 4.79-20.02-.17-1.62-.61-3.21-.92-4.81-.1-.51.07-.89.6-1.03 1.41-.36 2.82-.7 4.23-1.06 21.37-5.42 40.31-15.44 56.69-30.21 18.45-16.63 31.25-36.94 39.23-60.38.5-1.46 1.02-2.92 1.4-4.41.5-1.9-.94-3.2-2.86-2.63-.69.2-1.35.54-2.02.82-5.52 2.33-11.09 4.56-16.8 6.41-5.55 1.8-11.23 3-17.03 3.61-3.89.41-7.79.67-11.67 1.12-2.31.27-4-.53-5.5-2.26-2-2.29-3.68-4.71-4.49-7.69-.9-3.32-.49-6.47.98-9.54.87-1.83 2.13-3.38 3.47-4.87.83-.92 1.86-1.43 3.1-1.52.82-.06 1.63-.17 2.44-.21 18.74-1.03 35.75-7.12 51-17.94 19.67-13.95 32.95-32.57 39.65-55.79 1.56-5.42 2.53-10.96 3.14-16.58 1.44-13.31-.37-26.29-3.84-39.11-3.07-11.32-7.82-21.88-14.66-31.46-8.18-11.45-18.57-20.38-30.88-27.12-8.24-4.51-16.89-8.05-26.01-10.37-.53-.13-1.06-.26-1.57-.44-.83-.28-1.14-1.31-.58-1.99.34-.42.76-.78 1.16-1.15 4.27-3.96 8.54-7.9 12.81-11.86 2.07-1.92 4.16-3.81 6.17-5.78.77-.76 1.49-.81 2.43-.44 5.08 2 10.07 4.2 14.84 6.85 29.34 16.29 49.33 40.48 60.49 72.02 3.13 8.85 4.97 18.02 5.89 27.38.72 7.26.86 14.54.29 21.79-2.11 26.66-11.41 50.53-28.29 71.35-2.06 2.54-4.26 4.98-6.51 7.35-2.94 3.09-4.53 6.72-4.99 10.94-3.71 34.36-17.62 64.25-39.98 90.31-14.67 17.09-32.59 29.96-52.98 39.44-13.08 6.08-26.69 10.52-40.91 13.05-1.05.2-2.13.3-3.38.47z\"\r\n              className=\"logo__st1\"\r\n            />\r\n            <path\r\n              id=\"logo__path876\"\r\n              d=\"M478.72 519.92c-.5-.47-.63-1.11-.86-1.69-4.42-11.29-7.62-22.91-9.37-34.92-.58-3.95-1.23-7.9-1.91-11.84-.56-3.25-.51-6.52-.46-9.79.05-3.73.12-7.45.13-11.18.01-2.91.14-5.79.65-8.68 1.37-7.69 2.45-15.43 4.34-23.02 6.18-24.86 17.44-47.13 34.09-66.6 20.87-24.41 46.77-41.16 77.51-50.44 5.83-1.76 11.74-3.22 17.76-4.17 1.82-.29 3.12-1.07 4.32-2.47 7.94-9.33 17.04-17.38 27.25-24.18.3-.2.6-.4.91-.6 1.15-.71 1.24-.74 2.09.13 1.53 1.55 3.02 3.15 4.55 4.71.69.71.94 1.53.78 2.49-.07.45-.12.9-.21 1.35-1.42 7.12-2.87 14.24-4.27 21.37-.24 1.22-.76 2.17-1.72 2.98a51.582 51.582 0 00-3.59 3.34c-9.65 9.94-21.33 16.11-34.77 19.32-19.29 4.6-36.74 13.15-52.2 25.58-21.51 17.28-36.31 39.19-44.61 65.49-2.91 9.21-4.75 18.64-5.63 28.27-.67 7.36-.68 14.71-.26 22.07.27 4.8.84 9.6 1.83 14.32.29 1.4 0 2.36-.95 3.42-7.06 7.89-11.63 17.07-13.84 27.42-.38 1.77-.58 3.58-.88 5.38-.11.69.01 1.46-.68 1.94z\"\r\n              className=\"logo__st1\"\r\n            />\r\n            <path\r\n              id=\"logo__path878\"\r\n              d=\"M684.32 203.33c.82.51.98 1.37 1.31 2.09 4.75 10.31 9.53 20.6 14.15 30.97.95 2.14 2.04 3.58 4.52 3.47 11.54 2 23.09 4.01 34.63 6.01.27.05.55.1.77.24.24.14.39.42.15.66-.57.58-1.17 1.14-1.78 1.69-8.21 7.59-16.44 15.16-24.64 22.77-2.32 2.15-2.39 1.45-1.86 5.14.8 5.57 1.64 11.14 2.45 16.72.89 6.11 1.76 12.23 2.63 18.34.05.35.01.72.01 1.09-.93.13-1.52-.54-2.19-.92-9.75-5.46-19.47-10.96-29.2-16.45-.32-.18-.67-.31-.95-.54-1.57-1.25-3.05-.99-4.77-.13-10.07 5.05-20.18 10-30.28 14.97-.87.43-1.77.79-2.66 1.19-.37-.88-.09-1.58.05-2.28 2.25-11.22 4.52-22.43 6.77-33.65.6-2.98.59-2.98-1.59-5.22-7.78-8.03-15.57-16.06-23.35-24.09-.62-.64-1.22-1.3-1.98-2.11.99-.54 1.88-.57 2.73-.67 8.48-.99 16.97-1.96 25.46-2.94 3.07-.35 6.13-.77 9.21-1.04 1.45-.13 2.24-.8 2.9-2.06 4.1-7.9 8.27-15.76 12.42-23.63 1.7-3.2 3.39-6.4 5.09-9.62z\"\r\n              className=\"logo__st0\"\r\n            />\r\n            <path\r\n              id=\"logo__path880\"\r\n              d=\"M623.34 542.48h-36.81c-1.18 0-2.35 0-3.52-.28-4.03-.99-6.84-4.24-6.95-8.36-.1-4.09-.01-8.18-.03-12.27-.02-3.59 2.82-7.96 7.69-8.57.9-.11 1.81-.16 2.71-.16 24.72-.01 49.44-.01 74.16 0 .99 0 2 .05 2.98.22 4.14.73 7.22 4.1 7.36 8.28.14 4.18.14 8.36.01 12.54-.15 4.68-3.82 8.25-8.62 8.59-.81.06-1.64.02-2.45.02-12.17-.01-24.35-.01-36.53-.01z\"\r\n              className=\"logo__st0\"\r\n            />\r\n            <path\r\n              id=\"logo__path882\"\r\n              d=\"M623.37 578.52h-36.8c-1.27 0-2.53 0-3.79-.34-3.89-1.04-6.62-4.26-6.72-8.27-.1-4.18-.11-8.36.01-12.54.12-4.17 3.25-7.6 7.35-8.28.98-.16 1.99-.22 2.98-.22 24.72-.01 49.43-.01 74.15 0 .91 0 1.82.04 2.71.17 4.27.62 7.51 4 7.67 8.29.15 4.17.14 8.36.01 12.54-.15 4.7-3.82 8.28-8.59 8.62-.81.06-1.64.02-2.45.02-12.17.01-24.35.01-36.53.01z\"\r\n              className=\"logo__st0\"\r\n            />\r\n            <path\r\n              id=\"logo__path884\"\r\n              d=\"M620.62 505.62c-6.18 0-12.37-.02-18.55.01-3.5.02-6.64-.99-9.33-3.22-4.56-3.78-6.17-8.75-5.07-14.42 1.09-5.62 4.67-9.32 10.13-11.1 1.57-.51 3.21-.62 4.85-.62 11.91 0 23.82 0 35.74.01 5.36.01 9.69 2.09 12.85 6.47 5.14 7.13 2.02 19.96-8.82 22.6-1.13.28-2.35.25-3.52.26-6.1.02-12.19.01-18.28.01z\"\r\n              className=\"logo__st0\"\r\n            />\r\n            <path\r\n              id=\"logo__path886\"\r\n              d=\"M619.47 614.55c-5.82 0-11.63-.01-17.45 0-2.46 0-4.65-.7-6.49-2.38-1.84-1.67-2.9-3.78-2.96-6.23-.1-4.09-.17-8.19.01-12.27.16-3.75 2.06-6.5 5.57-8.05 1.11-.49 2.28-.6 3.46-.61 1.91-.02 3.82-.01 5.73-.01h28.36c.82 0 1.64.01 2.45.03 4.74.12 8.34 4.48 8.33 8.5-.01 4 .06 8-.01 12-.08 5.04-3.7 8.74-8.74 9-1.36.07-2.73.02-4.09.02h-14.17z\"\r\n              className=\"logo__st0\"\r\n            />\r\n            <path\r\n              id=\"logo__path888\"\r\n              d=\"M733.06 336.76c7.64-.27 16.28 5.85 16.29 16.22.01 10.03-8.33 16.74-16.61 16.68a16.298 16.298 0 01-16.24-16.62c.17-10.3 8.58-16.54 16.56-16.28z\"\r\n              className=\"logo__st1\"\r\n            />\r\n            <path\r\n              id=\"logo__path890\"\r\n              d=\"M706.71 419.78c-5.31.04-11.12-4.33-11.9-9.26-.56-3.55.49-6.65 2.66-9.37 1.19-1.5 2.79-2.58 4.58-3.33 2.17-.9 4.39-1.15 6.63-.36 4.18 1.46 7.2 4.09 8.35 8.54.42 1.63.38 3.24-.12 4.82-1.38 4.33-4.03 7.44-8.55 8.69-.7.19-1.43.23-1.65.27z\"\r\n              className=\"logo__st1\"\r\n            />\r\n            <path\r\n              id=\"logo__path892\"\r\n              d=\"M662.89 381.33c.18 4.2-3.56 9.55-8.04 10.98-1.69.54-3.44.61-5.12.19-3.8-.95-6.71-3.14-8.53-6.66-.82-1.59-.95-3.31-.8-5.05.58-6.87 6.71-11.24 12.19-10.68 5.47.56 10.36 5.78 10.3 11.22z\"\r\n              className=\"logo__st1\"\r\n            />\r\n          </g>\r\n        </g>\r\n      </g>\r\n      <style id=\"style868\" type=\"text/css\">\r\n        {\".logo__st0{fill:#fbfbfb}.logo__st1{fill:#fd0040}\"}\r\n      </style>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { MdSettings, MdGroup, MdRateReview, MdMenu } from \"react-icons/md\";\r\nimport { FaBullhorn } from \"react-icons/fa\";\r\nimport { BsBellFill, BsFillTagFill } from \"react-icons/bs\";\r\nimport store from \"../../store/store\";\r\nimport Logo from \"../../images/Logo\";\r\n\r\nconst menuItems = [\r\n  { name: \"Settings\", icon: MdSettings },\r\n  { name: \"User Management\", icon: MdGroup },\r\n  { name: \"Reviews & Comments\", icon: MdRateReview },\r\n  { name: \"Announcements\", icon: FaBullhorn },\r\n  { name: \"Promotions\", icon: BsFillTagFill },\r\n  { name: \"Notifications\", icon: BsBellFill },\r\n];\r\n\r\nconst LeftSideMenu = ({\r\n  section,\r\n  setSection,\r\n  isMenuOpened,\r\n  mobile = false,\r\n}) => {\r\n  return (\r\n    <div className=\"row no-gutters bg-over-root-lighter text-white h-100 admin-menu\">\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters justify-content-between align-items-center d-flex d-lg-none px-5 mb-4\">\r\n          <div className=\"col-auto h3\">\r\n            <div className=\"row no-gutters align-items-center\">\r\n              <div className=\"square-50 mr-2\">\r\n                <Logo></Logo>\r\n              </div>\r\n              <div className=\"col-auto logo text-title-lg\">CozyPotato</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-auto\">\r\n            <MdMenu\r\n              className=\"cursor-pointer\"\r\n              fontSize=\"34px\"\r\n              onClick={() => {\r\n                store.dispatch({\r\n                  type: \"SET_DASHBOARD_MENU_OPENED\",\r\n                  isOpened: !isMenuOpened,\r\n                });\r\n              }}\r\n            ></MdMenu>\r\n          </div>\r\n        </div>\r\n        {menuItems.map((x, i) => (\r\n          <div\r\n            key={`left-menu-item-${i}`}\r\n            className=\"row no-gutters px-4 mb-2\"\r\n            style={{\r\n              borderLeft:\r\n                section === i\r\n                  ? \"4px solid rgb(255, 0, 64)\"\r\n                  : \"4px solid transparent\",\r\n            }}\r\n          >\r\n            <div className=\"col-60\">\r\n              <div\r\n                onClick={() => {\r\n                  setSection(i);\r\n                  if (mobile) {\r\n                    store.dispatch({\r\n                      type: \"SET_DASHBOARD_MENU_OPENED\",\r\n                      isOpened: !isMenuOpened,\r\n                    });\r\n                  }\r\n                }}\r\n                key={`menu-item-${i}`}\r\n                className={`align-items-center px-3 btn-custom text-left row no-gutters${\r\n                  section === i ? \" bg-custom-primary\" : \"\"\r\n                }`}\r\n              >\r\n                <x.icon className=\"col-auto mr-2\" fontSize=\"24px\"></x.icon>\r\n                <div className=\"col-auto\">{x.name}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftSideMenu;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  UpdateOrCreateSettings,\r\n  ChangeBackgroundMovie,\r\n  GetSettings,\r\n} from \"../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport date from \"date-and-time\";\r\nimport {\r\n  FaFacebookF,\r\n  FaInstagram,\r\n  FaLinkedinIn,\r\n  FaTwitter,\r\n} from \"react-icons/fa\";\r\nimport Loader from \"../utility/Loader\";\r\n\r\nconst socialIcons = [\r\n  { icon: FaFacebookF, name: \"Facebook\" },\r\n  { icon: FaInstagram, name: \"Instagram\" },\r\n  { icon: FaLinkedinIn, name: \"Linkedin\" },\r\n  { icon: FaTwitter, name: \"Twitter\" },\r\n];\r\n\r\nconst Settings = ({ settings }) => {\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const validations = [\r\n    {\r\n      valid:\r\n        (/^http/.test(settings.FacebookLink) || settings.FacebookLink === \"\") &&\r\n        (/^http/.test(settings.TwitterLink) || settings.TwitterLink === \"\") &&\r\n        (/^http/.test(settings.LinkedinLink) || settings.LinkedinLink === \"\") &&\r\n        (/^http/.test(settings.InstagramLink) || settings.InstagramLink === \"\"),\r\n\r\n      error: \"Social link must start with http:// or https://\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={`row no-gutters admin-screen`}>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters border-bottom pb-3 mb-5\">\r\n          <div className=\"col-60 admin-screen-title\">Settings</div>\r\n          <div className=\"col-60\">Configuration settings for admin panel</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-sm-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters mb-1\">\r\n                  Configure API for popular movies (main for now)\r\n                </div>\r\n                <div className=\"row no-gutters\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter API key\"\r\n                    value={settings.movies_api_key}\r\n                    onChange={(e) => {\r\n                      e.persist();\r\n                      store.dispatch({\r\n                        type: \"UPDATE_SETTINGS\",\r\n                        settings: { movies_api_key: e.target.value },\r\n                      });\r\n                    }}\r\n                    className=\"px-3 input-light w-100\"\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters mb-1\">\r\n                  Configure API for movie data\r\n                </div>\r\n                <div className=\"row no-gutters\">\r\n                  <input\r\n                    value={settings.movie_data_api}\r\n                    onChange={(e) => {\r\n                      e.persist();\r\n                      store.dispatch({\r\n                        type: \"UPDATE_SETTINGS\",\r\n                        settings: { movie_data_api: e.target.value },\r\n                      });\r\n                    }}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter API key\"\r\n                    className=\"px-3 input-light w-100\"\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters mb-1\">\r\n                  Configure API for latest movies\r\n                </div>\r\n                <div className=\"row no-gutters\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter API key\"\r\n                    value={settings.latest_movies_api}\r\n                    onChange={(e) => {\r\n                      e.persist();\r\n                      store.dispatch({\r\n                        type: \"UPDATE_SETTINGS\",\r\n                        settings: { latest_movies_api: e.target.value },\r\n                      });\r\n                    }}\r\n                    className=\"px-3 input-light w-100\"\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters mb-1\">Set Captcha API key</div>\r\n                <div className=\"row no-gutters\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter API key\"\r\n                    value={settings.captcha_api_key}\r\n                    onChange={(e) => {\r\n                      e.persist();\r\n                      store.dispatch({\r\n                        type: \"UPDATE_SETTINGS\",\r\n                        settings: { captcha_api_key: e.target.value },\r\n                      });\r\n                    }}\r\n                    className=\"px-3 input-light w-100\"\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-30 col-60 mb-4\">\r\n                    <div className=\"row no-gutters mb-1\">\r\n                      Number of popular reviews to show\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.no_popular_reviews}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { no_popular_reviews: e.target.value },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-30 col-60 mb-4\">\r\n                    <div className=\"row no-gutters mb-1\">\r\n                      Number of popular movies to show\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.no_popular_movies}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { no_popular_movies: e.target.value },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-30 col-60 mb-4\">\r\n                    <div className=\"row no-gutters mb-1\">\r\n                      Number of Reviews allowed per day per user\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.no_allowed_reviews}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { no_allowed_reviews: e.target.value },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-30 col-60 mb-4\">\r\n                    <div className=\"row no-gutters mb-1\">\r\n                      Number of characters allowed in comments\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.no_comment_characters}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { no_comment_characters: e.target.value },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-30 col-60 mb-4\">\r\n                    <div className=\"row no-gutters mb-1\">\r\n                      Number of characters allowed in display name\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.no_display_name_characters}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: {\r\n                              no_display_name_characters: e.target.value,\r\n                            },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-30 col-60 mb-4\">\r\n                    <div className=\"row no-gutters mb-1\">\r\n                      Number of words allowed in review\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.no_review_words}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { no_review_words: e.target.value },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-40 col-60 mb-4\">\r\n                <div className=\"row no-gutters mb-1\">\r\n                  Background image refresh time (days, hours, minutes)\r\n                </div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-20 pr-3\">\r\n                    <div className=\"row no-gutters text-muted\">days</div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.bg_image_refresh_time_days}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: {\r\n                              bg_image_refresh_time_days: e.target.value,\r\n                            },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-20 pr-3\">\r\n                    <div className=\"row no-gutters text-muted\">hours</div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.bg_image_refresh_time_hours}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: {\r\n                              bg_image_refresh_time_hours: e.target.value,\r\n                            },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-20 \">\r\n                    <div className=\"row no-gutters text-muted\">minutes</div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.bg_image_refresh_time_minutes}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: {\r\n                              bg_image_refresh_time_minutes: e.target.value,\r\n                            },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters mb-1\">\r\n                  Current background movie\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <img\r\n                    alt={settings.current_bg_movie.backdrop_path}\r\n                    style={{ maxWidth: \"500px\" }}\r\n                    width=\"100%\"\r\n                    src={`https://image.tmdb.org/t/p/w500${settings.current_bg_movie.backdrop_path}`}\r\n                  ></img>\r\n                </div>\r\n                <div className=\"row no-gutters mb-1\">Title</div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <input\r\n                    disabled\r\n                    className=\"input-light-disabled w-100 px-3\"\r\n                    value={settings.current_bg_movie.title}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <div className=\"col-auto mr-4\">\r\n                    <div className=\"row no-gutters mb-1\">Set Date</div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        disabled\r\n                        className=\"input-light-disabled px-3\"\r\n                        value={date.format(\r\n                          new Date(settings.current_bg_movie.date_set),\r\n                          \"YYYY-MM-DD @ hh:mm A\"\r\n                        )}\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters mb-1\">Refresh Date</div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        disabled\r\n                        className=\"input-light-disabled px-3\"\r\n                        value={date.format(\r\n                          new Date(\r\n                            settings.current_bg_movie.date_set +\r\n                              settings.bg_image_refresh_time_minutes * 60000 +\r\n                              settings.bg_image_refresh_time_hours * 3600000 +\r\n                              settings.bg_image_refresh_time_days * 86400000\r\n                          ),\r\n                          \"YYYY-MM-DD @ hh:mm A\"\r\n                        )}\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row no-gutters\">\r\n                  <div\r\n                    className=\"col-auto btn-custom btn-custom-primary btn-small\"\r\n                    onClick={async () => {\r\n                      if (settings.movies_api_key) {\r\n                        setLoading(true);\r\n                        let res = await ChangeBackgroundMovie(\r\n                          settings.movies_api_key\r\n                        );\r\n                        setLoading(false);\r\n                        if (!res.error) {\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { current_bg_movie: res },\r\n                          });\r\n                        } else {\r\n                          store.dispatch({\r\n                            type: \"SET_NOTIFICATION\",\r\n                            notification: {\r\n                              title: \"Action not allowed\",\r\n                              message: res.error,\r\n                              type: \"failure\",\r\n                            },\r\n                          });\r\n                        }\r\n                      } else {\r\n                        store.dispatch({\r\n                          type: \"SET_NOTIFICATION\",\r\n                          notification: {\r\n                            title: \"Action not allowed\",\r\n                            message:\r\n                              \"You need to set movies api key to change background movie\",\r\n                            type: \"failure\",\r\n                          },\r\n                        });\r\n                      }\r\n                    }}\r\n                  >\r\n                    {loading ? (\r\n                      <Loader\r\n                        color={\"white\"}\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          left: \"10px\",\r\n                          top: 0,\r\n                          bottom: 0,\r\n                          margin: \"auto\",\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                        loading={loading}\r\n                        size={20}\r\n                      ></Loader>\r\n                    ) : (\r\n                      \"Refresh\"\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters mb-1\">Set social links</div>\r\n                {socialIcons.map((x, i) => (\r\n                  <div\r\n                    className=\"row no-gutters mb-2\"\r\n                    key={`social-icons-settings-${i}`}\r\n                  >\r\n                    <div className=\"col-auto mr-2\">\r\n                      <div className=\"square-40 rounded-circle bg-white d-flex flex-center\">\r\n                        <x.icon fontSize=\"24px\" className=\"text-dark\"></x.icon>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <input\r\n                        spellCheck={false}\r\n                        type=\"text\"\r\n                        placeholder={`Paste ${x.name} link`}\r\n                        value={settings[`${x.name}Link`]}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { [`${x.name}Link`]: e.target.value },\r\n                          });\r\n                        }}\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"col-60 mt-3\">\r\n                <div\r\n                  style={{ height: \"30px\", opacity: problem ? 1 : 0 }}\r\n                  className=\"row no-gutters align-items-center text-danger\"\r\n                >\r\n                  {problem}\r\n                </div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\">\r\n                    Cancel\r\n                  </div>\r\n                  <div\r\n                    className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n                    onClick={async () => {\r\n                      let invalid = validations.filter((x) => !x.valid);\r\n                      if (invalid.length) {\r\n                        setProblem(invalid[0].error);\r\n                      } else {\r\n                        setProblem(\"\");\r\n                        let res = await UpdateOrCreateSettings(settings);\r\n                        if (res.error) {\r\n                          store.dispatch({\r\n                            type: \"SET_NOTIFICATION\",\r\n                            notification: {\r\n                              title: \"Error\",\r\n                              message: \"Settings were not updated\",\r\n                              type: \"failure\",\r\n                            },\r\n                          });\r\n                        } else {\r\n                          store.dispatch({\r\n                            type: \"SET_NOTIFICATION\",\r\n                            notification: {\r\n                              title: \"Settings updated!\",\r\n                              message: \"Settings were successfully updated\",\r\n                              type: \"success\",\r\n                            },\r\n                          });\r\n                          GetSettings((settings) => {\r\n                            if (!settings.error) {\r\n                              if (settings.length) {\r\n                                store.dispatch({\r\n                                  type: \"UPDATE_SETTINGS\",\r\n                                  settings: settings[0],\r\n                                });\r\n                              }\r\n                            }\r\n                          });\r\n                        }\r\n                      }\r\n                    }}\r\n                  >\r\n                    Save\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    settings: state.settings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Settings);\r\n","import React from \"react\";\r\nimport LeftSideMenu from \"./LeftSideMenu\";\r\n\r\nconst RightSideMenuFloating = ({ isMenuOpened, setSection, section }) => {\r\n  return (\r\n    <div\r\n      className={`d-block d-lg-none col-60 col-sm-40 col-md-30 col-lg-20 col-xl-15 vh-100 zindex-99 ${\r\n        !isMenuOpened ? \"zindex-0-1\" : \"\"\r\n      }`}\r\n      style={{\r\n        position: \"fixed\",\r\n        right: 0,\r\n        top: 0,\r\n      }}\r\n    >\r\n      <div className=\"w-100 h-100 position-relative\">\r\n        <div\r\n          className=\"container-fluid px-0\"\r\n          style={{\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            right: isMenuOpened ? 0 : \"-100%\",\r\n            transition: \"right 0.3s\",\r\n            position: \"absolute\",\r\n            zIndex: 10,\r\n            background: \"white\",\r\n          }}\r\n        >\r\n          <LeftSideMenu\r\n            mobile={true}\r\n            className=\"text-white bg-internly-90 col-12\"\r\n            section={section}\r\n            isMenuOpened={isMenuOpened}\r\n            setSection={setSection}\r\n          ></LeftSideMenu>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RightSideMenuFloating;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Popover from \"./Popover\";\r\nimport { MdArrowDropDown } from \"react-icons/md\";\r\nimport uniqid from \"uniqid\";\r\n\r\nconst Select = ({\r\n  items,\r\n  btnName,\r\n  className = \"\",\r\n  multipleSelect = false,\r\n  popoverClass = \"\",\r\n  popoverWidth = \"auto\",\r\n  disabled = false,\r\n  onSelect = () => {},\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const opener = useRef(null);\r\n  return disabled ? (\r\n    <div className={popoverClass}>\r\n      <div\r\n        ref={opener}\r\n        className={\r\n          \"user-select-none d-flex justify-content-between align-items-center \" +\r\n          className\r\n        }\r\n      >\r\n        <div className=\"mr-2\">{btnName}</div>\r\n        <MdArrowDropDown\r\n          fontSize=\"16px\"\r\n          strokeWidth=\"1.5px\"\r\n          className=\"text-internly\"\r\n          style={{\r\n            transform: `rotate(${isOpen ? \"180deg\" : \"0deg\"})`,\r\n            transition: \"transform 0.3s\",\r\n          }}\r\n        ></MdArrowDropDown>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Popover\r\n      className={popoverClass}\r\n      arrow={false}\r\n      onOpen={() => setIsOpen(true)}\r\n      onHide={() => setIsOpen(false)}\r\n      content={(w) => (\r\n        <div\r\n          className=\"bg-white\"\r\n          style={{ maxHeight: \"400px\", overflowY: \"auto\", width: w }}\r\n        >\r\n          {items.map((x, i) => (\r\n            <div\r\n              key={uniqid()}\r\n              className=\"popover-item w-100\"\r\n              onClick={() => {\r\n                onSelect(i);\r\n                if (!multipleSelect) {\r\n                  opener.current.click();\r\n                }\r\n              }}\r\n            >\r\n              <div>{x.item ? x.item : x}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    >\r\n      <div\r\n        ref={opener}\r\n        className={\r\n          \"cursor-pointer user-select-none d-flex justify-content-between align-items-center \" +\r\n          className\r\n        }\r\n      >\r\n        <div className=\"mr-2\">{btnName}</div>\r\n        <MdArrowDropDown\r\n          fontSize=\"16px\"\r\n          strokeWidth=\"1.5px\"\r\n          className=\"text-internly\"\r\n          style={{\r\n            transform: `rotate(${isOpen ? \"180deg\" : \"0deg\"})`,\r\n            transition: \"transform 0.3s\",\r\n          }}\r\n        ></MdArrowDropDown>\r\n      </div>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { Checkbox as MuiCheckbox } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"rgb(255, 0, 64)\",\r\n    },\r\n    secondary: {\r\n      main: \"#202020\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Checkbox = (props) => {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <MuiCheckbox {...props}></MuiCheckbox>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport date from \"date-and-time\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport { GetReviews, DeleteMultipleReviews } from \"../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport history from \"../../History\";\r\nimport OkIcon from \"../../images/OkIcon\";\r\n\r\nconst Reviews = ({\r\n  setEditReviewSection,\r\n  setEditReview,\r\n  publicUsers,\r\n  ratings,\r\n}) => {\r\n  const [action, setAction] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"User\");\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [roleFilter, setRoleFilter] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [mainFilter, setMainFilter] = useState({ key: \"\", value: \"\" });\r\n  const [reviews, setReviews] = useState([]);\r\n  const [filteredReviews, setFilteredReviews] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let res = await GetReviews();\r\n      if (!res.error) {\r\n        setReviews(\r\n          res.reverse().map((x) => Object.assign({}, x, { selected: false }))\r\n        );\r\n      }\r\n    }\r\n    getData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    let arr = [...reviews];\r\n    if (reviews.length) {\r\n      if (search) {\r\n        if (searchKey === \"User\") {\r\n          arr = arr.filter((x) =>\r\n            publicUsers[x.author].display_name\r\n              .toLowerCase()\r\n              .includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Review\") {\r\n          arr = arr.filter((x) =>\r\n            x.review.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Movie\") {\r\n          arr = arr.filter(\r\n            (x) =>\r\n              ratings[x.movie_id] &&\r\n              ratings[x.movie_id].movie_title\r\n                .toLowerCase()\r\n                .includes(search.toLowerCase())\r\n          );\r\n        }\r\n      }\r\n\r\n      if (roleFilter) {\r\n        arr = arr.filter((x) => publicUsers[x.author].role === roleFilter);\r\n      }\r\n      if (mainFilter.key === \"role\" && mainFilter.value) {\r\n        arr = arr.filter(\r\n          (x) => publicUsers[x.author][mainFilter.key] === mainFilter.value\r\n        );\r\n      }\r\n\r\n      if (mainFilter.key === \"deleted\" && mainFilter.value) {\r\n        arr = arr.filter((x) => x[\"deleted\"] === mainFilter.value);\r\n      } else {\r\n        arr = arr.filter((x) => !x[\"deleted\"]);\r\n      }\r\n\r\n      setFilteredReviews(arr);\r\n    }\r\n  }, [search, roleFilter, reviews, mainFilter]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //boundaries for slicing reviews array. (pagination)\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= filteredReviews.length) {\r\n    boundaries[1] = boundaries[1] - (boundaries[1] - filteredReviews.length);\r\n  }\r\n\r\n  const handleApply = async (all = false) => {\r\n    if (all) {\r\n      setRoleFilter(role === \"All\" ? \"\" : role);\r\n    }\r\n    if (action === \"Edit\") {\r\n      let selected = filteredReviews.filter((x) => x.selected);\r\n      if (selected.length) {\r\n        setEditReview(selected[0]);\r\n        setEditReviewSection();\r\n      }\r\n    } else if (action === \"Delete\") {\r\n      let selected = filteredReviews.filter((x) => x.selected);\r\n      if (selected.length) {\r\n        let res = await DeleteMultipleReviews(selected.map((x) => x._id));\r\n        if (res.error) {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Error\",\r\n              message: res.error,\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Reviews were deleted\",\r\n              message: \"Reviews were successfully deleted\",\r\n              type: \"success\",\r\n            },\r\n          });\r\n        }\r\n        setRefresh(!refresh);\r\n      }\r\n    }\r\n  };\r\n\r\n  const columns = [\"Title\", \"Review\", \"Rating\", \"Posted on\", \"Reported\"];\r\n\r\n  return (\r\n    <div className=\"row no-gutters\">\r\n      <div className=\"col-60 py-5\">\r\n        <div className=\"row no-gutters h6 mb-3\">\r\n          <div\r\n            className={`col-auto cursor-pointer ${\r\n              !mainFilter.key && !roleFilter ? \"text-primary\" : \"text-dark\"\r\n            }`}\r\n            onClick={() => {\r\n              setMainFilter({ key: \"\", value: \"\" });\r\n              setRoleFilter(\"\");\r\n            }}\r\n          >\r\n            All ({reviews.filter((x) => !x.deleted).length})\r\n          </div>\r\n          <div className=\"col-auto px-2 text-muted\">|</div>\r\n          <div\r\n            onClick={() =>\r\n              setMainFilter((prev) =>\r\n                Object.assign({}, prev, { key: \"role\", value: \"Administrator\" })\r\n              )\r\n            }\r\n            className={`cursor-pointer col-auto ${\r\n              mainFilter.key === \"role\" && mainFilter.value === \"Administrator\"\r\n                ? \"text-primary\"\r\n                : \"text-dark\"\r\n            }`}\r\n          >\r\n            By Administrators (\r\n            {Object.values(publicUsers).length\r\n              ? reviews.filter(\r\n                  (x) =>\r\n                    publicUsers[x.author] &&\r\n                    publicUsers[x.author].role === \"Administrator\" &&\r\n                    !x.deleted\r\n                ).length\r\n              : \"\"}\r\n            )\r\n          </div>\r\n          <div className=\"col-auto px-2 text-muted\">|</div>\r\n          <div\r\n            onClick={() =>\r\n              setMainFilter((prev) =>\r\n                Object.assign({}, prev, { key: \"deleted\", value: true })\r\n              )\r\n            }\r\n            className={`cursor-pointer col-auto ${\r\n              mainFilter.key === \"deleted\" && mainFilter.value === true\r\n                ? \"text-primary\"\r\n                : \"text-dark\"\r\n            }`}\r\n          >\r\n            Deleted ({reviews.filter((x) => x.deleted).length})\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters justify-content-between\">\r\n          <div className=\"col-sm-auto col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    popoverClass=\"col-60 col-sm-auto\"\r\n                    onSelect={(index) => setAction([\"Delete\"][index])}\r\n                    items={[\"Delete\"]}\r\n                    btnName={action ? action : \"Select Action\"}\r\n                    className=\"input-light px-3 col-auto \"\r\n                  ></Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    popoverClass=\"col-60 col-sm-auto\"\r\n                    onSelect={(index) =>\r\n                      setRole([\"All\", \"Administrator\", \"User\"][index])\r\n                    }\r\n                    items={[\"All\", \"Administrator\", \"User\"]}\r\n                    btnName={role ? role : \"Select Role\"}\r\n                    className=\"input-light px-3 col-auto\"\r\n                  ></Select>\r\n                </div>\r\n              </div>\r\n              <div\r\n                onClick={() => handleApply(true)}\r\n                className=\"btn-custom btn-custom-primary col-60 col-sm-auto mb-3 mr-3 btn-xsmall\"\r\n              >\r\n                Apply\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-60 d-block d-sm-none\">\r\n            <div className=\"row no-gutters mb-3\">\r\n              <Select\r\n                popoverClass=\"w-100\"\r\n                onSelect={(index) =>\r\n                  setSearchKey([\"User\", \"Review\", \"Movie\"][index])\r\n                }\r\n                className=\"input-light col-60\"\r\n                items={[\"User\", \"Review\", \"Movie\"]}\r\n                btnName={`Search by ${searchKey}`}\r\n              ></Select>\r\n            </div>\r\n            <div className=\"row no-gutters mb-3\">\r\n              <div className=\"col-60 position-relative\">\r\n                <BsSearch\r\n                  fontSize=\"20px\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    margin: \"auto\",\r\n                    right: \"18px\",\r\n                  }}\r\n                ></BsSearch>\r\n                <input\r\n                  className=\"input-light w-100 pr-5 pl-3\"\r\n                  value={search}\r\n                  onChange={(e) => {\r\n                    e.persist();\r\n                    setSearch(e.target.value);\r\n                  }}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-auto mb-3 d-none d-sm-block\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                onSelect={(index) =>\r\n                  setSearchKey([\"User\", \"Review\", \"Movie\"][index])\r\n                }\r\n                className=\"table-input-prepend-select col-auto\"\r\n                items={[\"User\", \"Review\", \"Movie\"]}\r\n                btnName={`Search by ${searchKey}`}\r\n              ></Select>\r\n              <div className=\"col position-relative\">\r\n                <BsSearch\r\n                  fontSize=\"20px\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    margin: \"auto\",\r\n                    right: \"18px\",\r\n                  }}\r\n                ></BsSearch>\r\n                <input\r\n                  value={search}\r\n                  onChange={(e) => {\r\n                    e.persist();\r\n                    setSearch(e.target.value);\r\n                  }}\r\n                  className=\"table-input pr-5 pl-3\"\r\n                  style={{ minWidth: \"300px\" }}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <Swipeable\r\n            style={{ minWidth: \"100%\" }}\r\n            onSwipedLeft={() => {\r\n              setLastVisibleColumn(\r\n                lastVisibleColumn + 1 < 4\r\n                  ? lastVisibleColumn + 1\r\n                  : lastVisibleColumn\r\n              );\r\n            }}\r\n            onSwipedRight={() => {\r\n              setLastVisibleColumn(\r\n                lastVisibleColumn - 1 >= 0\r\n                  ? lastVisibleColumn - 1\r\n                  : lastVisibleColumn\r\n              );\r\n            }}\r\n          >\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table bg-white border\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">\r\n                      <Checkbox\r\n                        color={\"primary\"}\r\n                        checked={\r\n                          reviews\r\n                            .slice(boundaries[0], boundaries[1])\r\n                            .filter((x) => x.selected).length ===\r\n                          boundaries[1] - boundaries[0]\r\n                        }\r\n                        onChange={(e) => {\r\n                          setFilteredReviews((prev) => {\r\n                            let arr = [...prev];\r\n                            for (\r\n                              let i = boundaries[0];\r\n                              i < boundaries[1];\r\n                              i++\r\n                            ) {\r\n                              arr[i].selected = e.target.checked;\r\n                            }\r\n                            return arr;\r\n                          });\r\n                        }}\r\n                      ></Checkbox>\r\n                    </th>\r\n                    <th className=\"table-header text-truncate text-left\">\r\n                      <div className=\"d-none d-lg-block\">Posted By</div>\r\n                      <div className=\"d-block d-lg-none\">By</div>\r\n                    </th>\r\n                    <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                      {columns[lastVisibleColumn]}\r\n                    </th>\r\n                    {columns.map((x, i) => (\r\n                      <th\r\n                        key={`header-col-${i}`}\r\n                        className=\"d-none d-xl-table-cell table-header text-truncate\"\r\n                      >\r\n                        <div>{x}</div>\r\n                      </th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {filteredReviews.length ? (\r\n                    filteredReviews\r\n                      .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                      .map((x, i) => (\r\n                        <tr\r\n                          className=\"font-weight-600 bg-light\"\r\n                          key={`shortlist-item-${i}`}\r\n                        >\r\n                          <td className=\"text-center\">\r\n                            <Checkbox\r\n                              color={\"primary\"}\r\n                              checked={x.selected}\r\n                              onChange={(e) => {\r\n                                setFilteredReviews((prev) => {\r\n                                  let arr = [...prev];\r\n                                  arr[(page - 1) * 5 + i].selected =\r\n                                    e.target.checked;\r\n                                  return arr;\r\n                                });\r\n                              }}\r\n                            ></Checkbox>\r\n                          </td>\r\n                          <td>\r\n                            {publicUsers[x.author] ? (\r\n                              <div>\r\n                                <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                  <div className=\"d-inline-block mr-2\">\r\n                                    <div\r\n                                      className=\"square-50 rounded-circle bg-image\"\r\n                                      style={{\r\n                                        backgroundImage: `url(${\r\n                                          publicUsers[x.author].photo\r\n                                        })`,\r\n                                      }}\r\n                                    ></div>\r\n                                  </div>\r\n                                  <div className=\"d-none d-md-inline-block align-top\">\r\n                                    <div className=\"h6 text-primary\">\r\n                                      {publicUsers[x.author].display_name}\r\n                                    </div>\r\n                                    <div className=\"mb-2\">\r\n                                      {publicUsers[x.author].email}\r\n                                    </div>\r\n                                    <div className=\"d-flex\">\r\n                                      <div\r\n                                        className=\"text-primary underline-link\"\r\n                                        onClick={() => {\r\n                                          setEditReview(x);\r\n                                          setEditReviewSection();\r\n                                        }}\r\n                                      >\r\n                                        Edit\r\n                                      </div>\r\n                                      <div className=\"px-2\">|</div>\r\n                                      <div\r\n                                        className=\"text-danger underline-link\"\r\n                                        onClick={async () => {\r\n                                          let res = await DeleteMultipleReviews(\r\n                                            [x._id]\r\n                                          );\r\n                                          if (res.error) {\r\n                                            store.dispatch({\r\n                                              type: \"SET_NOTIFICATION\",\r\n                                              notification: {\r\n                                                title: \"Error\",\r\n                                                message: res.error,\r\n                                                type: \"failure\",\r\n                                              },\r\n                                            });\r\n                                          } else {\r\n                                            store.dispatch({\r\n                                              type: \"SET_NOTIFICATION\",\r\n                                              notification: {\r\n                                                title: \"Review was deleted\",\r\n                                                message:\r\n                                                  \"Review was successfully deleted\",\r\n                                                type: \"success\",\r\n                                              },\r\n                                            });\r\n                                          }\r\n                                          setRefresh(!refresh);\r\n                                        }}\r\n                                      >\r\n                                        Delete\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 0\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div style={{ maxWidth: \"150px\" }}>\r\n                              {ratings[x.movie_id]\r\n                                ? ratings[x.movie_id].movie_title\r\n                                : \"\"}\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 1\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div>\r\n                              <div\r\n                                style={{ minWidth: \"200px\" }}\r\n                                className=\"cursor-pointer user-select-none btn-link text-clamp-4\"\r\n                                onClick={(e) => {\r\n                                  history.push(`/movie/${x.movie_id}/${x._id}`);\r\n                                }}\r\n                              >\r\n                                {x.review}\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 2\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            {x.rating === \"ok_rate\" ? (\r\n                              <div style={{ marginTop: \"-4px\" }}>\r\n                                <OkIcon size={24}></OkIcon>\r\n                              </div>\r\n                            ) : (\r\n                              <div style={{ marginBottom: \"-6px\" }}>\r\n                                <Emoji\r\n                                  emoji={\r\n                                    x.rating === \"excellent_rate\"\r\n                                      ? \"fire\"\r\n                                      : x.rating === \"good_rate\"\r\n                                      ? \"heart\"\r\n                                      : x.rating === \"ok_rate\"\r\n                                      ? \"heavy_division_sign\"\r\n                                      : \"shit\"\r\n                                  }\r\n                                  set=\"facebook\"\r\n                                  size={24}\r\n                                />\r\n                              </div>\r\n                            )}\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 3\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div style={{ whiteSpace: \"nowrap\" }}>\r\n                              {date.format(\r\n                                new Date(x.date),\r\n                                \"DD/MM/YYYY @ hh:mm A\"\r\n                              )}\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 4\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            {x.reported ? (\r\n                              <div className=\"text-danger\">Abused</div>\r\n                            ) : (\r\n                              <div className=\"text-success\">No</div>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan={7} className=\" text-center py-5\">\r\n                        0 results found\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </Swipeable>\r\n        </div>\r\n        <div className=\"row no-gutters justify-content-center justify-content-sm-end\">\r\n          <div className=\"col-auto\">\r\n            <Pagination\r\n              count={Math.ceil(filteredReviews.length / 5)}\r\n              current={page}\r\n              setCurrent={setPage}\r\n            ></Pagination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Reviews);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport date from \"date-and-time\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport { GetComments, DeleteMultipleComments } from \"../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport history from \"../../History\";\r\n\r\nconst Comments = ({\r\n  setEditCommentSection,\r\n  setEditComment,\r\n  publicUsers,\r\n  ratings,\r\n}) => {\r\n  const [action, setAction] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"User\");\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [roleFilter, setRoleFilter] = useState(\"\");\r\n  const [mainFilter, setMainFilter] = useState({ key: \"\", value: \"\" });\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [comments, setComments] = useState([]);\r\n  const [commentsObj, setCommentsObj] = useState({});\r\n\r\n  const [filteredComments, setFilteredComments] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let res = await GetComments();\r\n      if (!res.error) {\r\n        setComments(\r\n          res.reverse().map((x) => Object.assign({}, x, { selected: false }))\r\n        );\r\n        let obj = {};\r\n        res.forEach((x) => {\r\n          obj[x._id] = x;\r\n        });\r\n        setCommentsObj(obj);\r\n      }\r\n    }\r\n    getData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    let arr = [...comments];\r\n    if (comments.length) {\r\n      if (search) {\r\n        if (searchKey === \"User\") {\r\n          arr = arr.filter((x) =>\r\n            publicUsers[x.author].display_name\r\n              .toLowerCase()\r\n              .includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Comment\") {\r\n          arr = arr.filter((x) =>\r\n            x.comment.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        }\r\n      }\r\n\r\n      if (roleFilter) {\r\n        arr = arr.filter((x) => publicUsers[x.author].role === roleFilter);\r\n      }\r\n\r\n      if (mainFilter.key === \"role\" && mainFilter.value) {\r\n        arr = arr.filter(\r\n          (x) => publicUsers[x.author][mainFilter.key] === mainFilter.value\r\n        );\r\n      }\r\n\r\n      if (mainFilter.key === \"deleted\" && mainFilter.value) {\r\n        arr = arr.filter((x) => x[\"deleted\"] === mainFilter.value);\r\n      } else {\r\n        arr = arr.filter((x) => !x[\"deleted\"]);\r\n      }\r\n\r\n      setFilteredComments(arr);\r\n    }\r\n  }, [search, roleFilter, comments, mainFilter]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //boundaries for slicing comments array. (pagination)\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= filteredComments.length) {\r\n    boundaries[1] = boundaries[1] - (boundaries[1] - filteredComments.length);\r\n  }\r\n\r\n  const handleApply = async (all = false) => {\r\n    if (all) {\r\n      setRoleFilter(role === \"All\" ? \"\" : role);\r\n    }\r\n    let selected = filteredComments.filter((x) => x.selected);\r\n    if (selected.length) {\r\n      if (action === \"Edit\") {\r\n        setEditComment(selected[0]);\r\n        setEditCommentSection();\r\n      } else {\r\n        let ids = selected.map((x) => x._id);\r\n        let allIds = [...ids];\r\n\r\n        const fetchIds = (idsArr) => {\r\n          allIds = allIds.concat(idsArr);\r\n          idsArr.forEach((x) => fetchIds(commentsObj[x].comments));\r\n        };\r\n\r\n        fetchIds(ids);\r\n\r\n        let res = await DeleteMultipleComments(allIds);\r\n        if (res.error) {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Error\",\r\n              message: res.error,\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Comments were deleted\",\r\n              message: \"Comments were successfully deleted\",\r\n              type: \"success\",\r\n            },\r\n          });\r\n          setRefresh(!refresh);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row no-gutters\">\r\n      <div className=\"col-60 py-5\">\r\n        <div className=\"row no-gutters h6 mb-3\">\r\n          <div\r\n            className={`col-auto cursor-pointer ${\r\n              !mainFilter.key && !roleFilter ? \"text-primary\" : \"text-dark\"\r\n            }`}\r\n            onClick={() => {\r\n              setMainFilter({ key: \"\", value: \"\" });\r\n              setRoleFilter(\"\");\r\n            }}\r\n          >\r\n            All ({comments.filter((x) => !x.deleted).length})\r\n          </div>\r\n          <div className=\"col-auto px-2 text-muted\">|</div>\r\n          <div\r\n            onClick={() =>\r\n              setMainFilter((prev) =>\r\n                Object.assign({}, prev, { key: \"role\", value: \"Administrator\" })\r\n              )\r\n            }\r\n            className={`cursor-pointer col-auto ${\r\n              mainFilter.key === \"role\" && mainFilter.value === \"Administrator\"\r\n                ? \"text-primary\"\r\n                : \"text-dark\"\r\n            }`}\r\n          >\r\n            By Administrators (\r\n            {Object.values(publicUsers).length\r\n              ? comments.filter(\r\n                  (x) =>\r\n                    publicUsers[x.author].role === \"Administrator\" && !x.deleted\r\n                ).length\r\n              : \"\"}\r\n            )\r\n          </div>\r\n          <div className=\"col-auto px-2 text-muted\">|</div>\r\n          <div\r\n            onClick={() =>\r\n              setMainFilter((prev) =>\r\n                Object.assign({}, prev, { key: \"deleted\", value: true })\r\n              )\r\n            }\r\n            className={`cursor-pointer col-auto ${\r\n              mainFilter.key === \"deleted\" && mainFilter.value === true\r\n                ? \"text-primary\"\r\n                : \"text-dark\"\r\n            }`}\r\n          >\r\n            Deleted ({comments.filter((x) => x.deleted).length})\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters justify-content-between\">\r\n          <div className=\"col-sm-auto col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    popoverClass=\"col-60 col-sm-auto\"\r\n                    onSelect={(index) => setAction([\"Delete\"][index])}\r\n                    items={[\"Delete\"]}\r\n                    btnName={action ? action : \"Select Action\"}\r\n                    className=\"input-light px-3 col-auto\"\r\n                  ></Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    popoverClass=\"col-60 col-sm-auto\"\r\n                    onSelect={(index) =>\r\n                      setRole([\"All\", \"Administrator\", \"User\"][index])\r\n                    }\r\n                    items={[\"All\", \"Administrator\", \"User\"]}\r\n                    btnName={role ? role : \"Select Role\"}\r\n                    className=\"input-light px-3 col-auto\"\r\n                  ></Select>\r\n                </div>\r\n              </div>\r\n              <div\r\n                onClick={() => handleApply(true)}\r\n                className=\"btn-custom btn-custom-primary col-60 col-sm-auto mb-3 mr-3 btn-xsmall\"\r\n              >\r\n                Apply\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-60 d-block d-sm-none\">\r\n            <div className=\"row no-gutters mb-3\">\r\n              <Select\r\n                popoverClass=\"w-100\"\r\n                onSelect={(index) => setSearchKey([\"User\", \"Comment\"][index])}\r\n                className=\"input-light col-60\"\r\n                items={[\"User\", \"Comment\"]}\r\n                btnName={`Search by ${searchKey}`}\r\n              ></Select>\r\n            </div>\r\n            <div className=\"row no-gutters mb-3\">\r\n              <div className=\"col-60 position-relative\">\r\n                <BsSearch\r\n                  fontSize=\"20px\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    margin: \"auto\",\r\n                    right: \"18px\",\r\n                  }}\r\n                ></BsSearch>\r\n                <input\r\n                  className=\"input-light w-100 pr-5 pl-3\"\r\n                  value={search}\r\n                  onChange={(e) => {\r\n                    e.persist();\r\n                    setSearch(e.target.value);\r\n                  }}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-auto mb-3 d-none d-sm-block\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                onSelect={(index) => setSearchKey([\"User\", \"Comment\"][index])}\r\n                className=\"table-input-prepend-select col-auto\"\r\n                items={[\"User\", \"Comment\"]}\r\n                btnName={`Search by ${searchKey}`}\r\n              ></Select>\r\n              <div className=\"col position-relative\">\r\n                <BsSearch\r\n                  fontSize=\"20px\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    margin: \"auto\",\r\n                    right: \"18px\",\r\n                  }}\r\n                ></BsSearch>\r\n                <input\r\n                  value={search}\r\n                  onChange={(e) => {\r\n                    e.persist();\r\n                    setSearch(e.target.value);\r\n                  }}\r\n                  className=\"table-input pr-5 pl-3\"\r\n                  style={{ minWidth: \"300px\" }}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <Swipeable\r\n            style={{ minWidth: \"100%\" }}\r\n            onSwipedLeft={() => {\r\n              setLastVisibleColumn(\r\n                lastVisibleColumn + 1 < 4\r\n                  ? lastVisibleColumn + 1\r\n                  : lastVisibleColumn\r\n              );\r\n            }}\r\n            onSwipedRight={() => {\r\n              setLastVisibleColumn(\r\n                lastVisibleColumn - 1 >= 0\r\n                  ? lastVisibleColumn - 1\r\n                  : lastVisibleColumn\r\n              );\r\n            }}\r\n          >\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table bg-white border\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">\r\n                      <Checkbox\r\n                        color={\"primary\"}\r\n                        checked={\r\n                          filteredComments\r\n                            .slice(boundaries[0], boundaries[1])\r\n                            .filter((x) => x.selected).length ===\r\n                          boundaries[1] - boundaries[0]\r\n                        }\r\n                        onChange={(e) => {\r\n                          setFilteredComments((prev) => {\r\n                            let arr = [...prev];\r\n                            for (\r\n                              let i = boundaries[0];\r\n                              i < boundaries[1];\r\n                              i++\r\n                            ) {\r\n                              arr[i].selected = e.target.checked;\r\n                            }\r\n                            return arr;\r\n                          });\r\n                        }}\r\n                      ></Checkbox>\r\n                    </th>\r\n                    <th className=\"table-header text-truncate text-left\">\r\n                      <div className=\"d-none d-lg-block\">Posted By</div>\r\n                      <div className=\"d-block d-lg-none\">By</div>\r\n                    </th>\r\n                    <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                      {\r\n                        [\"Comment\", \"In Repsonse To\", \"Posted On\", \"Reported\"][\r\n                          lastVisibleColumn\r\n                        ]\r\n                      }\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                      <div>Comment</div>\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                      <div>In Response To</div>\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                      <div>Posted On</div>\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                      <div>Reported</div>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {filteredComments.length ? (\r\n                    filteredComments\r\n                      .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                      .map((x, i) => (\r\n                        <tr\r\n                          className=\"font-weight-600 bg-light\"\r\n                          key={`shortlist-item-${i}`}\r\n                        >\r\n                          <td className=\"text-center\">\r\n                            <Checkbox\r\n                              color={\"primary\"}\r\n                              checked={x.selected}\r\n                              onChange={(e) => {\r\n                                setFilteredComments((prev) => {\r\n                                  let arr = [...prev];\r\n                                  arr[(page - 1) * 5 + i].selected =\r\n                                    e.target.checked;\r\n                                  return arr;\r\n                                });\r\n                              }}\r\n                            ></Checkbox>\r\n                          </td>\r\n                          <td>\r\n                            <div>\r\n                              {publicUsers[x.author] ? (\r\n                                <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                  <div className=\"d-inline-block mr-2\">\r\n                                    <div\r\n                                      className=\"square-50 rounded-circle bg-image\"\r\n                                      style={{\r\n                                        backgroundImage: `url(${\r\n                                          publicUsers[x.author].photo\r\n                                        })`,\r\n                                      }}\r\n                                    ></div>\r\n                                  </div>\r\n                                  <div className=\"d-none d-md-inline-block align-top\">\r\n                                    <div className=\"text-primary\">\r\n                                      {publicUsers[x.author].display_name}\r\n                                    </div>\r\n                                    <div className=\"mb-2\">\r\n                                      {publicUsers[x.author].email}\r\n                                    </div>\r\n                                    <div className=\"d-flex\">\r\n                                      <div\r\n                                        className=\"text-primary underline-link\"\r\n                                        onClick={() => {\r\n                                          setEditComment(x);\r\n                                          setEditCommentSection();\r\n                                        }}\r\n                                      >\r\n                                        Edit\r\n                                      </div>\r\n                                      <div className=\"px-2\">|</div>\r\n                                      <div\r\n                                        className=\"text-danger underline-link\"\r\n                                        onClick={async () => {\r\n                                          let allIds = [x._id];\r\n\r\n                                          const fetchIds = (idsArr) => {\r\n                                            allIds = allIds.concat(idsArr);\r\n                                            idsArr.forEach((id) =>\r\n                                              fetchIds(commentsObj[id].comments)\r\n                                            );\r\n                                          };\r\n\r\n                                          fetchIds(allIds);\r\n\r\n                                          let res = await DeleteMultipleComments(\r\n                                            allIds\r\n                                          );\r\n                                          if (res.error) {\r\n                                            store.dispatch({\r\n                                              type: \"SET_NOTIFICATION\",\r\n                                              notification: {\r\n                                                title: \"Error\",\r\n                                                message: res.error,\r\n                                                type: \"failure\",\r\n                                              },\r\n                                            });\r\n                                          } else {\r\n                                            store.dispatch({\r\n                                              type: \"SET_NOTIFICATION\",\r\n                                              notification: {\r\n                                                title: \"Comment was deleted\",\r\n                                                message:\r\n                                                  \"Comment was successfully deleted\",\r\n                                                type: \"success\",\r\n                                              },\r\n                                            });\r\n                                          }\r\n                                          setRefresh(!refresh);\r\n                                        }}\r\n                                      >\r\n                                        Delete\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 0\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div>\r\n                              <div\r\n                                style={{ minWidth: \"200px\" }}\r\n                                className=\"cursor-pointer user-select-none btn-link text-clamp-4\"\r\n                                onClick={(e) => {\r\n                                  history.push(\r\n                                    `/movie/${x.movie_id}/${x.review_id}/${x._id}`\r\n                                  );\r\n                                }}\r\n                              >\r\n                                {x.comment}\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 1\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div>\r\n                              Movie:{\" \"}\r\n                              {ratings[x.movie_id]\r\n                                ? ratings[x.movie_id].movie_title\r\n                                : \"\"}\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                              <div\r\n                                onClick={async () => {\r\n                                  history.push(\r\n                                    `/movie/${x.movie_id}/${x.review_id}`\r\n                                  );\r\n                                }}\r\n                                className=\"text-primary cursor-pointer\"\r\n                                style={{ whiteSpace: \"nowrap\" }}\r\n                              >\r\n                                View Review\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 2\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div style={{ whiteSpace: \"nowrap\" }}>\r\n                              {date.format(\r\n                                new Date(x.date),\r\n                                \"DD/MM/YYYY @ hh:mm A\"\r\n                              )}\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 3\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            {x.reported ? (\r\n                              <div className=\"text-danger\">Abused</div>\r\n                            ) : (\r\n                              <div className=\"text-success\">No</div>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan={6} className=\"text-center py-5\">\r\n                        0 results found\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n                {/* <tfoot>\r\n                  <tr>\r\n                    <th className=\"text-center\">\r\n                      <Checkbox\r\n                        color={\"primary\"}\r\n                        checked={\r\n                          comments\r\n                            .slice(boundaries[0], boundaries[1])\r\n                            .filter((x) => x.selected).length ===\r\n                          boundaries[1] - boundaries[0]\r\n                        }\r\n                        onChange={(e) => {\r\n                          setFilteredComments((prev) => {\r\n                            let arr = [...prev];\r\n                            for (\r\n                              let i = boundaries[0];\r\n                              i < boundaries[1];\r\n                              i++\r\n                            ) {\r\n                              arr[i].seleCted = e.target.checked;\r\n                            }\r\n                            return arr;\r\n                          });\r\n                        }}\r\n                      ></Checkbox>\r\n                    </th>\r\n                    <th className=\"table-footer text-truncate text-left\">\r\n                      <div className=\"d-none d-lg-block\">Posted By</div>\r\n                      <div className=\"d-block d-lg-none\">By</div>\r\n                    </th>\r\n                    <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                      {\r\n                        [\r\n                          \"Posted By\",\r\n                          \"Review\",\r\n                          \"Reported\",\r\n                          \"Movie Name\",\r\n                          \"Posted On\",\r\n                        ][lastVisibleColumn]\r\n                      }\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                      <div>Comment</div>\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                      <div>Reported</div>\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                      <div>In Response To</div>\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                      <div>Posted On</div>\r\n                    </th>\r\n                  </tr>\r\n                </tfoot> */}\r\n              </table>\r\n            </div>\r\n          </Swipeable>\r\n        </div>\r\n        <div className=\"row no-gutters justify-content-center justify-content-sm-end\">\r\n          <div className=\"col-auto\">\r\n            <Pagination\r\n              count={Math.ceil(filteredComments.length / 5)}\r\n              current={page}\r\n              setCurrent={setPage}\r\n            ></Pagination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Comments);\r\n","import React, { useState } from \"react\";\r\nimport Reviews from \"./Reviews\";\r\nimport Comments from \"./Comments\";\r\n\r\nconst ReviewsAndComments = ({\r\n  setEditReview,\r\n  setEditReviewSection,\r\n  setEditCommentSection,\r\n  setEditComment,\r\n  containerSpacing,\r\n}) => {\r\n  const [tab, setTab] = useState(0);\r\n\r\n  return (\r\n    <div className={`row no-gutters admin-screen`}>\r\n      <div className=\"col-60 border-bottom\">\r\n        <div className=\"row no-gutters justify-content-between\">\r\n          <div className=\"col-auto pb-3\">\r\n            <div className=\"row no-gutters admin-screen-title\">\r\n              Reviews & Comments\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              Add, edit or delete reviews and comments\r\n            </div>\r\n          </div>\r\n          <div className=\"col-auto py-3\">\r\n            <div className=\"row no-gutters cursor-pointer\">\r\n              <div\r\n                style={{ width: \"150px\" }}\r\n                onClick={() => setTab(0)}\r\n                className={`rounded-left col table-btn${\r\n                  tab === 0 ? \" table-btn-selected\" : \"\"\r\n                }`}\r\n              >\r\n                Reviews\r\n              </div>\r\n              <div\r\n                style={{ width: \"150px\" }}\r\n                onClick={() => setTab(1)}\r\n                className={`rounded-right col table-btn${\r\n                  tab === 1 ? \" table-btn-selected\" : \"\"\r\n                }`}\r\n              >\r\n                Comments\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        {tab === 0 ? (\r\n          <Reviews\r\n            setEditReviewSection={setEditReviewSection}\r\n            setEditReview={setEditReview}\r\n          ></Reviews>\r\n        ) : (\r\n          <Comments\r\n            setEditComment={setEditComment}\r\n            setEditCommentSection={setEditCommentSection}\r\n          ></Comments>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewsAndComments;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport { Ratings } from \"../../Data\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport { EditReviewForAdmin } from \"../../server/DatabaseApi\";\r\nimport Loader from \"../utility/Loader\";\r\n\r\nconst EditReview = ({\r\n  currentReview,\r\n  publicUsers,\r\n  getBack,\r\n  ratings,\r\n  admin,\r\n}) => {\r\n  const [review, setReview] = useState({});\r\n  const [user, setUser] = useState({ display_name: \"\", email: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    if (currentReview) {\r\n      setReview(currentReview);\r\n      setUser(publicUsers[currentReview.author]);\r\n    }\r\n  }, [currentReview]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\" style={{ maxWidth: \"800px\" }}>\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">\r\n          Reviews & Comments\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          Add, edit and delete reviews and comments\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Display name</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"input-light w-100 px-3\"\r\n              value={user.display_name}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setUser((prev) =>\r\n                  Object.assign({}, prev, { display_name: e.target.value })\r\n                );\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Message</div>\r\n          <div className=\"col-60\">\r\n            <textarea\r\n              value={review.review ? review.review : \"\"}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setReview((prev) =>\r\n                  Object.assign({}, prev, { review: e.target.value })\r\n                );\r\n              }}\r\n              className=\"textarea-light w-100\"\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mb-4\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"60 mb-1\">Rating</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <Select\r\n            popoverClass=\"col-md-30 col-60\"\r\n            className=\"input-light px-3\"\r\n            btnName={\r\n              review.rating\r\n                ? Ratings.find((x) => x.name === review.rating).element\r\n                : \"Select\"\r\n            }\r\n            onSelect={(index) => {\r\n              setReview((prev) =>\r\n                Object.assign({}, prev, { rating: Ratings[index].name })\r\n              );\r\n            }}\r\n            items={Ratings.map((x) => x.element)}\r\n          ></Select>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mb-4\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"60 mb-1\">Report status</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <Select\r\n            popoverClass=\"col-md-30 col-60\"\r\n            className=\"input-light px-3\"\r\n            btnName={review.reported ? \"Reported\" : \"Not Reported\"}\r\n            onSelect={(index) => {\r\n              setReview((prev) =>\r\n                Object.assign({}, prev, {\r\n                  reported: index === 0 ? true : false,\r\n                })\r\n              );\r\n            }}\r\n            items={[\"Reported\", \"Not Reported\"]}\r\n          ></Select>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mb-4\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"60 mb-1\">Title</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <input\r\n            value={ratings[currentReview.movie_id].movie_title}\r\n            disabled\r\n            className=\"input-light-disabled col-md-30 col-60 px-3\"\r\n          ></input>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mt-5\">\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n            onClick={() => getBack()}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n            onClick={async () => {\r\n              try {\r\n                setLoading(true);\r\n                let res = await EditReviewForAdmin(review, user);\r\n                setLoading(false);\r\n                if (res.error) {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Error\",\r\n                      message: res.error,\r\n                      type: \"failure\",\r\n                    },\r\n                  });\r\n                } else {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Review updated\",\r\n                      message: \"Review was successfully updated\",\r\n                      type: \"success\",\r\n                    },\r\n                  });\r\n                  store.dispatch({\r\n                    type: \"UPDATE_RATINGS\",\r\n                    rating: {\r\n                      [review.movie_id]: res.rating,\r\n                    },\r\n                  });\r\n                  if (admin._id === review.author) {\r\n                    let adminRatings = { ...admin.ratings };\r\n                    adminRatings[review.movie_id] = {\r\n                      movie_id: review.movie_id,\r\n                      rate_type: review.rating,\r\n                    };\r\n\r\n                    store.dispatch({\r\n                      type: \"UPDATE_USER\",\r\n                      userProperty: {\r\n                        ratings: adminRatings,\r\n                      },\r\n                    });\r\n                  }\r\n\r\n                  getBack();\r\n                }\r\n              } catch (er) {}\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    admin: state.user,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(EditReview);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport { EditCommentForAdmin } from \"../../server/DatabaseApi\";\r\nimport Loader from \"../utility/Loader\";\r\n\r\nconst EditComment = ({ currentComment, publicUsers, getBack }) => {\r\n  const [comment, setComment] = useState({});\r\n  const [user, setUser] = useState({ display_name: \"\", email: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentComment) {\r\n      setComment(currentComment);\r\n      setUser(publicUsers[currentComment.author]);\r\n    }\r\n  }, [currentComment]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\" style={{ maxWidth: \"800px\" }}>\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">\r\n          Reviews & Comments\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          Add, edit and delete reviews and comments\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Display name</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"input-light w-100 px-3\"\r\n              value={user.display_name}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setUser((prev) =>\r\n                  Object.assign({}, prev, { display_name: e.target.value })\r\n                );\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Comment</div>\r\n          <div className=\"col-60\">\r\n            <textarea\r\n              value={comment.comment}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setComment((prev) =>\r\n                  Object.assign({}, prev, { comment: e.target.value })\r\n                );\r\n              }}\r\n              className=\"textarea-light w-100\"\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mb-4\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"60 mb-1\">Report status</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <Select\r\n            popoverClass=\"col-md-30 col-60\"\r\n            className=\"input-light px-3\"\r\n            btnName={comment.reported ? \"Reported\" : \"Not Reported\"}\r\n            onSelect={(index) => {\r\n              setComment((prev) =>\r\n                Object.assign({}, prev, {\r\n                  reported: index === 0 ? true : false,\r\n                })\r\n              );\r\n            }}\r\n            items={[\"Reported\", \"Not Reported\"]}\r\n          ></Select>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mt-5\">\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n            onClick={() => getBack()}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n            onClick={async () => {\r\n              setLoading(true);\r\n              let res = await EditCommentForAdmin(comment, user);\r\n              setLoading(false);\r\n              if (res.error) {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Error\",\r\n                    message: res.error,\r\n                    type: \"failure\",\r\n                  },\r\n                });\r\n              } else {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Review updated\",\r\n                    message: \"Review was successfully updated\",\r\n                    type: \"success\",\r\n                  },\r\n                });\r\n                getBack();\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(EditComment);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport date from \"date-and-time\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetAnnouncements,\r\n  DeleteMultipleAnnouncements,\r\n} from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\n\r\nconst Announcements = ({\r\n  setEditAnnouncement,\r\n  setEditAnnouncementSection,\r\n  setAddNewAnouncementSection,\r\n  publicUsers,\r\n}) => {\r\n  const [action, setAction] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"User\");\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [typeFilter, setTypeFilter] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [mainFilter, setMainFilter] = useState({ key: \"\", value: \"\" });\r\n\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [announcements, setAnnouncements] = useState([]);\r\n  const [filteredAnnouncements, setFilteredAnnouncements] = useState([]);\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let res = await GetAnnouncements();\r\n      if (!res.error) {\r\n        setAnnouncements(\r\n          res.map((x) => Object.assign({}, x, { selected: false }))\r\n        );\r\n      }\r\n    }\r\n    getData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    let arr = [...announcements];\r\n    if (announcements.length) {\r\n      if (search) {\r\n        if (searchKey === \"User\") {\r\n          arr = arr.filter((x) =>\r\n            publicUsers[x.author].display_name\r\n              .toLowerCase()\r\n              .includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Description\") {\r\n          arr = arr.filter((x) =>\r\n            x.description.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        }\r\n      }\r\n\r\n      if (typeFilter) {\r\n        arr = arr.filter((x) => x.type === typeFilter);\r\n      }\r\n\r\n      if (mainFilter.key) {\r\n        arr = arr.filter((x) => x[mainFilter.key] === mainFilter.value);\r\n      }\r\n\r\n      setFilteredAnnouncements(arr);\r\n    }\r\n  }, [search, typeFilter, announcements, mainFilter]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //boundaries for slicing reviews array. (pagination)\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= filteredAnnouncements.length) {\r\n    boundaries[1] =\r\n      boundaries[1] - (boundaries[1] - filteredAnnouncements.length);\r\n  }\r\n\r\n  const statuses = [\"Published\", \"Drafted\", \"Expired\"];\r\n  const actions = [\"Delete\"];\r\n\r\n  const handleApply = async (all = false) => {\r\n    if (all) {\r\n      setTypeFilter(type);\r\n    }\r\n    if (action === \"Edit\") {\r\n      let selected = filteredAnnouncements.filter((x) => x.selected);\r\n      if (selected.length) {\r\n        setEditAnnouncement(selected[0]);\r\n        setEditAnnouncementSection();\r\n      }\r\n    } else if (action === \"Delete\") {\r\n      let selected = filteredAnnouncements.filter((x) => x.selected);\r\n      if (selected.length) {\r\n        let res = await DeleteMultipleAnnouncements(selected.map((x) => x._id));\r\n        if (res.error) {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Error\",\r\n              message: res.error,\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Announcements were deleted\",\r\n              message: \"Announcements were successfully deleted\",\r\n              type: \"success\",\r\n            },\r\n          });\r\n        }\r\n        setRefresh(!refresh);\r\n      }\r\n    }\r\n  };\r\n\r\n  const types = [\"Information\", \"Error\", \"Warning\"];\r\n\r\n  return (\r\n    <div className=\"row no-gutters admin-screen\">\r\n      <div className=\"col-60 border-bottom\">\r\n        <div className=\"row no-gutters justify-content-between pb-3 align-items-end\">\r\n          <div className=\"col-auto\">\r\n            <div className=\"row no-gutters admin-screen-title\">\r\n              Announcements\r\n            </div>\r\n            <div className=\"row no-gutters\">Create and post announcements</div>\r\n          </div>\r\n          <div\r\n            className=\"col-auto btn-custom btn-custom-primary btn-natural\"\r\n            onClick={() => setAddNewAnouncementSection()}\r\n          >\r\n            Add New\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-60 py-5\">\r\n            <div className=\"row no-gutters h6 mb-3\">\r\n              <div\r\n                onClick={() => {\r\n                  setMainFilter({ key: \"\", value: \"\" });\r\n                  setType(\"\");\r\n                  setTypeFilter(\"\");\r\n                }}\r\n                className={`cursor-pointer col-auto ${\r\n                  !typeFilter && !mainFilter.key ? \"text-primary\" : \"text-dark\"\r\n                }`}\r\n              >\r\n                All ({announcements.length})\r\n              </div>\r\n              {statuses.map((x, i) => (\r\n                <React.Fragment key={`status-${i}`}>\r\n                  <div className=\"col-auto px-2 text-muted\">|</div>\r\n                  <div\r\n                    onClick={() =>\r\n                      setMainFilter((prev) =>\r\n                        Object.assign({}, prev, {\r\n                          key: \"status\",\r\n                          value: x,\r\n                        })\r\n                      )\r\n                    }\r\n                    className={`cursor-pointer col-auto ${\r\n                      mainFilter.key === \"status\" && mainFilter.value === x\r\n                        ? \"text-primary\"\r\n                        : \"text-dark\"\r\n                    }`}\r\n                  >\r\n                    {x} ({announcements.filter((y) => y.status === x).length})\r\n                  </div>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-between\">\r\n              <div className=\"col-sm-auto col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) => setAction(actions[index])}\r\n                        items={actions}\r\n                        btnName={action ? action : \"Select Action\"}\r\n                        className=\"input-light px-3 col-auto \"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) => setType(types[index])}\r\n                        items={types}\r\n                        btnName={type ? type : \"Select Type\"}\r\n                        className=\"input-light px-3 col-auto \"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    onClick={() => handleApply(true)}\r\n                    className=\"btn-custom btn-custom-primary col-60 col-sm-auto mb-3 mr-3 btn-xsmall\"\r\n                  >\r\n                    Apply\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 d-block d-sm-none\">\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <Select\r\n                    popoverClass=\"w-100\"\r\n                    onSelect={(index) =>\r\n                      setSearchKey([\"User\", \"Description\"][index])\r\n                    }\r\n                    className=\"input-light col-60\"\r\n                    items={[\"User\", \"Description\"]}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <div className=\"col-60 position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      className=\"input-light w-100 pr-5 pl-3\"\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-auto mb-3 d-none d-sm-block\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    onSelect={(index) =>\r\n                      setSearchKey([\"User\", \"Description\"][index])\r\n                    }\r\n                    className=\"table-input-prepend-select col-auto\"\r\n                    items={[\"User\", \"Description\"]}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                  <div className=\"col position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                      className=\"table-input pr-5 pl-3\"\r\n                      style={{ minWidth: \"300px\" }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <Swipeable\r\n                style={{ minWidth: \"100%\" }}\r\n                onSwipedLeft={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn + 1 < 4\r\n                      ? lastVisibleColumn + 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n                onSwipedRight={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn - 1 >= 0\r\n                      ? lastVisibleColumn - 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n              >\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table bg-white border\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"text-center\">\r\n                          <Checkbox\r\n                            color={\"primary\"}\r\n                            checked={\r\n                              filteredAnnouncements\r\n                                .slice(boundaries[0], boundaries[1])\r\n                                .filter((x) => x.selected).length ===\r\n                              boundaries[1] - boundaries[0]\r\n                            }\r\n                            onChange={(e) => {\r\n                              setFilteredAnnouncements((prev) => {\r\n                                let arr = [...prev];\r\n                                for (\r\n                                  let i = boundaries[0];\r\n                                  i < boundaries[1];\r\n                                  i++\r\n                                ) {\r\n                                  arr[i].selected = e.target.checked;\r\n                                }\r\n                                return arr;\r\n                              });\r\n                            }}\r\n                          ></Checkbox>\r\n                        </th>\r\n                        <th className=\"table-header text-truncate text-left\">\r\n                          <div className=\"d-none d-lg-block\">Posted By</div>\r\n                          <div className=\"d-block d-lg-none\">By</div>\r\n                        </th>\r\n                        <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                          {\r\n                            [\"Type\", \"Description\", \"Duration\", \"Status\"][\r\n                              lastVisibleColumn\r\n                            ]\r\n                          }\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Type</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Description</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Duration</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Status</div>\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filteredAnnouncements.length ? (\r\n                        filteredAnnouncements\r\n                          .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                          .map((x, i) => (\r\n                            <tr\r\n                              className=\"font-weight-600 bg-light\"\r\n                              key={`shortlist-item-${i}`}\r\n                            >\r\n                              <td className=\"text-center\">\r\n                                <Checkbox\r\n                                  color={\"primary\"}\r\n                                  checked={x.selected}\r\n                                  onChange={(e) => {\r\n                                    setFilteredAnnouncements((prev) => {\r\n                                      let arr = [...prev];\r\n                                      arr[(page - 1) * 5 + i].selected =\r\n                                        e.target.checked;\r\n                                      return arr;\r\n                                    });\r\n                                  }}\r\n                                ></Checkbox>\r\n                              </td>\r\n                              <td>\r\n                                {Object.values(publicUsers).length ? (\r\n                                  <React.Fragment>\r\n                                    <div>\r\n                                      <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                        <div className=\"d-inline-block mr-2\">\r\n                                          <div\r\n                                            className=\"square-50 rounded-circle bg-image\"\r\n                                            style={{\r\n                                              backgroundImage: `url(${\r\n                                                publicUsers[x.author].photo\r\n                                              })`,\r\n                                            }}\r\n                                          ></div>\r\n                                        </div>\r\n                                        <div className=\"d-none d-md-inline-block align-top\">\r\n                                          <div className=\"text-primary\">\r\n                                            {publicUsers[x.author].display_name}\r\n                                          </div>\r\n                                          <div className=\"mb-3\">\r\n                                            {publicUsers[x.author].email}\r\n                                          </div>\r\n                                          <div className=\"d-flex\">\r\n                                            <div\r\n                                              className=\"text-primary underline-link\"\r\n                                              onClick={() => {\r\n                                                setEditAnnouncement(x);\r\n                                                setEditAnnouncementSection();\r\n                                              }}\r\n                                            >\r\n                                              Edit\r\n                                            </div>\r\n                                            <div className=\"px-2\">|</div>\r\n                                            <div\r\n                                              className=\"text-danger underline-link\"\r\n                                              onClick={async () => {\r\n                                                let res = await DeleteMultipleAnnouncements(\r\n                                                  [x._id]\r\n                                                );\r\n                                                if (res.error) {\r\n                                                  store.dispatch({\r\n                                                    type: \"SET_NOTIFICATION\",\r\n                                                    notification: {\r\n                                                      title: \"Error\",\r\n                                                      message: res.error,\r\n                                                      type: \"failure\",\r\n                                                    },\r\n                                                  });\r\n                                                } else {\r\n                                                  store.dispatch({\r\n                                                    type: \"SET_NOTIFICATION\",\r\n                                                    notification: {\r\n                                                      title:\r\n                                                        \"Announcement was deleted\",\r\n                                                      message:\r\n                                                        \"Announcement was successfully deleted\",\r\n                                                      type: \"success\",\r\n                                                    },\r\n                                                  });\r\n                                                }\r\n                                                setRefresh(!refresh);\r\n                                              }}\r\n                                            >\r\n                                              Delete\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </React.Fragment>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  x.type === \"Warning\"\r\n                                    ? \"text-warning\"\r\n                                    : x.type === \"Information\"\r\n                                    ? \"text-primary\"\r\n                                    : x.type === \"Error\"\r\n                                    ? \"text-danger\"\r\n                                    : \"\"\r\n                                }${\r\n                                  lastVisibleColumn === 0\r\n                                    ? \" d-table-cell\"\r\n                                    : \" d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div>{x.type}</div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 1\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div\r\n                                  style={{ minWidth: \"150px\" }}\r\n                                  className=\"text-clamp-4 cursor-pointer user-select-none\"\r\n                                  onClick={(e) => {\r\n                                    let target = e.currentTarget;\r\n                                    if (\r\n                                      target.classList.contains(\"text-clamp-4\")\r\n                                    ) {\r\n                                      target.classList.remove(\"text-clamp-4\");\r\n                                    } else {\r\n                                      target.classList.add(\"text-clamp-4\");\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  {x.description}\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 2\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                  <div className=\"d-inline-block mr-2\">\r\n                                    <div>From: </div>\r\n                                    <div>To: </div>\r\n                                  </div>\r\n                                  <div className=\"d-inline-block\">\r\n                                    <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                      {date.format(\r\n                                        new Date(x.start_date),\r\n                                        \"DD/MM/YYYY @ hh:mm A\"\r\n                                      )}\r\n                                      <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                        {date.format(\r\n                                          new Date(x.end_date),\r\n                                          \"DD/MM/YYYY @ hh:mm A\"\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 3\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.status}\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan={6} className=\" text-center py-5\">\r\n                            0 results found\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                    {/* <tfoot>\r\n                      <tr>\r\n                        <th className=\"text-center\">\r\n                          <Checkbox\r\n                            color={\"primary\"}\r\n                            checked={\r\n                              filteredAnnouncements\r\n                                .slice(boundaries[0], boundaries[1])\r\n                                .filter((x) => x.selected).length ===\r\n                              boundaries[1] - boundaries[0]\r\n                            }\r\n                            onChange={(e) => {\r\n                              setFilteredAnnouncements((prev) => {\r\n                                let arr = [...prev];\r\n                                for (\r\n                                  let i = boundaries[0];\r\n                                  i < boundaries[1];\r\n                                  i++\r\n                                ) {\r\n                                  arr[i].selected = e.target.checked;\r\n                                }\r\n                                return arr;\r\n                              });\r\n                            }}\r\n                          ></Checkbox>\r\n                        </th>\r\n                        <th className=\"table-footer text-truncate text-left\">\r\n                          <div className=\"d-none d-lg-block\">Posted By</div>\r\n                          <div className=\"d-block d-lg-none\">By</div>\r\n                        </th>\r\n                        <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                          {\r\n                            [\"Type\", \"Description\", \"Duration\", \"Status\"][\r\n                              lastVisibleColumn\r\n                            ]\r\n                          }\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                          <div>Type</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                          <div>Description</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                          <div>Duration</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                          <div>Status</div>\r\n                        </th>\r\n                      </tr>\r\n                    </tfoot> */}\r\n                  </table>\r\n                </div>\r\n              </Swipeable>\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-center justify-content-sm-end\">\r\n              <div className=\"col-auto\">\r\n                <Pagination\r\n                  count={Math.ceil(filteredAnnouncements.length / 5)}\r\n                  current={page}\r\n                  setCurrent={setPage}\r\n                ></Pagination>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Announcements);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BsCalendar, BsClock } from \"react-icons/bs\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport date from \"date-and-time\";\r\nimport Loader from \"../utility/Loader\";\r\nimport store from \"../../store/store\";\r\nimport { EditAnnouncement as Edit } from \"../../server/DatabaseApi\";\r\n\r\nconst EditAnnouncement = ({ currentAnnouncement, getBack }) => {\r\n  const [announcement, setAnnouncement] = useState({\r\n    description: \"\",\r\n    type: \"\",\r\n    start_date: Date.now(),\r\n    end_date: Date.now(),\r\n    status: \"\",\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentAnnouncement) {\r\n      setAnnouncement(currentAnnouncement);\r\n    }\r\n  }, [currentAnnouncement]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const types = [\"Information\", \"Warning\", \"Error\"];\r\n  const statuses = [\"Published\", \"Drafted\", \"Expired\"];\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\">\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">Announcements</div>\r\n        <div className=\"row no-gutters\">Edit existing announcement</div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Type</div>\r\n          <div className=\"col-xl-40 col-md-50 col-60 pr-sm-3\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                popoverClass=\"col-sm-30 col-60\"\r\n                onSelect={(index) =>\r\n                  setAnnouncement((prev) =>\r\n                    Object.assign({}, prev, { type: types[index] })\r\n                  )\r\n                }\r\n                className=\"w-100 input-light px-3\"\r\n                items={types}\r\n                btnName={announcement.type ? announcement.type : \"Select\"}\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Description</div>\r\n          <div className=\"col-60\">\r\n            <textarea\r\n              value={announcement.description ? announcement.description : \"\"}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setAnnouncement((prev) =>\r\n                  Object.assign({}, prev, { description: e.target.value })\r\n                );\r\n              }}\r\n              className=\"textarea-light w-100\"\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div\r\n            className={`col-60 ${\r\n              announcement.description.split(\" \").length <= 499\r\n                ? \"text-muted\"\r\n                : \"text-danger\"\r\n            }`}\r\n          >\r\n            {announcement.description\r\n              ? 500 - announcement.description.split(\" \").length\r\n              : 500}{\" \"}\r\n            words left\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 pr-sm-3 mb-4\">\r\n                <div className=\"row no-gutters\">Start Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(announcement.start_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(announcement.start_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, { start_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(announcement.start_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              start_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(announcement.start_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters\">End Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(announcement.end_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(announcement.end_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, { end_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(announcement.end_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              end_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(announcement.end_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Type</div>\r\n          <div className=\"col-xl-40 col-md-50 col-60 pr-sm-3\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                popoverClass=\"col-sm-30 col-60\"\r\n                onSelect={(index) =>\r\n                  setAnnouncement((prev) =>\r\n                    Object.assign({}, prev, { status: statuses[index] })\r\n                  )\r\n                }\r\n                className=\"w-100 input-light px-3\"\r\n                items={statuses}\r\n                btnName={announcement.status ? announcement.status : \"Select\"}\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-60 mt-5\">\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n            onClick={() => getBack()}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n            onClick={async () => {\r\n              setLoading(true);\r\n              let res = await Edit(announcement);\r\n              setLoading(false);\r\n              if (res.error) {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Error\",\r\n                    message: res.error,\r\n                    type: \"failure\",\r\n                  },\r\n                });\r\n              } else {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Announcement updated\",\r\n                    message: \"Announcement was successfully updated\",\r\n                    type: \"success\",\r\n                  },\r\n                });\r\n                getBack();\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditAnnouncement;\r\n","import React, { useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BsCalendar, BsClock } from \"react-icons/bs\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport date from \"date-and-time\";\r\nimport { CreateAnnouncement } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../utility/Loader\";\r\n\r\nconst AddNewAnnouncement = ({ user, getBack }) => {\r\n  const [announcement, setAnnouncement] = useState({\r\n    description: \"\",\r\n    type: \"\",\r\n    start_date: Date.now(),\r\n    end_date: Date.now(),\r\n    status: \"Published\",\r\n  });\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const types = [\"Information\", \"Warning\", \"Error\"];\r\n  const statuses = [\"Published\", \"Drafted\", \"Deleted\"];\r\n\r\n  const validations = [\r\n    { valid: announcement.description, error: \"Description is required\" },\r\n    { valid: announcement.type, error: \"Type is required\" },\r\n    {\r\n      valid: announcement.start_date < announcement.end_date,\r\n      error: \"Start date must be before end date\",\r\n    },\r\n    {\r\n      valid: announcement.start_date !== announcement.end_date,\r\n      error: \"Announcement duration is 0\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\">\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">Announcements</div>\r\n        <div className=\"row no-gutters\">\r\n          Creat a brand new announcement and add to this site\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Type</div>\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                popoverClass=\"col-sm-30 col-60\"\r\n                onSelect={(index) =>\r\n                  setAnnouncement((prev) =>\r\n                    Object.assign({}, prev, { type: types[index] })\r\n                  )\r\n                }\r\n                className=\"w-100 input-light px-3\"\r\n                items={types}\r\n                btnName={announcement.type ? announcement.type : \"Select\"}\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Description</div>\r\n          <div className=\"col-60\">\r\n            <textarea\r\n              value={announcement.description ? announcement.description : \"\"}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setAnnouncement((prev) =>\r\n                  Object.assign({}, prev, { description: e.target.value })\r\n                );\r\n              }}\r\n              className=\"textarea-light w-100\"\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div\r\n            className={`col-60 ${\r\n              announcement.description.split(\" \").length <= 499\r\n                ? \"text-muted\"\r\n                : \"text-danger\"\r\n            }`}\r\n          >\r\n            {announcement.description\r\n              ? 500 - announcement.description.split(\" \").length\r\n              : 500}{\" \"}\r\n            words left\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 pr-sm-3 mb-4\">\r\n                <div className=\"row no-gutters\">Start Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(announcement.start_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(announcement.start_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, { start_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(announcement.start_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              start_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(announcement.start_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters\">End Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(announcement.end_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(announcement.end_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, { end_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(announcement.end_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              end_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(announcement.end_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Status</div>\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                popoverClass=\"col-sm-30 col-60\"\r\n                onSelect={(index) =>\r\n                  setAnnouncement((prev) =>\r\n                    Object.assign({}, prev, { status: statuses[index] })\r\n                  )\r\n                }\r\n                className=\"w-100 input-light px-3\"\r\n                items={statuses}\r\n                btnName={announcement.status ? announcement.status : \"Select\"}\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-60 mt-3\">\r\n        <div\r\n          style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n          className=\"row no-gutters align-items-center text-danger\"\r\n        >\r\n          {problem}\r\n        </div>\r\n        <div className=\"row no-gutters mt-2\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n            onClick={() => getBack()}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n            onClick={async () => {\r\n              if (user._id) {\r\n                let invalid = validations.filter((x) => !x.valid);\r\n                if (invalid.length) {\r\n                  setProblem(invalid[0].error);\r\n                } else {\r\n                  setLoading(true);\r\n                  let res = await CreateAnnouncement(\r\n                    Object.assign({}, announcement, { author: user._id })\r\n                  );\r\n                  setLoading(false);\r\n                  if (res.error) {\r\n                    store.dispatch({\r\n                      type: \"SET_NOTIFICATION\",\r\n                      notification: {\r\n                        title: \"Error\",\r\n                        message: res.error,\r\n                        type: \"failure\",\r\n                      },\r\n                    });\r\n                  } else {\r\n                    store.dispatch({\r\n                      type: \"SET_NOTIFICATION\",\r\n                      notification: {\r\n                        title: \"Announcement created\",\r\n                        message: \"You successfully created announcement\",\r\n                        type: \"success\",\r\n                      },\r\n                    });\r\n                    getBack();\r\n                  }\r\n                }\r\n              } else {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Login required\",\r\n                    message: \"You need to login to create announcements\",\r\n                    type: \"failure\",\r\n                  },\r\n                });\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(AddNewAnnouncement);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport date from \"date-and-time\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport {\r\n  GetPromotions,\r\n  DeleteMultiplePromotions,\r\n} from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\nimport { connect } from \"react-redux\";\r\nimport history from \"../../History\";\r\nimport OkIcon from \"../../images/OkIcon\";\r\n\r\nconst Promotions = ({\r\n  setEditPromotion,\r\n  setAddNewPromotionSection,\r\n  setEditPromotionSection,\r\n  ratings,\r\n}) => {\r\n  const [action, setAction] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"Description\");\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [typeFilter, setTypeFilter] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [mainFilter, setMainFilter] = useState({ key: \"\", value: \"\" });\r\n\r\n  const [promotions, setPromotions] = useState([]);\r\n  const [filteredPromotions, setFilteredPromotions] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let data = await GetPromotions();\r\n      if (!data.error) {\r\n        setPromotions(\r\n          data.map((x) => Object.assign({}, x, { selected: false }))\r\n        );\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    let arr = [...promotions];\r\n    if (promotions.length) {\r\n      if (search) {\r\n        if (searchKey === \"Description\") {\r\n          arr = arr.filter((x) =>\r\n            x.description.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Review\") {\r\n          arr = arr.filter(\r\n            (x) =>\r\n              x.content_type === \"Review\" &&\r\n              x.content.review.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        }\r\n      }\r\n\r\n      if (typeFilter) {\r\n        arr = arr.filter((x) =>\r\n          x.content_type.match(new RegExp(typeFilter, \"i\"))\r\n        );\r\n      }\r\n\r\n      if (mainFilter.key) {\r\n        arr = arr.filter((x) => x[mainFilter.key] === mainFilter.value);\r\n      }\r\n\r\n      setFilteredPromotions(arr);\r\n    }\r\n  }, [search, typeFilter, promotions, mainFilter]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //boundaries for slicing reviews array. (pagination)\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= filteredPromotions.length) {\r\n    boundaries[1] = boundaries[1] - (boundaries[1] - filteredPromotions.length);\r\n  }\r\n\r\n  const columns = [\"Review\", \"Rating\", \"Duration\", \"Status\"];\r\n  const searchOptions = [\"Description\", \"Review\"];\r\n\r\n  const publishStatuses = [\"Published\", \"Drafted\", \"Deleted\"];\r\n  return (\r\n    <div className=\"row no-gutters admin-screen\">\r\n      <div className=\"col-60 border-bottom\">\r\n        <div className=\"row no-gutters justify-content-between pb-3 align-items-end\">\r\n          <div className=\"col-auto\">\r\n            <div className=\"row no-gutters admin-screen-title\">\r\n              Promotions List\r\n            </div>\r\n            <div className=\"row no-gutters\">Edit, add and delete promtions</div>\r\n          </div>\r\n          <div\r\n            className=\"col-auto btn-custom btn-custom-primary btn-natural\"\r\n            onClick={() => setAddNewPromotionSection()}\r\n          >\r\n            Add New\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-60 py-5\">\r\n            <div className=\"row no-gutters h6 mb-3\">\r\n              <div\r\n                className={`cursor-pointer col-auto ${\r\n                  mainFilter.key === \"\" && !typeFilter\r\n                    ? \"text-primary\"\r\n                    : \"text-dark\"\r\n                }`}\r\n                onClick={() => {\r\n                  setTypeFilter(\"\");\r\n                  setType(\"\");\r\n                  setMainFilter({ key: \"\", value: \"\" });\r\n                }}\r\n              >\r\n                All ({promotions.length})\r\n              </div>\r\n              {publishStatuses.map((x, i) => (\r\n                <React.Fragment key={`status-${i}`}>\r\n                  <div className=\"col-auto px-2 text-muted\">|</div>\r\n                  <div\r\n                    onClick={() =>\r\n                      setMainFilter((prev) =>\r\n                        Object.assign({}, prev, {\r\n                          key: \"publish_status\",\r\n                          value: x,\r\n                        })\r\n                      )\r\n                    }\r\n                    className={`cursor-pointer col-auto ${\r\n                      mainFilter.key === \"publish_status\" &&\r\n                      mainFilter.value === x\r\n                        ? \"text-primary\"\r\n                        : \"text-dark\"\r\n                    }`}\r\n                  >\r\n                    {x} (\r\n                    {promotions.filter((y) => y.publish_status === x).length})\r\n                  </div>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-between\">\r\n              <div className=\"col-sm-auto col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) => setAction([\"Delete\"][index])}\r\n                        items={[\"Delete\"]}\r\n                        btnName={action ? action : \"Select Action\"}\r\n                        className=\"input-light px-3 col-auto\"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) =>\r\n                          setType([\"Review\", \"Comment\"][index])\r\n                        }\r\n                        items={[\"Review\", \"Comment\"]}\r\n                        btnName={type ? type : \"Select Type\"}\r\n                        className=\"input-light px-3 col-auto\"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    onClick={() => {\r\n                      if (action === \"Edit\") {\r\n                        let selected = filteredPromotions.filter(\r\n                          (x) => x.selected\r\n                        );\r\n                        if (selected.length) {\r\n                          setEditPromotion(selected[0]);\r\n                          setEditPromotionSection();\r\n                        }\r\n                      } else if (action === \"Delete\") {\r\n                        //delete review\r\n                      } else {\r\n                        setTypeFilter(type);\r\n                      }\r\n                    }}\r\n                    className=\"btn-custom btn-custom-primary col-60 col-sm-auto mb-3 mr-3 btn-xsmall\"\r\n                  >\r\n                    Apply\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 d-block d-sm-none\">\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <Select\r\n                    popoverClass=\"w-100\"\r\n                    onSelect={(index) => setSearchKey(searchOptions[index])}\r\n                    className=\"input-light col-60\"\r\n                    items={searchOptions}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <div className=\"col-60 position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      className=\"input-light w-100 pr-5 pl-3\"\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-auto mb-3 d-none d-sm-block\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    onSelect={(index) => setSearchKey(searchOptions[index])}\r\n                    className=\"table-input-prepend-select col-auto\"\r\n                    items={searchOptions}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                  <div className=\"col position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                      className=\"table-input pr-5 pl-3\"\r\n                      style={{ minWidth: \"300px\" }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <Swipeable\r\n                style={{ minWidth: \"100%\" }}\r\n                onSwipedLeft={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn + 1 < 4\r\n                      ? lastVisibleColumn + 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n                onSwipedRight={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn - 1 >= 0\r\n                      ? lastVisibleColumn - 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n              >\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table bg-white border\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"text-center\">\r\n                          <Checkbox\r\n                            color={\"primary\"}\r\n                            checked={\r\n                              filteredPromotions\r\n                                .slice(boundaries[0], boundaries[1])\r\n                                .filter((x) => x.selected).length ===\r\n                              boundaries[1] - boundaries[0]\r\n                            }\r\n                            onChange={(e) => {\r\n                              setFilteredPromotions((prev) => {\r\n                                let arr = [...prev];\r\n                                for (\r\n                                  let i = boundaries[0];\r\n                                  i < boundaries[1];\r\n                                  i++\r\n                                ) {\r\n                                  arr[i].selected = e.target.checked;\r\n                                }\r\n                                return arr;\r\n                              });\r\n                            }}\r\n                          ></Checkbox>\r\n                        </th>\r\n                        <th className=\"table-header text-truncate text-left\">\r\n                          Description\r\n                        </th>\r\n                        <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                          {columns[lastVisibleColumn]}\r\n                        </th>\r\n                        {columns.map((c, j) => (\r\n                          <th\r\n                            className=\"d-none d-xl-table-cell table-header text-truncate\"\r\n                            key={`column-${j}`}\r\n                          >\r\n                            <div>{c}</div>\r\n                          </th>\r\n                        ))}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filteredPromotions.length ? (\r\n                        filteredPromotions\r\n                          .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                          .map((x, i) => (\r\n                            <tr\r\n                              className=\"font-weight-600 bg-light\"\r\n                              key={`shortlist-item-${i}`}\r\n                            >\r\n                              <td className=\"text-center\">\r\n                                <Checkbox\r\n                                  color={\"primary\"}\r\n                                  checked={x.selected}\r\n                                  onChange={(e) => {\r\n                                    setFilteredPromotions((prev) => {\r\n                                      let arr = [...prev];\r\n                                      arr[(page - 1) * 5 + i].selected =\r\n                                        e.target.checked;\r\n                                      return arr;\r\n                                    });\r\n                                  }}\r\n                                ></Checkbox>\r\n                              </td>\r\n                              <td style={{ whiteSpace: \"nowrap\" }}>\r\n                                <div\r\n                                  className=\"mb-2\"\r\n                                  style={{ minWidth: \"150px\" }}\r\n                                >\r\n                                  {x.description}\r\n                                </div>\r\n                                <div className=\"d-flex\">\r\n                                  <div\r\n                                    className=\"text-primary underline-link\"\r\n                                    onClick={() => {\r\n                                      setEditPromotion(x);\r\n                                      setEditPromotionSection();\r\n                                    }}\r\n                                  >\r\n                                    Edit\r\n                                  </div>\r\n                                  <div className=\"px-2\">|</div>\r\n                                  <div\r\n                                    className=\"text-danger underline-link\"\r\n                                    onClick={async () => {\r\n                                      let res = await DeleteMultiplePromotions(\r\n                                        [x._id],\r\n                                        { status: \"Deleted\" }\r\n                                      );\r\n                                      if (res.error) {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Error\",\r\n                                            message: res.error,\r\n                                            type: \"failure\",\r\n                                          },\r\n                                        });\r\n                                      } else {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Promotion was deleted\",\r\n                                            message:\r\n                                              \"Promotion was successfully deleted\",\r\n                                            type: \"success\",\r\n                                          },\r\n                                        });\r\n                                      }\r\n                                      setRefresh(!refresh);\r\n                                    }}\r\n                                  >\r\n                                    Delete\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 0\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.content_type === \"Review\" ? (\r\n                                  <div style={{ minWidth: \"150px\" }}>\r\n                                    <div\r\n                                      className=\"cursor-pointer user-select-none btn-link\"\r\n                                      onClick={(e) => {\r\n                                        history.push(\r\n                                          `/movie/${x.movie_id}/${x.content_id}`\r\n                                        );\r\n                                      }}\r\n                                    >\r\n                                      {x.content.review}\r\n                                    </div>\r\n                                  </div>\r\n                                ) : (\r\n                                  <div\r\n                                    className=\"text-clamp-4 cursor-pointer user-select-none\"\r\n                                    onClick={(e) => {\r\n                                      let target = e.currentTarget;\r\n                                      if (\r\n                                        target.classList.contains(\r\n                                          \"text-clamp-4\"\r\n                                        )\r\n                                      ) {\r\n                                        target.classList.remove(\"text-clamp-4\");\r\n                                      } else {\r\n                                        target.classList.add(\"text-clamp-4\");\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    {x.content.comment}\r\n                                  </div>\r\n                                )}\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 1\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.content.rating ? (\r\n                                  x.content.rating === \"ok_rate\" ? (\r\n                                    <div style={{ marginTop: \"-4px\" }}>\r\n                                      <OkIcon size={24}></OkIcon>\r\n                                    </div>\r\n                                  ) : (\r\n                                    <div style={{ marginBottom: \"-6px\" }}>\r\n                                      <Emoji\r\n                                        emoji={\r\n                                          x.content.rating === \"excellent_rate\"\r\n                                            ? \"fire\"\r\n                                            : x.content.rating === \"good_rate\"\r\n                                            ? \"heart\"\r\n                                            : x.content.rating === \"ok_rate\"\r\n                                            ? \"heavy_division_sign\"\r\n                                            : \"shit\"\r\n                                        }\r\n                                        set=\"facebook\"\r\n                                        size={24}\r\n                                      />\r\n                                    </div>\r\n                                  )\r\n                                ) : (\r\n                                  \"-\"\r\n                                )}\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 2\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                  <div className=\"d-inline-block mr-2\">\r\n                                    <div>From: </div>\r\n                                    <div>To: </div>\r\n                                  </div>\r\n                                  <div className=\"d-inline-block\">\r\n                                    <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                      {date.format(\r\n                                        new Date(x.start_date),\r\n                                        \"DD/MM/YYYY @ hh:mm A\"\r\n                                      )}\r\n                                      <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                        {date.format(\r\n                                          new Date(x.end_date),\r\n                                          \"DD/MM/YYYY @ hh:mm A\"\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  x.status === \"Published\"\r\n                                    ? \"text-green\"\r\n                                    : x.status === \"Drafted\"\r\n                                    ? \"text-orange\"\r\n                                    : \"text-danger\"\r\n                                } ${\r\n                                  lastVisibleColumn === 3\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.status === \"Published\"\r\n                                  ? \"Active\"\r\n                                  : x.status === \"Drafted\"\r\n                                  ? \"Inactive\"\r\n                                  : x.status}\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan={6} className=\" text-center py-5\">\r\n                            0 results found\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </Swipeable>\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-center justify-content-sm-end\">\r\n              <div className=\"col-auto\">\r\n                <Pagination\r\n                  count={Math.ceil(filteredPromotions.length / 5)}\r\n                  current={page}\r\n                  setCurrent={setPage}\r\n                ></Pagination>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Promotions);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BsCalendar, BsClock } from \"react-icons/bs\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport date from \"date-and-time\";\r\nimport { Ratings } from \"../../Data\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { EditPromotion as Edit } from \"../../server/DatabaseApi\";\r\n\r\nconst EditPromotion = ({ currentPromotion, getBack }) => {\r\n  const [promotion, setPromotion] = useState({\r\n    review: \"\",\r\n    comment: \"\",\r\n    review_id: 1,\r\n    comment_id: 1,\r\n    content_type: \"\",\r\n    publish_status: \"\",\r\n    active_status: \"\",\r\n    start_date: Date.now(),\r\n    end_date: Date.now(),\r\n    movie_title: \"\",\r\n    movie_id: \"\",\r\n    content: {},\r\n    title: \"\",\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setPromotion((prev) => Object.assign({}, prev, currentPromotion));\r\n  }, [currentPromotion]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const publishStatuses = [\"Published\", \"Drafted\", \"Deleted\"];\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\">\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">Edit Promotions</div>\r\n        <div className=\"row no-gutters\">Edit existing promotion</div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        {/* <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Type</div>\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                popoverClass=\"col-sm-30 col-60 pr-sm-3\"\r\n                onSelect={(index) =>\r\n                  setPromotion((prev) =>\r\n                    Object.assign({}, prev, { content_type: types[index] })\r\n                  )\r\n                }\r\n                className=\"w-100 input-light px-3\"\r\n                items={types}\r\n                btnName={\r\n                  promotion.content_type ? promotion.content_type : \"Select\"\r\n                }\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters mb-1\">Description</div>\r\n            <div className=\"row no-gutters\">\r\n              <textarea\r\n                value={promotion.description ? promotion.description : \"\"}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setPromotion((prev) =>\r\n                    Object.assign({}, prev, { description: e.target.value })\r\n                  );\r\n                }}\r\n                className=\"textarea-light w-100\"\r\n                style={{ height: \"150px\" }}\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-xl-40 col-md-50 col-60 mb-1\">\r\n            {promotion.content_type}\r\n          </div>\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <textarea\r\n              value={\r\n                promotion.content\r\n                  ? promotion.content_type === \"Review\"\r\n                    ? promotion.content.review\r\n                    : promotion.content.comment\r\n                  : \"\"\r\n              }\r\n              onChange={(e) => {\r\n                e.persist();\r\n                let text = e.target.value;\r\n                if (text.split(\" \").length <= 500) {\r\n                  if (promotion.content_type === \"Review\") {\r\n                    let newContent = { ...promotion.content };\r\n                    newContent.review = text;\r\n                    setPromotion((prev) =>\r\n                      Object.assign({}, prev, { content: newContent })\r\n                    );\r\n                  } else {\r\n                    let newContent = { ...promotion.content };\r\n                    newContent.comment = text;\r\n                    setPromotion((prev) =>\r\n                      Object.assign({}, prev, { content: newContent })\r\n                    );\r\n                  }\r\n                }\r\n              }}\r\n              className=\"textarea-light w-100\"\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div\r\n            className={`col-60 ${\r\n              promotion.content_type\r\n                ? promotion.content_type === \"Review\"\r\n                  ? promotion.content.review.split(\" \").length <= 499\r\n                    ? \"text-muted\"\r\n                    : \"text-danger\"\r\n                  : promotion.content.comment.split(\" \").length <= 499\r\n                  ? \"text-muted\"\r\n                  : \"text-danger\"\r\n                : \"\"\r\n            }`}\r\n          >\r\n            {promotion.content.review\r\n              ? promotion.content.review.length\r\n                ? 500 - promotion.content.review.split(\" \").length\r\n                : 500\r\n              : promotion.content.comment\r\n              ? promotion.content.comment.length\r\n                ? 500 - promotion.content.comment.split(\" \").length\r\n                : 500\r\n              : \"\"}{\" \"}\r\n            words left\r\n          </div>\r\n        </div>\r\n        {promotion.content_type === \"Review\" && (\r\n          <div className=\"col-xl-40 col-md-50 col-60 mb-4 px-0\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60\">Rating</div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-sm-30 col-60 pr-sm-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    popoverClass=\"col-60\"\r\n                    className=\"input-light px-3\"\r\n                    btnName={\r\n                      promotion.content.rating\r\n                        ? Ratings.find(\r\n                            (x) => x.name === promotion.content.rating\r\n                          ).element\r\n                        : \"Select\"\r\n                    }\r\n                    onSelect={(index) => {\r\n                      let content = { ...promotion.content };\r\n                      content.rating = Ratings[index].name;\r\n                      setPromotion((prev) =>\r\n                        Object.assign({}, prev, { content: content })\r\n                      );\r\n                    }}\r\n                    items={Ratings.map((x) => x.element)}\r\n                  ></Select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-sm-30 col-60 pr-sm-3 mb-4\">\r\n                <div className=\"row no-gutters\">Start Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <DayPickerInput\r\n                    value={date.format(\r\n                      new Date(promotion.start_date),\r\n                      \"DD/MM/YYYY\"\r\n                    )}\r\n                    component={(props) => (\r\n                      <div className=\"position-relative w-100\">\r\n                        <BsCalendar\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            bottom: 0,\r\n                            margin: \"auto\",\r\n                            left: \"18px\",\r\n                          }}\r\n                        ></BsCalendar>\r\n                        <input\r\n                          {...props}\r\n                          className=\"input-light w-100 pl-5 pr-3\"\r\n                          placeholder=\"YYYY-MM-DD\"\r\n                        ></input>\r\n                      </div>\r\n                    )}\r\n                    onDayChange={(day) => {\r\n                      if (day) {\r\n                        let d = new Date(promotion.start_date);\r\n                        let year = day.getFullYear();\r\n                        let month = day.getMonth();\r\n                        let niceDay = day.getDate();\r\n                        d.setFullYear(year);\r\n                        d.setMonth(month);\r\n                        d.setDate(niceDay);\r\n                        setPromotion((prev) =>\r\n                          Object.assign({}, prev, { start_date: d.getTime() })\r\n                        );\r\n                      }\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-30 col-60 mb-4\">\r\n                <div className=\"row no-gutters\">End Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <DayPickerInput\r\n                    value={date.format(\r\n                      new Date(promotion.end_date),\r\n                      \"DD/MM/YYYY\"\r\n                    )}\r\n                    component={(props) => (\r\n                      <div className=\"position-relative w-100\">\r\n                        <BsCalendar\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            bottom: 0,\r\n                            margin: \"auto\",\r\n                            left: \"18px\",\r\n                          }}\r\n                        ></BsCalendar>\r\n                        <input\r\n                          {...props}\r\n                          className=\"input-light w-100 pl-5 pr-3\"\r\n                          placeholder=\"YYYY-MM-DD\"\r\n                        ></input>\r\n                      </div>\r\n                    )}\r\n                    onDayChange={(day) => {\r\n                      if (day) {\r\n                        let d = new Date(promotion.end_date);\r\n                        let year = day.getFullYear();\r\n                        let month = day.getMonth();\r\n                        let niceDay = day.getDate();\r\n                        d.setFullYear(year);\r\n                        d.setMonth(month);\r\n                        d.setDate(niceDay);\r\n                        setPromotion((prev) =>\r\n                          Object.assign({}, prev, { end_date: d.getTime() })\r\n                        );\r\n                      }\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-sm-30 pr-sm-3 col-60 mb-4\">\r\n                <div className=\"row no-gutters\">Start Time</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 position-relative input-light\">\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(promotion.start_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setPromotion((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              start_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(promotion.start_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-30 col-60 mb-4\">\r\n                <div className=\"row no-gutters\">End Time</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 position-relative input-light\">\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(promotion.end_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setPromotion((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              end_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(promotion.end_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Status</div>\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-sm-30 col-60 pr-sm-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    popoverClass=\"col-60\"\r\n                    onSelect={(index) =>\r\n                      setPromotion((prev) =>\r\n                        Object.assign({}, prev, {\r\n                          status: publishStatuses[index],\r\n                        })\r\n                      )\r\n                    }\r\n                    className=\"w-100 input-light px-3\"\r\n                    items={publishStatuses}\r\n                    btnName={promotion.status ? promotion.status : \"Select\"}\r\n                  ></Select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mt-2\">\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n            onClick={getBack}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n            onClick={async () => {\r\n              setLoading(true);\r\n              let res = await Edit(promotion);\r\n              setLoading(false);\r\n              if (res.error) {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Error\",\r\n                    message: res.error,\r\n                    type: \"failure\",\r\n                  },\r\n                });\r\n              } else {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Promotion updated\",\r\n                    message: \"Promotion was successfully updated\",\r\n                    type: \"success\",\r\n                  },\r\n                });\r\n                getBack();\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPromotion;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BsCalendar, BsClock, BsSearch } from \"react-icons/bs\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport date from \"date-and-time\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport { GetReviews, CreatePromotions } from \"../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport OkIcon from \"../../images/OkIcon\";\r\n\r\nconst AddNewPromotion = ({ publicUsers, getBack, ratings }) => {\r\n  const [promotion, setPromotion] = useState({\r\n    description: \"\",\r\n    start_date: Date.now(),\r\n    end_date: Date.now(),\r\n    content_type: \"\",\r\n    status: \"Published\",\r\n  });\r\n  const [page, setPage] = useState(1);\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchKey, setSearchKey] = useState(\"User\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [candidates, setCandidates] = useState([]);\r\n  const searchKeys = [\"User\", \"Movie\", \"Review\"];\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let rev = await GetReviews();\r\n      if (!rev.error) {\r\n        setReviews(rev);\r\n      }\r\n\r\n      // let com = await GetComments();\r\n      // if (!com.error) {\r\n      //   setComments(com);\r\n      // }\r\n    }\r\n\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let arr = [];\r\n    if (search) {\r\n      if (searchKey === \"User\") {\r\n        if (Object.values(publicUsers).length) {\r\n          reviews.forEach((x) => {\r\n            if (\r\n              publicUsers[x.author].display_name\r\n                .toLowerCase()\r\n                .includes(search.toLowerCase())\r\n            ) {\r\n              arr.push(x);\r\n            }\r\n          });\r\n        }\r\n      } else if (searchKey === \"Movie\") {\r\n        reviews.forEach((x) => {\r\n          if (\r\n            ratings[x.movie_id] &&\r\n            ratings[x.movie_id].movie_title\r\n              .toLowerCase()\r\n              .includes(search.toLowerCase())\r\n          ) {\r\n            arr.push(x);\r\n          }\r\n        });\r\n      } else if (searchKey === \"Review\") {\r\n        reviews.forEach((x) => {\r\n          if (x.review.toLowerCase().includes(search.toLowerCase())) {\r\n            arr.push(x);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      arr = arr.concat([...reviews]);\r\n    }\r\n\r\n    setCandidates(arr.map((x) => Object.assign({}, x, { selected: false })));\r\n  }, [search, reviews]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= candidates.length) {\r\n    boundaries[1] = boundaries[1] - (boundaries[1] - candidates.length);\r\n  }\r\n\r\n  const columns = [\"Movie Name\", \"Review\", \"Rating\", \"Posted On\", \"Reported\"];\r\n\r\n  const validations = [\r\n    { valid: promotion.description, error: \"Description is required\" },\r\n    {\r\n      valid: promotion.start_date < promotion.end_date,\r\n      error: \"Start date must be before end date\",\r\n    },\r\n    {\r\n      valid: promotion.start_date !== promotion.end_date,\r\n      error: \"promotion duration is 0\",\r\n    },\r\n    {\r\n      valid: candidates.filter((x) => x.selected).length,\r\n      error: \"No content selected\",\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"row no-gutters p-sm-5 p-4\">\r\n      <div className=\"col-60 border-bottom mb-4\">\r\n        <div className=\"row no-gutters justify-content-between\">\r\n          <div className=\"col-auto py-3\">\r\n            <div className=\"row no-gutters admin-screen-title\">\r\n              Promote Content\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              Edit, add and delete promotions\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-xl-40 col-md-50 col-60\">\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters mb-1\">Description</div>\r\n            <div className=\"row no-gutters\">\r\n              <textarea\r\n                value={promotion.description ? promotion.description : \"\"}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setPromotion((prev) =>\r\n                    Object.assign({}, prev, { description: e.target.value })\r\n                  );\r\n                }}\r\n                className=\"textarea-light w-100\"\r\n                style={{ height: \"150px\" }}\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 pr-sm-3 mb-4\">\r\n                <div className=\"row no-gutters\">Start Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(promotion.start_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(promotion.start_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setPromotion((prev) =>\r\n                            Object.assign({}, prev, { start_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(promotion.start_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setPromotion((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              start_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(promotion.start_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters\">End Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(promotion.end_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(promotion.end_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setPromotion((prev) =>\r\n                            Object.assign({}, prev, { end_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(promotion.end_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setPromotion((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              end_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(promotion.end_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-3 h6 mt-4\">\r\n          Select Content To Promote\r\n        </div>\r\n        <div className=\"row no-gutters mb-3\">\r\n          <Select\r\n            onSelect={(index) => setSearchKey(searchKeys[index])}\r\n            className=\"table-input-prepend-select col-auto bg-custom-primary text-white\"\r\n            items={searchKeys}\r\n            btnName={`Search by ${searchKey}`}\r\n          ></Select>\r\n          <div className=\"col position-relative\" style={{ maxWidth: \"400px\" }}>\r\n            <BsSearch\r\n              fontSize=\"20px\"\r\n              style={{\r\n                position: \"absolute\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                right: \"18px\",\r\n              }}\r\n            ></BsSearch>\r\n            <input\r\n              value={search}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setSearch(e.target.value);\r\n              }}\r\n              className=\"table-input pr-5 pl-3 w-100\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters\">\r\n          <Swipeable\r\n            style={{ minWidth: \"100%\" }}\r\n            onSwipedLeft={() => {\r\n              setLastVisibleColumn(\r\n                lastVisibleColumn + 1 < 4\r\n                  ? lastVisibleColumn + 1\r\n                  : lastVisibleColumn\r\n              );\r\n            }}\r\n            onSwipedRight={() => {\r\n              setLastVisibleColumn(\r\n                lastVisibleColumn - 1 >= 0\r\n                  ? lastVisibleColumn - 1\r\n                  : lastVisibleColumn\r\n              );\r\n            }}\r\n          >\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table bg-white border\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">\r\n                      <Checkbox\r\n                        color={\"primary\"}\r\n                        checked={\r\n                          candidates\r\n                            .slice(boundaries[0], boundaries[1])\r\n                            .filter((x) => x.selected).length ===\r\n                          boundaries[1] - boundaries[0]\r\n                        }\r\n                        onChange={(e) => {\r\n                          setCandidates((prev) => {\r\n                            let arr = [...prev];\r\n                            for (\r\n                              let i = boundaries[0];\r\n                              i < boundaries[1];\r\n                              i++\r\n                            ) {\r\n                              arr[i].selected = e.target.checked;\r\n                            }\r\n                            return arr;\r\n                          });\r\n                        }}\r\n                      ></Checkbox>\r\n                    </th>\r\n                    <th className=\"table-header text-truncate text-left\">\r\n                      <div className=\"d-none d-lg-block\">Posted By</div>\r\n                      <div className=\"d-block d-lg-none\">By</div>\r\n                    </th>\r\n                    <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                      {columns[lastVisibleColumn]}\r\n                    </th>\r\n                    {columns.map((c,p) => (\r\n                      <th className=\"d-none d-xl-table-cell table-header text-truncate\" key={`x-col-${p}`}>\r\n                        <div>{c}</div>\r\n                      </th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {candidates.length ? (\r\n                    candidates\r\n                      .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                      .map((x, i) => (\r\n                        <tr\r\n                          className=\"font-weight-600 bg-light\"\r\n                          key={`shortlist-item-${i}`}\r\n                        >\r\n                          <td className=\"text-center\">\r\n                            <Checkbox\r\n                              color={\"primary\"}\r\n                              checked={x.selected}\r\n                              onChange={(e) => {\r\n                                setCandidates((prev) => {\r\n                                  let arr = [...prev];\r\n                                  arr[(page - 1) * 5 + i].selected =\r\n                                    e.target.checked;\r\n                                  return arr;\r\n                                });\r\n                              }}\r\n                            ></Checkbox>\r\n                          </td>\r\n                          <td style={{ whiteSpace: \"nowrap\" }}>\r\n                            <div className=\"d-inline-block mr-2\">\r\n                              <div\r\n                                className=\"square-50 rounded-circle bg-image\"\r\n                                style={{\r\n                                  backgroundImage: `url(${\r\n                                    Object.values(publicUsers).length\r\n                                      ? publicUsers[x.author].photo\r\n                                      : \"\"\r\n                                  })`,\r\n                                }}\r\n                              ></div>\r\n                            </div>\r\n                            {Object.values(publicUsers).length ? (\r\n                              <div className=\"d-none d-md-inline-block align-top\">\r\n                                <div className=\"h6 text-primary\">\r\n                                  {publicUsers[x.author].display_name}\r\n                                </div>\r\n                                <div>{publicUsers[x.author].email}</div>\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 0\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            {ratings[x.movie_id]\r\n                              ? ratings[x.movie_id].movie_title\r\n                              : \"\"}\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 1\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            {!x.comment ? (\r\n                              <div style={{ minWidth: \"200px\" }}>\r\n                                <div\r\n                                  className=\"text-clamp-4 cursor-pointer user-select-none\"\r\n                                  onClick={(e) => {\r\n                                    let target = e.currentTarget;\r\n                                    if (\r\n                                      target.classList.contains(\"text-clamp-4\")\r\n                                    ) {\r\n                                      target.classList.remove(\"text-clamp-4\");\r\n                                    } else {\r\n                                      target.classList.add(\"text-clamp-4\");\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  {x.review}\r\n                                </div>\r\n                              </div>\r\n                            ) : (\r\n                              <div\r\n                                className=\"text-clamp-4 cursor-pointer user-select-none\"\r\n                                onClick={(e) => {\r\n                                  let target = e.currentTarget;\r\n                                  if (\r\n                                    target.classList.contains(\"text-clamp-4\")\r\n                                  ) {\r\n                                    target.classList.remove(\"text-clamp-4\");\r\n                                  } else {\r\n                                    target.classList.add(\"text-clamp-4\");\r\n                                  }\r\n                                }}\r\n                              >\r\n                                {x.comment}\r\n                              </div>\r\n                            )}\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 2\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            {x.rating ? (\r\n                              x.rating === \"ok_rate\" ? (\r\n                                <div style={{ marginTop: \"-4px\" }}>\r\n                                  <OkIcon size={24}></OkIcon>\r\n                                </div>\r\n                              ) : (\r\n                                <div style={{ marginBottom: \"-6px\" }}>\r\n                                  <Emoji\r\n                                    emoji={\r\n                                      x.rating === \"excellent_rate\"\r\n                                        ? \"fire\"\r\n                                        : x.rating === \"good_rate\"\r\n                                        ? \"heart\"\r\n                                        : x.rating === \"ok_rate\"\r\n                                        ? \"heavy_division_sign\"\r\n                                        : \"shit\"\r\n                                    }\r\n                                    set=\"facebook\"\r\n                                    size={24}\r\n                                  />\r\n                                </div>\r\n                              )\r\n                            ) : (\r\n                              \"-\"\r\n                            )}\r\n                          </td>\r\n                          <td\r\n                            style={{ whiteSpace: \"nowrap\" }}\r\n                            className={`${\r\n                              lastVisibleColumn === 3\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div>\r\n                              {date.format(\r\n                                new Date(x.date),\r\n                                \"DD/MM/YYYY @ hh:mm A\"\r\n                              )}\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              !x.reported ? \"text-green\" : \"text-danger\"\r\n                            } ${\r\n                              lastVisibleColumn === 4\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            {x.reported ? \"Abused\" : \"Not Reported\"}\r\n                          </td>\r\n                        </tr>\r\n                      ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan={3} className=\" text-center py-5\">\r\n                        0 results found\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </Swipeable>\r\n        </div>\r\n        <div className=\"row no-gutters justify-content-end\">\r\n          <div className=\"col-auto\">\r\n            <Pagination\r\n              count={Math.ceil(candidates.length / 5)}\r\n              current={page}\r\n              setCurrent={setPage}\r\n            ></Pagination>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-60 mt-1 px-0\">\r\n          <div\r\n            style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n            className=\"row no-gutters align-items-center text-danger mb-2\"\r\n          >\r\n            {problem}\r\n          </div>\r\n          <div className=\"row no-gutters\">\r\n            <div\r\n              className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n              onClick={() => getBack()}\r\n            >\r\n              Cancel\r\n            </div>\r\n            <div\r\n              className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n              onClick={async () => {\r\n                let invalid = validations.filter((x) => !x.valid);\r\n                if (invalid.length) {\r\n                  setProblem(invalid[0].error);\r\n                } else {\r\n                  let promos = candidates\r\n                    .filter((x) => x.selected)\r\n                    .map((x) =>\r\n                      Object.assign({}, promotion, {\r\n                        content_type: x.comment ? \"Comment\" : \"Review\",\r\n                        content: x.comment\r\n                          ? { comment: x.comment }\r\n                          : { review: x.review, rating: x.rating },\r\n                        content_id: x._id,\r\n                        content_author: x.author,\r\n                        movie_title: x.movie_title,\r\n                        movie_genres: x.movie_genres,\r\n                        movie_poster: x.movie_poster,\r\n                        movie_release_date: x.movie_release_date,\r\n                        movie_id: x.movie_id,\r\n                      })\r\n                    );\r\n                  setLoading(true);\r\n                  let res = await CreatePromotions(promos);\r\n                  setLoading(false);\r\n                  if (res.error) {\r\n                    store.dispatch({\r\n                      type: \"SET_NOTIFICATION\",\r\n                      notification: {\r\n                        title: \"Error\",\r\n                        message: res.error,\r\n                        type: \"failure\",\r\n                      },\r\n                    });\r\n                  } else {\r\n                    store.dispatch({\r\n                      type: \"SET_NOTIFICATION\",\r\n                      notification: {\r\n                        title: \"Promotions created\",\r\n                        message: \"Promotions were successfully created\",\r\n                        type: \"success\",\r\n                      },\r\n                    });\r\n                    getBack();\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              <Loader\r\n                color={\"white\"}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  left: \"10px\",\r\n                  top: 0,\r\n                  bottom: 0,\r\n                  margin: \"auto\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                loading={loading}\r\n                size={20}\r\n              ></Loader>\r\n              Save\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(AddNewPromotion);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport date from \"date-and-time\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport {\r\n  GetNotifications,\r\n  DeleteMultipleNotifications,\r\n} from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\n\r\nconst Notifications = ({\r\n  setEditNotification,\r\n  setEditNotificationSection,\r\n  setAddNewNotificationSection,\r\n}) => {\r\n  const [action, setAction] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"Subject\");\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [typeFilter, setTypeFilter] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [mainFilter, setMainFilter] = useState({ key: \"\", value: \"\" });\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [filteredNotifications, setFilteredNotifications] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let data = await GetNotifications();\r\n      if (!data.error) {\r\n        setNotifications(\r\n          data.reverse().map((x) => Object.assign({}, x, { selected: false }))\r\n        );\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, [refresh]);\r\n\r\n  const types = [\"App\", \"Email\", \"System\"];\r\n\r\n  useEffect(() => {\r\n    let arr = [...notifications];\r\n    if (notifications.length) {\r\n      if (search) {\r\n        if (searchKey === \"Subject\") {\r\n          arr = arr.filter((x) =>\r\n            x.subject.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Description\") {\r\n          arr = arr.filter((x) =>\r\n            x.description.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        }\r\n      }\r\n\r\n      if (typeFilter) {\r\n        arr = arr.filter((x) => x.type === typeFilter);\r\n      }\r\n\r\n      if (mainFilter.key) {\r\n        arr = arr.filter((x) => x[mainFilter.key] === mainFilter.value);\r\n      }\r\n\r\n      setFilteredNotifications(arr);\r\n    }\r\n  }, [search, typeFilter, notifications, mainFilter]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //boundaries for slicing reviews array. (pagination)\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= filteredNotifications.length) {\r\n    boundaries[1] =\r\n      boundaries[1] - (boundaries[1] - filteredNotifications.length);\r\n  }\r\n\r\n  const statuses = [\"Sent\", \"Drafted\", \"Deleted\"];\r\n\r\n  const handleApply = async (all = false) => {\r\n    if (all) {\r\n      setTypeFilter(type);\r\n    }\r\n    if (action === \"Edit\") {\r\n      let selected = filteredNotifications.filter((x) => x.selected);\r\n      if (selected.length) {\r\n        setEditNotification(selected[0]);\r\n        setEditNotificationSection();\r\n      }\r\n    } else if (action === \"Delete\") {\r\n      let selected = filteredNotifications.filter((x) => x.selected);\r\n      if (selected.length) {\r\n        let res = await DeleteMultipleNotifications(\r\n          selected.map((x) => x._id),\r\n          { status: \"Deleted\" }\r\n        );\r\n        if (res.error) {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Error\",\r\n              message: res.error,\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Selected notifications deleted\",\r\n              message: \"Selected notifications were successfully deleted\",\r\n              type: \"success\",\r\n            },\r\n          });\r\n          store.dispatch({\r\n            type: \"UPDATE_USER\",\r\n            userProperty: { update: Date.now() },\r\n          });\r\n        }\r\n        setRefresh(!refresh);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row no-gutters admin-screen\">\r\n      <div className=\"col-60 border-bottom\">\r\n        <div className=\"row no-gutters justify-content-between pb-3 align-items-end\">\r\n          <div className=\"col-auto\">\r\n            <div className=\"row no-gutters admin-screen-title\">\r\n              Notifications\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              Create, send and manage notifications\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"col-auto btn-custom btn-custom-primary btn-natural\"\r\n            onClick={() => setAddNewNotificationSection()}\r\n          >\r\n            Add New\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-60 py-5\">\r\n            <div className=\"row no-gutters h6 mb-3\">\r\n              <div\r\n                onClick={() => {\r\n                  setTypeFilter(\"\");\r\n                  setType(\"\");\r\n                  setMainFilter({ key: \"\", value: \"\" });\r\n                }}\r\n                className={`col-auto cursor-pointer ${\r\n                  !typeFilter && !mainFilter.key ? \"text-primary\" : \"text-dark\"\r\n                }`}\r\n              >\r\n                All ({notifications.length})\r\n              </div>\r\n              {statuses.map((x, i) => (\r\n                <React.Fragment key={`status-${i}`}>\r\n                  <div className=\"col-auto px-2 text-muted\">|</div>\r\n                  <div\r\n                    onClick={() =>\r\n                      setMainFilter((prev) =>\r\n                        Object.assign({ key: \"status\", value: x })\r\n                      )\r\n                    }\r\n                    className={`col-auto cursor-pointer ${\r\n                      mainFilter.key === \"status\" && mainFilter.value === x\r\n                        ? \"text-primary\"\r\n                        : \"text-dark\"\r\n                    }`}\r\n                  >\r\n                    {x} ({notifications.filter((y) => y.status === x).length})\r\n                  </div>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-between\">\r\n              <div className=\"col-sm-auto col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) => setAction([\"Delete\"][index])}\r\n                        items={[\"Delete\"]}\r\n                        btnName={action ? action : \"Select Action\"}\r\n                        className=\"input-light px-3 col-auto\"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) => setType(types[index])}\r\n                        items={types}\r\n                        btnName={type ? type : \"Select Type\"}\r\n                        className=\"input-light px-3 col-auto\"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    onClick={() => handleApply(true)}\r\n                    className=\"btn-custom btn-custom-primary col-60 col-sm-auto mb-3 mr-3 btn-xsmall\"\r\n                  >\r\n                    Apply\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 d-block d-sm-none\">\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <Select\r\n                    popoverClass=\"w-100\"\r\n                    onSelect={(index) =>\r\n                      setSearchKey([\"Subject\", \"Description\"][index])\r\n                    }\r\n                    className=\"input-light col-60\"\r\n                    items={[\"Subject\", \"Description\"]}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <div className=\"col-60 position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      className=\"input-light w-100 pr-5 pl-3\"\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-auto mb-3 d-none d-sm-block\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    onSelect={(index) =>\r\n                      setSearchKey([\"Subject\", \"Description\"][index])\r\n                    }\r\n                    className=\"table-input-prepend-select col-auto\"\r\n                    items={[\"Subject\", \"Description\"]}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                  <div className=\"col position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                      className=\"table-input pr-5 pl-3\"\r\n                      style={{ minWidth: \"300px\" }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <Swipeable\r\n                style={{ minWidth: \"100%\" }}\r\n                onSwipedLeft={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn + 1 < 4\r\n                      ? lastVisibleColumn + 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n                onSwipedRight={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn - 1 >= 0\r\n                      ? lastVisibleColumn - 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n              >\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table bg-white border\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"text-center\">\r\n                          <Checkbox\r\n                            color={\"primary\"}\r\n                            checked={\r\n                              filteredNotifications\r\n                                .slice(boundaries[0], boundaries[1])\r\n                                .filter((x) => x.selected).length ===\r\n                              boundaries[1] - boundaries[0]\r\n                            }\r\n                            onChange={(e) => {\r\n                              setFilteredNotifications((prev) => {\r\n                                let arr = [...prev];\r\n                                for (\r\n                                  let i = boundaries[0];\r\n                                  i < boundaries[1];\r\n                                  i++\r\n                                ) {\r\n                                  arr[i].selected = e.target.checked;\r\n                                }\r\n                                return arr;\r\n                              });\r\n                            }}\r\n                          ></Checkbox>\r\n                        </th>\r\n                        <th className=\"table-header text-truncate text-left\">\r\n                          Subject\r\n                        </th>\r\n                        <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                          {\r\n                            [\"Type\", \"Description\", \"Duration\", \"Status\"][\r\n                              lastVisibleColumn\r\n                            ]\r\n                          }\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Type</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Description</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Duration</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Status</div>\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filteredNotifications.length ? (\r\n                        filteredNotifications\r\n                          .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                          .map((x, i) => (\r\n                            <tr\r\n                              className=\"font-weight-600 bg-light\"\r\n                              key={`shortlist-item-${i}`}\r\n                            >\r\n                              <td className=\"text-center\">\r\n                                <Checkbox\r\n                                  color={\"primary\"}\r\n                                  checked={x.selected}\r\n                                  onChange={(e) => {\r\n                                    setFilteredNotifications((prev) => {\r\n                                      let arr = [...prev];\r\n                                      arr[(page - 1) * 5 + i].selected =\r\n                                        e.target.checked;\r\n                                      return arr;\r\n                                    });\r\n                                  }}\r\n                                ></Checkbox>\r\n                              </td>\r\n                              <td style={{ whiteSpace: \"nowrap\" }}>\r\n                                <div className=\"mb-2\">{x.subject}</div>\r\n                                <div className=\"d-flex\">\r\n                                  <div\r\n                                    className=\"text-primary underline-link\"\r\n                                    onClick={() => {\r\n                                      setEditNotification(x);\r\n                                      setEditNotificationSection();\r\n                                    }}\r\n                                  >\r\n                                    Edit\r\n                                  </div>\r\n                                  <div className=\"px-2\">|</div>\r\n                                  <div\r\n                                    className=\"text-danger underline-link\"\r\n                                    onClick={async () => {\r\n                                      let res = await DeleteMultipleNotifications(\r\n                                        [x._id],\r\n                                        { status: \"Deleted\" }\r\n                                      );\r\n                                      if (res.error) {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Error\",\r\n                                            message: res.error,\r\n                                            type: \"failure\",\r\n                                          },\r\n                                        });\r\n                                      } else {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Notification was deleted\",\r\n                                            message:\r\n                                              \"Notification was successfully deleted\",\r\n                                            type: \"success\",\r\n                                          },\r\n                                        });\r\n                                        store.dispatch({\r\n                                          type: \"UPDATE_USER\",\r\n                                          userProperty: { update: Date.now() },\r\n                                        });\r\n                                      }\r\n                                      setRefresh(!refresh);\r\n                                    }}\r\n                                  >\r\n                                    Delete\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 0\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div>{x.type}</div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 1\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div\r\n                                  style={{ minWidth: \"200px\" }}\r\n                                  className=\"text-clamp-4 cursor-pointer user-select-none\"\r\n                                  onClick={(e) => {\r\n                                    let target = e.currentTarget;\r\n                                    if (\r\n                                      target.classList.contains(\"text-clamp-4\")\r\n                                    ) {\r\n                                      target.classList.remove(\"text-clamp-4\");\r\n                                    } else {\r\n                                      target.classList.add(\"text-clamp-4\");\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  {x.description}\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 2\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div className=\"d-flex mb-2\">\r\n                                  <div style={{ width: \"55px\" }}>From:</div>\r\n                                  <div>\r\n                                    <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                      {date.format(\r\n                                        new Date(x.start_date),\r\n                                        \"DD/MM/YYYY @ hh:mm A\"\r\n                                      )}\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"d-flex\">\r\n                                  <div style={{ width: \"55px\" }}>To:</div>\r\n                                  <div>\r\n                                    <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                      {date.format(\r\n                                        new Date(x.end_date),\r\n                                        \"DD/MM/YYYY @ hh:mm A\"\r\n                                      )}\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 3\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.status}\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan={6} className=\" text-center py-5\">\r\n                            0 results found\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </Swipeable>\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-center justify-content-sm-end\">\r\n              <div className=\"col-auto\">\r\n                <Pagination\r\n                  count={Math.ceil(filteredNotifications.length / 5)}\r\n                  current={page}\r\n                  setCurrent={setPage}\r\n                ></Pagination>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import { default as MuiAutocomplete } from \"@material-ui/lab/Autocomplete\";\r\nimport React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputRoot: {\r\n    \"& .MuiOutlinedInput-notchedOutline\": {\r\n      border: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"rgb(255, 0, 64)\",\r\n    },\r\n    secondary: {\r\n      main: \"#202020\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Autocomplete = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <MuiAutocomplete\r\n        {...props}\r\n        classes={classes}\r\n        multiple\r\n        id=\"tags-outlined\"\r\n        filterSelectedOptions\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"outlined\"\r\n            placeholder={props.placeholder}\r\n          />\r\n        )}\r\n      ></MuiAutocomplete>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Autocomplete;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Autocomplete from \"../utility/Autocomplete\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BsCalendar, BsClock } from \"react-icons/bs\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport date from \"date-and-time\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { EditNotification as Edit, GetUser } from \"../../server/DatabaseApi\";\r\n\r\nconst EditNotification = ({\r\n  currentNotification,\r\n  getBack,\r\n  publicUsers,\r\n  user,\r\n}) => {\r\n  const types = [\"App\", \"Email\", \"System\"];\r\n\r\n  let initialDate = Date.now();\r\n\r\n  const [notification, setNotification] = useState({\r\n    type: \"\",\r\n    subject: \"\",\r\n    start_date: initialDate,\r\n    end_date: initialDate,\r\n    receivers: [],\r\n    description: \"\",\r\n    status: \"Drafted\",\r\n  });\r\n\r\n  const statuses = [\"Sent\", \"Drafted\", \"Deleted\"];\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const validations = [\r\n    { valid: notification.subject, error: \"Subject is required\" },\r\n    { valid: notification.type, error: \"Select notification type\" },\r\n    {\r\n      valid: notification.receivers.length,\r\n      error: \"Select at least one receiver\",\r\n    },\r\n    { valid: notification.description, error: \"Description is required\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setNotification(currentNotification);\r\n  }, [currentNotification]);\r\n\r\n  const autocompleteOptions = {\r\n    All: \"All\",\r\n    \"All users\": \"User\",\r\n    \"All admins\": \"Administrator\",\r\n    \"Inactive users\": \"Inactive\",\r\n    \"Active users\": \"Active\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-sm-5 p-4\">\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">\r\n          Edit notification\r\n        </div>\r\n        <div className=\"row no-gutters\">Edit existing notification</div>\r\n      </div>\r\n      <div className=\"col-60\" style={{ maxWidth: \"800px\" }}>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Subject</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              disabled={notification.type === \"System\"}\r\n              type=\"text\"\r\n              className={`w-100 ${\r\n                notification.type === \"System\"\r\n                  ? \"input-light-disabled\"\r\n                  : \"input-light\"\r\n              } px-3`}\r\n              value={notification.subject}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNotification((prev) =>\r\n                  Object.assign({}, prev, { subject: e.target.value })\r\n                );\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Type</div>\r\n          <Select\r\n            disabled={notification.type === \"System\"}\r\n            popoverClass=\"col-sm-30 col-60\"\r\n            className={`input-light${\r\n              notification.type === \"System\" ? \"-disabled\" : \"\"\r\n            } col-60`}\r\n            btnName={notification.type ? notification.type : \"Select\"}\r\n            items={types}\r\n            onSelect={(index) =>\r\n              setNotification((prev) =>\r\n                Object.assign({}, prev, { type: types[index] })\r\n              )\r\n            }\r\n          ></Select>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Notification to</div>\r\n          <Autocomplete\r\n            disabled={notification.type === \"System\"}\r\n            value={notification.receivers}\r\n            onChange={(e, val) => {\r\n              setNotification((prev) =>\r\n                Object.assign({}, prev, { receivers: val })\r\n              );\r\n            }}\r\n            placeholder={\"Search by username\"}\r\n            color={\"primary\"}\r\n            className={`col-md-30 col-60 input-light-resize${\r\n              notification.type === \"System\" ? \"-disabled\" : \"\"\r\n            }`}\r\n            options={Object.keys(autocompleteOptions).concat(\r\n              Object.values(publicUsers).filter((x) => x.status !== \"Deleted\")\r\n            )}\r\n            getOptionLabel={(option) =>\r\n              option.display_name ? option.display_name : option\r\n            }\r\n          ></Autocomplete>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Description</div>\r\n          <div className=\"col-60\">\r\n            <textarea\r\n              disabled={notification.type === \"System\"}\r\n              value={notification.description}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                let text = e.target.value;\r\n                if (text.split(\" \").length <= 500) {\r\n                  setNotification((prev) =>\r\n                    Object.assign({}, prev, { description: text })\r\n                  );\r\n                }\r\n              }}\r\n              className={`${\r\n                notification.type === \"System\"\r\n                  ? \"textarea-light-disabled\"\r\n                  : \"textarea-light\"\r\n              } w-100`}\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div\r\n            className={`col-60 ${\r\n              notification.description.split(\" \").length <= 499\r\n                ? \"text-muted\"\r\n                : \"text-danger\"\r\n            }`}\r\n          >\r\n            {notification.description\r\n              ? 500 - notification.description.split(\" \").length\r\n              : 500}\r\n            words left\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 pr-sm-3 mb-4\">\r\n                <div className=\"row no-gutters\">Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(notification.start_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            disabled={notification.type === \"System\"}\r\n                            {...props}\r\n                            className={`input-light${\r\n                              notification.type === \"System\" ? \"-disabled\" : \"\"\r\n                            } w-100 pl-5 pr-3`}\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(notification.start_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setNotification((prev) =>\r\n                            Object.assign({}, prev, { start_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className={`col-auto position-relative input-light${\r\n                      notification.type === \"System\" ? \"-disabled\" : \"\"\r\n                    }`}\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    {notification.type === \"System\" ? (\r\n                      <div className=\"w-100 pl-5\">\r\n                        {date.format(\r\n                          new Date(notification.start_date),\r\n                          \"hh:mm A\"\r\n                        )}\r\n                      </div>\r\n                    ) : (\r\n                      <TimePicker\r\n                        clearIcon={null}\r\n                        clockIcon={null}\r\n                        className=\"w-100 pl-5\"\r\n                        onChange={(a) => {\r\n                          if (a) {\r\n                            let [h, m] = a.split(\":\");\r\n                            let newTime = new Date(notification.start_date);\r\n                            newTime.setHours(h);\r\n                            newTime.setMinutes(m);\r\n                            setNotification((prev) =>\r\n                              Object.assign({}, prev, {\r\n                                start_date: newTime.getTime(),\r\n                              })\r\n                            );\r\n                          }\r\n                        }}\r\n                        value={new Date(notification.start_date)}\r\n                      ></TimePicker>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Status</div>\r\n          <Select\r\n            disabled={notification.type === \"System\"}\r\n            popoverClass=\"col-sm-30 col-60\"\r\n            className={`input-light${\r\n              notification.type === \"System\" ? \"-disabled\" : \"\"\r\n            } col-60`}\r\n            btnName={\r\n              notification.status ? notification.status : \"Select status\"\r\n            }\r\n            items={statuses}\r\n            onSelect={(index) =>\r\n              setNotification((prev) =>\r\n                Object.assign({}, prev, { status: statuses[index] })\r\n              )\r\n            }\r\n          ></Select>\r\n        </div>\r\n        <div\r\n          style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n          className=\"row no-gutters align-items-center text-danger my-2\"\r\n        >\r\n          {problem}\r\n        </div>\r\n        {notification.type !== \"System\" ? (\r\n          <div className=\"row no-gutters\">\r\n            <div\r\n              className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n              onClick={getBack}\r\n            >\r\n              Cancel\r\n            </div>\r\n            <div\r\n              className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n              onClick={async () => {\r\n                let invalid = validations.filter((x) => !x.valid);\r\n                if (invalid.length) {\r\n                  setProblem(invalid[0].error);\r\n                } else {\r\n                  setLoading(true);\r\n\r\n                  let res = await Edit(notification);\r\n                  setLoading(false);\r\n                  if (res.error) {\r\n                    store.dispatch({\r\n                      type: \"SET_NOTIFICATION\",\r\n                      notification: {\r\n                        title: \"Error\",\r\n                        message: res.error,\r\n                        type: \"failure\",\r\n                      },\r\n                    });\r\n                  } else {\r\n                    store.dispatch({\r\n                      type: \"SET_NOTIFICATION\",\r\n                      notification: {\r\n                        title: \"Notification edited\",\r\n                        message: \"Notification was successfully edited\",\r\n                        type: \"success\",\r\n                      },\r\n                    });\r\n                    let updatedUser = await GetUser(user._id);\r\n                    store.dispatch({\r\n                      type: \"SET_USER\",\r\n                      user: updatedUser,\r\n                    });\r\n                    getBack();\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              <Loader\r\n                color={\"white\"}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  left: \"10px\",\r\n                  top: 0,\r\n                  bottom: 0,\r\n                  margin: \"auto\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                loading={loading}\r\n                size={20}\r\n              ></Loader>\r\n              Save\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"row no-gutters\">\r\n            <div\r\n              className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n              onClick={getBack}\r\n            >\r\n              Go back\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    user: state.user,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(EditNotification);\r\n","import React, { useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Autocomplete from \"../utility/Autocomplete\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BsCalendar, BsClock } from \"react-icons/bs\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport date from \"date-and-time\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { CreateNotification, GetUser } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\n\r\nconst AddNewNotification = ({ publicUsers, getBack, user }) => {\r\n  const types = [\"App\", \"Email\", \"System\"];\r\n  let initialDate = Date.now();\r\n  const [notification, setNotification] = useState({\r\n    type: \"\",\r\n    subject: \"\",\r\n    receivers: [],\r\n    start_date: initialDate,\r\n    end_date: initialDate,\r\n    description: \"\",\r\n    status: \"Sent\",\r\n  });\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const statuses = [\"Sent\", \"Drafted\", \"Deleted\"];\r\n  const validations = [\r\n    { valid: notification.subject, error: \"Subject is required\" },\r\n    { valid: notification.type, error: \"Select notification type\" },\r\n    {\r\n      valid: notification.receivers.length,\r\n      error: \"Select at least one receiver\",\r\n    },\r\n    { valid: notification.description, error: \"Description is required\" },\r\n  ];\r\n\r\n  const autocompleteOptions = {\r\n    All: \"All\",\r\n    \"All users\": \"User\",\r\n    \"All admins\": \"Administrator\",\r\n    \"Inactive users\": \"Inactive\",\r\n    \"Active users\": \"Active\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-sm-5 p-4\">\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">\r\n          Add new notification\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          Create a brand new notification and add to this site\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\" style={{ maxWidth: \"800px\" }}>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Subject</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"w-100 input-light px-3\"\r\n              value={notification.subject}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNotification((prev) =>\r\n                  Object.assign({}, prev, { subject: e.target.value })\r\n                );\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Type</div>\r\n          <Select\r\n            popoverClass=\"col-sm-30 col-60\"\r\n            className=\"input-light col-60 w-100\"\r\n            btnName={notification.type ? notification.type : \"Select\"}\r\n            items={types}\r\n            onSelect={(index) =>\r\n              setNotification((prev) =>\r\n                Object.assign({}, prev, { type: types[index] })\r\n              )\r\n            }\r\n          ></Select>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Notification to</div>\r\n\r\n          <Autocomplete\r\n            value={notification.receivers}\r\n            onChange={(e, val) => {\r\n              setNotification((prev) =>\r\n                Object.assign({}, prev, { receivers: val })\r\n              );\r\n            }}\r\n            placeholder={\"Search by username\"}\r\n            color={\"primary\"}\r\n            className=\"col-md-30 col-60 input-light-resize\"\r\n            options={Object.keys(autocompleteOptions).concat(\r\n              Object.values(publicUsers).filter((x) => x.status !== \"Deleted\")\r\n            )}\r\n            getOptionLabel={(option) =>\r\n              option.display_name ? option.display_name : option\r\n            }\r\n          ></Autocomplete>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Description</div>\r\n          <div className=\"col-60\">\r\n            <textarea\r\n              value={notification.description}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                let text = e.target.value;\r\n                if (text.split(\" \").length <= 500) {\r\n                  setNotification((prev) =>\r\n                    Object.assign({}, prev, { description: text })\r\n                  );\r\n                }\r\n              }}\r\n              className=\"textarea-light w-100\"\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div\r\n            className={`col-60 ${\r\n              notification.description.split(\" \").length <= 499\r\n                ? \"text-muted\"\r\n                : \"text-danger\"\r\n            }`}\r\n          >\r\n            {notification.description\r\n              ? 500 - notification.description.split(\" \").length\r\n              : 500}\r\n            words left\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 pr-sm-3 mb-4\">\r\n                <div className=\"row no-gutters\">Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(notification.start_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(notification.start_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setNotification((prev) =>\r\n                            Object.assign({}, prev, { start_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(notification.start_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setNotification((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              start_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(notification.start_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Status</div>\r\n          <Select\r\n            popoverClass=\"col-sm-30 col-60\"\r\n            className=\"input-light col-60\"\r\n            btnName={\r\n              notification.status ? notification.status : \"Select status\"\r\n            }\r\n            items={statuses}\r\n            onSelect={(index) =>\r\n              setNotification((prev) =>\r\n                Object.assign({}, prev, { status: statuses[index] })\r\n              )\r\n            }\r\n          ></Select>\r\n        </div>\r\n        <div\r\n          style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n          className=\"row no-gutters align-items-center text-danger my-2\"\r\n        >\r\n          {problem}\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n            onClick={getBack}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n            onClick={async () => {\r\n              let invalid = validations.filter((x) => !x.valid);\r\n              if (invalid.length) {\r\n                setProblem(invalid[0].error);\r\n              } else {\r\n                setLoading(true);\r\n\r\n                let res = await CreateNotification(notification);\r\n                setLoading(false);\r\n                if (res.error) {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Error\",\r\n                      message: res.error,\r\n                      type: \"failure\",\r\n                    },\r\n                  });\r\n                } else {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Notification created\",\r\n                      message: \"Notification was successfully created\",\r\n                      type: \"success\",\r\n                    },\r\n                  });\r\n                  let updatedUser = await GetUser(user._id);\r\n                  store.dispatch({\r\n                    type: \"SET_USER\",\r\n                    user: updatedUser,\r\n                  });\r\n\r\n                  getBack();\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    user: state.user,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(AddNewNotification);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport {\r\n  GetUsers,\r\n  EditMultipleUsers,\r\n  DeleteMultipleUsers,\r\n} from \"../../server/DatabaseApi\";\r\nimport { format as TimeAgo } from \"timeago.js\";\r\nimport store from \"../../store/store\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Users = ({\r\n  setEditUser,\r\n  setEditUserSection,\r\n  setAddNewUserSection,\r\n  publicUsers,\r\n  ratings,\r\n}) => {\r\n  const [action, setAction] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"User\");\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [roleFilter, setRoleFilter] = useState(\"\");\r\n  const [statusFilter, setStatusFilter] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let data = await GetUsers();\r\n      setUsers(data.map((x) => Object.assign({}, x, { selected: false })));\r\n    }\r\n\r\n    getData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    let arr = [...users];\r\n    if (users.length) {\r\n      if (search) {\r\n        if (searchKey === \"User\") {\r\n          arr = arr.filter((x) =>\r\n            x.display_name.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Email\") {\r\n          arr = arr.filter((x) =>\r\n            x.email.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        }\r\n      }\r\n\r\n      if (roleFilter) {\r\n        arr = arr.filter((x) => x.role === roleFilter);\r\n      }\r\n\r\n      if (statusFilter) {\r\n        arr = arr.filter((x) => x.status === statusFilter);\r\n      }\r\n    }\r\n    setFilteredUsers(arr);\r\n  }, [search, roleFilter, users, statusFilter]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //boundaries for slicing reviews array. (pagination)\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= filteredUsers.length) {\r\n    boundaries[1] = boundaries[1] - (boundaries[1] - filteredUsers.length);\r\n  }\r\n\r\n  const handleApply = async (all = false) => {\r\n    if (all) {\r\n      setRoleFilter(role === \"All\" ? \"\" : role);\r\n    }\r\n    let selected = filteredUsers.filter((x) => x.selected);\r\n\r\n    if (selected.length) {\r\n      if (action === \"Edit\") {\r\n        setEditUser(selected[0]);\r\n        setEditUserSection();\r\n      } else {\r\n        let update = {};\r\n        if (action === \"Delete\") {\r\n          update[\"status\"] = \"Deleted\";\r\n        } else if (action === \"Inactivate\") {\r\n          update[\"status\"] = \"Inactive\";\r\n        } else if (action === \"Block\") {\r\n          update[\"status\"] = \"Blocked\";\r\n        } else if (action === \"Activate\") {\r\n          update[\"status\"] = \"Active\";\r\n        }\r\n        let res = await EditMultipleUsers(\r\n          selected.map((x) => x._id),\r\n          selected.map((x) => publicUsers[x._id]._id),\r\n          update\r\n        );\r\n\r\n        if (res.error) {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Error\",\r\n              message: res.error,\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Users updated\",\r\n              message: \"User were successfully updated\",\r\n              type: \"success\",\r\n            },\r\n          });\r\n          setRefresh(!refresh);\r\n          let newPublicUsers = { ...publicUsers };\r\n          selected.forEach((x) => {\r\n            newPublicUsers[x._id].status = update[\"status\"];\r\n          });\r\n          store.dispatch({\r\n            type: \"SET_PUBLICUSERS\",\r\n            publicUsers: newPublicUsers,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const editUsers = async (update, ids, pids) => {\r\n    let res = await EditMultipleUsers(ids, pids, update);\r\n    if (res.error) {\r\n      store.dispatch({\r\n        type: \"SET_NOTIFICATION\",\r\n        notification: {\r\n          title: \"Error\",\r\n          message: res.error,\r\n          type: \"failure\",\r\n        },\r\n      });\r\n    } else {\r\n      store.dispatch({\r\n        type: \"SET_NOTIFICATION\",\r\n        notification: {\r\n          title: \"Users updated\",\r\n          message: \"User were successfully updated\",\r\n          type: \"success\",\r\n        },\r\n      });\r\n      setRefresh(!refresh);\r\n    }\r\n  };\r\n  const actions = [\"Block\", \"Inactivate\", \"Activate\", \"Delete\"];\r\n  const statuses = [\"Active\", \"Inactive\", \"Blocked\"];\r\n  const columns = [\"Email\", \"Role\", \"Last login\", \"Activity\", \"Status\"];\r\n  return (\r\n    <div className=\"row no-gutters admin-screen\">\r\n      <div className=\"col-60 border-bottom\">\r\n        <div className=\"row no-gutters justify-content-between pb-3 align-items-end\">\r\n          <div className=\"col-auto\">\r\n            <div className=\"row no-gutters admin-screen-title\">Users</div>\r\n            <div className=\"row no-gutters\">Add, edit and delete users</div>\r\n          </div>\r\n          <div\r\n            className=\"col-auto btn-custom btn-custom-primary btn-natural\"\r\n            onClick={() => setAddNewUserSection()}\r\n          >\r\n            Add New\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-60 py-5\">\r\n            <div className=\"row no-gutters h6 mb-3\">\r\n              <div\r\n                className={`col-auto ${\r\n                  statusFilter ? \"text-dark\" : \"text-primary\"\r\n                }`}\r\n                onClick={() => setStatusFilter(\"\")}\r\n              >\r\n                All ({users.length})\r\n              </div>\r\n              {statuses.map((x, i) => (\r\n                <React.Fragment key={`status-${i}`}>\r\n                  <div className=\"col-auto px-2 text-muted\">|</div>\r\n                  <div\r\n                    className={`col-auto cursor-pointer ${\r\n                      statusFilter === x ? \"text-primary\" : \"text-dark\"\r\n                    }`}\r\n                    onClick={() => setStatusFilter(x)}\r\n                  >\r\n                    {x} ({users.filter((y) => y.status === x).length})\r\n                  </div>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-between\">\r\n              <div className=\"col-sm-auto col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) => setAction(actions[index])}\r\n                        items={actions}\r\n                        btnName={action ? action : \"Select Action\"}\r\n                        className=\"input-light px-3 col-auto\"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) =>\r\n                          setRole([\"All\", \"Administrator\", \"User\"][index])\r\n                        }\r\n                        items={[\"All\", \"Administrator\", \"User\"]}\r\n                        btnName={role ? role : \"Select Role\"}\r\n                        className=\"input-light px-3 col-auto\"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    onClick={() => handleApply(true)}\r\n                    className=\"btn-custom btn-custom-primary col-60 col-sm-auto mb-3 mr-3 btn-xsmall\"\r\n                  >\r\n                    Apply\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 d-block d-sm-none\">\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <Select\r\n                    popoverClass=\"w-100\"\r\n                    onSelect={(index) => setSearchKey([\"User\", \"Email\"][index])}\r\n                    className=\"input-light col-60\"\r\n                    items={[\"User\", \"Email\"]}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <div className=\"col-60 position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      className=\"input-light w-100 pr-5 pl-3\"\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-auto mb-3 d-none d-sm-block\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    onSelect={(index) => setSearchKey([\"User\", \"Email\"][index])}\r\n                    className=\"table-input-prepend-select col-auto\"\r\n                    items={[\"User\", \"Email\"]}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                  <div className=\"col position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                      className=\"table-input pr-5 pl-3\"\r\n                      style={{ minWidth: \"300px\" }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <Swipeable\r\n                style={{ minWidth: \"100%\" }}\r\n                onSwipedLeft={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn + 1 < 4\r\n                      ? lastVisibleColumn + 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n                onSwipedRight={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn - 1 >= 0\r\n                      ? lastVisibleColumn - 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n              >\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table bg-white border\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"text-center\">\r\n                          <Checkbox\r\n                            color={\"primary\"}\r\n                            checked={\r\n                              filteredUsers\r\n                                .slice(boundaries[0], boundaries[1])\r\n                                .filter((x) => x.selected).length ===\r\n                              boundaries[1] - boundaries[0]\r\n                            }\r\n                            onChange={(e) => {\r\n                              setFilteredUsers((prev) => {\r\n                                let arr = [...prev];\r\n                                for (\r\n                                  let i = boundaries[0];\r\n                                  i < boundaries[1];\r\n                                  i++\r\n                                ) {\r\n                                  arr[i].selected = e.target.checked;\r\n                                }\r\n                                return arr;\r\n                              });\r\n                            }}\r\n                          ></Checkbox>\r\n                        </th>\r\n                        <th className=\"table-header text-truncate text-left\">\r\n                          <div className=\"d-none d-lg-block\">Display Name</div>\r\n                          <div className=\"d-block d-lg-none\">Name</div>\r\n                        </th>\r\n                        <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                          {columns[lastVisibleColumn]}\r\n                        </th>\r\n                        {columns.map((c, j) => (\r\n                          <th\r\n                            className=\"d-none d-xl-table-cell table-header text-truncate\"\r\n                            key={`column-${j}`}\r\n                          >\r\n                            <div>{c}</div>\r\n                          </th>\r\n                        ))}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filteredUsers.length ? (\r\n                        filteredUsers\r\n                          .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                          .map((x, i) => (\r\n                            <tr\r\n                              className=\"font-weight-600 bg-light\"\r\n                              key={`shortlist-item-${i}`}\r\n                            >\r\n                              <td className=\"text-center\">\r\n                                <Checkbox\r\n                                  color={\"primary\"}\r\n                                  checked={x.selected}\r\n                                  onChange={(e) => {\r\n                                    setFilteredUsers((prev) => {\r\n                                      let arr = [...prev];\r\n                                      arr[(page - 1) * 5 + i].selected =\r\n                                        e.target.checked;\r\n                                      return arr;\r\n                                    });\r\n                                  }}\r\n                                ></Checkbox>\r\n                              </td>\r\n                              <td style={{ whiteSpace: \"nowrap\" }}>\r\n                                <div>\r\n                                  <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                    <div className=\"d-inline-block mr-2\">\r\n                                      <div\r\n                                        className=\"square-50 rounded-circle bg-image\"\r\n                                        style={{\r\n                                          backgroundImage: `url(${x.photo})`,\r\n                                        }}\r\n                                      ></div>\r\n                                    </div>\r\n                                    <div className=\"d-none d-md-inline-block align-top\">\r\n                                      <div className=\"text-primary mb-2 text-truncate\" style={{maxWidth:\"300px\"}}>\r\n                                        {x.display_name}\r\n                                      </div>\r\n                                      <div className=\"d-flex\">\r\n                                        <div\r\n                                          className=\"text-primary underline-link\"\r\n                                          onClick={() => {\r\n                                            setEditUser(x);\r\n                                            setEditUserSection();\r\n                                          }}\r\n                                        >\r\n                                          Edit\r\n                                        </div>\r\n                                        <div className=\"px-2\">|</div>\r\n                                        <div\r\n                                          className=\"text-primary underline-link\"\r\n                                          onClick={() => {\r\n                                            editUsers(\r\n                                              { status: \"Blocked\" },\r\n                                              [x._id],\r\n                                              [publicUsers[x._id]._id]\r\n                                            );\r\n                                          }}\r\n                                        >\r\n                                          Block\r\n                                        </div>\r\n                                        <div className=\"px-2\">|</div>\r\n                                        <div\r\n                                          className=\"text-danger underline-link\"\r\n                                          onClick={async () => {\r\n                                            let res = await DeleteMultipleUsers(\r\n                                              [x._id],\r\n                                              [publicUsers[x._id]._id]\r\n                                            );\r\n                                            if (res.error) {\r\n                                              store.dispatch({\r\n                                                type: \"SET_NOTIFICATION\",\r\n                                                notification: {\r\n                                                  title: \"Error\",\r\n                                                  message: res.error,\r\n                                                  type: \"failure\",\r\n                                                },\r\n                                              });\r\n                                            } else {\r\n                                              store.dispatch({\r\n                                                type: \"SET_NOTIFICATION\",\r\n                                                notification: {\r\n                                                  title: \"Users deleted\",\r\n                                                  message:\r\n                                                    \"User were successfully deleted\",\r\n                                                  type: \"success\",\r\n                                                },\r\n                                              });\r\n                                              setRefresh(!refresh);\r\n                                              let newPublicUsers = {\r\n                                                ...publicUsers,\r\n                                              };\r\n                                              newPublicUsers[x._id].status =\r\n                                                \"Deleted\";\r\n\r\n                                              store.dispatch({\r\n                                                type: \"SET_PUBLICUSERS\",\r\n                                                publicUsers: newPublicUsers,\r\n                                              });\r\n                                            }\r\n                                          }}\r\n                                        >\r\n                                          Delete\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 0\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div>{x.email}</div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 1\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.role}\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 2\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.last_login\r\n                                  ? TimeAgo(x.last_login)\r\n                                  : \"No data\"}\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 3\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.last_activity\r\n                                  ? TimeAgo(x.last_activity)\r\n                                  : \"No data\"}\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  x.status === \"Active\"\r\n                                    ? \"text-green\"\r\n                                    : x.status === \"Inactive\"\r\n                                    ? \"text-orange\"\r\n                                    : \"text-danger\"\r\n                                } ${\r\n                                  lastVisibleColumn === 4\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.status}\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan={7} className=\" text-center py-5\">\r\n                            0 results found\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </Swipeable>\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-center justify-content-sm-end\">\r\n              <div className=\"col-auto\">\r\n                <Pagination\r\n                  count={Math.ceil(filteredUsers.length / 5)}\r\n                  current={page}\r\n                  setCurrent={setPage}\r\n                ></Pagination>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    ratings: state.ratings,\r\n    publicUsers: state.publicUsers,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Users);\r\n","import React, { useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport { CreateUserForAdmin } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { connect } from \"react-redux\";\r\nimport { validateEmail } from \"../../utilities/Functions\";\r\n\r\nconst AddNewUser = ({ getBack, publicUsers }) => {\r\n  const [newUser, setNewUser] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    display_name: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    re_password: \"\",\r\n    status: \"Active\",\r\n    role: \"User\",\r\n  });\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const validations = [\r\n    {\r\n      valid: newUser.email,\r\n      error: \"Email is required\",\r\n    },\r\n    {\r\n      valid: validateEmail(newUser.email),\r\n      error: \"Email is not valid\",\r\n    },\r\n    {\r\n      valid: newUser.password,\r\n      error: \"Password is required\",\r\n    },\r\n    {\r\n      valid: /[^\\w\\s]/.test(newUser.password) || /\\d/.test(newUser.password),\r\n      error: \"Password must contain number or symbol\",\r\n    },\r\n    {\r\n      valid: newUser.password === newUser.re_password,\r\n      error: \"Passwords don't match\",\r\n    },\r\n    {\r\n      valid: newUser.password.length >= 6,\r\n      error: \"Password must contain at least 6 characters\",\r\n    },\r\n\r\n    {\r\n      valid: !Object.values(publicUsers)\r\n        .map((x) => x.email)\r\n        .includes(newUser.email),\r\n      error: \"This email address is taken\",\r\n    },\r\n  ];\r\n\r\n  const statuses = [\"Active\", \"Inactive\", \"Blocked\"];\r\n  const roles = [\"Administrator\", \"User\"];\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\">\r\n      <div className=\"col-60\" style={{ maxWidth: \"800px\" }}>\r\n        <div className=\"row no-gutters border-bottom py-3 mb-5\">\r\n          <div className=\"col-60 admin-screen-title\">Add User</div>\r\n          <div className=\"col-60\">Add brand new user</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-sm-30 col-60 pr-sm-3 mb-4\">\r\n            <div className=\"row no-gutters mb-1\">First name</div>\r\n            <div className=\"row no-gutters\">\r\n              <input\r\n                spellCheck={false}\r\n                value={newUser.first_name}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      first_name: e.target.value,\r\n                    })\r\n                  );\r\n                }}\r\n                type=\"text\"\r\n                className=\"px-3 input-light w-100\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-30 col-60 mb-4\">\r\n            <div className=\"row no-gutters mb-1\">Last name</div>\r\n            <div className=\"row no-gutters\">\r\n              <input\r\n                spellCheck={false}\r\n                value={newUser.last_name}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      last_name: e.target.value,\r\n                    })\r\n                  );\r\n                }}\r\n                type=\"text\"\r\n                className=\"px-3 input-light w-100\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Display name</div>\r\n          <div className=\"col-60 mb-1\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.display_name}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    display_name: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"text\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-60 text-muted\">\r\n            This name will be visible for everyone\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">*Email</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.email}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    email: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"text\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">*Password</div>\r\n          <div className=\"col-60 mb-1\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.password}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    password: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"password\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-60 text-muted\">\r\n            Must be at least 6 characters and must contain a number or symbol\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">*Confirm Password</div>\r\n          <div className=\"col-60 mb-1\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.re_password}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    re_password: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"password\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-60 text-muted\">\r\n            Must be at least 6 characters and must contain a number or symbol\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-sm-20 col-60 pr-sm-3 mb-4\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-1\">Status</div>\r\n              <Select\r\n                popoverClass=\"w-100\"\r\n                onSelect={(index) =>\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      status: statuses[index],\r\n                    })\r\n                  )\r\n                }\r\n                items={statuses}\r\n                btnName={newUser.status ? newUser.status : \"Select\"}\r\n                className=\"input-light px-3 col-60\"\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-20 col-60 mb-4\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-1\">Role</div>\r\n              <Select\r\n                popoverClass=\"w-100\"\r\n                onSelect={(index) =>\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      role: roles[index],\r\n                    })\r\n                  )\r\n                }\r\n                items={roles}\r\n                btnName={newUser.role ? newUser.role : \"Select\"}\r\n                className=\"input-light px-3 col-60\"\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n          className=\"row no-gutters align-items-center text-danger\"\r\n        >\r\n          {problem}\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 col-sm-auto col-60 mb-3\"\r\n            onClick={() => getBack()}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small col-sm-auto col-60 mb-3\"\r\n            onClick={async () => {\r\n              let invalid = validations.filter((x) => !x.valid);\r\n              if (invalid.length) {\r\n                setProblem(invalid[0].error);\r\n              } else {\r\n                setLoading(true);\r\n                let res = await CreateUserForAdmin(newUser);\r\n                setLoading(false);\r\n                if (res.error) {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Error\",\r\n                      message: res.error,\r\n                      type: \"failure\",\r\n                    },\r\n                  });\r\n                } else {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"User created\",\r\n                      message: \"User was successfully created\",\r\n                      type: \"success\",\r\n                    },\r\n                  });\r\n                  store.dispatch({\r\n                    type: \"UPDATE_PUBLICUSERS\",\r\n                    publicUser: {\r\n                      [res.id]: Object.assign({}, newUser, {\r\n                        user_id: res.id,\r\n                        _id: res.pid,\r\n                      }),\r\n                    },\r\n                  });\r\n                  getBack();\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(AddNewUser);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport { EditUserForAdmin } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst EditUser = ({ currentUser, getBack, no_display_name_characters }) => {\r\n  const [newUser, setNewUser] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    display_name: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    re_password: \"\",\r\n    status: \"Active\",\r\n    role: \"Administrator\",\r\n  });\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setNewUser(\r\n        Object.assign({}, currentUser, { re_password: \"\", password: \"\" })\r\n      );\r\n    }\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const validations = [\r\n    {\r\n      valid: newUser.display_name.length <= no_display_name_characters,\r\n      error: \"Display name is too long\",\r\n    },\r\n    {\r\n      valid: /[^\\w\\s]/.test(newUser.password) || /\\d/.test(newUser.password),\r\n      error: \"Password must contain number or symbol\",\r\n    },\r\n    {\r\n      valid: newUser.password === newUser.re_password,\r\n      error: \"Passwords don't match\",\r\n    },\r\n    {\r\n      valid: newUser.password.length >= 6,\r\n      error: \"Password must contain at least 6 characters\",\r\n    },\r\n  ];\r\n\r\n  const statuses = [\"Active\", \"Inactive\", \"Blocked\"];\r\n  const roles = [\"Administrator\", \"User\"];\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\">\r\n      <div className=\"col-60\" style={{ maxWidth: \"800px\" }}>\r\n        <div className=\"row no-gutters border-bottom py-3 mb-5\">\r\n          <div className=\"col-60 admin-screen-title\">Edit User</div>\r\n          <div className=\"col-60\">Edit existing user</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-sm-30 col-60 pr-sm-3 mb-4\">\r\n            <div className=\"row no-gutters mb-1\">First name</div>\r\n            <div className=\"row no-gutters\">\r\n              <input\r\n                spellCheck={false}\r\n                value={newUser.first_name}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      first_name: e.target.value,\r\n                    })\r\n                  );\r\n                }}\r\n                type=\"text\"\r\n                className=\"px-3 input-light w-100\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-30 col-60 mb-4\">\r\n            <div className=\"row no-gutters mb-1\">Last name</div>\r\n            <div className=\"row no-gutters\">\r\n              <input\r\n                spellCheck={false}\r\n                value={newUser.last_name}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      last_name: e.target.value,\r\n                    })\r\n                  );\r\n                }}\r\n                type=\"text\"\r\n                className=\"px-3 input-light w-100\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Display name</div>\r\n          <div className=\"col-60 mb-1\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.display_name}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    display_name: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"text\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-60 text-muted\">\r\n            This name will be visible for everyone\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Email</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.email}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    email: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"text\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Password</div>\r\n          <div className=\"col-60 mb-1\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.password}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    password: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"password\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-60 text-muted\">\r\n            Must be at least 6 characters and must contain a number or symbol\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Confirm Password</div>\r\n          <div className=\"col-60 mb-1\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.re_password}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    re_password: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"password\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-60 text-muted\">\r\n            Must be at least 6 characters and must contain a number or symbol\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-sm-20 col-60 pr-sm-3 mb-4\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-1\">Status</div>\r\n              <Select\r\n                popoverClass=\"w-100\"\r\n                onSelect={(index) =>\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      status: statuses[index],\r\n                    })\r\n                  )\r\n                }\r\n                items={statuses}\r\n                btnName={newUser.status ? newUser.status : \"Select\"}\r\n                className=\"input-light px-3 col-60\"\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-20 col-60 mb-4\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-1\">Role</div>\r\n              <Select\r\n                popoverClass=\"w-100\"\r\n                onSelect={(index) =>\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      role: roles[index],\r\n                    })\r\n                  )\r\n                }\r\n                items={roles}\r\n                btnName={newUser.role ? newUser.role : \"Select\"}\r\n                className=\"input-light px-3 col-60\"\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n          className=\"row no-gutters align-items-center text-danger\"\r\n        >\r\n          {problem}\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 col-sm-auto col-60 mb-3\"\r\n            onClick={() => getBack()}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small col-sm-auto col-60 mb-3\"\r\n            onClick={async () => {\r\n              let allowEdit = true;\r\n              let finalUser = { ...newUser };\r\n              if (newUser.password) {\r\n                let invalid = validations.filter((x) => !x.valid);\r\n                if (invalid.length) {\r\n                  allowEdit = false;\r\n                  setProblem(invalid[0].error);\r\n                }\r\n              }\r\n              if (finalUser.password === \"\") {\r\n                delete finalUser.password;\r\n                delete finalUser.re_password;\r\n              }\r\n              if (allowEdit) {\r\n                setLoading(true);\r\n                let res = await EditUserForAdmin(finalUser);\r\n                setLoading(false);\r\n                if (res.error) {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Error\",\r\n                      message: res.error,\r\n                      type: \"failure\",\r\n                    },\r\n                  });\r\n                } else {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"User updated\",\r\n                      message: \"User was successfully updated\",\r\n                      type: \"success\",\r\n                    },\r\n                  });\r\n                  let publicUser = store.getState().publicUsers[newUser._id];\r\n                  publicUser.status = newUser.status;\r\n                  publicUser.role = newUser.role;\r\n                  store.dispatch({ type: \"UPDATE_PUBLICUSERS\", publicUser });\r\n                  getBack();\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    no_display_name_characters: state.settings.no_display_name_characters,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(EditUser);\r\n","import React, { useState } from \"react\";\r\nimport LeftSideMenu from \"./LeftSideMenu\";\r\nimport Settings from \"./Settings\";\r\nimport RightSideMenuFloating from \"./RightSideMenuFloating\";\r\nimport ReviewsAndComments from \"./ReviewAndComments\";\r\nimport EditReview from \"./EditReview\";\r\nimport { BsArrowLeft } from \"react-icons/bs\";\r\nimport EditComment from \"./EditComment\";\r\nimport Announcements from \"./Announcements\";\r\nimport EditAnnouncement from \"./EditAnnouncement\";\r\nimport AddNewAnnouncement from \"./AddNewAnnouncement\";\r\nimport Promotions from \"./Promotions\";\r\nimport EditPromotion from \"./EditPromotion\";\r\nimport AddNewPromotion from \"./AddNewPromotion\";\r\nimport Notifications from \"./Notifications\";\r\nimport EditNotification from \"./EditNotification\";\r\nimport AddNewNotification from \"./AddNewNotification\";\r\nimport Users from \"./Users\";\r\nimport AddNewUser from \"./AddNewUser\";\r\nimport EditUser from \"./EditUser\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst sections = {\r\n  settings: 0,\r\n  userManagement: 1,\r\n  reviewsAndComments: 2,\r\n  announcements: 3,\r\n  promotions: 4,\r\n  notifications: 5,\r\n  editReview: 6,\r\n  editComment: 7,\r\n  editAnnouncement: 8,\r\n  addNewAnnouncement: 9,\r\n  editPromotion: 10,\r\n  addNewPromotion: 11,\r\n  editNotification: 12,\r\n  addNewNotification: 13,\r\n  editUser: 14,\r\n  addNewUser: 15,\r\n};\r\n\r\nconst AdminDashboard = ({ dashboardMenuOpened }) => {\r\n  const [section, setSection] = useState(0);\r\n  const [editReview, setEditReview] = useState(null);\r\n  const [editComment, setEditComment] = useState(null);\r\n  const [editAnnouncement, setEditAnnouncement] = useState(null);\r\n  const [editPromotion, setEditPromotion] = useState(null);\r\n  const [editNotification, setEditNotification] = useState(null);\r\n  const [editUser, setEditUser] = useState(null);\r\n  return (\r\n    <div\r\n      className=\"row no-gutters justify-content-center\"\r\n      style={{ minHeight: window.innerHeight }}\r\n    >\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters h-100 position-relative bg-light\">\r\n          <RightSideMenuFloating\r\n            isMenuOpened={dashboardMenuOpened}\r\n            setSection={setSection}\r\n            section={section}\r\n          ></RightSideMenuFloating>\r\n          <div\r\n            className=\"col-auto d-none d-lg-block\"\r\n            style={{ width: \"300px\" }}\r\n          >\r\n            <LeftSideMenu\r\n              section={section}\r\n              setSection={setSection}\r\n            ></LeftSideMenu>\r\n          </div>\r\n          <div className=\"col\">\r\n            {section >= 6 && (\r\n              <div\r\n                className=\"row no-gutters px-md-5 px-4 pt-4\"\r\n                style={{ marginBottom: \"-40px\" }}\r\n              >\r\n                <div className=\"col-auto cursor-pointer\">\r\n                  <BsArrowLeft\r\n                    fontSize=\"24px\"\r\n                    onClick={() =>\r\n                      setSection(\r\n                        section === 6 || section === 7\r\n                          ? 2\r\n                          : section === 8 || section === 9\r\n                          ? 3\r\n                          : section === 10 || section === 11\r\n                          ? 4\r\n                          : section === 12 || section === 13\r\n                          ? 5\r\n                          : section === 14 || section === 15\r\n                          ? 1\r\n                          : 0\r\n                      )\r\n                    }\r\n                  ></BsArrowLeft>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {section === 0 ? (\r\n              <Settings></Settings>\r\n            ) : section === 1 ? (\r\n              <Users\r\n                setAddNewUserSection={() => setSection(sections[\"addNewUser\"])}\r\n                setEditUser={(u) => setEditUser(u)}\r\n                setEditUserSection={() => setSection(sections[\"editUser\"])}\r\n              ></Users>\r\n            ) : section === 2 ? (\r\n              <ReviewsAndComments\r\n                setEditReview={(rev) => setEditReview(rev)}\r\n                setEditReviewSection={() => setSection(sections[\"editReview\"])}\r\n                setEditComment={(rev) => setEditComment(rev)}\r\n                setEditCommentSection={() =>\r\n                  setSection(sections[\"editComment\"])\r\n                }\r\n              ></ReviewsAndComments>\r\n            ) : section === 3 ? (\r\n              <Announcements\r\n                setAddNewAnouncementSection={() =>\r\n                  setSection(sections[\"addNewAnnouncement\"])\r\n                }\r\n                setEditAnnouncement={(ann) => setEditAnnouncement(ann)}\r\n                setEditAnnouncementSection={() => {\r\n                  setSection(sections[\"editAnnouncement\"]);\r\n                }}\r\n              ></Announcements>\r\n            ) : section === 4 ? (\r\n              <Promotions\r\n                setAddNewPromotionSection={() =>\r\n                  setSection(sections[\"addNewPromotion\"])\r\n                }\r\n                setEditPromotion={(prom) => setEditPromotion(prom)}\r\n                setEditPromotionSection={() =>\r\n                  setSection(sections[\"editPromotion\"])\r\n                }\r\n              ></Promotions>\r\n            ) : section === 5 ? (\r\n              <Notifications\r\n                setAddNewNotificationSection={() =>\r\n                  setSection(sections[\"addNewNotification\"])\r\n                }\r\n                setEditNotification={(not) => setEditNotification(not)}\r\n                setEditNotificationSection={() =>\r\n                  setSection(sections[\"editNotification\"])\r\n                }\r\n              ></Notifications>\r\n            ) : section === 6 ? (\r\n              <EditReview\r\n                currentReview={editReview}\r\n                getBack={() => setSection(2)}\r\n              ></EditReview>\r\n            ) : section === 7 ? (\r\n              <EditComment\r\n                currentComment={editComment}\r\n                getBack={() => setSection(2)}\r\n              ></EditComment>\r\n            ) : section === 8 ? (\r\n              <EditAnnouncement\r\n                getBack={() => setSection(3)}\r\n                currentAnnouncement={editAnnouncement}\r\n              ></EditAnnouncement>\r\n            ) : section === 9 ? (\r\n              <AddNewAnnouncement getBack={() => setSection(3)} />\r\n            ) : section === 10 ? (\r\n              <EditPromotion\r\n                currentPromotion={editPromotion}\r\n                getBack={() => setSection(4)}\r\n              ></EditPromotion>\r\n            ) : section === 11 ? (\r\n              <AddNewPromotion getBack={() => setSection(4)}></AddNewPromotion>\r\n            ) : section === 12 ? (\r\n              <EditNotification\r\n                currentNotification={editNotification}\r\n                getBack={() => setSection(5)}\r\n              ></EditNotification>\r\n            ) : section === 13 ? (\r\n              <AddNewNotification\r\n                getBack={() => setSection(5)}\r\n              ></AddNewNotification>\r\n            ) : section === 14 ? (\r\n              <EditUser\r\n                currentUser={editUser}\r\n                getBack={() => setSection(1)}\r\n              ></EditUser>\r\n            ) : section === 15 ? (\r\n              <AddNewUser getBack={() => setSection(1)}></AddNewUser>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    dashboardMenuOpened: state.dashboardMenuOpened,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(AdminDashboard);\r\n","import React, { useState } from \"react\";\r\nimport history from \"../../History\";\r\nimport { Login as LoginFunction } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\nimport Logo from \"../../images/Logo\";\r\nimport { BsChevronLeft } from \"react-icons/bs\";\r\n\r\nconst handleSubmit = async (credentials) => {\r\n  let res = await LoginFunction(credentials);\r\n  if (res.error) {\r\n    store.dispatch({\r\n      type: \"SET_NOTIFICATION\",\r\n      notification: {\r\n        type: \"failure\",\r\n        title: \"Error\",\r\n        message: res.error,\r\n      },\r\n    });\r\n  } else {\r\n    localStorage.setItem(\"movies_user_token\", res.token);\r\n    store.dispatch({ type: \"SET_USER\", user: res });\r\n    history.push(\"/\");\r\n  }\r\n};\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  return (\r\n    <div\r\n      className=\"row no-gutters justify-content-center aligm-items-start align-items-sm-center\"\r\n      style={{ height: window.innerHeight }}\r\n    >\r\n      <div className=\"col-xl-50 col-60 col-lg-50 col-md-30 col-sm-40 login-rounded overflow-hidden\">\r\n        <div className=\"row no-gutters h-100\">\r\n          <div className=\"col bg-dark d-lg-block d-none\">\r\n            <div className=\"row no-gutters h-100 flex-center position-relative\">\r\n              <div\r\n                className=\"position-absolute d-flex align-items-center text-white cursor-pointer\"\r\n                onClick={() => history.push(\"/\")}\r\n                style={{ top: \"15px\", left: \"15px\" }}\r\n              >\r\n                <BsChevronLeft className=\"mr-2\"></BsChevronLeft>Back to home\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <div className=\"square-150 mx-auto\">\r\n                  <Logo></Logo>\r\n                </div>\r\n                <div className=\"logo text-title-xl text-white\">CozyPotato</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"col-60 col-lg-30 col-xl-25 col-md-auto p-sm-5 p-4 bg-light\"\r\n            style={{\r\n              minHeight: window.innerHeight - 100,\r\n            }}\r\n          >\r\n            <div className=\"row no-gutters h-100 py-3\">\r\n              <div className=\"col-60 d-flex align-items-start flex-wrap mb-5\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 h3 mb-3\">Hello, welcome back</div>\r\n                  <div className=\"col-60\">\r\n                    Login to your account to review movies and interact with\r\n                    movies community\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 d-flex align-items-end flex-wrap\">\r\n                <div className=\"row no-gutters w-100\">\r\n                  <div className=\"col-60\">\r\n                    <div className=\"row no-gutters justify-content-center mb-4\">\r\n                      <div className=\"col-60 mb-1\">Email</div>\r\n                      <div className=\"col-60\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"input-light w-100 px-3\"\r\n                          value={email}\r\n                          onChange={(e) => {\r\n                            e.persist();\r\n                            setEmail(e.target.value);\r\n                          }}\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row no-gutters mb-4\">\r\n                      <div className=\"col-60 mb-1\">Password</div>\r\n                      <div className=\"col-60\">\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"input-light w-100 px-3\"\r\n                          value={password}\r\n                          onChange={(e) => {\r\n                            e.persist();\r\n                            setPassword(e.target.value);\r\n                          }}\r\n                          onKeyDown={(e) => {\r\n                            if (e.keyCode === 13) {\r\n                              handleSubmit({ email, password });\r\n                            }\r\n                          }}\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row no-gutters mb-4\">\r\n                      <div\r\n                        className=\"col-60 btn-custom btn-custom-primary\"\r\n                        onClick={() => handleSubmit({ email, password })}\r\n                      >\r\n                        Login\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      className=\"row no-gutters justify-content-between\"\r\n                      style={{ fontSize: \"14px\" }}\r\n                    >\r\n                      <div className=\"col-auto mr-4\">\r\n                        Don't have an account?{\" \"}\r\n                        <span\r\n                          className=\"btn-link cursor-pointer\"\r\n                          onClick={() => history.push(\"/signup\")}\r\n                        >\r\n                          Sign up\r\n                        </span>\r\n                      </div>\r\n                      <div\r\n                        className=\"col-auto btn-link cursor-pointer\"\r\n                        onClick={() => history.push(\"/forgot-password\")}\r\n                      >\r\n                        Forgot password\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport FileViewer from \"react-file-viewer\";\r\nimport TermsAndConditions from \"../../documents/TermsAndConditions.docx\";\r\nimport PrivacyPolicy from \"../../documents/PrivacyPolicy.docx\";\r\nimport CookiePolicy from \"../../documents/CookiesPolicy.docx\";\r\n\r\nconst LegalDocument = ({ type }) => {\r\n  return (\r\n    <div className=\"row no-gutters px-0\">\r\n      <div className=\"col-60 py-5 text-dark\">\r\n        <FileViewer\r\n          fileType={\"docx\"}\r\n          filePath={\r\n            type === \"privacy-policy\"\r\n              ? PrivacyPolicy\r\n              : type === \"cookies-policy\"\r\n              ? CookiePolicy\r\n              : type === \"terms-and-conditions\"\r\n              ? TermsAndConditions\r\n              : \"\"\r\n          }\r\n          errorComponent={() => <div></div>}\r\n          onError={() => console.log(\"error doc\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LegalDocument;\r\n","import React, { useState } from \"react\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport history from \"../../History\";\r\nimport { Signup as SignupFunction } from \"../../server/DatabaseApi\";\r\nimport { validateEmail } from \"../../utilities/Functions\";\r\nimport store from \"../../store/store\";\r\nimport Logo from \"../../images/Logo\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport Modal from \"../utility/Modal\";\r\nimport LegalDocument from \"../user/LegalDocument\";\r\nimport { BsChevronLeft } from \"react-icons/bs\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Signup = ({ no_display_name_characters, captcha_api_key }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [validated, setValidated] = useState(false);\r\n  const [agreedWithPolicies, setAgreedWithPolicies] = useState(false);\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [legalDocument, setLegalDocument] = useState(\"\");\r\n\r\n  const validations = [\r\n    { valid: validateEmail(email), error: \"Email is not valid\" },\r\n    {\r\n      valid: email.split(\"@\")[0].length < no_display_name_characters,\r\n      error: \"Email is too long\",\r\n    },\r\n    {\r\n      valid: /[^\\w\\s]/.test(password) || /\\d/.test(password),\r\n      error: \"Password must contain number or symbol\",\r\n    },\r\n    {\r\n      valid: password === confirmPassword,\r\n      error: \"Passwords don't match\",\r\n    },\r\n    {\r\n      valid: password.length >= 6,\r\n      error: \"Password must contain at least 6 characters\",\r\n    },\r\n    {\r\n      valid: validated,\r\n      error: \"Pass captcha validation\",\r\n    },\r\n\r\n    {\r\n      valid: agreedWithPolicies,\r\n      error: \"Check if you agree with privacy policy and terms and conditions\",\r\n    },\r\n  ];\r\n\r\n  const handleSubmit = async () => {\r\n    let notValid = validations.filter((x) => !x.valid);\r\n    if (notValid.length === 0) {\r\n      let res = await SignupFunction({ email, password });\r\n      if (res.success) {\r\n        store.dispatch({\r\n          type: \"SET_NOTIFICATION\",\r\n          notification: {\r\n            title: \"Account created!\",\r\n            message:\r\n              \"Login to start writing reviews and comments about your favorite movies\",\r\n            type: \"success\",\r\n          },\r\n        });\r\n\r\n        store.dispatch({\r\n          type: \"UPDATE_PUBLICUSERS\",\r\n          publicUser: { [res.publicUser.user_id]: res.publicUser },\r\n        });\r\n        history.push(\"/login\");\r\n      } else {\r\n        store.dispatch({\r\n          type: \"SET_NOTIFICATION\",\r\n          notification: {\r\n            message: res.error,\r\n            type: \"failure\",\r\n            title: \"Failed create account\",\r\n          },\r\n        });\r\n      }\r\n    } else {\r\n      setProblem(notValid[0].error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"row no-gutters justify-content-center aligm-items-start align-items-sm-center py-sm-3\"\r\n      style={{ minHeight: window.innerHeight }}\r\n    >\r\n      <Modal open={legalDocument} onClose={() => setLegalDocument(\"\")}>\r\n        <LegalDocument type={legalDocument}></LegalDocument>\r\n      </Modal>\r\n      <div className=\"col-xl-50 col-60 col-lg-50 col-md-30 col-sm-40 login-rounded overflow-hidden\">\r\n        <div className=\"row no-gutters h-100\">\r\n          <div className=\"col bg-dark d-lg-block d-none text-center\">\r\n            <div className=\"row no-gutters h-100 flex-center position-relative\">\r\n              <div\r\n                className=\"position-absolute d-flex align-items-center text-white cursor-pointer\"\r\n                onClick={() => history.push(\"/\")}\r\n                style={{ top: \"15px\", left: \"15px\" }}\r\n              >\r\n                <BsChevronLeft className=\"mr-2\"></BsChevronLeft>Back to home\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <div className=\"square-150 mx-auto\">\r\n                  <Logo></Logo>\r\n                </div>\r\n                <div className=\"logo text-title-xl text-white\">CozyPotato</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"col-60 col-lg-30 col-xl-25 col-md-auto p-4 p-sm-5 bg-light\"\r\n            style={{\r\n              minHeight: window.innerHeight - 100,\r\n            }}\r\n          >\r\n            <div className=\"row no-gutters h-100\">\r\n              <div className=\"col-60 d-flex align-items-start flex-wrap\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 h3 mb-3\">Create Account</div>\r\n                  {/* <div className=\"col-60\">\r\n                    By creating account you will be joining milions of people on\r\n                    the largest movies reviewing platform\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 d-flex align-items-end flex-wrap\">\r\n                <div className=\"row no-gutters w-100\">\r\n                  <div className=\"col-60\">\r\n                    <div className=\"row no-gutters justify-content-center mb-3\">\r\n                      <div className=\"col-60 mb-1\">Email</div>\r\n                      <div className=\"col-60\">\r\n                        <input\r\n                          type=\"email\"\r\n                          className=\"input-light w-100 px-3\"\r\n                          value={email}\r\n                          onChange={(e) => {\r\n                            e.persist();\r\n                            setEmail(e.target.value);\r\n                          }}\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row no-gutters mb-3\">\r\n                      <div className=\"col-60 mb-1\">Password</div>\r\n                      <div className=\"col-60 mb-1\">\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"input-light w-100 px-3\"\r\n                          value={password}\r\n                          onChange={(e) => {\r\n                            e.persist();\r\n                            setPassword(e.target.value);\r\n                          }}\r\n                        ></input>\r\n                      </div>\r\n                      <div className=\"col-60 text-muted font-size-14\">\r\n                        Must be at least 6 characters and must contain number or\r\n                        symbol\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row no-gutters mb-3\">\r\n                      <div className=\"col-60 mb-1\">Confirm Password</div>\r\n                      <div className=\"col-60 mb-1\">\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"input-light w-100 px-3\"\r\n                          value={confirmPassword}\r\n                          onKeyDown={(e) => {\r\n                            if (e.keyCode === 13) {\r\n                              handleSubmit();\r\n                            }\r\n                          }}\r\n                          onChange={(e) => {\r\n                            e.persist();\r\n                            setConfirmPassword(e.target.value);\r\n                          }}\r\n                        ></input>\r\n                      </div>\r\n                      <div className=\"col-60 text-muted font-size-14\">\r\n                        Must be at least 6 characters and must contain number or\r\n                        symbol\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row no-gutters mb-3\">\r\n                      <ReCAPTCHA\r\n                        sitekey={captcha_api_key}\r\n                        onChange={(value) => {\r\n                          if (value) {\r\n                            setValidated(true);\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                      <div className=\"col-auto mr-2\">\r\n                        <Checkbox\r\n                          color={\"primary\"}\r\n                          checked={agreedWithPolicies}\r\n                          onChange={(e) => {\r\n                            setAgreedWithPolicies(e.target.checked);\r\n                          }}\r\n                        ></Checkbox>\r\n                      </div>\r\n                      <div className=\"col\">\r\n                        By registering you agree with{\" \"}\r\n                        <span\r\n                          onClick={() =>\r\n                            setLegalDocument(\"terms-and-conditions\")\r\n                          }\r\n                          className=\"btn-link\"\r\n                        >\r\n                          terms and conditions\r\n                        </span>{\" \"}\r\n                        and{\" \"}\r\n                        <span\r\n                          className=\"btn-link\"\r\n                          onClick={() => setLegalDocument(\"privacy-policy\")}\r\n                        >\r\n                          privacy policy\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      style={{ height: \"40px\", opacity: problem ? 1 : 0 }}\r\n                      className=\"row no-gutters align-items-center text-danger\"\r\n                    >\r\n                      {problem}\r\n                    </div>\r\n                    <div className=\"row no-gutters mb-3\">\r\n                      <div\r\n                        className=\"col-60 btn-custom btn-custom-primary\"\r\n                        onClick={handleSubmit}\r\n                      >\r\n                        Create Account\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      className=\"row no-gutters justify-content-end\"\r\n                      style={{ fontSize: \"14px\" }}\r\n                    >\r\n                      <div className=\"col-auto\">\r\n                        Already have account?{\" \"}\r\n                        <span\r\n                          className=\"btn-link cursor-pointer\"\r\n                          onClick={() => history.push(\"/login\")}\r\n                        >\r\n                          Login\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    captcha_api_key: state.settings.captcha_api_key,\r\n    no_display_name_characters: state.settings.no_display_name_characters,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Signup);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport { BsCheck, BsExclamation, BsX } from \"react-icons/bs\";\r\nimport { CreateNotification } from \"../../server/DatabaseApi\";\r\n\r\nconst Toast = ({ notification, publicUsers }) => {\r\n  const [hovered, setHovered] = useState(false);\r\n  const [expired, setExpired] = useState(false);\r\n  useEffect(() => {\r\n    let timeout;\r\n    if (!notification.expired) {\r\n      timeout = setTimeout(() => {\r\n        setExpired(true);\r\n      }, 5000);\r\n    }\r\n\r\n    return function cleanUp() {\r\n      if (!notification.expired && timeout) {\r\n        clearTimeout(timeout);\r\n      }\r\n    };\r\n  }, [notification]);\r\n\r\n  useEffect(() => {\r\n    if (expired && !hovered) {\r\n      store.dispatch({\r\n        type: \"UPDATE_NOTIFICATION\",\r\n        notification: { expired: true },\r\n      });\r\n      setExpired(false);\r\n    }\r\n  }, [expired, hovered]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      notification.type !== \"success\" &&\r\n      typeof notification.message === \"object\"\r\n    ) {\r\n      let adminNotification = {\r\n        type: \"System\",\r\n        subject: \"System error occured\",\r\n        receivers: [\"All admins\"],\r\n        start_date: Date.now(),\r\n        end_date: Date.now(),\r\n        description: JSON.stringify(notification.message).replace(/\"/g, \"\"),\r\n        status: \"Sent\",\r\n      };\r\n      CreateNotification(adminNotification);\r\n    }\r\n  }, [notification.message]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <div\r\n      onMouseOver={() => setHovered(true)}\r\n      onMouseLeave={() => setHovered(false)}\r\n      className=\"container-fluid toast-pro bg-over-root px-0\"\r\n      style={{\r\n        maxWidth: \"300px\",\r\n        bottom: notification.expired ? \"-100%\" : \"50px\",\r\n      }}\r\n    >\r\n      <div className=\"row no-gutters p-3\">\r\n        {notification.type && (\r\n          <div className=\"col-auto pr-2\">\r\n            {notification.type === \"success\" ? (\r\n              <BsCheck\r\n                strokeWidth=\"1px\"\r\n                fontSize=\"24px\"\r\n                className=\"text-success\"\r\n              ></BsCheck>\r\n            ) : (\r\n              <BsExclamation\r\n                strokeWidth=\"1px\"\r\n                fontSize=\"24px\"\r\n                className=\"text-primary\"\r\n              ></BsExclamation>\r\n            )}\r\n          </div>\r\n        )}\r\n        <div className=\"col pr-2 toast-title\">{notification.title}</div>\r\n        <div\r\n          className=\"col-auto toast-close-icon\"\r\n          onClick={() =>\r\n            store.dispatch({\r\n              type: \"UPDATE_NOTIFICATION\",\r\n              notification: { expired: true },\r\n            })\r\n          }\r\n        >\r\n          <BsX fontSize=\"24px\" className=\"text-white\"></BsX>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row no-gutters p-4 text-white\">\r\n        {notification.type !== \"success\"\r\n          ? typeof notification.message === \"object\"\r\n            ? \"Action failed\"\r\n            : notification.message\r\n          : notification.message}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    notification: state.notification,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Toast);\r\n","import React, { useState } from \"react\";\r\nimport history from \"../../../History\";\r\nimport WishlistButton from \"../WishlistButton\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactionButton from \"../ReactionButton\";\r\nimport { BsPlayFill } from \"react-icons/bs\";\r\nimport Paigination from \"../../utility/Paigination\";\r\nimport TrailerPlayer from \"../TrailerPlayer\";\r\nimport Modal from \"../../utility/Modal\";\r\nimport MoveToWatchedButton from \"../MoveToWatchedButton\";\r\n\r\nconst MoviesList = ({\r\n  movies,\r\n  user,\r\n  ratings,\r\n  listType = \"not wishlist\",\r\n  setMovie,\r\n  setAddReviewOpen,\r\n  owner = false,\r\n  refreshProfile = () => {},\r\n}) => {\r\n  const [page, setPage] = useState(1);\r\n  const maxItemsPerPage = 12;\r\n  const [trailerMovieId, setTrailerMovieId] = useState(\"\");\r\n  const [openTrailer, setOpenTrailer] = useState(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Modal open={openTrailer} onClose={() => setOpenTrailer(false)}>\r\n        <TrailerPlayer\r\n          movieId={trailerMovieId}\r\n          onEnded={() => setOpenTrailer(false)}\r\n        ></TrailerPlayer>\r\n      </Modal>\r\n\r\n      <div className=\"row\">\r\n        {movies\r\n          .slice(\r\n            maxItemsPerPage * (page - 1),\r\n            maxItemsPerPage * (page - 1) + maxItemsPerPage\r\n          )\r\n          .map((x, i) => {\r\n            let formatedMovie = ratings[x.movie_id]\r\n              ? {\r\n                  id: x.movie_id,\r\n                  title: ratings[x.movie_id].movie_title,\r\n                  poster_path: ratings[x.movie_id].movie_poster,\r\n                  release_date: ratings[x.movie_id].movie_release_date,\r\n                  genres: ratings[x.movie_id].movie_genres,\r\n                }\r\n              : {\r\n                  id: x.movie_id,\r\n                  title: \"\",\r\n                  poster_path: \"\",\r\n                  genres: [],\r\n                  release_date: \"\",\r\n                };\r\n            return (\r\n              <div\r\n                key={`result-${i}`}\r\n                className=\"col-lg-12 col-md-15 col-sm-20 col-60 p-3 text-white\"\r\n              >\r\n                {listType !== \"watchedlist\" && owner ? (\r\n                  <div\r\n                    className=\"row no-gutters justify-content-end position-relative px-2 d-none d-sm-flex\"\r\n                    style={{\r\n                      marginBottom: \"-51px\",\r\n                      zIndex: 5,\r\n                      height: \"44px\",\r\n                      pointerEvents: \"none\",\r\n                    }}\r\n                  >\r\n                    <React.Fragment>\r\n                      <WishlistButton\r\n                        movie={formatedMovie}\r\n                        user={user}\r\n                      ></WishlistButton>\r\n                      {listType === \"wishlist\" ? (\r\n                        <React.Fragment>\r\n                          <div className=\"pl-1\"></div>\r\n                          <MoveToWatchedButton\r\n                            refreshProfile={() => {\r\n                              setMovie(formatedMovie);\r\n                              setAddReviewOpen(true);\r\n                              refreshProfile();\r\n                            }}\r\n                            user={user}\r\n                            movieId={formatedMovie.id}\r\n                          ></MoveToWatchedButton>\r\n                        </React.Fragment>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </React.Fragment>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-sm-60 col-auto mr-3 mr-sm-0\">\r\n                    <div className=\"row no-gutters mb-2 position-relative movies-list-image\">\r\n                      <img\r\n                        alt={`poster of ${formatedMovie.id}`}\r\n                        width=\"100%\"\r\n                        style={{ borderRadius: \"13px\" }}\r\n                        src={\r\n                          formatedMovie.poster_path\r\n                            ? `https://image.tmdb.org/t/p/w342${formatedMovie.poster_path}`\r\n                            : \"https://critics.io/img/movies/poster-placeholder.png\"\r\n                        }\r\n                      ></img>\r\n                      <div\r\n                        onClick={() =>\r\n                          history.push(`/movie/${formatedMovie.id}`)\r\n                        }\r\n                        className=\"col-60 h-100 text-white d-flex flex-center img-cover cursor-pointer\"\r\n                        style={{\r\n                          left: 0,\r\n                          top: 0,\r\n                          position: \"absolute\",\r\n                          zIndex: 4,\r\n                          borderRadius: \"13px\",\r\n                        }}\r\n                      >\r\n                        <div\r\n                          className=\"square-50 rounded-circle d-flex flex-center play-btn\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            setTrailerMovieId(formatedMovie.id);\r\n                            setOpenTrailer(true);\r\n                          }}\r\n                        >\r\n                          <BsPlayFill\r\n                            style={{\r\n                              fontSize: \"30px\",\r\n                              color: \"white\",\r\n                              marginRight: \"-5px\",\r\n                            }}\r\n                          ></BsPlayFill>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-60 col\">\r\n                    <div\r\n                      className=\"row no-gutters text-title-md mb-0 cursor-pointer\"\r\n                      onClick={() => history.push(`/movie/${formatedMovie.id}`)}\r\n                    >\r\n                      <div className=\"text-truncate\">{formatedMovie.title}</div>\r\n                    </div>\r\n                    <div className=\"row no-gutters text-muted mb-2\">\r\n                      <div className=\"text-truncate\">\r\n                        {formatedMovie.genres.length\r\n                          ? formatedMovie.genres.join(\"/\")\r\n                          : \"unknown\"}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row no-gutters mb-2 justify-content-end\">\r\n                      <ReactionButton\r\n                        size=\"small\"\r\n                        selected={\r\n                          user.ratings[formatedMovie.id]\r\n                            ? user.ratings[formatedMovie.id].rate_type ===\r\n                              \"excellent_rate\"\r\n                            : false\r\n                        }\r\n                        movie={formatedMovie}\r\n                        emoji=\"fire\"\r\n                        className=\"mr-1 mb-2\"\r\n                        value={\r\n                          ratings[formatedMovie.id]\r\n                            ? ratings[formatedMovie.id].excellent_rate\r\n                            : []\r\n                        }\r\n                      ></ReactionButton>\r\n                      <ReactionButton\r\n                        size=\"small\"\r\n                        selected={\r\n                          user.ratings[formatedMovie.id]\r\n                            ? user.ratings[formatedMovie.id].rate_type ===\r\n                              \"good_rate\"\r\n                            : false\r\n                        }\r\n                        movie={formatedMovie}\r\n                        emoji=\"heart\"\r\n                        className=\"mr-1 mb-2\"\r\n                        value={\r\n                          ratings[formatedMovie.id]\r\n                            ? ratings[formatedMovie.id].good_rate\r\n                            : []\r\n                        }\r\n                      ></ReactionButton>\r\n                      <ReactionButton\r\n                        size=\"small\"\r\n                        selected={\r\n                          user.ratings[formatedMovie.id]\r\n                            ? user.ratings[formatedMovie.id].rate_type ===\r\n                              \"ok_rate\"\r\n                            : false\r\n                        }\r\n                        movie={formatedMovie}\r\n                        className=\"mr-1 mb-2\"\r\n                        emoji=\"heavy_division_sign\"\r\n                        value={\r\n                          ratings[formatedMovie.id]\r\n                            ? ratings[formatedMovie.id].ok_rate\r\n                            : []\r\n                        }\r\n                      ></ReactionButton>\r\n                      <ReactionButton\r\n                        size=\"small\"\r\n                        emoji=\"shit\"\r\n                        value={\r\n                          ratings[formatedMovie.id]\r\n                            ? ratings[formatedMovie.id].bad_rate\r\n                            : []\r\n                        }\r\n                        selected={\r\n                          user.ratings[formatedMovie.id]\r\n                            ? user.ratings[formatedMovie.id].rate_type ===\r\n                              \"bad_rate\"\r\n                            : false\r\n                        }\r\n                        movie={formatedMovie}\r\n                      ></ReactionButton>\r\n                    </div>\r\n                    <div className=\"row no-gutters d-flex d-sm-none\">\r\n                      {listType !== \"watchedlist\" ? (\r\n                        <React.Fragment>\r\n                          <WishlistButton\r\n                            movie={formatedMovie}\r\n                            user={user}\r\n                          ></WishlistButton>\r\n                          {listType === \"wishlist\" ? (\r\n                            <React.Fragment>\r\n                              <div className=\"pl-1\"></div>\r\n                              <MoveToWatchedButton\r\n                                refreshProfile={refreshProfile}\r\n                                user={user}\r\n                                movieId={formatedMovie.id}\r\n                              ></MoveToWatchedButton>\r\n                            </React.Fragment>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </React.Fragment>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n      <div className=\"row no-gutters justify-content-end\">\r\n        <div className=\"col-auto\">\r\n          <Paigination\r\n            classNames={{\r\n              notSelected: \"input-dark\",\r\n              selected: \"input-dark-selected\",\r\n            }}\r\n            count={Math.ceil(movies.length / maxItemsPerPage)}\r\n            current={page}\r\n            setCurrent={setPage}\r\n          ></Paigination>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(MoviesList);\r\n","import React, { useState } from \"react\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport \"simplebar/dist/simplebar.min.css\";\r\nimport MoviesList from \"./MoviesList\";\r\nimport AddReview from \"../AddReview\";\r\n\r\nconst extractGenres = (movies, ratings) => {\r\n  let genres = [\"All\"];\r\n  movies.forEach((x) => {\r\n    if (ratings[x.movie_id]) {\r\n      ratings[x.movie_id].movie_genres.forEach((g) => {\r\n        if (g.name) {\r\n          if (!genres.includes(g.name)) {\r\n            genres.push(g.name);\r\n          }\r\n        } else {\r\n          if (!genres.includes(g)) {\r\n            genres.push(g);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n  return genres;\r\n};\r\n\r\nconst Wishlist = ({ movies, owner, refreshProfile, ratings, user }) => {\r\n  const [selectedGenre, setSelectedGenre] = useState(0);\r\n  const genres = extractGenres(movies, ratings);\r\n\r\n  const [movie, setMovie] = useState(false);\r\n  const [addReviewOpen, setAddReviewOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"col-60 px-0\">\r\n      <AddReview\r\n        movie={movie}\r\n        user={user}\r\n        open={addReviewOpen}\r\n        onClose={() => {\r\n          setAddReviewOpen(false);\r\n          refreshProfile();\r\n        }}\r\n      ></AddReview>\r\n      <div className=\"row no-gutters justify-content-end text-light align-items-center mb-2\">\r\n        <div className=\"col-auto\">\r\n          {genres.length > 1 ? (\r\n            <SimpleBar\r\n              style={{\r\n                padding: \"14px 0\",\r\n                width: \"100%\",\r\n                overflowX: \"auto\",\r\n                whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              {genres.map((x, i) => (\r\n                <div\r\n                  onClick={() => {\r\n                    setSelectedGenre(i);\r\n                  }}\r\n                  style={{ display: \"inline-block\" }}\r\n                  key={`genre-for-popular-movie-${i}`}\r\n                  className={`px-4 ${\r\n                    selectedGenre === i\r\n                      ? \"btn-tertiary-selected text-white\"\r\n                      : \"btn-tertiary text-light-white\"\r\n                  }`}\r\n                >\r\n                  {x}\r\n                </div>\r\n              ))}\r\n            </SimpleBar>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n      {movies.length ? (\r\n        <MoviesList\r\n          setAddReviewOpen={setAddReviewOpen}\r\n          setMovie={setMovie}\r\n          refreshProfile={refreshProfile}\r\n          owner={owner}\r\n          listType=\"wishlist\"\r\n          movies={movies.filter(\r\n            (x) =>\r\n              (ratings[x.movie_id] &&\r\n                ratings[x.movie_id].movie_genres.includes(\r\n                  genres[selectedGenre]\r\n                )) ||\r\n              genres[selectedGenre] === \"All\"\r\n          )}\r\n        ></MoviesList>\r\n      ) : (\r\n        <div\r\n          className=\"row no-gutters flex-center bg-over-root-lighter rounded p-5 text-white\"\r\n          style={{ height: \"150px\" }}\r\n        >\r\n          You have not added any movies/series to your wishlist.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wishlist;\r\n","import React, { useState } from \"react\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport \"simplebar/dist/simplebar.min.css\";\r\nimport MoviesList from \"./MoviesList\";\r\n\r\nconst extractGenres = (movies, ratings) => {\r\n  let genres = [\"All\"];\r\n  movies.forEach((x) => {\r\n    if (ratings[x.movie_id]) {\r\n      ratings[x.movie_id].movie_genres.forEach((g) => {\r\n        if (g.name) {\r\n          if (!genres.includes(g.name)) {\r\n            genres.push(g.name);\r\n          }\r\n        } else {\r\n          if (!genres.includes(g)) {\r\n            genres.push(g);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n  return genres;\r\n};\r\n\r\nconst Wishlist = ({ movies, ratings }) => {\r\n  const [selectedGenre, setSelectedGenre] = useState(0);\r\n  const genres = extractGenres(movies, ratings);\r\n\r\n  return (\r\n    <div className=\"col-60 px-0\">\r\n      <div className=\"row no-gutters justify-content-end text-light align-items-center mb-2\">\r\n        <div className=\"col-auto\">\r\n          {genres.length > 1 ? (\r\n            <SimpleBar\r\n              style={{\r\n                padding: \"14px 0\",\r\n                maxWidth: \"100%\",\r\n                overflowX: \"auto\",\r\n                whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              {genres.map((x, i) => (\r\n                <div\r\n                  onClick={() => {\r\n                    setSelectedGenre(i);\r\n                  }}\r\n                  style={{ display: \"inline-block\" }}\r\n                  key={`genre-for-popular-movie-${i}`}\r\n                  className={`px-4 ${\r\n                    selectedGenre === i\r\n                      ? \"btn-tertiary-selected text-white\"\r\n                      : \"btn-tertiary text-light-white\"\r\n                  }`}\r\n                >\r\n                  {x}\r\n                </div>\r\n              ))}\r\n            </SimpleBar>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n      {movies.length ? (\r\n        <MoviesList\r\n          listType=\"watchedlist\"\r\n          movies={movies.filter(\r\n            (x) =>\r\n              (ratings[x.movie_id] &&\r\n                ratings[x.movie_id].movie_genres.includes(\r\n                  genres[selectedGenre]\r\n                )) ||\r\n              genres[selectedGenre] === \"All\"\r\n          )}\r\n        ></MoviesList>\r\n      ) : (\r\n        <div\r\n          className=\"row no-gutters flex-center bg-over-root-lighter rounded p-5 text-white\"\r\n          style={{ height: \"150px\" }}\r\n        >\r\n          You have not watched any movies/series yet. Please go to your wishlist\r\n          any mark titles as watched.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wishlist;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport date from \"date-and-time\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport { MdThumbUp, MdChatBubble } from \"react-icons/md\";\r\nimport { GetReviewComments, DeleteReview } from \"../../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport Paigination from \"../../utility/Paigination\";\r\nimport history from \"../../../History\";\r\nimport AddReview from \"../AddReview\";\r\nimport { BsPencil, BsTrash } from \"react-icons/bs\";\r\nimport Popover from \"../../utility/Popover\";\r\nimport OkIcon from \"../../../images/OkIcon\";\r\nimport store from \"../../../store/store\";\r\nimport Loader from \"../../utility/Loader\";\r\n\r\nconst Reviews = ({\r\n  reviews,\r\n  publicUsers,\r\n  ratings,\r\n  owner,\r\n  user,\r\n  refreshReviews,\r\n}) => {\r\n  //comments object.Its property will be review id.\r\n  const [comments, setComments] = useState({});\r\n\r\n  const [addReviewOpen, setAddReviewOpen] = useState(false);\r\n  const [movie, setMovie] = useState(false);\r\n  const [review, setReview] = useState(false);\r\n\r\n  const [reviewIdOfVisibleComments, setReviewIdOfVisibleComments] = useState(\r\n    -1\r\n  );\r\n  const [deletingReview, setDeletingReview] = useState(-1);\r\n\r\n  // partitioning reviews into pages (8 reviews per page)\r\n  const [page, setPage] = useState(-1);\r\n  const [commentsPage, setCommentsPage] = useState(1);\r\n\r\n  // reference to top of the reviews block to scroll into view after changing the page\r\n  const topOfReviewsBlock = useRef(null);\r\n\r\n  const commentsPerPage = 5;\r\n  const reviewsPerPage = 8;\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (reviewIdOfVisibleComments !== -1) {\r\n        let data = await GetReviewComments(reviewIdOfVisibleComments);\r\n        setComments((prev) =>\r\n          Object.assign({}, prev, { [reviewIdOfVisibleComments]: data })\r\n        );\r\n      }\r\n    }\r\n    getData();\r\n  }, [reviewIdOfVisibleComments]);\r\n\r\n  //to avoid scroll into view on first render\r\n  let realPage = page === -1 ? 1 : page;\r\n\r\n  return (\r\n    <div className=\"row no-gutters text-white\">\r\n      <AddReview\r\n        userIsOwner={true}\r\n        open={addReviewOpen}\r\n        onClose={() => setAddReviewOpen(false)}\r\n        movie={movie}\r\n        review={review}\r\n        user={user}\r\n        refreshReviews={refreshReviews}\r\n      ></AddReview>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters mb-2\" ref={topOfReviewsBlock}></div>\r\n        {reviews.length ? (\r\n          reviews\r\n            .slice(\r\n              (realPage - 1) * reviewsPerPage,\r\n              (realPage - 1) * reviewsPerPage + reviewsPerPage\r\n            )\r\n            .map((x, i) =>\r\n              ratings[x.movie_id] ? (\r\n                <React.Fragment key={`fragment-review-${i}`}>\r\n                  <div\r\n                    key={`review-${i}`}\r\n                    className=\"row no-gutters p-4 bg-over-root-lighter rounded mb-2\"\r\n                  >\r\n                    <div\r\n                      className=\"col-sm-auto col-20 pr-4 d-none d-sm-block\"\r\n                      style={{ maxWidth: \"150px\" }}\r\n                    >\r\n                      <div className=\"row no-gutters mb-1\">\r\n                        <img\r\n                          alt={ratings[x.movie_id].movie_poster}\r\n                          onClick={() => history.push(`/movie/${x.movie_id}`)}\r\n                          width=\"100%\"\r\n                          style={{ borderRadius: \"13px\" }}\r\n                          src={`https://image.tmdb.org/t/p/w154${\r\n                            ratings[x.movie_id].movie_poster\r\n                          }`}\r\n                        ></img>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col d-flex flex-column\">\r\n                      <div className=\"row no-gutters justify-content-between align-items-center mb-2 flex-grow-0\">\r\n                        <div className=\"col-60 d-block d-sm-none mb-3\">\r\n                          <div className=\"row no-gutters mb-1\">\r\n                            <div className=\"col-auto pr-3\">\r\n                              <div\r\n                                className=\"square-70 rounded bg-image\"\r\n                                style={{\r\n                                  backgroundImage: `url(https://image.tmdb.org/t/p/w154${\r\n                                    ratings[x.movie_id].movie_poster\r\n                                  })`,\r\n                                }}\r\n                              ></div>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                              <div className=\"row no-gutters text-white mb-0\">\r\n                                {ratings[x.movie_id].movie_title} (\r\n                                {ratings[\r\n                                  x.movie_id\r\n                                ].movie_release_date.substring(0, 4)}\r\n                                )\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                          <div className=\"row no-gutters align-items-center\">\r\n                            <div className=\"col-auto pr-2\">\r\n                              <div\r\n                                className=\"bg-image rounded-circle square-40\"\r\n                                style={{\r\n                                  backgroundImage: `url(${\r\n                                    publicUsers[x.author]\r\n                                      ? publicUsers[x.author].photo\r\n                                      : \"\"\r\n                                  })`,\r\n                                }}\r\n                              ></div>\r\n                            </div>\r\n                            <div className=\"col-auto\">\r\n                              <div className=\"row no-gutters align-items-center text-white\">\r\n                                <div className=\"col-auto mr-3 mb-0\">\r\n                                  {publicUsers[x.author]\r\n                                    ? publicUsers[x.author].display_name\r\n                                    : \"\"}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                          <div className=\"row no-gutters text-white\">\r\n                            <span className=\"mr-2 col-auto\">\r\n                              Posted review on\r\n                            </span>\r\n                            <span className=\"text-muted col-auto mr-2\">\r\n                              {date.format(new Date(x.date), \"MMM DD, YYYY\")}\r\n                            </span>\r\n                            {owner ? (\r\n                              <React.Fragment>\r\n                                <Popover\r\n                                  arrow={false}\r\n                                  position=\"top\"\r\n                                  trigger=\"mouseenter\"\r\n                                  theme=\"dark\"\r\n                                  content={(w) => (\r\n                                    <div className=\"py-2 px-3 rounded bg-root\">\r\n                                      Edit review\r\n                                    </div>\r\n                                  )}\r\n                                >\r\n                                  <div\r\n                                    className=\"col-auto text-muted btn-tertiary-small d-flex flex-center\"\r\n                                    onClick={async () => {\r\n                                      setMovie({\r\n                                        release_date:\r\n                                          ratings[x.movie_id]\r\n                                            .movie_release_date,\r\n                                        title: ratings[x.movie_id].movie_title,\r\n                                        id: ratings[x.movie_id].tmdb_id,\r\n                                      });\r\n                                      setReview(x);\r\n                                      setAddReviewOpen(true);\r\n                                    }}\r\n                                  >\r\n                                    <BsPencil fontSize=\"24px\"></BsPencil>\r\n                                  </div>\r\n                                </Popover>\r\n                                <Popover\r\n                                  arrow={false}\r\n                                  position=\"top\"\r\n                                  trigger=\"mouseenter\"\r\n                                  theme=\"dark\"\r\n                                  content={(w) => (\r\n                                    <div className=\"py-2 px-3 rounded bg-root\">\r\n                                      Delete review\r\n                                    </div>\r\n                                  )}\r\n                                >\r\n                                  <div\r\n                                    className=\"col-auto text-muted btn-tertiary-small d-flex flex-center\"\r\n                                    onClick={async () => {\r\n                                      try {\r\n                                        setDeletingReview(x._id);\r\n                                        let res = await DeleteReview(x);\r\n                                        setDeletingReview(-1);\r\n                                        if (res.error) {\r\n                                          store.dispatch({\r\n                                            type: \"SET_NOTIFICATION\",\r\n                                            notification: {\r\n                                              title: `Couldn't delete comment`,\r\n                                              type: \"failure\",\r\n                                              message: res.error,\r\n                                            },\r\n                                          });\r\n                                        } else {\r\n                                          store.dispatch({\r\n                                            type: \"SET_NOTIFICATION\",\r\n                                            notification: {\r\n                                              title: `Success`,\r\n                                              type: \"success\",\r\n                                              message:\r\n                                                \"Comment successfully deleted\",\r\n                                            },\r\n                                          });\r\n\r\n                                          let rating = ratings[x.movie_id];\r\n                                          let userInd = rating[\r\n                                            x.rating\r\n                                          ].findIndex((r) => r === x.author);\r\n                                          if (userInd !== -1) {\r\n                                            rating[x.rating].splice(userInd, 1);\r\n                                          }\r\n                                          store.dispatch({\r\n                                            type: \"UPDATE_RATINGS\",\r\n                                            rating: { [x.movie_id]: rating },\r\n                                          });\r\n\r\n                                          let userRatings = { ...user.ratings };\r\n                                          delete userRatings[x.movie_id];\r\n                                          store.dispatch({\r\n                                            type: \"UPDATE_USER\",\r\n                                            userProperty: {\r\n                                              ratings: userRatings,\r\n                                            },\r\n                                          });\r\n                                          refreshReviews();\r\n                                        }\r\n                                      } catch (er) {}\r\n                                    }}\r\n                                  >\r\n                                    {deletingReview === x._id ? (\r\n                                      <div className=\"square-20\">\r\n                                        <Loader\r\n                                          color={\"white\"}\r\n                                          style={{\r\n                                            position: \"absolute\",\r\n                                            left: \"10px\",\r\n                                            top: 0,\r\n                                            bottom: 0,\r\n                                            margin: \"auto\",\r\n                                            display: \"flex\",\r\n                                            alignItems: \"center\",\r\n                                          }}\r\n                                          loading={true}\r\n                                          size={20}\r\n                                        ></Loader>\r\n                                      </div>\r\n                                    ) : (\r\n                                      <BsTrash fontSize=\"24px\"></BsTrash>\r\n                                    )}\r\n                                  </div>\r\n                                </Popover>\r\n                              </React.Fragment>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"row no-gutters text-light mb-3 flex-grow-0 font-weigt-300 text-break\">\r\n                        {x.review}\r\n                      </div>\r\n                      <div className=\"row no-gutters align-items-center\">\r\n                        {x.rating ? (\r\n                          x.rating === \"ok_rate\" ? (\r\n                            <OkIcon size={24}></OkIcon>\r\n                          ) : (\r\n                            <Emoji\r\n                              emoji={\r\n                                x.rating === \"excellent_rate\"\r\n                                  ? \"fire\"\r\n                                  : x.rating === \"good_rate\"\r\n                                  ? \"heart\"\r\n                                  : x.rating === \"ok_rate\"\r\n                                  ? \"heavy_division_sign\"\r\n                                  : \"shit\"\r\n                              }\r\n                              set=\"facebook\"\r\n                              size={24}\r\n                            />\r\n                          )\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                      <div className=\"row no-gutters flex-grow-1\">\r\n                        <div className=\"col-60 d-flex flex-column justify-content-end\">\r\n                          <div className=\"row no-gutters justify-content-end align-items-center text-white\">\r\n                            <div className=\"col-auto\">\r\n                              <div className=\"row no-gutters align-items-center\">\r\n                                <div className=\"col-auto mr-2\">\r\n                                  {x.likes.length}\r\n                                </div>\r\n                                <div className=\"col-auto mr-2 \">\r\n                                  <MdThumbUp\r\n                                    fontSize=\"24px\"\r\n                                    className=\"text-green\"\r\n                                  ></MdThumbUp>\r\n                                </div>\r\n                                <div className=\"col-auto mr-2\">\r\n                                  {x.comments.length}\r\n                                </div>\r\n                                <div className=\"col-auto mr-2\">\r\n                                  <MdChatBubble\r\n                                    onClick={() => {\r\n                                      setReviewIdOfVisibleComments(\r\n                                        reviewIdOfVisibleComments === x._id\r\n                                          ? -1\r\n                                          : x._id\r\n                                      );\r\n                                    }}\r\n                                    fontSize=\"24px\"\r\n                                    className=\"text-orange scale-transition cursor-pointer\"\r\n                                  ></MdChatBubble>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <Collapse\r\n                    in={reviewIdOfVisibleComments === x._id}\r\n                    className=\"mb-3\"\r\n                  >\r\n                    <div className=\"ml-4 py-2 text-light\">\r\n                      Comments ({comments[x._id] ? comments[x._id].length : 0})\r\n                    </div>\r\n                    {comments[x._id]\r\n                      ? comments[x._id]\r\n                          .slice(\r\n                            commentsPage * (commentsPage - 1),\r\n                            commentsPage * (commentsPage - 1) + commentsPerPage\r\n                          )\r\n                          .map((y, ind) => (\r\n                            <div\r\n                              key={`comment-${reviewIdOfVisibleComments}-${ind}`}\r\n                              className=\"row no-gutters p-4 bg-over-root-lighter rounded ml-4 mb-2\"\r\n                            >\r\n                              <div className=\"col-auto pr-4 d-none d-md-block\">\r\n                                <div\r\n                                  className=\"bg-image rounded-circle square-70\"\r\n                                  style={{\r\n                                    backgroundImage: `url(${\r\n                                      publicUsers[y.author]\r\n                                        ? publicUsers[y.author].photo\r\n                                        : \"\"\r\n                                    })`,\r\n                                  }}\r\n                                ></div>\r\n                              </div>\r\n                              <div className=\"col\">\r\n                                <div className=\"row no-gutters align-items-center mb-2\">\r\n                                  <div className=\"col-auto pr-2 d-block d-md-none\">\r\n                                    <div\r\n                                      className=\"bg-image rounded-circle square-40\"\r\n                                      style={{\r\n                                        backgroundImage: `url(${\r\n                                          publicUsers[y.author]\r\n                                            ? publicUsers[y.author].photo\r\n                                            : \"\"\r\n                                        })`,\r\n                                      }}\r\n                                    ></div>\r\n                                  </div>\r\n                                  <div className=\"col-auto\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                      <div className=\"col-auto mr-3 h6 text-white mb-0\">\r\n                                        {publicUsers[y.author]\r\n                                          ? publicUsers[y.author].display_name\r\n                                          : \"\"}\r\n                                      </div>\r\n                                      <div className=\"col-auto mr-3 text-muted\">\r\n                                        {date.format(\r\n                                          new Date(y.date),\r\n                                          \"MMM DD, YYYY\"\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div className=\"row no-gutters text-light mb-3 font-weight-300 text-break\">\r\n                                  {y.comment}\r\n                                </div>\r\n                                <div className=\"row no-gutters justify-content-between align-items-center\">\r\n                                  <div className=\"col-auto\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                      <div className=\"col-auto mr-2\">\r\n                                        {y.likes.length}\r\n                                      </div>\r\n                                      <div className=\"col-auto mr-2 \">\r\n                                        <MdThumbUp\r\n                                          fontSize=\"24px\"\r\n                                          className=\"text-green cursor-pointer\"\r\n                                        ></MdThumbUp>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          ))\r\n                      : \"\"}\r\n                    <div className=\"row no-gutters justify-content-end\">\r\n                      <div className=\"col-auto\">\r\n                        <Paigination\r\n                          count={Math.ceil(\r\n                            comments[x._id]\r\n                              ? comments[x._id].length / commentsPerPage\r\n                              : 1\r\n                          )}\r\n                          current={commentsPage}\r\n                          setCurrent={setCommentsPage}\r\n                          classNames={{\r\n                            notSelected: \"input-dark\",\r\n                            selected: \"input-dark-selected\",\r\n                          }}\r\n                        ></Paigination>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </React.Fragment>\r\n              ) : (\r\n                \"\"\r\n              )\r\n            )\r\n        ) : (\r\n          <div\r\n            className=\"row no-gutters flex-center bg-over-root-lighter rounded p-5\"\r\n            style={{ height: \"150px\" }}\r\n          >\r\n            You have not reviewed any movies/series. Your review will help your\r\n            friends and family pick the right movie or series to watch.\r\n          </div>\r\n        )}\r\n        <div className=\"row no-gutters justify-content-sm-end justify-content-center mt-2\">\r\n          <div className=\"col-auto mb-4 mr-sm-2 mr-md-0\">\r\n            <Paigination\r\n              classNames={{\r\n                notSelected: \"input-dark\",\r\n                selected: \"input-dark-selected\",\r\n              }}\r\n              count={Math.ceil(reviews.length / reviewsPerPage)}\r\n              current={realPage}\r\n              setCurrent={setPage}\r\n            ></Paigination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Reviews);\r\n","import React, { useState, useRef } from \"react\";\r\nimport date from \"date-and-time\";\r\nimport { MdThumbUp } from \"react-icons/md\";\r\nimport { connect } from \"react-redux\";\r\nimport Paigination from \"../../utility/Paigination\";\r\nimport history from \"../../../History\";\r\nimport EditComment from \"../EditComment\";\r\nimport { BsPencil, BsTrash } from \"react-icons/bs\";\r\nimport Popover from \"../../utility/Popover\";\r\nimport { DeleteComment } from \"../../../server/DatabaseApi\";\r\nimport store from \"../../../store/store\";\r\nimport Loader from \"../../utility/Loader\";\r\n\r\nconst Comments = ({\r\n  comments,\r\n  publicUsers,\r\n  ratings,\r\n  owner,\r\n  user,\r\n  refreshComments,\r\n}) => {\r\n  // partitioning comments into pages (8 comments per page)\r\n  const [page, setPage] = useState(-1);\r\n  // reference to top of the comments block to scroll into view after changing the page\r\n  const topOfReviewsBlock = useRef(null);\r\n\r\n  const [movie, setMovie] = useState(false);\r\n  const [replyOpen, setReplyOpen] = useState(false);\r\n  const [comment, setComment] = useState(false);\r\n  const [deletingComment, setDeletingComment] = useState(-1);\r\n  const reviewsPerPage = 8;\r\n\r\n  //to avoid scroll into view on first render\r\n  let realPage = page === -1 ? 1 : page;\r\n\r\n  return (\r\n    <div className=\"row no-gutters text-white\">\r\n      <EditComment\r\n        comment={comment}\r\n        refreshComments={refreshComments}\r\n        setComments={() => {}}\r\n        movie={movie}\r\n        open={replyOpen}\r\n        onClose={() => setReplyOpen(false)}\r\n        user={user}\r\n      ></EditComment>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters mb-2\" ref={topOfReviewsBlock}></div>\r\n        {comments.length ? (\r\n          comments\r\n            .slice(\r\n              (realPage - 1) * reviewsPerPage,\r\n              (realPage - 1) * reviewsPerPage + reviewsPerPage\r\n            )\r\n            .map((x, i) => (\r\n              <div\r\n                key={`comment-${i}`}\r\n                className=\"row no-gutters p-4 bg-over-root-lighter rounded mb-2\"\r\n              >\r\n                <div\r\n                  className=\"col-sm-auto col-20 pr-4 d-none d-sm-block\"\r\n                  style={{ maxWidth: \"150px\" }}\r\n                >\r\n                  <div className=\"row no-gutters mb-1\">\r\n                    <img\r\n                      alt={ratings[x.movie_id].movie_poster}\r\n                      onClick={() => history.push(`/movie/${x.movie_id}`)}\r\n                      width=\"100%\"\r\n                      style={{ borderRadius: \"13px\" }}\r\n                      src={`https://image.tmdb.org/t/p/w154${\r\n                        ratings[x.movie_id].movie_poster\r\n                      }`}\r\n                    ></img>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col d-flex flex-column\">\r\n                  <div className=\"row no-gutters justify-content-between align-items-center mb-2 flex-grow-0\">\r\n                    <div className=\"col-60 d-block d-sm-none mb-3\">\r\n                      <div className=\"row no-gutters mb-1\">\r\n                        <div className=\"col-auto pr-3\">\r\n                          <div\r\n                            className=\"square-70 rounded bg-image\"\r\n                            style={{\r\n                              backgroundImage: `url(https://image.tmdb.org/t/p/w154${\r\n                                ratings[x.movie_id].movie_poster\r\n                              })`,\r\n                            }}\r\n                          ></div>\r\n                          {/* <img\r\n                            onClick={() => history.push(`/movie/${x.id}`)}\r\n                            width=\"100%\"\r\n                            style={{ borderRadius: \"13px\" }}\r\n                            src={`https://image.tmdb.org/t/p/w154${x.movie_poster}`}\r\n                          ></img> */}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                          <div className=\"row no-gutters text-white mb-0\">\r\n                            {ratings[x.movie_id].movie_title} (\r\n                            {ratings[x.movie_id].movie_release_date.substring(\r\n                              0,\r\n                              4\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                      <div className=\"row no-gutters align-items-center\">\r\n                        <div className=\"col-auto pr-2\">\r\n                          <div\r\n                            className=\"bg-image rounded-circle square-40\"\r\n                            style={{\r\n                              backgroundImage: `url(${\r\n                                publicUsers[x.author]\r\n                                  ? publicUsers[x.author].photo\r\n                                  : \"\"\r\n                              })`,\r\n                            }}\r\n                          ></div>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                          <div className=\"row no-gutters align-items-center text-white\">\r\n                            <div className=\"col-auto mr-3 h6 mb-0\">\r\n                              {publicUsers[x.author]\r\n                                ? publicUsers[x.author].display_name\r\n                                : \"\"}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                      <div className=\"row no-gutters text-white\">\r\n                        <span className=\"mr-2 col-auto\">Commented on</span>\r\n                        <span className=\"text-muted col-auto mr-2\">\r\n                          {date.format(new Date(x.date), \"MMM DD, YYYY\")}\r\n                        </span>\r\n                        {owner ? (\r\n                          <React.Fragment>\r\n                            <Popover\r\n                              arrow={false}\r\n                              position=\"top\"\r\n                              trigger=\"mouseenter\"\r\n                              theme=\"dark\"\r\n                              content={(w) => (\r\n                                <div className=\"py-2 px-3 rounded bg-root\">\r\n                                  Edit comment\r\n                                </div>\r\n                              )}\r\n                            >\r\n                              <div\r\n                                className=\"col-auto text-muted btn-tertiary-small d-flex flex-center\"\r\n                                onClick={async () => {\r\n                                  setMovie({\r\n                                    release_date:\r\n                                      ratings[x.movie_id].movie_release_date,\r\n                                    title: ratings[x.movie_id].movie_title,\r\n                                    id: ratings[x.movie_id].tmdb_id,\r\n                                  });\r\n                                  setComment(x);\r\n                                  setReplyOpen(true);\r\n                                }}\r\n                              >\r\n                                <BsPencil fontSize=\"24px\"></BsPencil>\r\n                              </div>\r\n                            </Popover>\r\n                            <Popover\r\n                              arrow={false}\r\n                              position=\"top\"\r\n                              trigger=\"mouseenter\"\r\n                              theme=\"dark\"\r\n                              content={(w) => (\r\n                                <div className=\"py-2 px-3 rounded bg-root\">\r\n                                  Delete comment\r\n                                </div>\r\n                              )}\r\n                            >\r\n                              <div\r\n                                className=\"col-auto text-muted btn-tertiary-small d-flex flex-center\"\r\n                                onClick={async () => {\r\n                                  setDeletingComment(x._id);\r\n                                  let res = await DeleteComment(x._id);\r\n                                  setDeletingComment(-1);\r\n                                  if (res.error) {\r\n                                    store.dispatch({\r\n                                      type: \"SET_NOTIFICATION\",\r\n                                      notification: {\r\n                                        title: `Couldn't delete comment`,\r\n                                        type: \"failure\",\r\n                                        message: res.error,\r\n                                      },\r\n                                    });\r\n                                  } else {\r\n                                    store.dispatch({\r\n                                      type: \"SET_NOTIFICATION\",\r\n                                      notification: {\r\n                                        title: `Success`,\r\n                                        type: \"success\",\r\n                                        message: \"Comment successfully deleted\",\r\n                                      },\r\n                                    });\r\n                                    refreshComments();\r\n                                  }\r\n                                }}\r\n                              >\r\n                                {deletingComment === x._id ? (\r\n                                  <div className=\"square-20\">\r\n                                    <Loader\r\n                                      color={\"white\"}\r\n                                      style={{\r\n                                        position: \"absolute\",\r\n                                        left: \"10px\",\r\n                                        top: 0,\r\n                                        bottom: 0,\r\n                                        margin: \"auto\",\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                      }}\r\n                                      loading={true}\r\n                                      size={20}\r\n                                    ></Loader>\r\n                                  </div>\r\n                                ) : (\r\n                                  <BsTrash fontSize=\"24px\"></BsTrash>\r\n                                )}\r\n                              </div>\r\n                            </Popover>\r\n                          </React.Fragment>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row no-gutters text-light mb-3 flex-grow-0 font-weight-300\">\r\n                    {x.comment}\r\n                  </div>\r\n                  <div className=\"row no-gutters flex-grow-1\">\r\n                    <div className=\"col-60 d-flex flex-column justify-content-end\">\r\n                      <div className=\"row no-gutters justify-content-end align-items-center text-white\">\r\n                        <div className=\"col-auto\">\r\n                          <div className=\"row no-gutters align-items-center\">\r\n                            <div className=\"col-auto mr-2\">\r\n                              {x.likes.length}\r\n                            </div>\r\n                            <div className=\"col-auto mr-2 \">\r\n                              <MdThumbUp\r\n                                fontSize=\"24px\"\r\n                                className=\"text-green\"\r\n                              ></MdThumbUp>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n        ) : (\r\n          <div\r\n            className=\"row no-gutters flex-center bg-over-root-lighter rounded p-5\"\r\n            style={{ height: \"150px\" }}\r\n          >\r\n            You have not commented on any comments. We encourage you to share\r\n            your opinion on your friends and family comments.\r\n          </div>\r\n        )}\r\n        <div className=\"row no-gutters justify-content-sm-end justify-content-center mt-2\">\r\n          <div className=\"col-auto mb-4 mr-sm-2 mr-md-0\">\r\n            <Paigination\r\n              classNames={{\r\n                notSelected: \"input-dark\",\r\n                selected: \"input-dark-selected\",\r\n              }}\r\n              count={Math.ceil(comments.length / reviewsPerPage)}\r\n              current={realPage}\r\n              setCurrent={setPage}\r\n            ></Paigination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Comments);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Modal from \"../../utility/Modal\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { EditUser } from \"../../../server/DatabaseApi\";\r\nimport store from \"../../../store/store\";\r\n\r\nconst EditProfile = ({\r\n  user,\r\n  refreshProfile,\r\n  editProfileOpen,\r\n  onClose,\r\n  userId,\r\n}) => {\r\n  const [update, setUpdate] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    display_name: \"\",\r\n    photo: \"\",\r\n    password: \"\",\r\n    confirm_assword: \"\",\r\n    _id: \"\",\r\n    token: \"\",\r\n  });\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n\r\n  const photoUploader = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (user.photo) {\r\n      setUpdate((prev) =>\r\n        Object.assign({}, prev, {\r\n          first_name: user.first_name,\r\n          last_name: user.last_name,\r\n          display_name: user.display_name,\r\n          email: user.email,\r\n          photo: user.photo,\r\n          token: user.token,\r\n        })\r\n      );\r\n    }\r\n  }, [user.first_name]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleFileUpload = async (e) => {\r\n    var imageFile = e.target.files[0];\r\n    var options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 100,\r\n      useWebWorker: true,\r\n    };\r\n    try {\r\n      const compressedFile = await imageCompression(imageFile, options);\r\n      const dataUrl = await imageCompression.getDataUrlFromFile(compressedFile);\r\n      setUpdate((prev) => Object.assign({}, prev, { photo: dataUrl }));\r\n    } catch (error) {}\r\n  };\r\n\r\n  const validations = [\r\n    {\r\n      valid: /[^\\w\\s]/.test(update.password) || /\\d/.test(update.password),\r\n      error: \"Password must contain number or symbol\",\r\n    },\r\n    {\r\n      valid: update.password === update.confirm_assword,\r\n      error: \"Passwords don't match\",\r\n    },\r\n    {\r\n      valid: update.password.length >= 6,\r\n      error: \"Password must contain at least 6 characters\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Modal open={editProfileOpen} onClose={onClose}>\r\n      <div className=\"col-xl-30 col-lg-40 col-md-50 col-58 bg-over-root-lighter rounded p-sm-5 p-4\">\r\n        <div className=\"row no-gutters mb-3 text-title-lg\">Update profile</div>\r\n        <div className=\"row no-gutters justify-content-center mb-5\">\r\n          <div className=\"col-auto text-center\">\r\n            <div className=\"row no-gutters justify-content-center\">\r\n              <div\r\n                className=\"square-100 bg-image rounded-circle d-flex align-items-end overflow-hidden mb-2\"\r\n                style={{ backgroundImage: `url(${update.photo})` }}\r\n              >\r\n                <input\r\n                  spellCheck={false}\r\n                  onChange={handleFileUpload}\r\n                  type=\"file\"\r\n                  className=\"d-none\"\r\n                  ref={photoUploader}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className=\"btn-custom btn-custom-primary px-4\"\r\n              onClick={() => photoUploader.current.click()}\r\n            >\r\n              Upload photo\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-3\">\r\n          <div className=\"col-30 pr-2\">\r\n            <div className=\"row no-gutters text-light\">First Name</div>\r\n            <div className=\"row no-gutters\">\r\n              <input\r\n                spellCheck={false}\r\n                type=\"text\"\r\n                className=\"input-light px-3 w-100\"\r\n                value={update.first_name}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setUpdate((prev) =>\r\n                    Object.assign({}, prev, { first_name: e.target.value })\r\n                  );\r\n                }}\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-30\">\r\n            <div className=\"row no-gutters text-light\">Last Name</div>\r\n            <div className=\"row no-gutters\">\r\n              <input\r\n                spellCheck={false}\r\n                type=\"text\"\r\n                className=\"input-light px-3 w-100\"\r\n                value={update.last_name}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setUpdate((prev) =>\r\n                    Object.assign({}, prev, { last_name: e.target.value })\r\n                  );\r\n                }}\r\n              ></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-3\">\r\n          <div className=\"col-60 text-light\">Email</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              disabled\r\n              spellCheck={false}\r\n              type=\"text\"\r\n              className=\"input-light-disabled px-3 w-100 user-select-none\"\r\n              value={update.email}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-3\">\r\n          <div className=\"col-60 text-light\">Display Name</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              spellCheck={false}\r\n              type=\"text\"\r\n              className=\"input-light px-3 w-100\"\r\n              value={update.display_name}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setUpdate((prev) =>\r\n                  Object.assign({}, prev, { display_name: e.target.value })\r\n                );\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-3\">\r\n          <div className=\"col-60 text-light\">Password</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              type=\"password\"\r\n              spellCheck={false}\r\n              className=\"input-light px-3 w-100\"\r\n              value={update.password}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setUpdate((prev) =>\r\n                  Object.assign({}, prev, { password: e.target.value })\r\n                );\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-3\">\r\n          <div className=\"col-60 text-light\">Confirm Password</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              spellCheck={false}\r\n              type=\"password\"\r\n              className=\"input-light px-3 w-100\"\r\n              value={update.confirm_assword}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setUpdate((prev) =>\r\n                  Object.assign({}, prev, { confirm_assword: e.target.value })\r\n                );\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"row no-gutters align-items-center text-danger justify-content-end\"\r\n          style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n        >\r\n          {problem}\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"col-sm-auto btn-custom btn-custom-secondary btn-small mr-sm-2 mb-2 col-60\"\r\n            onClick={onClose}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"col-sm-auto col-60 btn-custom btn-custom-primary btn-small\"\r\n            onClick={async () => {\r\n              let notValid = validations.filter((x) => !x.valid);\r\n              if (notValid.length && update.password) {\r\n                setProblem(notValid[0].error);\r\n              } else {\r\n                let finalUpdate = {};\r\n                Object.keys(update).forEach((x) => {\r\n                  if (update[x]) {\r\n                    finalUpdate[x] = update[x];\r\n                  }\r\n                });\r\n                let res = await EditUser(finalUpdate);\r\n                if (!res.error) {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Profile updates\",\r\n                      message: \"You successfully updated your profile\",\r\n                      type: \"success\",\r\n                    },\r\n                  });\r\n                  store.dispatch({\r\n                    type: \"UPDATE_PUBLICUSERS\",\r\n                    publicUser: { [userId]: res.updatedPublicUser },\r\n                  });\r\n\r\n                  store.dispatch({\r\n                    type: \"UPDATE_USER\",\r\n                    userProperty: res.updatedUser,\r\n                  });\r\n\r\n                  refreshProfile();\r\n                  onClose();\r\n                  localStorage[\"movies_user_token\"] = res.newToken;\r\n                } else {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Error\",\r\n                      message: res.error,\r\n                      type: \"failure\",\r\n                    },\r\n                  });\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetUser,\r\n  GetUserReviews,\r\n  GetUserComments,\r\n} from \"../../../server/DatabaseApi\";\r\nimport Wishlist from \"./Wishlist\";\r\nimport Watchedlist from \"./Watchedlist\";\r\nimport Reviews from \"./Reviews\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport \"simplebar/dist/simplebar.min.css\";\r\nimport Comments from \"./Comments\";\r\nimport EditProfile from \"./EditProfile\";\r\n\r\nconst Profile = (props) => {\r\n  const user = props.user;\r\n  const userId = props.match.params.userId;\r\n  const publicUsers = props.publicUsers;\r\n  const ratings = props.ratings;\r\n  const sectionInUrl = props.match.params.section;\r\n\r\n  const [profileData, setProfileData] = useState({\r\n    wishlist: [],\r\n    comments: [],\r\n    watchedlist: [],\r\n    reviews: [],\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n  });\r\n\r\n  const [refreshReviews, setRefreshReviews] = useState(false);\r\n  const [refreshComments, setRefreshComments] = useState(false);\r\n  const [reviews, setReviews] = useState([]);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const reviewsFetched = useRef(false);\r\n  const commentsFetched = useRef(false);\r\n\r\n  const [section, setSection] = useState(0);\r\n  const [editProfileOpen, setEditProfileOpen] = useState(false);\r\n\r\n  const [refreshProfile, setRefreshProfile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (userId) {\r\n        let res = await GetUser(userId);\r\n        if (!res.error) {\r\n          setProfileData(res);\r\n        }\r\n      }\r\n    }\r\n    getData();\r\n  }, [userId, refreshProfile, user.wishlist.length]);\r\n\r\n  useEffect(() => {\r\n    if (sectionInUrl !== undefined) {\r\n      setSection(+sectionInUrl);\r\n    }\r\n  }, [sectionInUrl]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (\r\n        section === 2 &&\r\n        !reviewsFetched.current &&\r\n        profileData.reviews.length\r\n      ) {\r\n        reviewsFetched.current = true;\r\n        let res = await GetUserReviews(profileData.reviews);\r\n        if (!res.error) {\r\n          setReviews(res.reverse());\r\n        }\r\n      } else if (section === 3 && !commentsFetched.current) {\r\n        commentsFetched.current = true;\r\n        let res = await GetUserComments(profileData.comments);\r\n        if (!res.error) {\r\n          setComments(res.reverse());\r\n        }\r\n      }\r\n    }\r\n    getData();\r\n  }, [section, profileData.reviews.length]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (reviewsFetched.current) {\r\n        setRefreshComments(!refreshComments);\r\n        let res = await GetUserReviews(profileData.reviews);\r\n        if (!res.error) {\r\n          setReviews(res.reverse());\r\n        }\r\n      }\r\n    }\r\n    getData();\r\n  }, [refreshReviews]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (commentsFetched.current) {\r\n        setRefreshProfile(!refreshProfile);\r\n        let res = await GetUserComments(profileData.comments);\r\n        if (!res.error) {\r\n          setComments(res.reverse());\r\n        }\r\n      }\r\n    }\r\n    getData();\r\n  }, [refreshComments]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <div className=\"row no-gutters\" style={{ minHeight: \"800px\" }}>\r\n      <EditProfile\r\n        userId={userId}\r\n        refreshProfile={() => setRefreshProfile(!refreshProfile)}\r\n        editProfileOpen={editProfileOpen}\r\n        user={user}\r\n        onClose={() => setEditProfileOpen(false)}\r\n      ></EditProfile>\r\n      <div className=\"col-60 content-container mx-auto p-sm-5 p-4\">\r\n        <div className=\"row no-gutters justify-content-xl-between justify-content-center text-white bg-over-root-lighter p-sm-5 p-4 rounded mb-2\">\r\n          <div className=\"col-auto mb-4 mr-lg-5\">\r\n            <div className=\"row no-gutters justify-content-xl-start justify-content-center\">\r\n              <div\r\n                className=\"col-auto bg-image square-100 rounded-circle mr-md-4\"\r\n                style={{\r\n                  backgroundImage: `url(${\r\n                    publicUsers[userId] ? publicUsers[userId].photo : \"\"\r\n                  })`,\r\n                }}\r\n              ></div>\r\n              <div className=\"col-60 col-md-auto\">\r\n                {profileData.first_name || profileData.last_name ? (\r\n                  <div className=\"row no-gutters text-title-lg justify-content-md-start justify-content-center\">\r\n                    <div className=\"col-auto mr-2\">\r\n                      {profileData.first_name ? profileData.first_name : \"\"}\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                      {profileData.last_name ? profileData.last_name : \"\"}\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"row no-gutters h5 justify-content-md-start justify-content-center\">\r\n                    Full name is empty\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"row no-gutters justify-content-md-start justify-content-center text-title-md mb-2\">\r\n                  <div className=\"text-truncate\" style={{ maxWidth: \"150px\" }}>\r\n                    @\r\n                    {publicUsers[userId]\r\n                      ? publicUsers[userId].display_name\r\n                      : \"\"}\r\n                  </div>\r\n                </div>\r\n                {user._id === userId ? (\r\n                  <div className=\"row no-gutters justify-content-md-start justify-content-center\">\r\n                    <div\r\n                      className=\"col-auto btn-custom btn-custom-primary btn-small\"\r\n                      onClick={() => setEditProfileOpen(true)}\r\n                    >\r\n                      Edit Profile\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-auto col-60\">\r\n            <div className=\"row no-gutters justify-content-center h-100 align-items-center\">\r\n              <div className=\"col-sm-auto col mr-sm-4\">\r\n                <div className=\"row no-gutters mb-3 profile-stats-title\">\r\n                  Wishlist\r\n                </div>\r\n                <div className=\"row no-gutters text-lift justify-content-end\">\r\n                  {profileData.wishlist.length}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-auto col mr-sm-4 mr-0\">\r\n                <div className=\"row no-gutters mb-3 profile-stats-title\">\r\n                  Watched\r\n                </div>\r\n                <div className=\"row no-gutters text-lift justify-content-end\">\r\n                  {profileData.watchedlist.length}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-auto col mr-sm-4 mr-0\">\r\n                <div className=\"row no-gutters mb-3 profile-stats-title\">\r\n                  Reviews\r\n                </div>\r\n                <div className=\"row no-gutters text-lift justify-content-end profile-stats-title\">\r\n                  {profileData.reviews.length}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-auto col\">\r\n                <div className=\"row no-gutters mb-3 profile-stats-title\">\r\n                  Comments\r\n                </div>\r\n                <div className=\"row no-gutters text-lift justify-content-end\">\r\n                  {profileData.comments.length}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-over-root-lighter row no-gutters rounded w-100 justify-content-between text-white\">\r\n          <div className=\"col-60\">\r\n            <SimpleBar\r\n              style={{\r\n                maxWidth: \"100%\",\r\n                overflowX: \"auto\",\r\n                whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"d-inline-block p-sm-4 p-3 cursor-pointer mr-4 text-title-md mb-0 user-select-none\"\r\n                style={{\r\n                  borderTop: \"3px solid transparent\",\r\n                  borderBottom:\r\n                    section === 0\r\n                      ? \"3px solid rgb(255, 0, 64)\"\r\n                      : \"3px solid transparent\",\r\n                }}\r\n                onClick={() => setSection(0)}\r\n              >\r\n                Wishlist\r\n              </div>\r\n              <div\r\n                style={{\r\n                  borderTop: \"3px solid transparent\",\r\n                  borderBottom:\r\n                    section === 1\r\n                      ? \"3px solid rgb(255, 0, 64)\"\r\n                      : \"3px solid transparent\",\r\n                }}\r\n                className=\"d-inline-block p-sm-4 p-3 cursor-pointer mr-4 text-title-md mb-0 user-select-none\"\r\n                onClick={() => setSection(1)}\r\n              >\r\n                Watched\r\n              </div>\r\n              <div\r\n                style={{\r\n                  borderTop: \"3px solid transparent\",\r\n                  borderBottom:\r\n                    section === 2\r\n                      ? \"3px solid rgb(255, 0, 64)\"\r\n                      : \"3px solid transparent\",\r\n                }}\r\n                className=\"d-inline-block p-sm-4 p-3 cursor-pointer mr-4 text-title-md mb-0 user-select-none\"\r\n                onClick={() => setSection(2)}\r\n              >\r\n                Reviews\r\n              </div>\r\n              <div\r\n                style={{\r\n                  borderTop: \"3px solid transparent\",\r\n                  borderBottom:\r\n                    section === 3\r\n                      ? \"3px solid rgb(255, 0, 64)\"\r\n                      : \"3px solid transparent\",\r\n                }}\r\n                className=\"d-inline-block p-sm-4 p-3 cursor-pointer mr-4 text-title-md mb-0 user-select-none\"\r\n                onClick={() => setSection(3)}\r\n              >\r\n                Comments\r\n              </div>\r\n            </SimpleBar>\r\n          </div>\r\n        </div>\r\n        {section === 0 ? (\r\n          <Wishlist\r\n            ratings={ratings}\r\n            refreshProfile={() => setRefreshProfile(!refreshProfile)}\r\n            movies={profileData.wishlist}\r\n            owner={user._id === profileData._id}\r\n            user={user}\r\n          ></Wishlist>\r\n        ) : section === 1 ? (\r\n          <Watchedlist\r\n            ratings={ratings}\r\n            movies={profileData.watchedlist}\r\n          ></Watchedlist>\r\n        ) : section === 2 ? (\r\n          <Reviews\r\n            refreshReviews={() => setRefreshReviews(!refreshReviews)}\r\n            user={user}\r\n            ratings={ratings}\r\n            reviews={reviews}\r\n            owner={user._id === profileData._id}\r\n          ></Reviews>\r\n        ) : section === 3 ? (\r\n          <Comments\r\n            refreshComments={() => setRefreshComments(!refreshComments)}\r\n            user={user}\r\n            ratings={ratings}\r\n            comments={comments}\r\n            owner={user._id === profileData._id}\r\n          ></Comments>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    ratings: state.ratings,\r\n    publicUsers: state.publicUsers,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Profile);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport store from \"../store/store\";\r\nimport { LoginWithToken } from \"../server/DatabaseApi\";\r\nimport history from \"../History\";\r\n\r\nconst PrivateRoute = ({ Component, bearerPath, user, ...rest }) => {\r\n  const successPath = rest.computedMatch.url;\r\n  const [validity, setValidity] = useState({ ready: false, valid: false });\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let token = localStorage.getItem(\"movies_user_token\");\r\n      if (token === null || !token.length) {\r\n        setValidity((prev) => Object.assign({}, prev, { ready: true }));\r\n      } else {\r\n        let data = await LoginWithToken({\r\n          token,\r\n        });\r\n        if (!data.error) {\r\n          if (data.role === \"Administrator\") {\r\n            setValidity((prev) =>\r\n              Object.assign({}, prev, { ready: true, valid: true })\r\n            );\r\n          } else {\r\n            store.dispatch({\r\n              type: \"SET_NOTIFICATION\",\r\n              notification: {\r\n                title: \"Your role is not admin\",\r\n                message: \"Contact website administrator to change your role\",\r\n                type: \"failure\",\r\n              },\r\n            });\r\n            history.push(\"/\");\r\n          }\r\n        } else {\r\n          history.push(\"/\");\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Your role is not admin\",\r\n              message: \"Only website admins can access this page\",\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        }\r\n      }\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  return validity.ready ? (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return validity.valid ? (\r\n          <Component {...props}></Component>\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: bearerPath, state: { successPath: successPath } }}\r\n          ></Redirect>\r\n        );\r\n      }}\r\n    ></Route>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { GetActiveAnnouncements } from \"../../server/DatabaseApi\";\r\nimport { BsX } from \"react-icons/bs\";\r\n\r\nconst Announcement = () => {\r\n  const [announcements, setAnnouncements] = useState([]);\r\n\r\n  let notClosedAnnouncement = false;\r\n\r\n  let closedAnnouncements = localStorage.getItem(\"closed_movies_announcements\");\r\n\r\n  if (closedAnnouncements) {\r\n    closedAnnouncements = JSON.parse(closedAnnouncements);\r\n  } else {\r\n    closedAnnouncements = [];\r\n  }\r\n\r\n  for (let x of announcements) {\r\n    if (!closedAnnouncements.includes(x.description)) {\r\n      notClosedAnnouncement = x;\r\n      break;\r\n    }\r\n  }\r\n\r\n  const [closed, setClosed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let data = await GetActiveAnnouncements();\r\n      if (!data.error) {\r\n        if (data.length) {\r\n          setAnnouncements(data);\r\n        }\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, []);\r\n\r\n  return notClosedAnnouncement &&\r\n    notClosedAnnouncement.description &&\r\n    !closed ? (\r\n    <div\r\n      className={`row p-2 position-relative no-gutters justify-content-center ${\r\n        notClosedAnnouncement.type === \"Warning\"\r\n          ? \"bg-warning\"\r\n          : notClosedAnnouncement.type === \"Information\"\r\n          ? \"bg-primary\"\r\n          : notClosedAnnouncement.type === \"Error\"\r\n          ? \"bg-danger\"\r\n          : \"\"\r\n      }`}\r\n    >\r\n      <div\r\n        onClick={() => {\r\n          setClosed(true);\r\n          closedAnnouncements.push(notClosedAnnouncement.description);\r\n\r\n          localStorage.setItem(\r\n            \"closed_movies_announcements\",\r\n            JSON.stringify(closedAnnouncements)\r\n          );\r\n        }}\r\n        className=\"square-20 rounded-circle d-flex flex-center bg-white cursor-pointer scale-transition position-absolute\"\r\n        style={{ right: \"10px\", top: 0, bottom: 0, margin: \"auto\", zIndex: 5 }}\r\n      >\r\n        <BsX className=\"text-dark\"></BsX>\r\n      </div>\r\n      <div className=\"col-60 content-container text-white\">\r\n        <div className=\"row no-gutters justify-content-center\">\r\n          <div\r\n            className=\"col-auto mr-2 d-none d-md-block\"\r\n            style={{ width: \"30px\" }}\r\n          ></div>\r\n          <div className=\"col mr-2 pl-2 pl-md-0\">\r\n            <div className=\"row no-gutters justify-content-center\">\r\n              {notClosedAnnouncement.description}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-auto\" style={{ width: \"30px\" }}></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n};\r\n\r\nexport default Announcement;\r\n","import * as React from \"react\";\r\n\r\nfunction Notifications(props) {\r\n  return (\r\n    <div className=\"square-35 position-relative cursor-pointer\">\r\n      <div\r\n        className=\"position-absolute text-white\"\r\n        style={{ top: \"0px\", right: \"5px\", fontSize: \"10px\" }}\r\n      >\r\n        {props.count ? props.count : 0}\r\n      </div>\r\n      <svg viewBox=\"-11 0 512 512\" width=\"100%\" {...props}>\r\n        <path\r\n          d=\"M298.668 426.668c0 47.129-38.207 85.332-85.336 85.332S128 473.797 128 426.668c0-47.129 38.203-85.336 85.332-85.336 47.129 0 85.336 38.207 85.336 85.336zm0 0\"\r\n          fill=\"#ffa000\"\r\n        />\r\n        <path\r\n          d=\"M362.836 254.316c-72.32-10.328-128.168-72.515-128.168-147.648 0-21.336 4.562-41.578 12.648-59.95-10.921-2.558-22.27-4.05-33.984-4.05C130.988 42.668 64 109.652 64 192v59.477c0 42.218-18.496 82.07-50.945 109.503A37.235 37.235 0 000 389.332c0 20.59 16.746 37.336 37.332 37.336h352c20.59 0 37.336-16.746 37.336-37.336 0-10.922-4.758-21.27-13.27-28.543-31.488-26.644-49.75-65.324-50.562-106.473zm0 0\"\r\n          fill=\"#ffc107\"\r\n        />\r\n        <path\r\n          d=\"M490.668 106.668c0 58.91-47.758 106.664-106.668 106.664s-106.668-47.754-106.668-106.664C277.332 47.758 325.09 0 384 0s106.668 47.758 106.668 106.668zm0 0\"\r\n          fill=\"#f44336\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport { OfficialMoviesGenres, OfficialSeriesGenres } from \"../../Data\";\r\nimport history from \"../../History\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst MoviesListMinified = ({ movies, onClick }) => {\r\n  return (\r\n    <div className=\"row\">\r\n      {movies.map((x, i) => (\r\n        <div\r\n          key={`result-${i}`}\r\n          className=\"p-2 movie-card-minified\"\r\n          style={{ flexBasis: \"300px\", flexGrow: 1 }}\r\n          onClick={() => {\r\n            history.push(`/movie/${x.name ? `serie-${x.id}` : x.id}`);\r\n            onClick();\r\n          }}\r\n        >\r\n          <div className=\"row no-gutters\">\r\n            <div className=\"col-auto mr-3\">\r\n              <div className=\"row no-gutters mb-2 position-relative\">\r\n                <div\r\n                  className=\"square-70 bg-image rounded\"\r\n                  style={{\r\n                    backgroundImage: `url(${\r\n                      x.poster_path\r\n                        ? `https://image.tmdb.org/t/p/w342${x.poster_path}`\r\n                        : \"https://critics.io/img/movies/poster-placeholder.png\"\r\n                    })`,\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div\r\n                className=\"row no-gutters mb-0 cursor-pointer\"\r\n                onClick={() => history.push(`/movie/${x.id}`)}\r\n              >\r\n                <div className=\"text-truncate\">\r\n                  {x.title ? x.title : x.name}\r\n                </div>\r\n              </div>\r\n              <div className=\"row no-gutters text-muted mb-2\">\r\n                <div className=\"text-truncate\" style={{ maxWidth: \"100%\" }}>\r\n                  {x.genre_ids.length\r\n                    ? x.genre_ids\r\n                        .map((gid) => {\r\n                          let movieGenre = OfficialMoviesGenres.find(\r\n                            (g) => g.id === gid\r\n                          );\r\n                          let seriesGenre = OfficialSeriesGenres.find(\r\n                            (g) => g.id === gid\r\n                          );\r\n                          return movieGenre // movies have title, series - name\r\n                            ? movieGenre.name\r\n                            : seriesGenre\r\n                            ? seriesGenre.name\r\n                            : \"unkonwn\";\r\n                        })\r\n                        .join(\"/\")\r\n                    : \"unknown\"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(MoviesListMinified);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport history from \"../../History\";\r\nimport date from \"date-and-time\";\r\nimport { MdThumbUp, MdChatBubble } from \"react-icons/md\";\r\n\r\nconst ReviewsListMinified = ({ reviews, publicUsers, ratings }) => {\r\n  const [reviewIdOfVisibleComments, setReviewIdOfVisibleComments] = useState(\r\n    -1\r\n  );\r\n\r\n  const page = 1;\r\n\r\n  const reviewsPerPage = 8;\r\n\r\n  return reviews\r\n    .slice(\r\n      (page - 1) * reviewsPerPage,\r\n      (page - 1) * reviewsPerPage + reviewsPerPage\r\n    )\r\n    .map((x, i) => (\r\n      <div\r\n        onClick={() => history.push(`/movie/${x.movie_id}`)}\r\n        key={`review-${i}`}\r\n        className=\"row no-gutters p-2 border-bottom rounded mb-2 text-dark movie-card-minified\"\r\n      >\r\n        <div\r\n          className=\"col-sm-auto col-20 pr-4 d-none d-sm-block\"\r\n          style={{ maxWidth: \"100px\" }}\r\n        >\r\n          <div className=\"row no-gutters mb-1\">\r\n            <img\r\n              alt={ratings[x.movie_id].movie_poster}\r\n              width=\"100%\"\r\n              style={{ borderRadius: \"13px\", cursor: \"pointer\" }}\r\n              src={`https://image.tmdb.org/t/p/w154${\r\n                ratings[x.movie_id].movie_poster\r\n              }`}\r\n            ></img>\r\n          </div>\r\n        </div>\r\n        <div className=\"col d-flex flex-column\">\r\n          <div className=\"row no-gutters justify-content-between align-items-center mb-2 flex-grow-0\">\r\n            <div className=\"col-60 d-block d-sm-none mb-3\">\r\n              <div className=\"row no-gutters mb-1\">\r\n                <div className=\"col-auto pr-3\">\r\n                  <div\r\n                    className=\"square-70 rounded bg-image\"\r\n                    style={{\r\n                      backgroundImage: `url(https://image.tmdb.org/t/p/w154${\r\n                        ratings[x.movie_id].movie_poster\r\n                      })`,\r\n                    }}\r\n                  ></div>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <div className=\"row no-gutters h6 mb-0\">\r\n                    {ratings[x.movie_id].movie_title} (\r\n                    {ratings[x.movie_id].movie_release_date.substring(0, 4)}\r\n                  </div>\r\n                  <div className=\"row no-gutters text-muted\">\r\n                    <div className=\"text-truncate\">{x.movie_genres}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-60\">\r\n              <div className=\"row no-gutters justify-content-between\">\r\n                <div className=\"col-auto mb-2\">\r\n                  <div className=\"row no-gutters align-items-center\">\r\n                    <div className=\"col-auto pr-2\">\r\n                      <div\r\n                        className=\"bg-image rounded-circle square-40\"\r\n                        style={{\r\n                          backgroundImage: `url(${\r\n                            publicUsers[x.author]\r\n                              ? publicUsers[x.author].photo\r\n                              : \"\"\r\n                          })`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                      <div className=\"row no-gutters align-items-center\">\r\n                        <div className=\"col-auto mr-3 mb-0\">\r\n                          {publicUsers[x.author]\r\n                            ? publicUsers[x.author].display_name\r\n                            : \"\"}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters\">\r\n                    <span className=\"mr-2\">Posted review on</span>\r\n                    <span className=\"text-muted\">\r\n                      {date.format(new Date(x.date), \"MMM DD, YYYY\")}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row no-gutters mb-3 font-size-14 flex-grow-0\">\r\n            {x.review}\r\n          </div>\r\n          <div className=\"row no-gutters flex-grow-1 align-items-bottom\">\r\n            <div className=\"col-60 d-flex flex-column justify-content-end\">\r\n              <div className=\"row no-gutters justify-content-between align-items-center\">\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters\">\r\n                    {x.rating ? (\r\n                      <div style={{ marginBottom: \"-6px\" }}>\r\n                        <Emoji\r\n                          emoji={\r\n                            x.rating === \"excellent_rate\"\r\n                              ? \"fire\"\r\n                              : x.rating === \"good_rate\"\r\n                              ? \"heart\"\r\n                              : x.rating === \"ok_rate\"\r\n                              ? \"heavy-division-sign\"\r\n                              : \"shit\"\r\n                          }\r\n                          set=\"facebook\"\r\n                          size={24}\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-auto px-0\">\r\n                  <div className=\"row no-gutters align-items-center\">\r\n                    <div className=\"col-auto mr-2\">{x.likes.length}</div>\r\n                    <div className=\"col-auto mr-2 \">\r\n                      <MdThumbUp\r\n                        fontSize=\"24px\"\r\n                        className=\"text-green\"\r\n                      ></MdThumbUp>\r\n                    </div>\r\n                    <div className=\"col-auto mr-2\">{x.comments.length}</div>\r\n                    <div className=\"col-auto\">\r\n                      <MdChatBubble\r\n                        onClick={() => {\r\n                          setReviewIdOfVisibleComments(\r\n                            reviewIdOfVisibleComments === x._id ? -1 : x._id\r\n                          );\r\n                        }}\r\n                        fontSize=\"24px\"\r\n                        className=\"text-orange scale-transition cursor-pointer\"\r\n                      ></MdChatBubble>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(ReviewsListMinified);\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport Select from \"../utility/Select\";\r\nimport history from \"../../History\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport { SearchReviews } from \"../../server/DatabaseApi\";\r\nimport { SearchMovies, SearchSeries } from \"../../server/MoviesApi\";\r\nimport MoviesListMinified from \"./MoviesListMinified\";\r\nimport ReviewsListMinified from \"./ReviewsListMinified\";\r\n\r\nconst SearchBox = (props) => {\r\n  const categories = [\"All\", \"Movies\", \"Series\", \"Reviews\"];\r\n  const category = props.search.category;\r\n  const settings = props.settings;\r\n  const [query, setQuery] = useState(\"\");\r\n  const [reviews, setReviews] = useState([]);\r\n  const [movies, setMovies] = useState([]);\r\n  const [series, setSeries] = useState([]);\r\n  const [populateBox, setPopulateBox] = useState(false);\r\n  const queryCleaned = useRef(false);\r\n\r\n  const onFail = () => {\r\n    store.dispatch({\r\n      type: \"SET_NOTIFICATION\",\r\n      notification: {\r\n        title: \"Error\",\r\n        message: \"You need to provide valid api key in admin dashboard\",\r\n        type: \"failure\",\r\n      },\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (query) {\r\n        setPopulateBox(true);\r\n        queryCleaned.current = false;\r\n        if (category === \"Reviews\" || category === \"All\") {\r\n          let reviews = await SearchReviews(query);\r\n          if (!reviews.error) {\r\n            if (!queryCleaned.current) {\r\n              setReviews(reviews.slice(0, 5));\r\n            }\r\n          }\r\n        } else {\r\n          setReviews([]);\r\n        }\r\n\r\n        if (category === \"Movies\" || category === \"All\") {\r\n          let movies = await SearchMovies(query, settings.movies_api_key);\r\n\r\n          if (movies.results) {\r\n            if (!queryCleaned.current) {\r\n              setMovies(movies.results.slice(0, 10));\r\n            }\r\n          } else {\r\n            onFail();\r\n          }\r\n        } else {\r\n          setMovies([]);\r\n        }\r\n        if (category === \"Series\" || category === \"All\") {\r\n          let series = await SearchSeries(query, settings.movies_api_key);\r\n          if (series.results) {\r\n            if (!queryCleaned.current) {\r\n              setSeries(series.results.slice(0, 10));\r\n            }\r\n          } else {\r\n            onFail();\r\n          }\r\n        } else {\r\n          setSeries([]);\r\n        }\r\n      } else {\r\n        queryCleaned.current = true;\r\n        setPopulateBox(false);\r\n        setMovies([]);\r\n        setSeries([]);\r\n        setReviews([]);\r\n      }\r\n    }\r\n    getData();\r\n  }, [query, category]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <div className=\"row no-gutters w-100\">\r\n      <div className=\"col-60 position-relative\">\r\n        <div className=\"row no-gutters\">\r\n          <Select\r\n            popoverClass=\"col-auto\"\r\n            items={categories}\r\n            onSelect={(index) =>\r\n              store.dispatch({\r\n                type: \"UPDATE_SEARCH\",\r\n                search: { category: categories[index] },\r\n              })\r\n            }\r\n            popoverWidth={\"150px\"}\r\n            className=\"col-auto input-prepend-select\"\r\n            btnName={category}\r\n          ></Select>\r\n          <div className=\"col position-relative\">\r\n            <input\r\n              onBlur={async () => {\r\n                await new Promise((resolve) => setTimeout(resolve, 500));\r\n                setPopulateBox(false);\r\n              }}\r\n              onFocus={async () => setPopulateBox(true)}\r\n              value={query}\r\n              onKeyUp={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  setQuery(\"\");\r\n                  store.dispatch({\r\n                    type: \"UPDATE_SEARCH\",\r\n                    search: { query },\r\n                  });\r\n                  history.push(\"/search\");\r\n                }\r\n              }}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setQuery(e.target.value);\r\n              }}\r\n              type=\"text\"\r\n              spellCheck={false}\r\n              className={`w-100 input`}\r\n            ></input>\r\n            <BsSearch\r\n              onClick={() => history.push(\"/search\")}\r\n              fontSize=\"24px\"\r\n              className=\"position-absolute text-white cursor-pointer\"\r\n              style={{ top: 0, bottom: 0, right: \"20px\", margin: \"auto\" }}\r\n            ></BsSearch>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"row no-gutters position-absolute px-3 bg-white w-100 overflow-auto\"\r\n          style={{ top: `50px`, left: 0, maxHeight: \"500px\" }}\r\n        >\r\n          <div className=\"col-60\">\r\n            {populateBox ? (\r\n              <React.Fragment>\r\n                {movies.length ? (\r\n                  <React.Fragment>\r\n                    <div className=\"row no-gutters pt-3 pb-1 font-weight-bold\">\r\n                      Movies ({movies.length})\r\n                    </div>\r\n                    <MoviesListMinified\r\n                      onClick={() => setQuery(\"\")}\r\n                      movies={movies}\r\n                    ></MoviesListMinified>\r\n                  </React.Fragment>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {series.length ? (\r\n                  <React.Fragment>\r\n                    <div className=\"row no-gutters pt-3 pb-1 font-weight-bold\">\r\n                      Series ({series.length})\r\n                    </div>\r\n                    <MoviesListMinified\r\n                      movies={series}\r\n                      onClick={() => setQuery(\"\")}\r\n                    ></MoviesListMinified>\r\n                  </React.Fragment>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {reviews.length ? (\r\n                  <React.Fragment>\r\n                    <div className=\"row no-gutters pt-3 pb-1 font-weight-bold\">\r\n                      Reviews ({reviews.length})\r\n                    </div>\r\n                    <ReviewsListMinified\r\n                      reviews={reviews}\r\n                      onClick={() => setQuery(\"\")}\r\n                    ></ReviewsListMinified>\r\n                  </React.Fragment>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </React.Fragment>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"col-60\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    search: state.search,\r\n    settings: state.settings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(SearchBox);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Popover from \"../utility/Popover\";\r\nimport { BsChevronDown, BsXCircle } from \"react-icons/bs\";\r\nimport history from \"../../History\";\r\nimport store from \"../../store/store\";\r\nimport Logo from \"../../images/Logo\";\r\nimport Announcement from \"./Announcement\";\r\nimport {\r\n  GetUserNotifications,\r\n  DeleteUserNotification,\r\n} from \"../../server/DatabaseApi\";\r\nimport Notifications from \"../../images/Notifications\";\r\nimport { withResizeDetector } from \"react-resize-detector\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { MdMenu } from \"react-icons/md\";\r\nimport date from \"date-and-time\";\r\n\r\nconst Navbar = (props) => {\r\n  const user = props.user;\r\n  const dashboardMenuOpened = props.dashboardMenuOpened;\r\n  const height = props.height;\r\n\r\n  const [scrolledToTop, setScrolledTopTop] = useState(true);\r\n  const lastScroll = useRef(100);\r\n  const [direction, setDirection] = useState(\"up\");\r\n  const [notifications, setNotifications] = useState([]);\r\n  const profilePopover = useRef(null);\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    function handleScrolling() {\r\n      let scrollY = window.scrollY;\r\n      if (lastScroll.current < scrollY) {\r\n        setDirection(\"down\");\r\n      } else {\r\n        setDirection(\"up\");\r\n      }\r\n      lastScroll.current = scrollY;\r\n      if (scrollY === 0) {\r\n        setScrolledTopTop(true);\r\n      } else {\r\n        setScrolledTopTop(false);\r\n      }\r\n    }\r\n    window.addEventListener(\"scroll\", handleScrolling);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScrolling);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (user.notifications) {\r\n        let data = await GetUserNotifications(user.notifications);\r\n        if (!data.error) {\r\n          setNotifications(\r\n            data.map((x) => Object.assign({}, x, { seen: false }))\r\n          );\r\n        }\r\n      }\r\n    }\r\n    getData();\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (height) {\r\n      store.dispatch({ type: \"SET_HEIGHT\", height });\r\n    }\r\n  }, [height]);\r\n\r\n  return location.pathname !== \"/login\" &&\r\n    location.pathname !== \"/signup\" &&\r\n    location.pathname !== \"/forgot-password\" &&\r\n    !location.pathname.includes(\"/reset-password\") ? (\r\n    <div\r\n      className=\"col-60 px-0\"\r\n      style={{\r\n        position: \"sticky\",\r\n        zIndex: 59,\r\n        transition: \"top 0.5s\",\r\n        top: direction === \"up\" ? \"0px\" : `-${height}px`,\r\n        left: 0,\r\n        right: 0,\r\n      }}\r\n    >\r\n      <Announcement></Announcement>\r\n      <div\r\n        className={`bg-transition row no-gutters justify-content-center${\r\n          !scrolledToTop ? \" bg-root\" : \"\"\r\n        }`}\r\n      >\r\n        <div\r\n          className={`col-60${\r\n            location.pathname !== \"/admin\" ? \" content-container\" : \"\"\r\n          }`}\r\n        >\r\n          <div className=\"row no-gutters justify-content-between px-3 py-2 align-items-center flex-nowrap\">\r\n            <div className=\"col-auto d-none d-sm-block pr-sm-5 pr-3 text-white pl-sm-3 pl-2\">\r\n              <div\r\n                className=\"row no-gutters align-items-end cursor-pointer\"\r\n                onClick={() => history.push(\"/\")}\r\n              >\r\n                <div className=\"square-50 mr-2\">\r\n                  <Logo></Logo>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters h4 logo\">CozyPotato</div>\r\n                  <div\r\n                    className=\"row no-gutters justify-content-end text-light\"\r\n                    style={{ fontSize: \"13px\", marginTop: \"-14px\" }}\r\n                  >\r\n                    Community\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"d-block d-sm-none cursor-pointer\"\r\n              onClick={() => history.push(\"/\")}\r\n            >\r\n              <div className=\"square-40 mx-auto\">\r\n                <Logo></Logo>\r\n              </div>\r\n              <div className=\"col-auto text-white\">\r\n                <div className=\"row no-gutters logo h5\">CozyPotato</div>\r\n                <div\r\n                  className=\"row no-gutters justify-content-end text-light\"\r\n                  style={{ fontSize: \"10px\", marginTop: \"-10px\" }}\r\n                >\r\n                  Community\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col pr-3 d-none d-md-block\">\r\n              <SearchBox navbarHeight={height}></SearchBox>\r\n            </div>\r\n            <div className=\"col-auto\">\r\n              <div className=\"row no-gutters\">\r\n                {user.display_name ? (\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Popover\r\n                        content={(w) => (\r\n                          <div\r\n                            className=\"container-fluid rounded px-0 overflow-auto\"\r\n                            style={{\r\n                              maxWidth: \"400px\",\r\n                              width: \"100%\",\r\n                              maxHeight: \"450px\",\r\n                            }}\r\n                          >\r\n                            {notifications.length ? (\r\n                              notifications.map((x, i) => (\r\n                                <div\r\n                                  key={`notificaiton-${i}`}\r\n                                  className={`row no-gutters p-3${\r\n                                    i !== notifications.length - 1\r\n                                      ? \" border-bottom\"\r\n                                      : \"\"\r\n                                  }`}\r\n                                >\r\n                                  <div className=\"col-60 text-left mb-1 font-weight-bold\">\r\n                                    <div className=\"row no-gutters\">\r\n                                      <div className=\"col mr-3\">\r\n                                        {x.subject}\r\n                                      </div>\r\n                                      <div className=\"col-auto text-left text-primary-custom\">\r\n                                        <small>\r\n                                          {date.format(\r\n                                            new Date(x.start_date),\r\n                                            \"MMM DD, YYYY\"\r\n                                          )}\r\n                                        </small>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"col-60 text-left font-size-13\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                      <div className=\"col mr-3 text-break\">\r\n                                        {x.description}\r\n                                      </div>\r\n                                      <div className=\"col-auto\">\r\n                                        <BsXCircle\r\n                                          onClick={async () => {\r\n                                            let res = await DeleteUserNotification(\r\n                                              x._id,\r\n                                              user._id\r\n                                            );\r\n                                            if (!res.error) {\r\n                                              let prevNotifications = store.getState()\r\n                                                .user.notifications;\r\n                                              let delIndex = prevNotifications.findIndex(\r\n                                                (n) => n === x._id\r\n                                              );\r\n                                              if (delIndex !== -1) {\r\n                                                prevNotifications.splice(\r\n                                                  delIndex,\r\n                                                  1\r\n                                                );\r\n                                              }\r\n                                              store.dispatch({\r\n                                                type: \"UPDATE_USER\",\r\n                                                userProperty: {\r\n                                                  notifications: prevNotifications,\r\n                                                },\r\n                                              });\r\n                                            }\r\n                                          }}\r\n                                          fontSize=\"26px\"\r\n                                          className=\"cursor-pointer notification-close-icon\"\r\n                                        ></BsXCircle>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              ))\r\n                            ) : (\r\n                              <div className=\"row no-gutters flex-center p-4\">\r\n                                You don't have notifications right now\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      >\r\n                        <div className=\"col-auto\">\r\n                          <Notifications\r\n                            count={notifications.length}\r\n                          ></Notifications>\r\n                        </div>\r\n                      </Popover>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <div className=\"col-auto text-white\">\r\n                  {user.display_name ? (\r\n                    <div className=\"row no-gutters align-items-center\">\r\n                      <Popover\r\n                        content={(w) => (\r\n                          <div\r\n                            style={{\r\n                              borderRadius: \"4px\",\r\n                              overflow: \"hidden\",\r\n                              minWidth: `${w}px`,\r\n                            }}\r\n                          >\r\n                            {user.role === \"Administrator\" ? (\r\n                              <div\r\n                                className=\"popover-item border-bottom\"\r\n                                onClick={() => {\r\n                                  profilePopover.current.click();\r\n                                  history.push(`/admin`);\r\n                                }}\r\n                              >\r\n                                Administration\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                            <div\r\n                              className=\"popover-item border-bottom\"\r\n                              onClick={() => {\r\n                                profilePopover.current.click();\r\n                                history.push(`/profile/${user._id}`);\r\n                              }}\r\n                            >\r\n                              My Profile\r\n                            </div>\r\n                            <div\r\n                              className=\"popover-item border-bottom\"\r\n                              onClick={() => {\r\n                                profilePopover.current.click();\r\n                                history.push(`/profile/${user._id}/2`);\r\n                              }}\r\n                            >\r\n                              My Reviews\r\n                            </div>\r\n                            <div\r\n                              className=\"popover-item border-bottom\"\r\n                              onClick={() => {\r\n                                profilePopover.current.click();\r\n                                history.push(`/profile/${user._id}/0`);\r\n                              }}\r\n                            >\r\n                              My Wishlist\r\n                            </div>\r\n                            <div\r\n                              className=\"popover-item\"\r\n                              onClick={() => {\r\n                                profilePopover.current.click();\r\n                                localStorage.removeItem(\"movies_user_token\");\r\n                                store.dispatch({\r\n                                  type: \"SET_USER\",\r\n                                  user: {\r\n                                    first_name: \"\",\r\n                                    last_name: \"\",\r\n                                    display_name: \"\",\r\n                                    photo: \"\",\r\n                                    token: \"\",\r\n                                    email: \"\",\r\n                                    ratings: {},\r\n                                    reviews: [],\r\n                                    wishlist: [],\r\n                                    watchedlist: [],\r\n                                    notifications: [],\r\n                                  },\r\n                                });\r\n                                history.push(\"/\");\r\n                              }}\r\n                            >\r\n                              Logout\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      >\r\n                        <div className=\"col-60\" ref={profilePopover}>\r\n                          <div className=\"row no-gutters align-items-center cursor-pointer\">\r\n                            <div\r\n                              className=\"col-auto mr-2 rounded-circle square-40 bg-image\"\r\n                              style={{\r\n                                backgroundImage: `url(${user.photo})`,\r\n                                border: \"1px solid white\",\r\n                              }}\r\n                            ></div>\r\n                            <div className=\"col-auto mr-2 d-none d-sm-block\">\r\n                              <div\r\n                                className=\"text-truncate\"\r\n                                style={{ maxWidth: \"120px\" }}\r\n                              >\r\n                                {user.display_name}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-auto user-select-none\">\r\n                              <BsChevronDown fontSize=\"14px\"></BsChevronDown>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Popover>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"row no-gutters pr-sm-3 pr-2 align-items-center\">\r\n                      <div\r\n                        className=\"col-auto cursor-pointer fb-btn\"\r\n                        onClick={() => {\r\n                          history.push(\"/login\");\r\n                        }}\r\n                      >\r\n                        Login\r\n                      </div>\r\n                      <div\r\n                        className=\"col-auto cursor-pointer fb-btn\"\r\n                        onClick={() => history.push(\"/signup\")}\r\n                      >\r\n                        Signup\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {location.pathname === \"/admin\" ? (\r\n                  <MdMenu\r\n                    className=\"text-white col-auto d-block d-lg-none cursor-pointer\"\r\n                    fontSize=\"34px\"\r\n                    onClick={() =>\r\n                      store.dispatch({\r\n                        type: \"SET_DASHBOARD_MENU_OPENED\",\r\n                        isOpened: !dashboardMenuOpened,\r\n                      })\r\n                    }\r\n                  ></MdMenu>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    search: state.search,\r\n    dashboardMenuOpened: state.dashboardMenuOpened,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default withResizeDetector(connect(mapp)(Navbar));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport history from \"../../History\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  FaTwitter,\r\n  FaFacebookF,\r\n  FaInstagram,\r\n  FaLinkedinIn,\r\n} from \"react-icons/fa\";\r\n\r\nconst Footer = ({ user, settings }) => {\r\n  const menuItems = [\r\n    { name: \"Home\", path: \"/\", condition: true },\r\n    {\r\n      name: \"My Wishlist\",\r\n      condition: user.display_name,\r\n      path: user._id ? `/profile/${user._id}/0` : \"/login\",\r\n    },\r\n    {\r\n      condition: user.display_name,\r\n      name: \"My Reviews\",\r\n      path: user._id ? `/profile/${user._id}/2` : \"/login\",\r\n    },\r\n    { name: \"About Us\", path: \"/\", condition: true },\r\n    { name: \"Contact\", path: \"/\", condition: true },\r\n  ];\r\n\r\n  const socialIcons = [\r\n    { icon: FaFacebookF, path: settings.FacebookLink },\r\n    { icon: FaInstagram, path: settings.InstagramLink },\r\n    { icon: FaLinkedinIn, path: settings.LinkedinLink },\r\n    { icon: FaTwitter, path: settings.TwitterLink },\r\n  ];\r\n\r\n  const secodaryItems = [\r\n    { name: \"Privacy policy\", path: \"/privacy-policy\" },\r\n    { name: \"Cookies Policy\", path: \"/cookies-policy\" },\r\n    { name: \"Terms And Conditions\", path: \"/terms-and-conditions\" },\r\n  ];\r\n\r\n  const location = useLocation();\r\n\r\n  return location.pathname !== \"/login\" &&\r\n    location.pathname !== \"/signup\" &&\r\n    location.pathname !== \"/forgot-password\" &&\r\n    !location.pathname.includes(\"/reset-password\") ? (\r\n    <div className=\"row no-gutters justify-content-center bg-over-root text-muted\">\r\n      <div\r\n        className={`px-sm-5 px-4 py-4 col-60${\r\n          location.pathname !== \"/admin\" ? \" content-container\" : \"\"\r\n        }`}\r\n      >\r\n        <div className=\"row no-gutters justify-content-between align-items-center font-size-16\">\r\n          <div className=\"col-auto mb-2\">\r\n            <div className=\"row no-gutters\">\r\n              {menuItems\r\n                .filter((x) => x.condition)\r\n                .map((x, i) => (\r\n                  <div\r\n                    key={`footer-item-${i}`}\r\n                    className=\"col-auto btn-tertiary text-muted-light\"\r\n                    onClick={() => history.push(x.path)}\r\n                  >\r\n                    {x.name}\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-auto col-60 px-3 mb-2\">\r\n            <div className=\"row no-gutters justify-content-center justify-content-md-start\">\r\n              {socialIcons.map((x, i) => (\r\n                <div\r\n                  key={`social-icon-${i}`}\r\n                  className={`col-auto scale-transition cursor-pointer mr-${\r\n                    i === socialIcons.length - 1 ? \"0\" : \"2\"\r\n                  }`}\r\n                >\r\n                  <div\r\n                    className=\"square-40 rounded-circle bg-white d-flex flex-center\"\r\n                    onClick={() => {\r\n                      window.open(x.path);\r\n                    }}\r\n                  >\r\n                    <x.icon fontSize=\"24px\" className=\"text-dark\"></x.icon>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters justify-content-md-between justify-content-center\">\r\n          <div className=\"col-auto px-3\">©2020 CozyPotato, Inc.</div>\r\n          <div className=\"col-auto px-3\">\r\n            <div className=\"row no-gutters\">\r\n              {secodaryItems.map((x, i) => (\r\n                <React.Fragment key={`footer-item-${i}`}>\r\n                  <div\r\n                    className=\"col-auto link-primary d-sm-block d-none\"\r\n                    onClick={() => history.push(x.path)}\r\n                  >\r\n                    {x.name}\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto link-primary d-block d-sm-none\"\r\n                    onClick={() => history.push(x.path)}\r\n                  >\r\n                    {x.name.split(\" \")[0]}\r\n                  </div>\r\n                  {i !== secodaryItems.length - 1 && (\r\n                    <div className=\"px-2\">|</div>\r\n                  )}\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    settings: state.settings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Footer);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { GetTvShow, GetCredits } from \"../../server/MoviesApi\";\r\nimport ReactionButton from \"./ReactionButton\";\r\nimport date from \"date-and-time\";\r\nimport Modal from \"../utility/Modal\";\r\nimport TrailerPlayer from \"./TrailerPlayer\";\r\nimport MovieReviews from \"./MovieReviews\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormatDuration } from \"../../utilities/Functions\";\r\nimport store from \"../../store/store\";\r\nimport { AddViewToMovie } from \"../../server/DatabaseApi\";\r\nimport WishlistButton from \"./WishlistButton\";\r\nimport Footer from \"./Footer\";\r\nimport { FaRegPaperPlane } from \"react-icons/fa\";\r\nimport history from \"../../History\";\r\nimport { BsPlayFill } from \"react-icons/bs\";\r\n\r\nconst Serie = (props) => {\r\n  const movieId = props.match.params.movieId;\r\n  const ratings = props.ratings;\r\n  const apiKey = props.settings.movies_api_key;\r\n  //user will be needed to write comments on reviews and to add reviews\r\n  const user = props.user;\r\n\r\n  const [addReviewTrigger, setAddReviewTrigger] = useState(-1);\r\n\r\n  const [movie, setMovie] = useState({\r\n    poster_path: \"\",\r\n    genres: [],\r\n    title: \"\",\r\n    overview: \"\",\r\n    director: \"\",\r\n    cast: [],\r\n    runtime: 0,\r\n    release_date: \"\",\r\n    id: \"\",\r\n  });\r\n\r\n  //boolean variable to display trailer modal or not.\r\n  const [openTrailer, setOpenTrailer] = useState(false);\r\n\r\n  useEffect(() => {\r\n    //check if movie fetched from api\r\n    if (movie.title) {\r\n      AddViewToMovie(movie);\r\n    }\r\n  }, [movie.title]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    async function getData() {\r\n      if (movieId && apiKey) {\r\n        let data = await GetTvShow(movieId, apiKey);\r\n        setMovie((prev) =>\r\n          Object.assign(\r\n            {},\r\n            prev,\r\n            Object.assign({}, data, {\r\n              title: data.name,\r\n              release_date: data.first_air_date,\r\n            })\r\n          )\r\n        );\r\n        let credits = await GetCredits(movieId, apiKey);\r\n        let directorObj = credits.crew\r\n          ? credits.crew.find((x) => x.job === \"Director\")\r\n          : null;\r\n        let director = directorObj ? directorObj.name : \"unknown\";\r\n        let cast = credits.cast ? credits.cast.map((x) => x.name) : [];\r\n        data.director = director;\r\n        data.cast = cast;\r\n        setMovie((prev) => Object.assign({}, prev, { director, cast }));\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, [movieId, apiKey]);\r\n\r\n  // const director = movie.credits.crew.find((x) => x.job === \"Director\");\r\n\r\n  return (\r\n    <div className=\"row no-gutters justify-content-center bg-movie-over-root position-relative\">\r\n      <div\r\n        className=\"position-absolute w-100 d-block d-lg-none\"\r\n        style={{\r\n          top: 0,\r\n          left: 0,\r\n        }}\r\n      >\r\n        <div\r\n          className=\"position-relative\"\r\n          style={{ height: window.innerHeight, overflow: \"hidden\" }}\r\n        >\r\n          <div className=\"position-relative\">\r\n            <img\r\n              alt={movie.poster_path}\r\n              width=\"100%\"\r\n              src={`https://image.tmdb.org/t/p/w342/${movie.poster_path}`}\r\n            ></img>\r\n            <div\r\n              className=\"position-absolute w-100 h-100\"\r\n              style={{\r\n                background: \"linear-gradient(rgba(0, 0, 0, 0.3) 90%, black)\",\r\n                top: 0,\r\n                left: 0,\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <div\r\n            className=\"position-absolute w-100 h-100\"\r\n            style={{\r\n              background: \"linear-gradient(rgb(0 0 0 / 30%), black)\",\r\n              top: 0,\r\n              left: 0,\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <Modal open={openTrailer} onClose={() => setOpenTrailer(false)}>\r\n        <TrailerPlayer\r\n          movieId={movieId}\r\n          onEnded={() => setOpenTrailer(false)}\r\n        ></TrailerPlayer>\r\n      </Modal>\r\n      <div className=\"col-60 text-white px-md-5 py-5 px-4 content-container\">\r\n        <div className=\"row no-gutters py-5 mb-5\">\r\n          <div className=\"col-auto mr-5 d-none d-lg-block\">\r\n            <div className=\"w-100 position-relative\">\r\n              <img\r\n                alt={movie.poster_path}\r\n                style={{ borderRadius: \"25px\" }}\r\n                width=\"300px\"\r\n                src={`https://image.tmdb.org/t/p/w342/${movie.poster_path}`}\r\n              ></img>\r\n              <div\r\n                onClick={() => history.push(`/movie/${movie.id}`)}\r\n                className=\"col-60 h-100 text-white d-flex flex-center img-cover cursor-pointer\"\r\n                style={{\r\n                  left: 0,\r\n                  top: 0,\r\n                  position: \"absolute\",\r\n                  zIndex: 4,\r\n                  borderRadius: \"13px\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"square-60 rounded-circle d-flex flex-center play-btn\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    setOpenTrailer(true);\r\n                  }}\r\n                >\r\n                  <BsPlayFill\r\n                    style={{\r\n                      fontSize: \"35px\",\r\n                      color: \"white\",\r\n                      marginRight: \"-5px\",\r\n                    }}\r\n                  ></BsPlayFill>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col position-relative\">\r\n            <div\r\n              className=\"row no-gutters position-relative\"\r\n              style={{ zIndex: 5 }}\r\n            >\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters h5\">\r\n                  {movie.title} ({movie.release_date.substring(0, 4)})\r\n                </div>\r\n                <div className=\"row no-gutters text-movie-muted mb-2\">\r\n                  <div className=\"text-truncate\">\r\n                    {movie.genres.map((x) => x.name).join(\"/\")}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters mb-4\">\r\n                  <div className=\"col-auto font-weight-500 mr-2\">Duration:</div>\r\n                  <div className=\"col-auto text-movie-muted\">\r\n                    {FormatDuration(movie.runtime)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters mb-4 text-light\">\r\n                  {movie.overview}\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters\">\r\n                      <div className=\"col-auto mr-2\">Director:</div>\r\n                      <div className=\"col-auto mr-5 text-movie-muted\">\r\n                        {movie.director ? movie.director : \"unknown\"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters\">\r\n                      <div className=\"col-auto mr-2\">Cast:</div>\r\n                      <div className=\"col\">\r\n                        <div className=\"row no-gutters\">\r\n                          <div\r\n                            className=\"text-clamp-2 text-muted-light cursor-pointer\"\r\n                            onClick={(e) => {\r\n                              if (\r\n                                e.currentTarget.classList.contains(\r\n                                  \"text-clamp-2\"\r\n                                )\r\n                              ) {\r\n                                e.currentTarget.classList.remove(\r\n                                  \"text-clamp-2\"\r\n                                );\r\n                              } else {\r\n                                e.currentTarget.classList.add(\"text-clamp-2\");\r\n                              }\r\n                            }}\r\n                          >\r\n                            {movie.cast.join(\"    \")}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <ReactionButton\r\n                    selected={\r\n                      user.ratings[movie.id]\r\n                        ? user.ratings[movie.id].rate_type === \"excellent_rate\"\r\n                        : false\r\n                    }\r\n                    movie={movie}\r\n                    emoji=\"fire\"\r\n                    className=\"mr-2 mb-2\"\r\n                    value={\r\n                      ratings[movie.id] ? ratings[movie.id].excellent_rate : 0\r\n                    }\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    selected={\r\n                      user.ratings[movie.id]\r\n                        ? user.ratings[movie.id].rate_type === \"good_rate\"\r\n                        : false\r\n                    }\r\n                    movie={movie}\r\n                    emoji=\"heart\"\r\n                    className=\"mr-2 mb-2\"\r\n                    value={ratings[movie.id] ? ratings[movie.id].good_rate : 0}\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    selected={\r\n                      user.ratings[movie.id]\r\n                        ? user.ratings[movie.id].rate_type === \"ok_rate\"\r\n                        : false\r\n                    }\r\n                    movie={movie}\r\n                    className=\"mr-2 mb-2\"\r\n                    emoji=\"heavy_division_sign\"\r\n                    value={ratings[movie.id] ? ratings[movie.id].ok_rate : 0}\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    emoji=\"shit\"\r\n                    value={ratings[movie.id] ? ratings[movie.id].bad_rate : 0}\r\n                    selected={\r\n                      user.ratings[movie.id]\r\n                        ? user.ratings[movie.id].rate_type === \"bad_rate\"\r\n                        : false\r\n                    }\r\n                    movie={movie}\r\n                  ></ReactionButton>\r\n                </div>\r\n                <div className=\"row no-gutters mb-5\">\r\n                  <div className=\"col-auto mr-2\">Release date:</div>\r\n                  <div className=\"col-auto text-movie-muted\">\r\n                    {date.format(new Date(movie.release_date), \"MMMM DD, YYYY\")}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters justify-content-center justify-content-md-start\">\r\n                  <div\r\n                    className=\"col-auto mr-3 btn-custom btn-custom-primary btn-small\"\r\n                    onClick={() => {\r\n                      if (!user.token) {\r\n                        store.dispatch({\r\n                          type: \"SET_NOTIFICATION\",\r\n                          notification: {\r\n                            title: \"Login required\",\r\n                            message: \"You need to login to write review.\",\r\n                            type: \"failure\",\r\n                          },\r\n                        });\r\n                      } else {\r\n                        setAddReviewTrigger(addReviewTrigger + 1);\r\n                      }\r\n                    }}\r\n                  >\r\n                    Add Review\r\n                    <FaRegPaperPlane\r\n                      fontSize=\"20px\"\r\n                      className=\"ml-2\"\r\n                    ></FaRegPaperPlane>\r\n                  </div>\r\n                  <WishlistButton movie={movie} user={user}></WishlistButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <MovieReviews\r\n          movie={movie}\r\n          user={user}\r\n          addReviewTrigger={addReviewTrigger}\r\n        ></MovieReviews>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <Footer></Footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    ratings: state.ratings,\r\n    settings: state.settings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Serie);\r\n","import React, { useEffect } from \"react\";\r\nimport FileViewer from \"react-file-viewer\";\r\nimport { default as doc } from \"../../documents/CookiesPolicy.docx\";\r\n\r\nconst CookiesPolicy = () => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row no-gutters px-0\" style={{ minHeight: \"800px\" }}>\r\n      <div className=\"col-60 py-5 text-dark\">\r\n        <FileViewer\r\n          fileType={\"docx\"}\r\n          filePath={doc}\r\n          errorComponent={() => <div></div>}\r\n          onError={() => console.log(\"error doc\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CookiesPolicy;\r\n","import React, { useEffect } from \"react\";\r\nimport FileViewer from \"react-file-viewer\";\r\nimport { default as doc } from \"../../documents/TermsAndConditions.docx\";\r\n\r\nconst TermsAndConditions = () => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row no-gutters px-0\" style={{ minHeight: \"800px\" }}>\r\n      <div className=\"col-60 py-5 text-dark\">\r\n        <FileViewer\r\n          fileType={\"docx\"}\r\n          filePath={doc}\r\n          errorComponent={() => <div></div>}\r\n          onError={() => console.log(\"error doc\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TermsAndConditions;\r\n","import React, { useEffect } from \"react\";\r\nimport FileViewer from \"react-file-viewer\";\r\nimport { default as doc } from \"../../documents/PrivacyPolicy.docx\";\r\n\r\nconst PrivacyPolicy = () => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return (\r\n    <div className=\"row no-gutters px-0\" style={{ minHeight: \"800px\" }}>\r\n      <div className=\"col-60 py-5 text-dark\">\r\n        <FileViewer\r\n          fileType={\"docx\"}\r\n          filePath={doc}\r\n          errorComponent={() => <div></div>}\r\n          onError={() => console.log(\"error doc\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivacyPolicy;\r\n","import React, { useState } from \"react\";\r\nimport history from \"../../History\";\r\nimport { SendPasswordResetLink } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\nimport Logo from \"../../images/Logo\";\r\nimport { BsChevronLeft } from \"react-icons/bs\";\r\nimport { validateEmail } from \"../../utilities/Functions\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [problem, setProblem] = useState(\"\");\r\n  const handleSubmit = async (email) => {\r\n    if (!validateEmail(email)) {\r\n      setProblem(\"Email is not valid\");\r\n    } else {\r\n      let res = await SendPasswordResetLink(email);\r\n      if (res.error) {\r\n        store.dispatch({\r\n          type: \"SET_NOTIFICATION\",\r\n          notification: {\r\n            type: \"failure\",\r\n            title: \"Error\",\r\n            message: res.error,\r\n          },\r\n        });\r\n      } else {\r\n        store.dispatch({\r\n          type: \"SET_NOTIFICATION\",\r\n          notification: {\r\n            type: \"success\",\r\n            title: \"Password reset link sent\",\r\n            message:\r\n              \"We sent email with password reset link to your email box. If you didn't get email, check spam folder\",\r\n          },\r\n        });\r\n        history.push(\"/login\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"row no-gutters justify-content-center aligm-items-start align-items-sm-center\"\r\n      style={{ height: window.innerHeight }}\r\n    >\r\n      <div className=\"col-xl-50 col-60 col-lg-50 col-md-30 col-sm-40 login-rounded overflow-hidden\">\r\n        <div className=\"row no-gutters h-100\">\r\n          <div className=\"col bg-dark d-lg-block d-none\">\r\n            <div className=\"row no-gutters h-100 flex-center position-relative\">\r\n              <div\r\n                className=\"position-absolute d-flex align-items-center text-white cursor-pointer\"\r\n                onClick={() => history.push(\"/\")}\r\n                style={{ top: \"15px\", left: \"15px\" }}\r\n              >\r\n                <BsChevronLeft className=\"mr-2\"></BsChevronLeft>Back to home\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <div className=\"square-150 mx-auto\">\r\n                  <Logo></Logo>\r\n                </div>\r\n                <div className=\"logo text-title-xl text-white\">CozyPotato</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"col-60 col-lg-30 col-xl-25 col-md-auto p-sm-5 p-4 bg-light\"\r\n            style={{\r\n              minHeight: window.innerHeight - 100,\r\n            }}\r\n          >\r\n            <div className=\"row no-gutters h-100 py-3 align-items-center\">\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters mb-4\">\r\n                  <div className=\"col-60 h3 mb-2\">Forgot Password?</div>\r\n                  <div className=\"col-60\">\r\n                    Enter email where you want to receive password reset link.\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters justify-content-center mb-4\">\r\n                  <div className=\"col-60 mb-1\">Email</div>\r\n                  <div className=\"col-60\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"input-light w-100 px-3\"\r\n                      value={email}\r\n                      onKeyDown={(e) => {\r\n                        if (e.keyCode === 13) {\r\n                          handleSubmit(email);\r\n                        }\r\n                      }}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setEmail(e.target.value);\r\n                      }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters mb-1\">\r\n                  <div\r\n                    className=\"col-60 btn-custom btn-custom-primary\"\r\n                    onClick={() => handleSubmit(email)}\r\n                  >\r\n                    Send me reset link\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  style={{ height: \"40px\", opacity: problem ? 1 : 0 }}\r\n                  className=\"row no-gutters align-items-center text-danger\"\r\n                >\r\n                  {problem}\r\n                </div>\r\n                <div className=\"row no-gutters justify-content-end\">\r\n                  <div\r\n                    className=\"btn-link col-auto mr-3\"\r\n                    onClick={() => history.push(\"/login\")}\r\n                  >\r\n                    Login\r\n                  </div>\r\n                  <div\r\n                    className=\"btn-link col-auto\"\r\n                    onClick={() => history.push(\"/signup\")}\r\n                  >\r\n                    Sign up\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport history from \"../../History\";\r\nimport { ResetPassword } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\nimport Logo from \"../../images/Logo\";\r\nimport { BsChevronLeft } from \"react-icons/bs\";\r\n\r\nconst ResetPasswordPage = (props) => {\r\n  let token = props.match.params.token;\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [problem, setProblem] = useState(\"\");\r\n  const validations = [\r\n    {\r\n      valid: /[^\\w\\s]/.test(password) || /\\d/.test(password),\r\n      error: \"Password must contain number or symbol\",\r\n    },\r\n    {\r\n      valid: password === confirmPassword,\r\n      error: \"Passwords don't match\",\r\n    },\r\n    {\r\n      valid: password.length >= 6,\r\n      error: \"Password must contain at least 6 characters\",\r\n    },\r\n  ];\r\n  const handleSubmit = async (password, token) => {\r\n    let notValid = validations.filter((x) => !x.valid);\r\n    if (notValid.length === 0) {\r\n      let res = await ResetPassword(password, token);\r\n      if (res.error) {\r\n        store.dispatch({\r\n          type: \"SET_NOTIFICATION\",\r\n          notification: {\r\n            type: \"failure\",\r\n            title: \"Error\",\r\n            message: res.error,\r\n          },\r\n        });\r\n      } else {\r\n        store.dispatch({\r\n          type: \"SET_NOTIFICATION\",\r\n          notification: {\r\n            type: \"success\",\r\n            title: \"Password reseted\",\r\n            message: \"Password successfully changed. You can login\",\r\n          },\r\n        });\r\n        history.push(\"/login\");\r\n      }\r\n    } else {\r\n      setProblem(notValid[0].error);\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className=\"row no-gutters justify-content-center aligm-items-start align-items-sm-center\"\r\n      style={{ height: window.innerHeight }}\r\n    >\r\n      <div className=\"col-xl-50 col-60 col-lg-50 col-md-30 col-sm-40 login-rounded overflow-hidden\">\r\n        <div className=\"row no-gutters h-100\">\r\n          <div className=\"col bg-dark d-lg-block d-none\">\r\n            <div className=\"row no-gutters h-100 flex-center position-relative\">\r\n              <div\r\n                className=\"position-absolute d-flex align-items-center text-white cursor-pointer\"\r\n                onClick={() => history.push(\"/\")}\r\n                style={{ top: \"15px\", left: \"15px\" }}\r\n              >\r\n                <BsChevronLeft className=\"mr-2\"></BsChevronLeft>Back to home\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <div className=\"square-150 mx-auto\">\r\n                  <Logo></Logo>\r\n                </div>\r\n                <div className=\"logo text-title-xl text-white\">CozyPotato</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"col-60 col-lg-30 col-xl-25 col-md-auto p-sm-5 p-4 bg-light\"\r\n            style={{\r\n              minHeight: window.innerHeight - 100,\r\n            }}\r\n          >\r\n            <div className=\"row no-gutters h-100 py-3 align-items-center\">\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters mb-4\">\r\n                  <div className=\"col-60 h3 mb-2\">Reset Password</div>\r\n                  <div className=\"col-60\">\r\n                    Enter new password in input fields\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters justify-content-center mb-4\">\r\n                  <div className=\"col-60 mb-1\">New Password</div>\r\n                  <div className=\"col-60\">\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"input-light w-100 px-3\"\r\n                      value={password}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setPassword(e.target.value);\r\n                      }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters justify-content-center mb-4\">\r\n                  <div className=\"col-60 mb-1\">Confirm New Password</div>\r\n                  <div className=\"col-60\">\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"input-light w-100 px-3\"\r\n                      value={confirmPassword}\r\n                      onKeyDown={(e) => {\r\n                        if (e.keyCode === 13) {\r\n                          handleSubmit(password, token);\r\n                        }\r\n                      }}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setConfirmPassword(e.target.value);\r\n                      }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters mb-1\">\r\n                  <div\r\n                    className=\"col-60 btn-custom btn-custom-primary\"\r\n                    onClick={() => handleSubmit(password, token)}\r\n                  >\r\n                    Set new password\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  style={{ height: \"40px\", opacity: problem ? 1 : 0 }}\r\n                  className=\"row no-gutters align-items-center text-danger\"\r\n                >\r\n                  {problem}\r\n                </div>\r\n                <div className=\"row no-gutters justify-content-end\">\r\n                  <div\r\n                    className=\"btn-link col-auto mr-3\"\r\n                    onClick={() => history.push(\"/login\")}\r\n                  >\r\n                    Login\r\n                  </div>\r\n                  <div\r\n                    className=\"btn-link col-auto\"\r\n                    onClick={() => history.push(\"/signup\")}\r\n                  >\r\n                    Sign up\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordPage;\r\n","import React, { useEffect } from \"react\";\r\nimport store from \"./store/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport history from \"./History\";\r\nimport Home from \"./components/user/Home\";\r\nimport Movie from \"./components/user/Movie\";\r\nimport SearchResults from \"./components/user/SearchResults\";\r\nimport AdminDashboard from \"./components/admin/AdminDashboard\";\r\nimport Login from \"./components/login/Login\";\r\nimport Signup from \"./components/login/Signup\";\r\nimport Toast from \"./components/user/Toast\";\r\nimport {\r\n  GetAllRatings,\r\n  GetAllPublicUsers,\r\n  LoginWithToken,\r\n  GetSettings,\r\n} from \"./server/DatabaseApi\";\r\nimport Profile from \"./components/user/profile/Profile\";\r\nimport PrivateRoute from \"./utilities/PrivateRoute\";\r\nimport Navbar from \"./components/user/Navbar\";\r\nimport Serie from \"./components/user/Serie\";\r\nimport Footer from \"./components/user/Footer\";\r\nimport CookiesPolicy from \"./components/user/CookiesPolicy\";\r\nimport TermsAndConditions from \"./components/user/TermsAndConditions\";\r\nimport PrivacyPolicy from \"./components/user/PrivacyPolicy\";\r\nimport ForgotPassword from \"./components/login/ForgotPassword\";\r\nimport ResetPassword from \"./components/login/ResetPassword\";\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    async function getData() {\r\n      GetSettings((settings) => {\r\n        if (!settings.error) {\r\n          if (!settings.length) {\r\n            store.dispatch({\r\n              type: \"SET_NOTIFICATION\",\r\n              notification: {\r\n                title: \"Action required\",\r\n                message:\r\n                  \"Settings are not set. Inform website administrator to set Api key and other settings for the website\",\r\n                type: \"failure\",\r\n              },\r\n            });\r\n          } else {\r\n            store.dispatch({ type: \"UPDATE_SETTINGS\", settings: settings[0] });\r\n          }\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Action required\",\r\n              message:\r\n                \"Settings are not set. Inform website administrator to set Api key and other settings for the website\",\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        }\r\n      });\r\n\r\n      GetAllRatings((ratingsArr) => {\r\n        let ratings = {};\r\n        ratingsArr.forEach((x) => {\r\n          ratings[x.tmdb_id] = x;\r\n        });\r\n        store.dispatch({ type: \"SET_RATINGS\", ratings });\r\n      });\r\n\r\n      GetAllPublicUsers((publicUsersArr) => {\r\n        let publicUsers = {};\r\n        publicUsersArr.forEach((x) => {\r\n          publicUsers[x.user_id] = x;\r\n        });\r\n        store.dispatch({ type: \"SET_PUBLICUSERS\", publicUsers });\r\n      });\r\n\r\n      let userToken = localStorage.getItem(\"movies_user_token\");\r\n      if (userToken !== null && userToken.length) {\r\n        let res = await LoginWithToken({ token: userToken });\r\n        if (!res.error) {\r\n          store.dispatch({ type: \"SET_USER\", user: res });\r\n        }\r\n      }\r\n\r\n      // let errorRes = await CreateError();\r\n      // store.dispatch({\r\n      //   type: \"SET_NOTIFICATION\",\r\n      //   notification: {\r\n      //     title: \"Action required\",\r\n      //     message: errorRes,\r\n      //     type: \"failure\",\r\n      //   },\r\n      // });\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router history={history}>\r\n        <div className=\"container-fluid px-0\">\r\n          <Navbar></Navbar>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/terms-and-conditions\"\r\n              component={TermsAndConditions}\r\n            ></Route>\r\n            <Route\r\n              exact\r\n              path=\"/cookies-policy\"\r\n              component={CookiesPolicy}\r\n            ></Route>\r\n            <Route\r\n              exact\r\n              path=\"/privacy-policy\"\r\n              component={PrivacyPolicy}\r\n            ></Route>\r\n            <Route exact path=\"/\" component={Home}></Route>\r\n            <Route\r\n              exact\r\n              path=\"/movie/:movieId/:reviewId/:commentId\"\r\n              component={Movie}\r\n            ></Route>\r\n            <Route\r\n              exact\r\n              path=\"/movie/:movieId/:reviewId\"\r\n              component={Movie}\r\n            ></Route>\r\n            <Route exact path=\"/movie/:movieId\" component={Movie}></Route>\r\n            <Route exact path=\"/series/:movieId\" component={Serie}></Route>\r\n            <Route exact path=\"/search\" component={SearchResults}></Route>\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/admin\"\r\n              bearerPath=\"/login\"\r\n              Component={AdminDashboard}\r\n            ></PrivateRoute>\r\n            <Route exact path=\"/login\" component={Login}></Route>\r\n            <Route exact path=\"/signup\" component={Signup}></Route>\r\n            <Route\r\n              exact\r\n              path=\"/forgot-password\"\r\n              component={ForgotPassword}\r\n            ></Route>\r\n            <Route\r\n              exact\r\n              path=\"/reset-password/:token\"\r\n              component={ResetPassword}\r\n            ></Route>\r\n            <Route\r\n              exact\r\n              path=\"/profile/:userId/:section\"\r\n              component={Profile}\r\n            ></Route>\r\n            <Route exact path=\"/profile/:userId\" component={Profile}></Route>\r\n          </Switch>\r\n          <Footer></Footer>\r\n          <Toast></Toast>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/style.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}