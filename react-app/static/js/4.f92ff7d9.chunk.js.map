{"version":3,"sources":["components/admin/LeftSideMenu.jsx","components/admin/Settings.jsx","components/admin/RightSideMenuFloating.jsx","components/admin/Reviews.jsx","components/admin/Comments.jsx","components/admin/ReviewAndComments.jsx","components/admin/EditReview.jsx","components/admin/EditComment.jsx","components/admin/Announcements.jsx","components/admin/EditAnnouncement.jsx","components/admin/AddNewAnnouncement.jsx","components/admin/Promotions.jsx","components/admin/EditPromotion.jsx","components/admin/AddNewPromotion.jsx","components/admin/Notifications.jsx","components/utility/Autocomplete.jsx","components/admin/EditNotification.jsx","components/admin/AddNewNotification.jsx","components/admin/Users.jsx","components/admin/AddNewUser.jsx","components/admin/EditUser.jsx","components/admin/AdminDashboard.jsx"],"names":["menuItems","name","icon","MdSettings","MdGroup","MdRateReview","FaBullhorn","BsFillTagFill","BsBellFill","LeftSideMenu","section","setSection","isMenuOpened","mobile","className","Logo","fontSize","onClick","store","dispatch","type","isOpened","map","x","i","key","style","borderLeft","socialIcons","FaFacebookF","FaInstagram","FaLinkedinIn","FaTwitter","connect","state","ownProps","settings","useState","problem","setProblem","loading","setLoading","validations","valid","test","FacebookLink","TwitterLink","LinkedinLink","InstagramLink","error","placeholder","value","movies_api_key","onChange","e","persist","target","movie_data_api","latest_movies_api","captcha_api_key","no_popular_reviews","min","no_popular_movies","no_allowed_reviews","no_comment_characters","no_display_name_characters","no_review_words","bg_image_refresh_time_days","bg_image_refresh_time_hours","bg_image_refresh_time_minutes","alt","current_bg_movie","backdrop_path","maxWidth","width","src","disabled","title","date","format","Date","date_set","a","ChangeBackgroundMovie","res","notification","message","Loader","color","position","left","top","bottom","margin","display","alignItems","size","spellCheck","height","opacity","invalid","filter","length","UpdateOrCreateSettings","GetSettings","RightSideMenuFloating","right","transition","zIndex","background","publicUsers","ratings","setEditReviewSection","setEditReview","action","setAction","role","setRole","searchKey","setSearchKey","lastVisibleColumn","setLastVisibleColumn","page","setPage","roleFilter","setRoleFilter","search","setSearch","mainFilter","setMainFilter","reviews","setReviews","filteredReviews","setFilteredReviews","refresh","setRefresh","useEffect","GetReviews","reverse","Object","assign","selected","getData","arr","author","display_name","toLowerCase","includes","review","movie_id","movie_title","boundaries","handleApply","DeleteMultipleReviews","_id","columns","deleted","prev","values","Select","popoverClass","onSelect","index","items","btnName","minWidth","onSwipedLeft","onSwipedRight","Checkbox","checked","slice","whiteSpace","backgroundImage","photo","email","history","push","Emoji","emoji","rating","reported","colSpan","count","Math","ceil","current","setCurrent","setEditCommentSection","setEditComment","comments","setComments","commentsObj","setCommentsObj","filteredComments","setFilteredComments","GetComments","obj","forEach","comment","ids","allIds","fetchIds","idsArr","concat","DeleteMultipleComments","id","review_id","ReviewsAndComments","containerSpacing","tab","setTab","admin","user","currentReview","getBack","setReview","setUser","window","scrollTo","Ratings","find","element","EditReviewForAdmin","adminRatings","rate_type","userProperty","currentComment","setComment","EditCommentForAdmin","setEditAnnouncement","setEditAnnouncementSection","setAddNewAnouncementSection","setType","typeFilter","setTypeFilter","announcements","setAnnouncements","filteredAnnouncements","setFilteredAnnouncements","GetAnnouncements","description","actions","DeleteMultipleAnnouncements","types","Fragment","y","status","currentTarget","classList","contains","remove","add","start_date","end_date","EditAnnouncement","currentAnnouncement","now","announcement","setAnnouncement","statuses","split","component","props","onDayChange","day","d","year","getFullYear","month","getMonth","niceDay","getDate","setFullYear","setMonth","setDate","getTime","clearIcon","clockIcon","h","m","newTime","setHours","setMinutes","Edit","CreateAnnouncement","setEditPromotion","setAddNewPromotionSection","setEditPromotionSection","promotions","setPromotions","filteredPromotions","setFilteredPromotions","GetPromotions","data","content_type","content","match","RegExp","searchOptions","publish_status","c","j","DeleteMultiplePromotions","content_id","EditPromotion","currentPromotion","comment_id","active_status","promotion","setPromotion","publishStatuses","text","newContent","candidates","setCandidates","searchKeys","rev","p","promos","content_author","movie_genres","movie_poster","movie_release_date","CreatePromotions","Notifications","setEditNotification","setEditNotificationSection","setAddNewNotificationSection","notifications","setNotifications","filteredNotifications","setFilteredNotifications","GetNotifications","subject","DeleteMultipleNotifications","update","useStyles","makeStyles","theme","inputRoot","border","createMuiTheme","palette","primary","main","secondary","Autocomplete","classes","multiple","filterSelectedOptions","renderInput","params","TextField","variant","currentNotification","initialDate","receivers","setNotification","val","options","keys","All","getOptionLabel","option","GetUser","updatedUser","CreateNotification","setEditUser","setEditUserSection","setAddNewUserSection","statusFilter","setStatusFilter","users","setUsers","filteredUsers","setFilteredUsers","GetUsers","EditMultipleUsers","newPublicUsers","editUsers","pids","DeleteMultipleUsers","last_login","TimeAgo","last_activity","first_name","last_name","username","password","re_password","newUser","setNewUser","validateEmail","roles","CreateUserForAdmin","publicUser","user_id","pid","currentUser","allowEdit","finalUser","EditUserForAdmin","getState","sections","dashboardMenuOpened","editReview","editComment","editAnnouncement","editPromotion","editNotification","editUser","minHeight","innerHeight","marginBottom","u","ann","prom","not"],"mappings":"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","file":"static/js/4.f92ff7d9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { MdSettings, MdGroup, MdRateReview, MdMenu } from \"react-icons/md\";\r\nimport { FaBullhorn } from \"react-icons/fa\";\r\nimport { BsBellFill, BsFillTagFill } from \"react-icons/bs\";\r\nimport store from \"../../store/store\";\r\nimport Logo from \"../../images/Logo\";\r\n\r\nconst menuItems = [\r\n  { name: \"Settings\", icon: MdSettings },\r\n  { name: \"User Management\", icon: MdGroup },\r\n  { name: \"Reviews & Comments\", icon: MdRateReview },\r\n  { name: \"Announcements\", icon: FaBullhorn },\r\n  { name: \"Promotions\", icon: BsFillTagFill },\r\n  { name: \"Notifications\", icon: BsBellFill },\r\n];\r\n\r\nconst LeftSideMenu = ({\r\n  section,\r\n  setSection,\r\n  isMenuOpened,\r\n  mobile = false,\r\n}) => {\r\n  return (\r\n    <div className=\"row no-gutters bg-over-root-lighter text-white h-100 admin-menu\">\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters justify-content-between align-items-center d-flex d-lg-none px-5 mb-4\">\r\n          <div className=\"col-auto h3\">\r\n            <div className=\"row no-gutters align-items-center\">\r\n              <div className=\"square-50 mr-2\">\r\n                <Logo></Logo>\r\n              </div>\r\n              <div className=\"col-auto logo text-title-lg\">CozyPotato</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-auto\">\r\n            <MdMenu\r\n              className=\"cursor-pointer\"\r\n              fontSize=\"34px\"\r\n              onClick={() => {\r\n                store.dispatch({\r\n                  type: \"SET_DASHBOARD_MENU_OPENED\",\r\n                  isOpened: !isMenuOpened,\r\n                });\r\n              }}\r\n            ></MdMenu>\r\n          </div>\r\n        </div>\r\n        {menuItems.map((x, i) => (\r\n          <div\r\n            key={`left-menu-item-${i}`}\r\n            className=\"row no-gutters px-4 mb-2\"\r\n            style={{\r\n              borderLeft:\r\n                section === i\r\n                  ? \"4px solid rgb(255, 0, 64)\"\r\n                  : \"4px solid transparent\",\r\n            }}\r\n          >\r\n            <div className=\"col-60\">\r\n              <div\r\n                onClick={() => {\r\n                  setSection(i);\r\n                  if (mobile) {\r\n                    store.dispatch({\r\n                      type: \"SET_DASHBOARD_MENU_OPENED\",\r\n                      isOpened: !isMenuOpened,\r\n                    });\r\n                  }\r\n                }}\r\n                key={`menu-item-${i}`}\r\n                className={`align-items-center px-3 btn-custom text-left row no-gutters${\r\n                  section === i ? \" bg-custom-primary\" : \"\"\r\n                }`}\r\n              >\r\n                <x.icon className=\"col-auto mr-2\" fontSize=\"24px\"></x.icon>\r\n                <div className=\"col-auto\">{x.name}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftSideMenu;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  UpdateOrCreateSettings,\r\n  ChangeBackgroundMovie,\r\n  GetSettings,\r\n} from \"../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport date from \"date-and-time\";\r\nimport {\r\n  FaFacebookF,\r\n  FaInstagram,\r\n  FaLinkedinIn,\r\n  FaTwitter,\r\n} from \"react-icons/fa\";\r\nimport Loader from \"../utility/Loader\";\r\n\r\nconst socialIcons = [\r\n  { icon: FaFacebookF, name: \"Facebook\" },\r\n  { icon: FaInstagram, name: \"Instagram\" },\r\n  { icon: FaLinkedinIn, name: \"Linkedin\" },\r\n  { icon: FaTwitter, name: \"Twitter\" },\r\n];\r\n\r\nconst Settings = ({ settings }) => {\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const validations = [\r\n    {\r\n      valid:\r\n        (/^http/.test(settings.FacebookLink) || settings.FacebookLink === \"\") &&\r\n        (/^http/.test(settings.TwitterLink) || settings.TwitterLink === \"\") &&\r\n        (/^http/.test(settings.LinkedinLink) || settings.LinkedinLink === \"\") &&\r\n        (/^http/.test(settings.InstagramLink) || settings.InstagramLink === \"\"),\r\n\r\n      error: \"Social link must start with http:// or https://\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={`row no-gutters admin-screen`}>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters border-bottom pb-3 mb-5\">\r\n          <div className=\"col-60 admin-screen-title\">Settings</div>\r\n          <div className=\"col-60\">Configuration settings for admin panel</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-sm-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters mb-1\">\r\n                  Configure API for popular movies (main for now)\r\n                </div>\r\n                <div className=\"row no-gutters\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter API key\"\r\n                    value={settings.movies_api_key}\r\n                    onChange={(e) => {\r\n                      e.persist();\r\n                      store.dispatch({\r\n                        type: \"UPDATE_SETTINGS\",\r\n                        settings: { movies_api_key: e.target.value },\r\n                      });\r\n                    }}\r\n                    className=\"px-3 input-light w-100\"\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters mb-1\">\r\n                  Configure API for movie data\r\n                </div>\r\n                <div className=\"row no-gutters\">\r\n                  <input\r\n                    value={settings.movie_data_api}\r\n                    onChange={(e) => {\r\n                      e.persist();\r\n                      store.dispatch({\r\n                        type: \"UPDATE_SETTINGS\",\r\n                        settings: { movie_data_api: e.target.value },\r\n                      });\r\n                    }}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter API key\"\r\n                    className=\"px-3 input-light w-100\"\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters mb-1\">\r\n                  Configure API for latest movies\r\n                </div>\r\n                <div className=\"row no-gutters\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter API key\"\r\n                    value={settings.latest_movies_api}\r\n                    onChange={(e) => {\r\n                      e.persist();\r\n                      store.dispatch({\r\n                        type: \"UPDATE_SETTINGS\",\r\n                        settings: { latest_movies_api: e.target.value },\r\n                      });\r\n                    }}\r\n                    className=\"px-3 input-light w-100\"\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters mb-1\">Set Captcha API key</div>\r\n                <div className=\"row no-gutters\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter API key\"\r\n                    value={settings.captcha_api_key}\r\n                    onChange={(e) => {\r\n                      e.persist();\r\n                      store.dispatch({\r\n                        type: \"UPDATE_SETTINGS\",\r\n                        settings: { captcha_api_key: e.target.value },\r\n                      });\r\n                    }}\r\n                    className=\"px-3 input-light w-100\"\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-30 col-60 mb-4\">\r\n                    <div className=\"row no-gutters mb-1\">\r\n                      Number of popular reviews to show\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.no_popular_reviews}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { no_popular_reviews: e.target.value },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-30 col-60 mb-4\">\r\n                    <div className=\"row no-gutters mb-1\">\r\n                      Number of popular movies to show\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.no_popular_movies}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { no_popular_movies: e.target.value },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-30 col-60 mb-4\">\r\n                    <div className=\"row no-gutters mb-1\">\r\n                      Number of Reviews allowed per day per user\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.no_allowed_reviews}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { no_allowed_reviews: e.target.value },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-30 col-60 mb-4\">\r\n                    <div className=\"row no-gutters mb-1\">\r\n                      Number of characters allowed in comments\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.no_comment_characters}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { no_comment_characters: e.target.value },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-30 col-60 mb-4\">\r\n                    <div className=\"row no-gutters mb-1\">\r\n                      Number of characters allowed in display name\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.no_display_name_characters}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: {\r\n                              no_display_name_characters: e.target.value,\r\n                            },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-30 col-60 mb-4\">\r\n                    <div className=\"row no-gutters mb-1\">\r\n                      Number of words allowed in review\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.no_review_words}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { no_review_words: e.target.value },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-40 col-60 mb-4\">\r\n                <div className=\"row no-gutters mb-1\">\r\n                  Background image refresh time (days, hours, minutes)\r\n                </div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-20 pr-3\">\r\n                    <div className=\"row no-gutters text-muted\">days</div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.bg_image_refresh_time_days}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: {\r\n                              bg_image_refresh_time_days: e.target.value,\r\n                            },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-20 pr-3\">\r\n                    <div className=\"row no-gutters text-muted\">hours</div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.bg_image_refresh_time_hours}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: {\r\n                              bg_image_refresh_time_hours: e.target.value,\r\n                            },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-20 \">\r\n                    <div className=\"row no-gutters text-muted\">minutes</div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.bg_image_refresh_time_minutes}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: {\r\n                              bg_image_refresh_time_minutes: e.target.value,\r\n                            },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters mb-1\">\r\n                  Current background movie\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <img\r\n                    alt={settings.current_bg_movie.backdrop_path}\r\n                    style={{ maxWidth: \"500px\" }}\r\n                    width=\"100%\"\r\n                    src={`https://image.tmdb.org/t/p/w500${settings.current_bg_movie.backdrop_path}`}\r\n                  ></img>\r\n                </div>\r\n                <div className=\"row no-gutters mb-1\">Title</div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <input\r\n                    disabled\r\n                    className=\"input-light-disabled w-100 px-3\"\r\n                    value={settings.current_bg_movie.title}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <div className=\"col-auto mr-4\">\r\n                    <div className=\"row no-gutters mb-1\">Set Date</div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        disabled\r\n                        className=\"input-light-disabled px-3\"\r\n                        value={date.format(\r\n                          new Date(settings.current_bg_movie.date_set),\r\n                          \"YYYY-MM-DD @ hh:mm A\"\r\n                        )}\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters mb-1\">Refresh Date</div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        disabled\r\n                        className=\"input-light-disabled px-3\"\r\n                        value={date.format(\r\n                          new Date(\r\n                            settings.current_bg_movie.date_set +\r\n                              settings.bg_image_refresh_time_minutes * 60000 +\r\n                              settings.bg_image_refresh_time_hours * 3600000 +\r\n                              settings.bg_image_refresh_time_days * 86400000\r\n                          ),\r\n                          \"YYYY-MM-DD @ hh:mm A\"\r\n                        )}\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row no-gutters\">\r\n                  <div\r\n                    className=\"col-auto btn-custom btn-custom-primary btn-small\"\r\n                    onClick={async () => {\r\n                      if (settings.movies_api_key) {\r\n                        setLoading(true);\r\n                        let res = await ChangeBackgroundMovie(\r\n                          settings.movies_api_key\r\n                        );\r\n                        setLoading(false);\r\n                        if (!res.error) {\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { current_bg_movie: res },\r\n                          });\r\n                        } else {\r\n                          store.dispatch({\r\n                            type: \"SET_NOTIFICATION\",\r\n                            notification: {\r\n                              title: \"Action not allowed\",\r\n                              message: res.error,\r\n                              type: \"failure\",\r\n                            },\r\n                          });\r\n                        }\r\n                      } else {\r\n                        store.dispatch({\r\n                          type: \"SET_NOTIFICATION\",\r\n                          notification: {\r\n                            title: \"Action not allowed\",\r\n                            message:\r\n                              \"You need to set movies api key to change background movie\",\r\n                            type: \"failure\",\r\n                          },\r\n                        });\r\n                      }\r\n                    }}\r\n                  >\r\n                    {loading ? (\r\n                      <Loader\r\n                        color={\"white\"}\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          left: \"10px\",\r\n                          top: 0,\r\n                          bottom: 0,\r\n                          margin: \"auto\",\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                        loading={loading}\r\n                        size={20}\r\n                      ></Loader>\r\n                    ) : (\r\n                      \"Refresh\"\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters mb-1\">Set social links</div>\r\n                {socialIcons.map((x, i) => (\r\n                  <div\r\n                    className=\"row no-gutters mb-2\"\r\n                    key={`social-icons-settings-${i}`}\r\n                  >\r\n                    <div className=\"col-auto mr-2\">\r\n                      <div className=\"square-40 rounded-circle bg-white d-flex flex-center\">\r\n                        <x.icon fontSize=\"24px\" className=\"text-dark\"></x.icon>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <input\r\n                        spellCheck={false}\r\n                        type=\"text\"\r\n                        placeholder={`Paste ${x.name} link`}\r\n                        value={settings[`${x.name}Link`]}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { [`${x.name}Link`]: e.target.value },\r\n                          });\r\n                        }}\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"col-60 mt-3\">\r\n                <div\r\n                  style={{ height: \"30px\", opacity: problem ? 1 : 0 }}\r\n                  className=\"row no-gutters align-items-center text-danger\"\r\n                >\r\n                  {problem}\r\n                </div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\">\r\n                    Cancel\r\n                  </div>\r\n                  <div\r\n                    className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n                    onClick={async () => {\r\n                      let invalid = validations.filter((x) => !x.valid);\r\n                      if (invalid.length) {\r\n                        setProblem(invalid[0].error);\r\n                      } else {\r\n                        setProblem(\"\");\r\n                        let res = await UpdateOrCreateSettings(settings);\r\n                        if (res.error) {\r\n                          store.dispatch({\r\n                            type: \"SET_NOTIFICATION\",\r\n                            notification: {\r\n                              title: \"Error\",\r\n                              message: \"Settings were not updated\",\r\n                              type: \"failure\",\r\n                            },\r\n                          });\r\n                        } else {\r\n                          store.dispatch({\r\n                            type: \"SET_NOTIFICATION\",\r\n                            notification: {\r\n                              title: \"Settings updated!\",\r\n                              message: \"Settings were successfully updated\",\r\n                              type: \"success\",\r\n                            },\r\n                          });\r\n                          GetSettings((settings) => {\r\n                            if (!settings.error) {\r\n                              if (settings.length) {\r\n                                store.dispatch({\r\n                                  type: \"UPDATE_SETTINGS\",\r\n                                  settings: settings[0],\r\n                                });\r\n                              }\r\n                            }\r\n                          });\r\n                        }\r\n                      }\r\n                    }}\r\n                  >\r\n                    Save\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    settings: state.settings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Settings);\r\n","import React from \"react\";\r\nimport LeftSideMenu from \"./LeftSideMenu\";\r\n\r\nconst RightSideMenuFloating = ({ isMenuOpened, setSection, section }) => {\r\n  return (\r\n    <div\r\n      className={`d-block d-lg-none col-60 col-sm-40 col-md-30 col-lg-20 col-xl-15 vh-100 zindex-99 ${\r\n        !isMenuOpened ? \"zindex-0-1\" : \"\"\r\n      }`}\r\n      style={{\r\n        position: \"fixed\",\r\n        right: 0,\r\n        top: 0,\r\n      }}\r\n    >\r\n      <div className=\"w-100 h-100 position-relative\">\r\n        <div\r\n          className=\"container-fluid px-0\"\r\n          style={{\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            right: isMenuOpened ? 0 : \"-100%\",\r\n            transition: \"right 0.3s\",\r\n            position: \"absolute\",\r\n            zIndex: 10,\r\n            background: \"white\",\r\n          }}\r\n        >\r\n          <LeftSideMenu\r\n            mobile={true}\r\n            className=\"text-white bg-internly-90 col-12\"\r\n            section={section}\r\n            isMenuOpened={isMenuOpened}\r\n            setSection={setSection}\r\n          ></LeftSideMenu>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RightSideMenuFloating;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport Emoji from \"../user/Emoji\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport date from \"date-and-time\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport { GetReviews, DeleteMultipleReviews } from \"../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport history from \"../../History\";\r\n\r\nconst Reviews = ({\r\n  setEditReviewSection,\r\n  setEditReview,\r\n  publicUsers,\r\n  ratings,\r\n}) => {\r\n  const [action, setAction] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"User\");\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [roleFilter, setRoleFilter] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [mainFilter, setMainFilter] = useState({ key: \"\", value: \"\" });\r\n  const [reviews, setReviews] = useState([]);\r\n  const [filteredReviews, setFilteredReviews] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let res = await GetReviews();\r\n      if (!res.error) {\r\n        setReviews(\r\n          res.reverse().map((x) => Object.assign({}, x, { selected: false }))\r\n        );\r\n      }\r\n    }\r\n    getData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    let arr = [...reviews];\r\n    if (reviews.length) {\r\n      if (search) {\r\n        if (searchKey === \"User\") {\r\n          arr = arr.filter((x) =>\r\n            publicUsers[x.author].display_name\r\n              .toLowerCase()\r\n              .includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Review\") {\r\n          arr = arr.filter((x) =>\r\n            x.review.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Movie\") {\r\n          arr = arr.filter(\r\n            (x) =>\r\n              ratings[x.movie_id] &&\r\n              ratings[x.movie_id].movie_title\r\n                .toLowerCase()\r\n                .includes(search.toLowerCase())\r\n          );\r\n        }\r\n      }\r\n\r\n      if (roleFilter) {\r\n        arr = arr.filter((x) => publicUsers[x.author].role === roleFilter);\r\n      }\r\n      if (mainFilter.key === \"role\" && mainFilter.value) {\r\n        arr = arr.filter(\r\n          (x) => publicUsers[x.author][mainFilter.key] === mainFilter.value\r\n        );\r\n      }\r\n\r\n      if (mainFilter.key === \"deleted\" && mainFilter.value) {\r\n        arr = arr.filter((x) => x[\"deleted\"] === mainFilter.value);\r\n      } else {\r\n        arr = arr.filter((x) => !x[\"deleted\"]);\r\n      }\r\n\r\n      setFilteredReviews(arr);\r\n    }\r\n  }, [search, roleFilter, reviews, mainFilter]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //boundaries for slicing reviews array. (pagination)\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= filteredReviews.length) {\r\n    boundaries[1] = boundaries[1] - (boundaries[1] - filteredReviews.length);\r\n  }\r\n\r\n  const handleApply = async (all = false) => {\r\n    if (all) {\r\n      setRoleFilter(role === \"All\" ? \"\" : role);\r\n    }\r\n    if (action === \"Edit\") {\r\n      let selected = filteredReviews.filter((x) => x.selected);\r\n      if (selected.length) {\r\n        setEditReview(selected[0]);\r\n        setEditReviewSection();\r\n      }\r\n    } else if (action === \"Delete\") {\r\n      let selected = filteredReviews.filter((x) => x.selected);\r\n      if (selected.length) {\r\n        let res = await DeleteMultipleReviews(selected.map((x) => x._id));\r\n        if (res.error) {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Error\",\r\n              message: res.error,\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Reviews were deleted\",\r\n              message: \"Reviews were successfully deleted\",\r\n              type: \"success\",\r\n            },\r\n          });\r\n        }\r\n        setRefresh(!refresh);\r\n      }\r\n    }\r\n  };\r\n\r\n  const columns = [\"Title\", \"Review\", \"Rating\", \"Posted on\", \"Reported\"];\r\n\r\n  return (\r\n    <div className=\"row no-gutters\">\r\n      <div className=\"col-60 py-5\">\r\n        <div className=\"row no-gutters h6 mb-3\">\r\n          <div\r\n            className={`col-auto cursor-pointer ${\r\n              !mainFilter.key && !roleFilter ? \"text-primary\" : \"text-dark\"\r\n            }`}\r\n            onClick={() => {\r\n              setMainFilter({ key: \"\", value: \"\" });\r\n              setRoleFilter(\"\");\r\n            }}\r\n          >\r\n            All ({reviews.filter((x) => !x.deleted).length})\r\n          </div>\r\n          <div className=\"col-auto px-2 text-muted\">|</div>\r\n          <div\r\n            onClick={() =>\r\n              setMainFilter((prev) =>\r\n                Object.assign({}, prev, { key: \"role\", value: \"Administrator\" })\r\n              )\r\n            }\r\n            className={`cursor-pointer col-auto ${\r\n              mainFilter.key === \"role\" && mainFilter.value === \"Administrator\"\r\n                ? \"text-primary\"\r\n                : \"text-dark\"\r\n            }`}\r\n          >\r\n            By Administrators (\r\n            {Object.values(publicUsers).length\r\n              ? reviews.filter(\r\n                  (x) =>\r\n                    publicUsers[x.author] &&\r\n                    publicUsers[x.author].role === \"Administrator\" &&\r\n                    !x.deleted\r\n                ).length\r\n              : \"\"}\r\n            )\r\n          </div>\r\n          <div className=\"col-auto px-2 text-muted\">|</div>\r\n          <div\r\n            onClick={() =>\r\n              setMainFilter((prev) =>\r\n                Object.assign({}, prev, { key: \"deleted\", value: true })\r\n              )\r\n            }\r\n            className={`cursor-pointer col-auto ${\r\n              mainFilter.key === \"deleted\" && mainFilter.value === true\r\n                ? \"text-primary\"\r\n                : \"text-dark\"\r\n            }`}\r\n          >\r\n            Deleted ({reviews.filter((x) => x.deleted).length})\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters justify-content-between\">\r\n          <div className=\"col-sm-auto col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    popoverClass=\"col-60 col-sm-auto\"\r\n                    onSelect={(index) => setAction([\"Delete\"][index])}\r\n                    items={[\"Delete\"]}\r\n                    btnName={action ? action : \"Select Action\"}\r\n                    className=\"input-light px-3 col-auto \"\r\n                  ></Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    popoverClass=\"col-60 col-sm-auto\"\r\n                    onSelect={(index) =>\r\n                      setRole([\"All\", \"Administrator\", \"User\"][index])\r\n                    }\r\n                    items={[\"All\", \"Administrator\", \"User\"]}\r\n                    btnName={role ? role : \"Select Role\"}\r\n                    className=\"input-light px-3 col-auto\"\r\n                  ></Select>\r\n                </div>\r\n              </div>\r\n              <div\r\n                onClick={() => handleApply(true)}\r\n                className=\"btn-custom btn-custom-primary col-60 col-sm-auto mb-3 mr-3 btn-xsmall\"\r\n              >\r\n                Apply\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-60 d-block d-sm-none\">\r\n            <div className=\"row no-gutters mb-3\">\r\n              <Select\r\n                popoverClass=\"w-100\"\r\n                onSelect={(index) =>\r\n                  setSearchKey([\"User\", \"Review\", \"Movie\"][index])\r\n                }\r\n                className=\"input-light col-60\"\r\n                items={[\"User\", \"Review\", \"Movie\"]}\r\n                btnName={`Search by ${searchKey}`}\r\n              ></Select>\r\n            </div>\r\n            <div className=\"row no-gutters mb-3\">\r\n              <div className=\"col-60 position-relative\">\r\n                <BsSearch\r\n                  fontSize=\"20px\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    margin: \"auto\",\r\n                    right: \"18px\",\r\n                  }}\r\n                ></BsSearch>\r\n                <input\r\n                  className=\"input-light w-100 pr-5 pl-3\"\r\n                  value={search}\r\n                  onChange={(e) => {\r\n                    e.persist();\r\n                    setSearch(e.target.value);\r\n                  }}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-auto mb-3 d-none d-sm-block\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                onSelect={(index) =>\r\n                  setSearchKey([\"User\", \"Review\", \"Movie\"][index])\r\n                }\r\n                className=\"table-input-prepend-select col-auto\"\r\n                items={[\"User\", \"Review\", \"Movie\"]}\r\n                btnName={`Search by ${searchKey}`}\r\n              ></Select>\r\n              <div className=\"col position-relative\">\r\n                <BsSearch\r\n                  fontSize=\"20px\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    margin: \"auto\",\r\n                    right: \"18px\",\r\n                  }}\r\n                ></BsSearch>\r\n                <input\r\n                  value={search}\r\n                  onChange={(e) => {\r\n                    e.persist();\r\n                    setSearch(e.target.value);\r\n                  }}\r\n                  className=\"table-input pr-5 pl-3\"\r\n                  style={{ minWidth: \"300px\" }}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <Swipeable\r\n            style={{ minWidth: \"100%\" }}\r\n            onSwipedLeft={() => {\r\n              setLastVisibleColumn(\r\n                lastVisibleColumn + 1 < 4\r\n                  ? lastVisibleColumn + 1\r\n                  : lastVisibleColumn\r\n              );\r\n            }}\r\n            onSwipedRight={() => {\r\n              setLastVisibleColumn(\r\n                lastVisibleColumn - 1 >= 0\r\n                  ? lastVisibleColumn - 1\r\n                  : lastVisibleColumn\r\n              );\r\n            }}\r\n          >\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table bg-white border\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">\r\n                      <Checkbox\r\n                        color={\"primary\"}\r\n                        checked={\r\n                          reviews\r\n                            .slice(boundaries[0], boundaries[1])\r\n                            .filter((x) => x.selected).length ===\r\n                          boundaries[1] - boundaries[0]\r\n                        }\r\n                        onChange={(e) => {\r\n                          setFilteredReviews((prev) => {\r\n                            let arr = [...prev];\r\n                            for (\r\n                              let i = boundaries[0];\r\n                              i < boundaries[1];\r\n                              i++\r\n                            ) {\r\n                              arr[i].selected = e.target.checked;\r\n                            }\r\n                            return arr;\r\n                          });\r\n                        }}\r\n                      ></Checkbox>\r\n                    </th>\r\n                    <th className=\"table-header text-truncate text-left\">\r\n                      <div className=\"d-none d-lg-block\">Posted By</div>\r\n                      <div className=\"d-block d-lg-none\">By</div>\r\n                    </th>\r\n                    <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                      {columns[lastVisibleColumn]}\r\n                    </th>\r\n                    {columns.map((x, i) => (\r\n                      <th\r\n                        key={`header-col-${i}`}\r\n                        className=\"d-none d-xl-table-cell table-header text-truncate\"\r\n                      >\r\n                        <div>{x}</div>\r\n                      </th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {filteredReviews.length ? (\r\n                    filteredReviews\r\n                      .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                      .map((x, i) => (\r\n                        <tr\r\n                          className=\"font-weight-600 bg-light\"\r\n                          key={`shortlist-item-${i}`}\r\n                        >\r\n                          <td className=\"text-center\">\r\n                            <Checkbox\r\n                              color={\"primary\"}\r\n                              checked={x.selected}\r\n                              onChange={(e) => {\r\n                                setFilteredReviews((prev) => {\r\n                                  let arr = [...prev];\r\n                                  arr[(page - 1) * 5 + i].selected =\r\n                                    e.target.checked;\r\n                                  return arr;\r\n                                });\r\n                              }}\r\n                            ></Checkbox>\r\n                          </td>\r\n                          <td>\r\n                            {publicUsers[x.author] ? (\r\n                              <div>\r\n                                <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                  <div className=\"d-inline-block mr-2\">\r\n                                    <div\r\n                                      className=\"square-50 rounded-circle bg-image\"\r\n                                      style={{\r\n                                        backgroundImage: `url(${\r\n                                          publicUsers[x.author].photo\r\n                                        })`,\r\n                                      }}\r\n                                    ></div>\r\n                                  </div>\r\n                                  <div className=\"d-none d-md-inline-block align-top\">\r\n                                    <div className=\"h6 text-primary\">\r\n                                      {publicUsers[x.author].display_name}\r\n                                    </div>\r\n                                    <div className=\"mb-2\">\r\n                                      {publicUsers[x.author].email}\r\n                                    </div>\r\n                                    <div className=\"d-flex\">\r\n                                      <div\r\n                                        className=\"text-primary underline-link\"\r\n                                        onClick={() => {\r\n                                          setEditReview(x);\r\n                                          setEditReviewSection();\r\n                                        }}\r\n                                      >\r\n                                        Edit\r\n                                      </div>\r\n                                      <div className=\"px-2\">|</div>\r\n                                      <div\r\n                                        className=\"text-danger underline-link\"\r\n                                        onClick={async () => {\r\n                                          let res = await DeleteMultipleReviews(\r\n                                            [x._id]\r\n                                          );\r\n                                          if (res.error) {\r\n                                            store.dispatch({\r\n                                              type: \"SET_NOTIFICATION\",\r\n                                              notification: {\r\n                                                title: \"Error\",\r\n                                                message: res.error,\r\n                                                type: \"failure\",\r\n                                              },\r\n                                            });\r\n                                          } else {\r\n                                            store.dispatch({\r\n                                              type: \"SET_NOTIFICATION\",\r\n                                              notification: {\r\n                                                title: \"Review was deleted\",\r\n                                                message:\r\n                                                  \"Review was successfully deleted\",\r\n                                                type: \"success\",\r\n                                              },\r\n                                            });\r\n                                          }\r\n                                          setRefresh(!refresh);\r\n                                        }}\r\n                                      >\r\n                                        Delete\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 0\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div style={{ maxWidth: \"150px\" }}>\r\n                              {ratings[x.movie_id]\r\n                                ? ratings[x.movie_id].movie_title\r\n                                : \"\"}\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 1\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div>\r\n                              <div\r\n                                style={{ minWidth: \"200px\" }}\r\n                                className=\"cursor-pointer user-select-none btn-link text-clamp-4\"\r\n                                onClick={(e) => {\r\n                                  history.push(`/movie/${x.movie_id}/${x._id}`);\r\n                                }}\r\n                              >\r\n                                {x.review}\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 2\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <Emoji\r\n                              emoji={\r\n                                x.rating === \"excellent_rate\"\r\n                                  ? \"fire\"\r\n                                  : x.rating === \"good_rate\"\r\n                                  ? \"heart\"\r\n                                  : x.rating === \"ok_rate\"\r\n                                  ? \"heavy_division_sign\"\r\n                                  : \"shit\"\r\n                              }\r\n                            />\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 3\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div style={{ whiteSpace: \"nowrap\" }}>\r\n                              {date.format(\r\n                                new Date(x.date),\r\n                                \"DD/MM/YYYY @ hh:mm A\"\r\n                              )}\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 4\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            {x.reported ? (\r\n                              <div className=\"text-danger\">Abused</div>\r\n                            ) : (\r\n                              <div className=\"text-success\">No</div>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan={7} className=\" text-center py-5\">\r\n                        0 results found\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </Swipeable>\r\n        </div>\r\n        <div className=\"row no-gutters justify-content-center justify-content-sm-end\">\r\n          <div className=\"col-auto\">\r\n            <Pagination\r\n              count={Math.ceil(filteredReviews.length / 5)}\r\n              current={page}\r\n              setCurrent={setPage}\r\n            ></Pagination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Reviews);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport date from \"date-and-time\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport { GetComments, DeleteMultipleComments } from \"../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport history from \"../../History\";\r\n\r\nconst Comments = ({\r\n  setEditCommentSection,\r\n  setEditComment,\r\n  publicUsers,\r\n  ratings,\r\n}) => {\r\n  const [action, setAction] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"User\");\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [roleFilter, setRoleFilter] = useState(\"\");\r\n  const [mainFilter, setMainFilter] = useState({ key: \"\", value: \"\" });\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [comments, setComments] = useState([]);\r\n  const [commentsObj, setCommentsObj] = useState({});\r\n\r\n  const [filteredComments, setFilteredComments] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let res = await GetComments();\r\n      if (!res.error) {\r\n        setComments(\r\n          res.reverse().map((x) => Object.assign({}, x, { selected: false }))\r\n        );\r\n        let obj = {};\r\n        res.forEach((x) => {\r\n          obj[x._id] = x;\r\n        });\r\n        setCommentsObj(obj);\r\n      }\r\n    }\r\n    getData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    let arr = [...comments];\r\n    if (comments.length) {\r\n      if (search) {\r\n        if (searchKey === \"User\") {\r\n          arr = arr.filter((x) =>\r\n            publicUsers[x.author].display_name\r\n              .toLowerCase()\r\n              .includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Comment\") {\r\n          arr = arr.filter((x) =>\r\n            x.comment.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        }\r\n      }\r\n\r\n      if (roleFilter) {\r\n        arr = arr.filter((x) => publicUsers[x.author].role === roleFilter);\r\n      }\r\n\r\n      if (mainFilter.key === \"role\" && mainFilter.value) {\r\n        arr = arr.filter(\r\n          (x) => publicUsers[x.author][mainFilter.key] === mainFilter.value\r\n        );\r\n      }\r\n\r\n      if (mainFilter.key === \"deleted\" && mainFilter.value) {\r\n        arr = arr.filter((x) => x[\"deleted\"] === mainFilter.value);\r\n      } else {\r\n        arr = arr.filter((x) => !x[\"deleted\"]);\r\n      }\r\n\r\n      setFilteredComments(arr);\r\n    }\r\n  }, [search, roleFilter, comments, mainFilter]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //boundaries for slicing comments array. (pagination)\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= filteredComments.length) {\r\n    boundaries[1] = boundaries[1] - (boundaries[1] - filteredComments.length);\r\n  }\r\n\r\n  const handleApply = async (all = false) => {\r\n    if (all) {\r\n      setRoleFilter(role === \"All\" ? \"\" : role);\r\n    }\r\n    let selected = filteredComments.filter((x) => x.selected);\r\n    if (selected.length) {\r\n      if (action === \"Edit\") {\r\n        setEditComment(selected[0]);\r\n        setEditCommentSection();\r\n      } else {\r\n        let ids = selected.map((x) => x._id);\r\n        let allIds = [...ids];\r\n\r\n        const fetchIds = (idsArr) => {\r\n          allIds = allIds.concat(idsArr);\r\n          idsArr.forEach((x) => fetchIds(commentsObj[x].comments));\r\n        };\r\n\r\n        fetchIds(ids);\r\n\r\n        let res = await DeleteMultipleComments(allIds);\r\n        if (res.error) {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Error\",\r\n              message: res.error,\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Comments were deleted\",\r\n              message: \"Comments were successfully deleted\",\r\n              type: \"success\",\r\n            },\r\n          });\r\n          setRefresh(!refresh);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row no-gutters\">\r\n      <div className=\"col-60 py-5\">\r\n        <div className=\"row no-gutters h6 mb-3\">\r\n          <div\r\n            className={`col-auto cursor-pointer ${\r\n              !mainFilter.key && !roleFilter ? \"text-primary\" : \"text-dark\"\r\n            }`}\r\n            onClick={() => {\r\n              setMainFilter({ key: \"\", value: \"\" });\r\n              setRoleFilter(\"\");\r\n            }}\r\n          >\r\n            All ({comments.filter((x) => !x.deleted).length})\r\n          </div>\r\n          <div className=\"col-auto px-2 text-muted\">|</div>\r\n          <div\r\n            onClick={() =>\r\n              setMainFilter((prev) =>\r\n                Object.assign({}, prev, { key: \"role\", value: \"Administrator\" })\r\n              )\r\n            }\r\n            className={`cursor-pointer col-auto ${\r\n              mainFilter.key === \"role\" && mainFilter.value === \"Administrator\"\r\n                ? \"text-primary\"\r\n                : \"text-dark\"\r\n            }`}\r\n          >\r\n            By Administrators (\r\n            {Object.values(publicUsers).length\r\n              ? comments.filter(\r\n                  (x) =>\r\n                    publicUsers[x.author].role === \"Administrator\" && !x.deleted\r\n                ).length\r\n              : \"\"}\r\n            )\r\n          </div>\r\n          <div className=\"col-auto px-2 text-muted\">|</div>\r\n          <div\r\n            onClick={() =>\r\n              setMainFilter((prev) =>\r\n                Object.assign({}, prev, { key: \"deleted\", value: true })\r\n              )\r\n            }\r\n            className={`cursor-pointer col-auto ${\r\n              mainFilter.key === \"deleted\" && mainFilter.value === true\r\n                ? \"text-primary\"\r\n                : \"text-dark\"\r\n            }`}\r\n          >\r\n            Deleted ({comments.filter((x) => x.deleted).length})\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters justify-content-between\">\r\n          <div className=\"col-sm-auto col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    popoverClass=\"col-60 col-sm-auto\"\r\n                    onSelect={(index) => setAction([\"Delete\"][index])}\r\n                    items={[\"Delete\"]}\r\n                    btnName={action ? action : \"Select Action\"}\r\n                    className=\"input-light px-3 col-auto\"\r\n                  ></Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    popoverClass=\"col-60 col-sm-auto\"\r\n                    onSelect={(index) =>\r\n                      setRole([\"All\", \"Administrator\", \"User\"][index])\r\n                    }\r\n                    items={[\"All\", \"Administrator\", \"User\"]}\r\n                    btnName={role ? role : \"Select Role\"}\r\n                    className=\"input-light px-3 col-auto\"\r\n                  ></Select>\r\n                </div>\r\n              </div>\r\n              <div\r\n                onClick={() => handleApply(true)}\r\n                className=\"btn-custom btn-custom-primary col-60 col-sm-auto mb-3 mr-3 btn-xsmall\"\r\n              >\r\n                Apply\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-60 d-block d-sm-none\">\r\n            <div className=\"row no-gutters mb-3\">\r\n              <Select\r\n                popoverClass=\"w-100\"\r\n                onSelect={(index) => setSearchKey([\"User\", \"Comment\"][index])}\r\n                className=\"input-light col-60\"\r\n                items={[\"User\", \"Comment\"]}\r\n                btnName={`Search by ${searchKey}`}\r\n              ></Select>\r\n            </div>\r\n            <div className=\"row no-gutters mb-3\">\r\n              <div className=\"col-60 position-relative\">\r\n                <BsSearch\r\n                  fontSize=\"20px\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    margin: \"auto\",\r\n                    right: \"18px\",\r\n                  }}\r\n                ></BsSearch>\r\n                <input\r\n                  className=\"input-light w-100 pr-5 pl-3\"\r\n                  value={search}\r\n                  onChange={(e) => {\r\n                    e.persist();\r\n                    setSearch(e.target.value);\r\n                  }}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-auto mb-3 d-none d-sm-block\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                onSelect={(index) => setSearchKey([\"User\", \"Comment\"][index])}\r\n                className=\"table-input-prepend-select col-auto\"\r\n                items={[\"User\", \"Comment\"]}\r\n                btnName={`Search by ${searchKey}`}\r\n              ></Select>\r\n              <div className=\"col position-relative\">\r\n                <BsSearch\r\n                  fontSize=\"20px\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    margin: \"auto\",\r\n                    right: \"18px\",\r\n                  }}\r\n                ></BsSearch>\r\n                <input\r\n                  value={search}\r\n                  onChange={(e) => {\r\n                    e.persist();\r\n                    setSearch(e.target.value);\r\n                  }}\r\n                  className=\"table-input pr-5 pl-3\"\r\n                  style={{ minWidth: \"300px\" }}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <Swipeable\r\n            style={{ minWidth: \"100%\" }}\r\n            onSwipedLeft={() => {\r\n              setLastVisibleColumn(\r\n                lastVisibleColumn + 1 < 4\r\n                  ? lastVisibleColumn + 1\r\n                  : lastVisibleColumn\r\n              );\r\n            }}\r\n            onSwipedRight={() => {\r\n              setLastVisibleColumn(\r\n                lastVisibleColumn - 1 >= 0\r\n                  ? lastVisibleColumn - 1\r\n                  : lastVisibleColumn\r\n              );\r\n            }}\r\n          >\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table bg-white border\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">\r\n                      <Checkbox\r\n                        color={\"primary\"}\r\n                        checked={\r\n                          filteredComments\r\n                            .slice(boundaries[0], boundaries[1])\r\n                            .filter((x) => x.selected).length ===\r\n                          boundaries[1] - boundaries[0]\r\n                        }\r\n                        onChange={(e) => {\r\n                          setFilteredComments((prev) => {\r\n                            let arr = [...prev];\r\n                            for (\r\n                              let i = boundaries[0];\r\n                              i < boundaries[1];\r\n                              i++\r\n                            ) {\r\n                              arr[i].selected = e.target.checked;\r\n                            }\r\n                            return arr;\r\n                          });\r\n                        }}\r\n                      ></Checkbox>\r\n                    </th>\r\n                    <th className=\"table-header text-truncate text-left\">\r\n                      <div className=\"d-none d-lg-block\">Posted By</div>\r\n                      <div className=\"d-block d-lg-none\">By</div>\r\n                    </th>\r\n                    <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                      {\r\n                        [\"Comment\", \"In Repsonse To\", \"Posted On\", \"Reported\"][\r\n                          lastVisibleColumn\r\n                        ]\r\n                      }\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                      <div>Comment</div>\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                      <div>In Response To</div>\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                      <div>Posted On</div>\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                      <div>Reported</div>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {filteredComments.length ? (\r\n                    filteredComments\r\n                      .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                      .map((x, i) => (\r\n                        <tr\r\n                          className=\"font-weight-600 bg-light\"\r\n                          key={`shortlist-item-${i}`}\r\n                        >\r\n                          <td className=\"text-center\">\r\n                            <Checkbox\r\n                              color={\"primary\"}\r\n                              checked={x.selected}\r\n                              onChange={(e) => {\r\n                                setFilteredComments((prev) => {\r\n                                  let arr = [...prev];\r\n                                  arr[(page - 1) * 5 + i].selected =\r\n                                    e.target.checked;\r\n                                  return arr;\r\n                                });\r\n                              }}\r\n                            ></Checkbox>\r\n                          </td>\r\n                          <td>\r\n                            <div>\r\n                              {publicUsers[x.author] ? (\r\n                                <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                  <div className=\"d-inline-block mr-2\">\r\n                                    <div\r\n                                      className=\"square-50 rounded-circle bg-image\"\r\n                                      style={{\r\n                                        backgroundImage: `url(${\r\n                                          publicUsers[x.author].photo\r\n                                        })`,\r\n                                      }}\r\n                                    ></div>\r\n                                  </div>\r\n                                  <div className=\"d-none d-md-inline-block align-top\">\r\n                                    <div className=\"text-primary\">\r\n                                      {publicUsers[x.author].display_name}\r\n                                    </div>\r\n                                    <div className=\"mb-2\">\r\n                                      {publicUsers[x.author].email}\r\n                                    </div>\r\n                                    <div className=\"d-flex\">\r\n                                      <div\r\n                                        className=\"text-primary underline-link\"\r\n                                        onClick={() => {\r\n                                          setEditComment(x);\r\n                                          setEditCommentSection();\r\n                                        }}\r\n                                      >\r\n                                        Edit\r\n                                      </div>\r\n                                      <div className=\"px-2\">|</div>\r\n                                      <div\r\n                                        className=\"text-danger underline-link\"\r\n                                        onClick={async () => {\r\n                                          let allIds = [x._id];\r\n\r\n                                          const fetchIds = (idsArr) => {\r\n                                            allIds = allIds.concat(idsArr);\r\n                                            idsArr.forEach((id) =>\r\n                                              fetchIds(commentsObj[id].comments)\r\n                                            );\r\n                                          };\r\n\r\n                                          fetchIds(allIds);\r\n\r\n                                          let res = await DeleteMultipleComments(\r\n                                            allIds\r\n                                          );\r\n                                          if (res.error) {\r\n                                            store.dispatch({\r\n                                              type: \"SET_NOTIFICATION\",\r\n                                              notification: {\r\n                                                title: \"Error\",\r\n                                                message: res.error,\r\n                                                type: \"failure\",\r\n                                              },\r\n                                            });\r\n                                          } else {\r\n                                            store.dispatch({\r\n                                              type: \"SET_NOTIFICATION\",\r\n                                              notification: {\r\n                                                title: \"Comment was deleted\",\r\n                                                message:\r\n                                                  \"Comment was successfully deleted\",\r\n                                                type: \"success\",\r\n                                              },\r\n                                            });\r\n                                          }\r\n                                          setRefresh(!refresh);\r\n                                        }}\r\n                                      >\r\n                                        Delete\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 0\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div>\r\n                              <div\r\n                                style={{ minWidth: \"200px\" }}\r\n                                className=\"cursor-pointer user-select-none btn-link text-clamp-4\"\r\n                                onClick={(e) => {\r\n                                  history.push(\r\n                                    `/movie/${x.movie_id}/${x.review_id}/${x._id}`\r\n                                  );\r\n                                }}\r\n                              >\r\n                                {x.comment}\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 1\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div>\r\n                              Movie:{\" \"}\r\n                              {ratings[x.movie_id]\r\n                                ? ratings[x.movie_id].movie_title\r\n                                : \"\"}\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                              <div\r\n                                onClick={async () => {\r\n                                  history.push(\r\n                                    `/movie/${x.movie_id}/${x.review_id}`\r\n                                  );\r\n                                }}\r\n                                className=\"text-primary cursor-pointer\"\r\n                                style={{ whiteSpace: \"nowrap\" }}\r\n                              >\r\n                                View Review\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 2\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div style={{ whiteSpace: \"nowrap\" }}>\r\n                              {date.format(\r\n                                new Date(x.date),\r\n                                \"DD/MM/YYYY @ hh:mm A\"\r\n                              )}\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 3\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            {x.reported ? (\r\n                              <div className=\"text-danger\">Abused</div>\r\n                            ) : (\r\n                              <div className=\"text-success\">No</div>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan={6} className=\"text-center py-5\">\r\n                        0 results found\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n                {/* <tfoot>\r\n                  <tr>\r\n                    <th className=\"text-center\">\r\n                      <Checkbox\r\n                        color={\"primary\"}\r\n                        checked={\r\n                          comments\r\n                            .slice(boundaries[0], boundaries[1])\r\n                            .filter((x) => x.selected).length ===\r\n                          boundaries[1] - boundaries[0]\r\n                        }\r\n                        onChange={(e) => {\r\n                          setFilteredComments((prev) => {\r\n                            let arr = [...prev];\r\n                            for (\r\n                              let i = boundaries[0];\r\n                              i < boundaries[1];\r\n                              i++\r\n                            ) {\r\n                              arr[i].seleCted = e.target.checked;\r\n                            }\r\n                            return arr;\r\n                          });\r\n                        }}\r\n                      ></Checkbox>\r\n                    </th>\r\n                    <th className=\"table-footer text-truncate text-left\">\r\n                      <div className=\"d-none d-lg-block\">Posted By</div>\r\n                      <div className=\"d-block d-lg-none\">By</div>\r\n                    </th>\r\n                    <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                      {\r\n                        [\r\n                          \"Posted By\",\r\n                          \"Review\",\r\n                          \"Reported\",\r\n                          \"Movie Name\",\r\n                          \"Posted On\",\r\n                        ][lastVisibleColumn]\r\n                      }\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                      <div>Comment</div>\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                      <div>Reported</div>\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                      <div>In Response To</div>\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                      <div>Posted On</div>\r\n                    </th>\r\n                  </tr>\r\n                </tfoot> */}\r\n              </table>\r\n            </div>\r\n          </Swipeable>\r\n        </div>\r\n        <div className=\"row no-gutters justify-content-center justify-content-sm-end\">\r\n          <div className=\"col-auto\">\r\n            <Pagination\r\n              count={Math.ceil(filteredComments.length / 5)}\r\n              current={page}\r\n              setCurrent={setPage}\r\n            ></Pagination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Comments);\r\n","import React, { useState } from \"react\";\r\nimport Reviews from \"./Reviews\";\r\nimport Comments from \"./Comments\";\r\n\r\nconst ReviewsAndComments = ({\r\n  setEditReview,\r\n  setEditReviewSection,\r\n  setEditCommentSection,\r\n  setEditComment,\r\n  containerSpacing,\r\n}) => {\r\n  const [tab, setTab] = useState(0);\r\n\r\n  return (\r\n    <div className={`row no-gutters admin-screen`}>\r\n      <div className=\"col-60 border-bottom\">\r\n        <div className=\"row no-gutters justify-content-between\">\r\n          <div className=\"col-auto pb-3\">\r\n            <div className=\"row no-gutters admin-screen-title\">\r\n              Reviews & Comments\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              Add, edit or delete reviews and comments\r\n            </div>\r\n          </div>\r\n          <div className=\"col-auto py-3\">\r\n            <div className=\"row no-gutters cursor-pointer\">\r\n              <div\r\n                style={{ width: \"150px\" }}\r\n                onClick={() => setTab(0)}\r\n                className={`rounded-left col table-btn${\r\n                  tab === 0 ? \" table-btn-selected\" : \"\"\r\n                }`}\r\n              >\r\n                Reviews\r\n              </div>\r\n              <div\r\n                style={{ width: \"150px\" }}\r\n                onClick={() => setTab(1)}\r\n                className={`rounded-right col table-btn${\r\n                  tab === 1 ? \" table-btn-selected\" : \"\"\r\n                }`}\r\n              >\r\n                Comments\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        {tab === 0 ? (\r\n          <Reviews\r\n            setEditReviewSection={setEditReviewSection}\r\n            setEditReview={setEditReview}\r\n          ></Reviews>\r\n        ) : (\r\n          <Comments\r\n            setEditComment={setEditComment}\r\n            setEditCommentSection={setEditCommentSection}\r\n          ></Comments>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewsAndComments;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport { Ratings } from \"../../Data\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport { EditReviewForAdmin } from \"../../server/DatabaseApi\";\r\nimport Loader from \"../utility/Loader\";\r\n\r\nconst EditReview = ({\r\n  currentReview,\r\n  publicUsers,\r\n  getBack,\r\n  ratings,\r\n  admin,\r\n}) => {\r\n  const [review, setReview] = useState({});\r\n  const [user, setUser] = useState({ display_name: \"\", email: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    if (currentReview) {\r\n      setReview(currentReview);\r\n      setUser(publicUsers[currentReview.author]);\r\n    }\r\n  }, [currentReview]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\" style={{ maxWidth: \"800px\" }}>\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">\r\n          Reviews & Comments\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          Add, edit and delete reviews and comments\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Display name</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"input-light w-100 px-3\"\r\n              value={user.display_name}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setUser((prev) =>\r\n                  Object.assign({}, prev, { display_name: e.target.value })\r\n                );\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Message</div>\r\n          <div className=\"col-60\">\r\n            <textarea\r\n              value={review.review ? review.review : \"\"}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setReview((prev) =>\r\n                  Object.assign({}, prev, { review: e.target.value })\r\n                );\r\n              }}\r\n              className=\"textarea-light w-100\"\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mb-4\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"60 mb-1\">Rating</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <Select\r\n            popoverClass=\"col-md-30 col-60\"\r\n            className=\"input-light px-3\"\r\n            btnName={\r\n              review.rating\r\n                ? Ratings.find((x) => x.name === review.rating).element\r\n                : \"Select\"\r\n            }\r\n            onSelect={(index) => {\r\n              setReview((prev) =>\r\n                Object.assign({}, prev, { rating: Ratings[index].name })\r\n              );\r\n            }}\r\n            items={Ratings.map((x) => x.element)}\r\n          ></Select>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mb-4\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"60 mb-1\">Report status</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <Select\r\n            popoverClass=\"col-md-30 col-60\"\r\n            className=\"input-light px-3\"\r\n            btnName={review.reported ? \"Reported\" : \"Not Reported\"}\r\n            onSelect={(index) => {\r\n              setReview((prev) =>\r\n                Object.assign({}, prev, {\r\n                  reported: index === 0 ? true : false,\r\n                })\r\n              );\r\n            }}\r\n            items={[\"Reported\", \"Not Reported\"]}\r\n          ></Select>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mb-4\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"60 mb-1\">Title</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <input\r\n            value={ratings[currentReview.movie_id].movie_title}\r\n            disabled\r\n            className=\"input-light-disabled col-md-30 col-60 px-3\"\r\n          ></input>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mt-5\">\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n            onClick={() => getBack()}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n            onClick={async () => {\r\n              try {\r\n                setLoading(true);\r\n                let res = await EditReviewForAdmin(review, user);\r\n                setLoading(false);\r\n                if (res.error) {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Error\",\r\n                      message: res.error,\r\n                      type: \"failure\",\r\n                    },\r\n                  });\r\n                } else {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Review updated\",\r\n                      message: \"Review was successfully updated\",\r\n                      type: \"success\",\r\n                    },\r\n                  });\r\n                  store.dispatch({\r\n                    type: \"UPDATE_RATINGS\",\r\n                    rating: {\r\n                      [review.movie_id]: res.rating,\r\n                    },\r\n                  });\r\n                  if (admin._id === review.author) {\r\n                    let adminRatings = { ...admin.ratings };\r\n                    adminRatings[review.movie_id] = {\r\n                      movie_id: review.movie_id,\r\n                      rate_type: review.rating,\r\n                    };\r\n\r\n                    store.dispatch({\r\n                      type: \"UPDATE_USER\",\r\n                      userProperty: {\r\n                        ratings: adminRatings,\r\n                      },\r\n                    });\r\n                  }\r\n\r\n                  getBack();\r\n                }\r\n              } catch (er) {}\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    admin: state.user,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(EditReview);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport { EditCommentForAdmin } from \"../../server/DatabaseApi\";\r\nimport Loader from \"../utility/Loader\";\r\n\r\nconst EditComment = ({ currentComment, publicUsers, getBack }) => {\r\n  const [comment, setComment] = useState({});\r\n  const [user, setUser] = useState({ display_name: \"\", email: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentComment) {\r\n      setComment(currentComment);\r\n      setUser(publicUsers[currentComment.author]);\r\n    }\r\n  }, [currentComment]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\" style={{ maxWidth: \"800px\" }}>\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">\r\n          Reviews & Comments\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          Add, edit and delete reviews and comments\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Display name</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"input-light w-100 px-3\"\r\n              value={user.display_name}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setUser((prev) =>\r\n                  Object.assign({}, prev, { display_name: e.target.value })\r\n                );\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Comment</div>\r\n          <div className=\"col-60\">\r\n            <textarea\r\n              value={comment.comment}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setComment((prev) =>\r\n                  Object.assign({}, prev, { comment: e.target.value })\r\n                );\r\n              }}\r\n              className=\"textarea-light w-100\"\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mb-4\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"60 mb-1\">Report status</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <Select\r\n            popoverClass=\"col-md-30 col-60\"\r\n            className=\"input-light px-3\"\r\n            btnName={comment.reported ? \"Reported\" : \"Not Reported\"}\r\n            onSelect={(index) => {\r\n              setComment((prev) =>\r\n                Object.assign({}, prev, {\r\n                  reported: index === 0 ? true : false,\r\n                })\r\n              );\r\n            }}\r\n            items={[\"Reported\", \"Not Reported\"]}\r\n          ></Select>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mt-5\">\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n            onClick={() => getBack()}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n            onClick={async () => {\r\n              setLoading(true);\r\n              let res = await EditCommentForAdmin(comment, user);\r\n              setLoading(false);\r\n              if (res.error) {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Error\",\r\n                    message: res.error,\r\n                    type: \"failure\",\r\n                  },\r\n                });\r\n              } else {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Review updated\",\r\n                    message: \"Review was successfully updated\",\r\n                    type: \"success\",\r\n                  },\r\n                });\r\n                getBack();\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(EditComment);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport date from \"date-and-time\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetAnnouncements,\r\n  DeleteMultipleAnnouncements,\r\n} from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\n\r\nconst Announcements = ({\r\n  setEditAnnouncement,\r\n  setEditAnnouncementSection,\r\n  setAddNewAnouncementSection,\r\n  publicUsers,\r\n}) => {\r\n  const [action, setAction] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"User\");\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [typeFilter, setTypeFilter] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [mainFilter, setMainFilter] = useState({ key: \"\", value: \"\" });\r\n\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [announcements, setAnnouncements] = useState([]);\r\n  const [filteredAnnouncements, setFilteredAnnouncements] = useState([]);\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let res = await GetAnnouncements();\r\n      if (!res.error) {\r\n        setAnnouncements(\r\n          res.map((x) => Object.assign({}, x, { selected: false }))\r\n        );\r\n      }\r\n    }\r\n    getData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    let arr = [...announcements];\r\n    if (announcements.length) {\r\n      if (search) {\r\n        if (searchKey === \"User\") {\r\n          arr = arr.filter((x) =>\r\n            publicUsers[x.author].display_name\r\n              .toLowerCase()\r\n              .includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Description\") {\r\n          arr = arr.filter((x) =>\r\n            x.description.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        }\r\n      }\r\n\r\n      if (typeFilter) {\r\n        arr = arr.filter((x) => x.type === typeFilter);\r\n      }\r\n\r\n      if (mainFilter.key) {\r\n        arr = arr.filter((x) => x[mainFilter.key] === mainFilter.value);\r\n      }\r\n\r\n      setFilteredAnnouncements(arr);\r\n    }\r\n  }, [search, typeFilter, announcements, mainFilter]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //boundaries for slicing reviews array. (pagination)\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= filteredAnnouncements.length) {\r\n    boundaries[1] =\r\n      boundaries[1] - (boundaries[1] - filteredAnnouncements.length);\r\n  }\r\n\r\n  const statuses = [\"Published\", \"Drafted\", \"Expired\"];\r\n  const actions = [\"Delete\"];\r\n\r\n  const handleApply = async (all = false) => {\r\n    if (all) {\r\n      setTypeFilter(type);\r\n    }\r\n    if (action === \"Edit\") {\r\n      let selected = filteredAnnouncements.filter((x) => x.selected);\r\n      if (selected.length) {\r\n        setEditAnnouncement(selected[0]);\r\n        setEditAnnouncementSection();\r\n      }\r\n    } else if (action === \"Delete\") {\r\n      let selected = filteredAnnouncements.filter((x) => x.selected);\r\n      if (selected.length) {\r\n        let res = await DeleteMultipleAnnouncements(selected.map((x) => x._id));\r\n        if (res.error) {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Error\",\r\n              message: res.error,\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Announcements were deleted\",\r\n              message: \"Announcements were successfully deleted\",\r\n              type: \"success\",\r\n            },\r\n          });\r\n        }\r\n        setRefresh(!refresh);\r\n      }\r\n    }\r\n  };\r\n\r\n  const types = [\"Information\", \"Error\", \"Warning\"];\r\n\r\n  return (\r\n    <div className=\"row no-gutters admin-screen\">\r\n      <div className=\"col-60 border-bottom\">\r\n        <div className=\"row no-gutters justify-content-between pb-3 align-items-end\">\r\n          <div className=\"col-auto\">\r\n            <div className=\"row no-gutters admin-screen-title\">\r\n              Announcements\r\n            </div>\r\n            <div className=\"row no-gutters\">Create and post announcements</div>\r\n          </div>\r\n          <div\r\n            className=\"col-auto btn-custom btn-custom-primary btn-natural\"\r\n            onClick={() => setAddNewAnouncementSection()}\r\n          >\r\n            Add New\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-60 py-5\">\r\n            <div className=\"row no-gutters h6 mb-3\">\r\n              <div\r\n                onClick={() => {\r\n                  setMainFilter({ key: \"\", value: \"\" });\r\n                  setType(\"\");\r\n                  setTypeFilter(\"\");\r\n                }}\r\n                className={`cursor-pointer col-auto ${\r\n                  !typeFilter && !mainFilter.key ? \"text-primary\" : \"text-dark\"\r\n                }`}\r\n              >\r\n                All ({announcements.length})\r\n              </div>\r\n              {statuses.map((x, i) => (\r\n                <React.Fragment key={`status-${i}`}>\r\n                  <div className=\"col-auto px-2 text-muted\">|</div>\r\n                  <div\r\n                    onClick={() =>\r\n                      setMainFilter((prev) =>\r\n                        Object.assign({}, prev, {\r\n                          key: \"status\",\r\n                          value: x,\r\n                        })\r\n                      )\r\n                    }\r\n                    className={`cursor-pointer col-auto ${\r\n                      mainFilter.key === \"status\" && mainFilter.value === x\r\n                        ? \"text-primary\"\r\n                        : \"text-dark\"\r\n                    }`}\r\n                  >\r\n                    {x} ({announcements.filter((y) => y.status === x).length})\r\n                  </div>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-between\">\r\n              <div className=\"col-sm-auto col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) => setAction(actions[index])}\r\n                        items={actions}\r\n                        btnName={action ? action : \"Select Action\"}\r\n                        className=\"input-light px-3 col-auto \"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) => setType(types[index])}\r\n                        items={types}\r\n                        btnName={type ? type : \"Select Type\"}\r\n                        className=\"input-light px-3 col-auto \"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    onClick={() => handleApply(true)}\r\n                    className=\"btn-custom btn-custom-primary col-60 col-sm-auto mb-3 mr-3 btn-xsmall\"\r\n                  >\r\n                    Apply\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 d-block d-sm-none\">\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <Select\r\n                    popoverClass=\"w-100\"\r\n                    onSelect={(index) =>\r\n                      setSearchKey([\"User\", \"Description\"][index])\r\n                    }\r\n                    className=\"input-light col-60\"\r\n                    items={[\"User\", \"Description\"]}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <div className=\"col-60 position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      className=\"input-light w-100 pr-5 pl-3\"\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-auto mb-3 d-none d-sm-block\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    onSelect={(index) =>\r\n                      setSearchKey([\"User\", \"Description\"][index])\r\n                    }\r\n                    className=\"table-input-prepend-select col-auto\"\r\n                    items={[\"User\", \"Description\"]}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                  <div className=\"col position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                      className=\"table-input pr-5 pl-3\"\r\n                      style={{ minWidth: \"300px\" }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <Swipeable\r\n                style={{ minWidth: \"100%\" }}\r\n                onSwipedLeft={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn + 1 < 4\r\n                      ? lastVisibleColumn + 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n                onSwipedRight={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn - 1 >= 0\r\n                      ? lastVisibleColumn - 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n              >\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table bg-white border\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"text-center\">\r\n                          <Checkbox\r\n                            color={\"primary\"}\r\n                            checked={\r\n                              filteredAnnouncements\r\n                                .slice(boundaries[0], boundaries[1])\r\n                                .filter((x) => x.selected).length ===\r\n                              boundaries[1] - boundaries[0]\r\n                            }\r\n                            onChange={(e) => {\r\n                              setFilteredAnnouncements((prev) => {\r\n                                let arr = [...prev];\r\n                                for (\r\n                                  let i = boundaries[0];\r\n                                  i < boundaries[1];\r\n                                  i++\r\n                                ) {\r\n                                  arr[i].selected = e.target.checked;\r\n                                }\r\n                                return arr;\r\n                              });\r\n                            }}\r\n                          ></Checkbox>\r\n                        </th>\r\n                        <th className=\"table-header text-truncate text-left\">\r\n                          <div className=\"d-none d-lg-block\">Posted By</div>\r\n                          <div className=\"d-block d-lg-none\">By</div>\r\n                        </th>\r\n                        <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                          {\r\n                            [\"Type\", \"Description\", \"Duration\", \"Status\"][\r\n                              lastVisibleColumn\r\n                            ]\r\n                          }\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Type</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Description</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Duration</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Status</div>\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filteredAnnouncements.length ? (\r\n                        filteredAnnouncements\r\n                          .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                          .map((x, i) => (\r\n                            <tr\r\n                              className=\"font-weight-600 bg-light\"\r\n                              key={`shortlist-item-${i}`}\r\n                            >\r\n                              <td className=\"text-center\">\r\n                                <Checkbox\r\n                                  color={\"primary\"}\r\n                                  checked={x.selected}\r\n                                  onChange={(e) => {\r\n                                    setFilteredAnnouncements((prev) => {\r\n                                      let arr = [...prev];\r\n                                      arr[(page - 1) * 5 + i].selected =\r\n                                        e.target.checked;\r\n                                      return arr;\r\n                                    });\r\n                                  }}\r\n                                ></Checkbox>\r\n                              </td>\r\n                              <td>\r\n                                {Object.values(publicUsers).length ? (\r\n                                  <React.Fragment>\r\n                                    <div>\r\n                                      <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                        <div className=\"d-inline-block mr-2\">\r\n                                          <div\r\n                                            className=\"square-50 rounded-circle bg-image\"\r\n                                            style={{\r\n                                              backgroundImage: `url(${\r\n                                                publicUsers[x.author].photo\r\n                                              })`,\r\n                                            }}\r\n                                          ></div>\r\n                                        </div>\r\n                                        <div className=\"d-none d-md-inline-block align-top\">\r\n                                          <div className=\"text-primary\">\r\n                                            {publicUsers[x.author].display_name}\r\n                                          </div>\r\n                                          <div className=\"mb-3\">\r\n                                            {publicUsers[x.author].email}\r\n                                          </div>\r\n                                          <div className=\"d-flex\">\r\n                                            <div\r\n                                              className=\"text-primary underline-link\"\r\n                                              onClick={() => {\r\n                                                setEditAnnouncement(x);\r\n                                                setEditAnnouncementSection();\r\n                                              }}\r\n                                            >\r\n                                              Edit\r\n                                            </div>\r\n                                            <div className=\"px-2\">|</div>\r\n                                            <div\r\n                                              className=\"text-danger underline-link\"\r\n                                              onClick={async () => {\r\n                                                let res = await DeleteMultipleAnnouncements(\r\n                                                  [x._id]\r\n                                                );\r\n                                                if (res.error) {\r\n                                                  store.dispatch({\r\n                                                    type: \"SET_NOTIFICATION\",\r\n                                                    notification: {\r\n                                                      title: \"Error\",\r\n                                                      message: res.error,\r\n                                                      type: \"failure\",\r\n                                                    },\r\n                                                  });\r\n                                                } else {\r\n                                                  store.dispatch({\r\n                                                    type: \"SET_NOTIFICATION\",\r\n                                                    notification: {\r\n                                                      title:\r\n                                                        \"Announcement was deleted\",\r\n                                                      message:\r\n                                                        \"Announcement was successfully deleted\",\r\n                                                      type: \"success\",\r\n                                                    },\r\n                                                  });\r\n                                                }\r\n                                                setRefresh(!refresh);\r\n                                              }}\r\n                                            >\r\n                                              Delete\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </React.Fragment>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  x.type === \"Warning\"\r\n                                    ? \"text-warning\"\r\n                                    : x.type === \"Information\"\r\n                                    ? \"text-primary\"\r\n                                    : x.type === \"Error\"\r\n                                    ? \"text-danger\"\r\n                                    : \"\"\r\n                                }${\r\n                                  lastVisibleColumn === 0\r\n                                    ? \" d-table-cell\"\r\n                                    : \" d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div>{x.type}</div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 1\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div\r\n                                  style={{ minWidth: \"150px\" }}\r\n                                  className=\"text-clamp-4 cursor-pointer user-select-none\"\r\n                                  onClick={(e) => {\r\n                                    let target = e.currentTarget;\r\n                                    if (\r\n                                      target.classList.contains(\"text-clamp-4\")\r\n                                    ) {\r\n                                      target.classList.remove(\"text-clamp-4\");\r\n                                    } else {\r\n                                      target.classList.add(\"text-clamp-4\");\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  {x.description}\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 2\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                  <div className=\"d-inline-block mr-2\">\r\n                                    <div>From: </div>\r\n                                    <div>To: </div>\r\n                                  </div>\r\n                                  <div className=\"d-inline-block\">\r\n                                    <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                      {date.format(\r\n                                        new Date(x.start_date),\r\n                                        \"DD/MM/YYYY @ hh:mm A\"\r\n                                      )}\r\n                                      <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                        {date.format(\r\n                                          new Date(x.end_date),\r\n                                          \"DD/MM/YYYY @ hh:mm A\"\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 3\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.status}\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan={6} className=\" text-center py-5\">\r\n                            0 results found\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                    {/* <tfoot>\r\n                      <tr>\r\n                        <th className=\"text-center\">\r\n                          <Checkbox\r\n                            color={\"primary\"}\r\n                            checked={\r\n                              filteredAnnouncements\r\n                                .slice(boundaries[0], boundaries[1])\r\n                                .filter((x) => x.selected).length ===\r\n                              boundaries[1] - boundaries[0]\r\n                            }\r\n                            onChange={(e) => {\r\n                              setFilteredAnnouncements((prev) => {\r\n                                let arr = [...prev];\r\n                                for (\r\n                                  let i = boundaries[0];\r\n                                  i < boundaries[1];\r\n                                  i++\r\n                                ) {\r\n                                  arr[i].selected = e.target.checked;\r\n                                }\r\n                                return arr;\r\n                              });\r\n                            }}\r\n                          ></Checkbox>\r\n                        </th>\r\n                        <th className=\"table-footer text-truncate text-left\">\r\n                          <div className=\"d-none d-lg-block\">Posted By</div>\r\n                          <div className=\"d-block d-lg-none\">By</div>\r\n                        </th>\r\n                        <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                          {\r\n                            [\"Type\", \"Description\", \"Duration\", \"Status\"][\r\n                              lastVisibleColumn\r\n                            ]\r\n                          }\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                          <div>Type</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                          <div>Description</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                          <div>Duration</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                          <div>Status</div>\r\n                        </th>\r\n                      </tr>\r\n                    </tfoot> */}\r\n                  </table>\r\n                </div>\r\n              </Swipeable>\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-center justify-content-sm-end\">\r\n              <div className=\"col-auto\">\r\n                <Pagination\r\n                  count={Math.ceil(filteredAnnouncements.length / 5)}\r\n                  current={page}\r\n                  setCurrent={setPage}\r\n                ></Pagination>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Announcements);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BsCalendar, BsClock } from \"react-icons/bs\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport date from \"date-and-time\";\r\nimport Loader from \"../utility/Loader\";\r\nimport store from \"../../store/store\";\r\nimport { EditAnnouncement as Edit } from \"../../server/DatabaseApi\";\r\n\r\nconst EditAnnouncement = ({ currentAnnouncement, getBack }) => {\r\n  const [announcement, setAnnouncement] = useState({\r\n    description: \"\",\r\n    type: \"\",\r\n    start_date: Date.now(),\r\n    end_date: Date.now(),\r\n    status: \"\",\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentAnnouncement) {\r\n      setAnnouncement(currentAnnouncement);\r\n    }\r\n  }, [currentAnnouncement]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const types = [\"Information\", \"Warning\", \"Error\"];\r\n  const statuses = [\"Published\", \"Drafted\", \"Expired\"];\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\">\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">Announcements</div>\r\n        <div className=\"row no-gutters\">Edit existing announcement</div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Type</div>\r\n          <div className=\"col-xl-40 col-md-50 col-60 pr-sm-3\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                popoverClass=\"col-sm-30 col-60\"\r\n                onSelect={(index) =>\r\n                  setAnnouncement((prev) =>\r\n                    Object.assign({}, prev, { type: types[index] })\r\n                  )\r\n                }\r\n                className=\"w-100 input-light px-3\"\r\n                items={types}\r\n                btnName={announcement.type ? announcement.type : \"Select\"}\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Description</div>\r\n          <div className=\"col-60\">\r\n            <textarea\r\n              value={announcement.description ? announcement.description : \"\"}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setAnnouncement((prev) =>\r\n                  Object.assign({}, prev, { description: e.target.value })\r\n                );\r\n              }}\r\n              className=\"textarea-light w-100\"\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div\r\n            className={`col-60 ${\r\n              announcement.description.split(\" \").length <= 499\r\n                ? \"text-muted\"\r\n                : \"text-danger\"\r\n            }`}\r\n          >\r\n            {announcement.description\r\n              ? 500 - announcement.description.split(\" \").length\r\n              : 500}{\" \"}\r\n            words left\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 pr-sm-3 mb-4\">\r\n                <div className=\"row no-gutters\">Start Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(announcement.start_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(announcement.start_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, { start_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(announcement.start_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              start_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(announcement.start_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters\">End Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(announcement.end_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(announcement.end_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, { end_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(announcement.end_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              end_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(announcement.end_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Type</div>\r\n          <div className=\"col-xl-40 col-md-50 col-60 pr-sm-3\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                popoverClass=\"col-sm-30 col-60\"\r\n                onSelect={(index) =>\r\n                  setAnnouncement((prev) =>\r\n                    Object.assign({}, prev, { status: statuses[index] })\r\n                  )\r\n                }\r\n                className=\"w-100 input-light px-3\"\r\n                items={statuses}\r\n                btnName={announcement.status ? announcement.status : \"Select\"}\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-60 mt-5\">\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n            onClick={() => getBack()}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n            onClick={async () => {\r\n              setLoading(true);\r\n              let res = await Edit(announcement);\r\n              setLoading(false);\r\n              if (res.error) {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Error\",\r\n                    message: res.error,\r\n                    type: \"failure\",\r\n                  },\r\n                });\r\n              } else {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Announcement updated\",\r\n                    message: \"Announcement was successfully updated\",\r\n                    type: \"success\",\r\n                  },\r\n                });\r\n                getBack();\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditAnnouncement;\r\n","import React, { useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BsCalendar, BsClock } from \"react-icons/bs\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport date from \"date-and-time\";\r\nimport { CreateAnnouncement } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../utility/Loader\";\r\n\r\nconst AddNewAnnouncement = ({ user, getBack }) => {\r\n  const [announcement, setAnnouncement] = useState({\r\n    description: \"\",\r\n    type: \"\",\r\n    start_date: Date.now(),\r\n    end_date: Date.now(),\r\n    status: \"Published\",\r\n  });\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const types = [\"Information\", \"Warning\", \"Error\"];\r\n  const statuses = [\"Published\", \"Drafted\", \"Deleted\"];\r\n\r\n  const validations = [\r\n    { valid: announcement.description, error: \"Description is required\" },\r\n    { valid: announcement.type, error: \"Type is required\" },\r\n    {\r\n      valid: announcement.start_date < announcement.end_date,\r\n      error: \"Start date must be before end date\",\r\n    },\r\n    {\r\n      valid: announcement.start_date !== announcement.end_date,\r\n      error: \"Announcement duration is 0\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\">\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">Announcements</div>\r\n        <div className=\"row no-gutters\">\r\n          Creat a brand new announcement and add to this site\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Type</div>\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                popoverClass=\"col-sm-30 col-60\"\r\n                onSelect={(index) =>\r\n                  setAnnouncement((prev) =>\r\n                    Object.assign({}, prev, { type: types[index] })\r\n                  )\r\n                }\r\n                className=\"w-100 input-light px-3\"\r\n                items={types}\r\n                btnName={announcement.type ? announcement.type : \"Select\"}\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Description</div>\r\n          <div className=\"col-60\">\r\n            <textarea\r\n              value={announcement.description ? announcement.description : \"\"}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setAnnouncement((prev) =>\r\n                  Object.assign({}, prev, { description: e.target.value })\r\n                );\r\n              }}\r\n              className=\"textarea-light w-100\"\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div\r\n            className={`col-60 ${\r\n              announcement.description.split(\" \").length <= 499\r\n                ? \"text-muted\"\r\n                : \"text-danger\"\r\n            }`}\r\n          >\r\n            {announcement.description\r\n              ? 500 - announcement.description.split(\" \").length\r\n              : 500}{\" \"}\r\n            words left\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 pr-sm-3 mb-4\">\r\n                <div className=\"row no-gutters\">Start Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(announcement.start_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(announcement.start_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, { start_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(announcement.start_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              start_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(announcement.start_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters\">End Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(announcement.end_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(announcement.end_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, { end_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(announcement.end_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              end_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(announcement.end_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Status</div>\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                popoverClass=\"col-sm-30 col-60\"\r\n                onSelect={(index) =>\r\n                  setAnnouncement((prev) =>\r\n                    Object.assign({}, prev, { status: statuses[index] })\r\n                  )\r\n                }\r\n                className=\"w-100 input-light px-3\"\r\n                items={statuses}\r\n                btnName={announcement.status ? announcement.status : \"Select\"}\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-60 mt-3\">\r\n        <div\r\n          style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n          className=\"row no-gutters align-items-center text-danger\"\r\n        >\r\n          {problem}\r\n        </div>\r\n        <div className=\"row no-gutters mt-2\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n            onClick={() => getBack()}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n            onClick={async () => {\r\n              if (user._id) {\r\n                let invalid = validations.filter((x) => !x.valid);\r\n                if (invalid.length) {\r\n                  setProblem(invalid[0].error);\r\n                } else {\r\n                  setLoading(true);\r\n                  let res = await CreateAnnouncement(\r\n                    Object.assign({}, announcement, { author: user._id })\r\n                  );\r\n                  setLoading(false);\r\n                  if (res.error) {\r\n                    store.dispatch({\r\n                      type: \"SET_NOTIFICATION\",\r\n                      notification: {\r\n                        title: \"Error\",\r\n                        message: res.error,\r\n                        type: \"failure\",\r\n                      },\r\n                    });\r\n                  } else {\r\n                    store.dispatch({\r\n                      type: \"SET_NOTIFICATION\",\r\n                      notification: {\r\n                        title: \"Announcement created\",\r\n                        message: \"You successfully created announcement\",\r\n                        type: \"success\",\r\n                      },\r\n                    });\r\n                    getBack();\r\n                  }\r\n                }\r\n              } else {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Login required\",\r\n                    message: \"You need to login to create announcements\",\r\n                    type: \"failure\",\r\n                  },\r\n                });\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(AddNewAnnouncement);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport Emoji from \"../user/Emoji\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport date from \"date-and-time\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport {\r\n  GetPromotions,\r\n  DeleteMultiplePromotions,\r\n} from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\nimport { connect } from \"react-redux\";\r\nimport history from \"../../History\";\r\n\r\nconst Promotions = ({\r\n  setEditPromotion,\r\n  setAddNewPromotionSection,\r\n  setEditPromotionSection,\r\n  ratings,\r\n}) => {\r\n  const [action, setAction] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"Description\");\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [typeFilter, setTypeFilter] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [mainFilter, setMainFilter] = useState({ key: \"\", value: \"\" });\r\n\r\n  const [promotions, setPromotions] = useState([]);\r\n  const [filteredPromotions, setFilteredPromotions] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let data = await GetPromotions();\r\n      if (!data.error) {\r\n        setPromotions(\r\n          data.map((x) => Object.assign({}, x, { selected: false }))\r\n        );\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    let arr = [...promotions];\r\n    if (promotions.length) {\r\n      if (search) {\r\n        if (searchKey === \"Description\") {\r\n          arr = arr.filter((x) =>\r\n            x.description.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Review\") {\r\n          arr = arr.filter(\r\n            (x) =>\r\n              x.content_type === \"Review\" &&\r\n              x.content.review.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        }\r\n      }\r\n\r\n      if (typeFilter) {\r\n        arr = arr.filter((x) =>\r\n          x.content_type.match(new RegExp(typeFilter, \"i\"))\r\n        );\r\n      }\r\n\r\n      if (mainFilter.key) {\r\n        arr = arr.filter((x) => x[mainFilter.key] === mainFilter.value);\r\n      }\r\n\r\n      setFilteredPromotions(arr);\r\n    }\r\n  }, [search, typeFilter, promotions, mainFilter]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //boundaries for slicing reviews array. (pagination)\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= filteredPromotions.length) {\r\n    boundaries[1] = boundaries[1] - (boundaries[1] - filteredPromotions.length);\r\n  }\r\n\r\n  const columns = [\"Review\", \"Rating\", \"Duration\", \"Status\"];\r\n  const searchOptions = [\"Description\", \"Review\"];\r\n\r\n  const publishStatuses = [\"Published\", \"Drafted\", \"Deleted\"];\r\n  return (\r\n    <div className=\"row no-gutters admin-screen\">\r\n      <div className=\"col-60 border-bottom\">\r\n        <div className=\"row no-gutters justify-content-between pb-3 align-items-end\">\r\n          <div className=\"col-auto\">\r\n            <div className=\"row no-gutters admin-screen-title\">\r\n              Promotions List\r\n            </div>\r\n            <div className=\"row no-gutters\">Edit, add and delete promtions</div>\r\n          </div>\r\n          <div\r\n            className=\"col-auto btn-custom btn-custom-primary btn-natural\"\r\n            onClick={() => setAddNewPromotionSection()}\r\n          >\r\n            Add New\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-60 py-5\">\r\n            <div className=\"row no-gutters h6 mb-3\">\r\n              <div\r\n                className={`cursor-pointer col-auto ${\r\n                  mainFilter.key === \"\" && !typeFilter\r\n                    ? \"text-primary\"\r\n                    : \"text-dark\"\r\n                }`}\r\n                onClick={() => {\r\n                  setTypeFilter(\"\");\r\n                  setType(\"\");\r\n                  setMainFilter({ key: \"\", value: \"\" });\r\n                }}\r\n              >\r\n                All ({promotions.length})\r\n              </div>\r\n              {publishStatuses.map((x, i) => (\r\n                <React.Fragment key={`status-${i}`}>\r\n                  <div className=\"col-auto px-2 text-muted\">|</div>\r\n                  <div\r\n                    onClick={() =>\r\n                      setMainFilter((prev) =>\r\n                        Object.assign({}, prev, {\r\n                          key: \"publish_status\",\r\n                          value: x,\r\n                        })\r\n                      )\r\n                    }\r\n                    className={`cursor-pointer col-auto ${\r\n                      mainFilter.key === \"publish_status\" &&\r\n                      mainFilter.value === x\r\n                        ? \"text-primary\"\r\n                        : \"text-dark\"\r\n                    }`}\r\n                  >\r\n                    {x} (\r\n                    {promotions.filter((y) => y.publish_status === x).length})\r\n                  </div>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-between\">\r\n              <div className=\"col-sm-auto col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) => setAction([\"Delete\"][index])}\r\n                        items={[\"Delete\"]}\r\n                        btnName={action ? action : \"Select Action\"}\r\n                        className=\"input-light px-3 col-auto\"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) =>\r\n                          setType([\"Review\", \"Comment\"][index])\r\n                        }\r\n                        items={[\"Review\", \"Comment\"]}\r\n                        btnName={type ? type : \"Select Type\"}\r\n                        className=\"input-light px-3 col-auto\"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    onClick={() => {\r\n                      if (action === \"Edit\") {\r\n                        let selected = filteredPromotions.filter(\r\n                          (x) => x.selected\r\n                        );\r\n                        if (selected.length) {\r\n                          setEditPromotion(selected[0]);\r\n                          setEditPromotionSection();\r\n                        }\r\n                      } else if (action === \"Delete\") {\r\n                        //delete review\r\n                      } else {\r\n                        setTypeFilter(type);\r\n                      }\r\n                    }}\r\n                    className=\"btn-custom btn-custom-primary col-60 col-sm-auto mb-3 mr-3 btn-xsmall\"\r\n                  >\r\n                    Apply\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 d-block d-sm-none\">\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <Select\r\n                    popoverClass=\"w-100\"\r\n                    onSelect={(index) => setSearchKey(searchOptions[index])}\r\n                    className=\"input-light col-60\"\r\n                    items={searchOptions}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <div className=\"col-60 position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      className=\"input-light w-100 pr-5 pl-3\"\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-auto mb-3 d-none d-sm-block\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    onSelect={(index) => setSearchKey(searchOptions[index])}\r\n                    className=\"table-input-prepend-select col-auto\"\r\n                    items={searchOptions}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                  <div className=\"col position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                      className=\"table-input pr-5 pl-3\"\r\n                      style={{ minWidth: \"300px\" }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <Swipeable\r\n                style={{ minWidth: \"100%\" }}\r\n                onSwipedLeft={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn + 1 < 4\r\n                      ? lastVisibleColumn + 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n                onSwipedRight={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn - 1 >= 0\r\n                      ? lastVisibleColumn - 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n              >\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table bg-white border\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"text-center\">\r\n                          <Checkbox\r\n                            color={\"primary\"}\r\n                            checked={\r\n                              filteredPromotions\r\n                                .slice(boundaries[0], boundaries[1])\r\n                                .filter((x) => x.selected).length ===\r\n                              boundaries[1] - boundaries[0]\r\n                            }\r\n                            onChange={(e) => {\r\n                              setFilteredPromotions((prev) => {\r\n                                let arr = [...prev];\r\n                                for (\r\n                                  let i = boundaries[0];\r\n                                  i < boundaries[1];\r\n                                  i++\r\n                                ) {\r\n                                  arr[i].selected = e.target.checked;\r\n                                }\r\n                                return arr;\r\n                              });\r\n                            }}\r\n                          ></Checkbox>\r\n                        </th>\r\n                        <th className=\"table-header text-truncate text-left\">\r\n                          Description\r\n                        </th>\r\n                        <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                          {columns[lastVisibleColumn]}\r\n                        </th>\r\n                        {columns.map((c, j) => (\r\n                          <th\r\n                            className=\"d-none d-xl-table-cell table-header text-truncate\"\r\n                            key={`column-${j}`}\r\n                          >\r\n                            <div>{c}</div>\r\n                          </th>\r\n                        ))}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filteredPromotions.length ? (\r\n                        filteredPromotions\r\n                          .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                          .map((x, i) => (\r\n                            <tr\r\n                              className=\"font-weight-600 bg-light\"\r\n                              key={`shortlist-item-${i}`}\r\n                            >\r\n                              <td className=\"text-center\">\r\n                                <Checkbox\r\n                                  color={\"primary\"}\r\n                                  checked={x.selected}\r\n                                  onChange={(e) => {\r\n                                    setFilteredPromotions((prev) => {\r\n                                      let arr = [...prev];\r\n                                      arr[(page - 1) * 5 + i].selected =\r\n                                        e.target.checked;\r\n                                      return arr;\r\n                                    });\r\n                                  }}\r\n                                ></Checkbox>\r\n                              </td>\r\n                              <td style={{ whiteSpace: \"nowrap\" }}>\r\n                                <div\r\n                                  className=\"mb-2\"\r\n                                  style={{ minWidth: \"150px\" }}\r\n                                >\r\n                                  {x.description}\r\n                                </div>\r\n                                <div className=\"d-flex\">\r\n                                  <div\r\n                                    className=\"text-primary underline-link\"\r\n                                    onClick={() => {\r\n                                      setEditPromotion(x);\r\n                                      setEditPromotionSection();\r\n                                    }}\r\n                                  >\r\n                                    Edit\r\n                                  </div>\r\n                                  <div className=\"px-2\">|</div>\r\n                                  <div\r\n                                    className=\"text-danger underline-link\"\r\n                                    onClick={async () => {\r\n                                      let res = await DeleteMultiplePromotions(\r\n                                        [x._id],\r\n                                        { status: \"Deleted\" }\r\n                                      );\r\n                                      if (res.error) {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Error\",\r\n                                            message: res.error,\r\n                                            type: \"failure\",\r\n                                          },\r\n                                        });\r\n                                      } else {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Promotion was deleted\",\r\n                                            message:\r\n                                              \"Promotion was successfully deleted\",\r\n                                            type: \"success\",\r\n                                          },\r\n                                        });\r\n                                      }\r\n                                      setRefresh(!refresh);\r\n                                    }}\r\n                                  >\r\n                                    Delete\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 0\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.content_type === \"Review\" ? (\r\n                                  <div style={{ minWidth: \"150px\" }}>\r\n                                    <div\r\n                                      className=\"cursor-pointer user-select-none btn-link\"\r\n                                      onClick={(e) => {\r\n                                        history.push(\r\n                                          `/movie/${x.movie_id}/${x.content_id}`\r\n                                        );\r\n                                      }}\r\n                                    >\r\n                                      {x.content.review}\r\n                                    </div>\r\n                                  </div>\r\n                                ) : (\r\n                                  <div\r\n                                    className=\"text-clamp-4 cursor-pointer user-select-none\"\r\n                                    onClick={(e) => {\r\n                                      let target = e.currentTarget;\r\n                                      if (\r\n                                        target.classList.contains(\r\n                                          \"text-clamp-4\"\r\n                                        )\r\n                                      ) {\r\n                                        target.classList.remove(\"text-clamp-4\");\r\n                                      } else {\r\n                                        target.classList.add(\"text-clamp-4\");\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    {x.content.comment}\r\n                                  </div>\r\n                                )}\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 1\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.content.rating ? (\r\n                                  <Emoji\r\n                                    emoji={\r\n                                      x.content.rating === \"excellent_rate\"\r\n                                        ? \"fire\"\r\n                                        : x.content.rating === \"good_rate\"\r\n                                        ? \"heart\"\r\n                                        : x.content.rating === \"ok_rate\"\r\n                                        ? \"heavy_division_sign\"\r\n                                        : \"shit\"\r\n                                    }\r\n                                  />\r\n                                ) : (\r\n                                  \"-\"\r\n                                )}\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 2\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                  <div className=\"d-inline-block mr-2\">\r\n                                    <div>From: </div>\r\n                                    <div>To: </div>\r\n                                  </div>\r\n                                  <div className=\"d-inline-block\">\r\n                                    <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                      {date.format(\r\n                                        new Date(x.start_date),\r\n                                        \"DD/MM/YYYY @ hh:mm A\"\r\n                                      )}\r\n                                      <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                        {date.format(\r\n                                          new Date(x.end_date),\r\n                                          \"DD/MM/YYYY @ hh:mm A\"\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  x.status === \"Published\"\r\n                                    ? \"text-green\"\r\n                                    : x.status === \"Drafted\"\r\n                                    ? \"text-orange\"\r\n                                    : \"text-danger\"\r\n                                } ${\r\n                                  lastVisibleColumn === 3\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.status === \"Published\"\r\n                                  ? \"Active\"\r\n                                  : x.status === \"Drafted\"\r\n                                  ? \"Inactive\"\r\n                                  : x.status}\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan={6} className=\" text-center py-5\">\r\n                            0 results found\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </Swipeable>\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-center justify-content-sm-end\">\r\n              <div className=\"col-auto\">\r\n                <Pagination\r\n                  count={Math.ceil(filteredPromotions.length / 5)}\r\n                  current={page}\r\n                  setCurrent={setPage}\r\n                ></Pagination>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Promotions);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BsCalendar, BsClock } from \"react-icons/bs\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport date from \"date-and-time\";\r\nimport { Ratings } from \"../../Data\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { EditPromotion as Edit } from \"../../server/DatabaseApi\";\r\n\r\nconst EditPromotion = ({ currentPromotion, getBack }) => {\r\n  const [promotion, setPromotion] = useState({\r\n    review: \"\",\r\n    comment: \"\",\r\n    review_id: 1,\r\n    comment_id: 1,\r\n    content_type: \"\",\r\n    publish_status: \"\",\r\n    active_status: \"\",\r\n    start_date: Date.now(),\r\n    end_date: Date.now(),\r\n    movie_title: \"\",\r\n    movie_id: \"\",\r\n    content: {},\r\n    title: \"\",\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setPromotion((prev) => Object.assign({}, prev, currentPromotion));\r\n  }, [currentPromotion]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const publishStatuses = [\"Published\", \"Drafted\", \"Deleted\"];\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\">\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">Edit Promotions</div>\r\n        <div className=\"row no-gutters\">Edit existing promotion</div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        {/* <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Type</div>\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                popoverClass=\"col-sm-30 col-60 pr-sm-3\"\r\n                onSelect={(index) =>\r\n                  setPromotion((prev) =>\r\n                    Object.assign({}, prev, { content_type: types[index] })\r\n                  )\r\n                }\r\n                className=\"w-100 input-light px-3\"\r\n                items={types}\r\n                btnName={\r\n                  promotion.content_type ? promotion.content_type : \"Select\"\r\n                }\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters mb-1\">Description</div>\r\n            <div className=\"row no-gutters\">\r\n              <textarea\r\n                value={promotion.description ? promotion.description : \"\"}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setPromotion((prev) =>\r\n                    Object.assign({}, prev, { description: e.target.value })\r\n                  );\r\n                }}\r\n                className=\"textarea-light w-100\"\r\n                style={{ height: \"150px\" }}\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-xl-40 col-md-50 col-60 mb-1\">\r\n            {promotion.content_type}\r\n          </div>\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <textarea\r\n              value={\r\n                promotion.content\r\n                  ? promotion.content_type === \"Review\"\r\n                    ? promotion.content.review\r\n                    : promotion.content.comment\r\n                  : \"\"\r\n              }\r\n              onChange={(e) => {\r\n                e.persist();\r\n                let text = e.target.value;\r\n                if (text.split(\" \").length <= 500) {\r\n                  if (promotion.content_type === \"Review\") {\r\n                    let newContent = { ...promotion.content };\r\n                    newContent.review = text;\r\n                    setPromotion((prev) =>\r\n                      Object.assign({}, prev, { content: newContent })\r\n                    );\r\n                  } else {\r\n                    let newContent = { ...promotion.content };\r\n                    newContent.comment = text;\r\n                    setPromotion((prev) =>\r\n                      Object.assign({}, prev, { content: newContent })\r\n                    );\r\n                  }\r\n                }\r\n              }}\r\n              className=\"textarea-light w-100\"\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div\r\n            className={`col-60 ${\r\n              promotion.content_type\r\n                ? promotion.content_type === \"Review\"\r\n                  ? promotion.content.review.split(\" \").length <= 499\r\n                    ? \"text-muted\"\r\n                    : \"text-danger\"\r\n                  : promotion.content.comment.split(\" \").length <= 499\r\n                  ? \"text-muted\"\r\n                  : \"text-danger\"\r\n                : \"\"\r\n            }`}\r\n          >\r\n            {promotion.content.review\r\n              ? promotion.content.review.length\r\n                ? 500 - promotion.content.review.split(\" \").length\r\n                : 500\r\n              : promotion.content.comment\r\n              ? promotion.content.comment.length\r\n                ? 500 - promotion.content.comment.split(\" \").length\r\n                : 500\r\n              : \"\"}{\" \"}\r\n            words left\r\n          </div>\r\n        </div>\r\n        {promotion.content_type === \"Review\" && (\r\n          <div className=\"col-xl-40 col-md-50 col-60 mb-4 px-0\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60\">Rating</div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-sm-30 col-60 pr-sm-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    popoverClass=\"col-60\"\r\n                    className=\"input-light px-3\"\r\n                    btnName={\r\n                      promotion.content.rating\r\n                        ? Ratings.find(\r\n                            (x) => x.name === promotion.content.rating\r\n                          ).element\r\n                        : \"Select\"\r\n                    }\r\n                    onSelect={(index) => {\r\n                      let content = { ...promotion.content };\r\n                      content.rating = Ratings[index].name;\r\n                      setPromotion((prev) =>\r\n                        Object.assign({}, prev, { content: content })\r\n                      );\r\n                    }}\r\n                    items={Ratings.map((x) => x.element)}\r\n                  ></Select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-sm-30 col-60 pr-sm-3 mb-4\">\r\n                <div className=\"row no-gutters\">Start Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <DayPickerInput\r\n                    value={date.format(\r\n                      new Date(promotion.start_date),\r\n                      \"DD/MM/YYYY\"\r\n                    )}\r\n                    component={(props) => (\r\n                      <div className=\"position-relative w-100\">\r\n                        <BsCalendar\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            bottom: 0,\r\n                            margin: \"auto\",\r\n                            left: \"18px\",\r\n                          }}\r\n                        ></BsCalendar>\r\n                        <input\r\n                          {...props}\r\n                          className=\"input-light w-100 pl-5 pr-3\"\r\n                          placeholder=\"YYYY-MM-DD\"\r\n                        ></input>\r\n                      </div>\r\n                    )}\r\n                    onDayChange={(day) => {\r\n                      if (day) {\r\n                        let d = new Date(promotion.start_date);\r\n                        let year = day.getFullYear();\r\n                        let month = day.getMonth();\r\n                        let niceDay = day.getDate();\r\n                        d.setFullYear(year);\r\n                        d.setMonth(month);\r\n                        d.setDate(niceDay);\r\n                        setPromotion((prev) =>\r\n                          Object.assign({}, prev, { start_date: d.getTime() })\r\n                        );\r\n                      }\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-30 col-60 mb-4\">\r\n                <div className=\"row no-gutters\">End Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <DayPickerInput\r\n                    value={date.format(\r\n                      new Date(promotion.end_date),\r\n                      \"DD/MM/YYYY\"\r\n                    )}\r\n                    component={(props) => (\r\n                      <div className=\"position-relative w-100\">\r\n                        <BsCalendar\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            bottom: 0,\r\n                            margin: \"auto\",\r\n                            left: \"18px\",\r\n                          }}\r\n                        ></BsCalendar>\r\n                        <input\r\n                          {...props}\r\n                          className=\"input-light w-100 pl-5 pr-3\"\r\n                          placeholder=\"YYYY-MM-DD\"\r\n                        ></input>\r\n                      </div>\r\n                    )}\r\n                    onDayChange={(day) => {\r\n                      if (day) {\r\n                        let d = new Date(promotion.end_date);\r\n                        let year = day.getFullYear();\r\n                        let month = day.getMonth();\r\n                        let niceDay = day.getDate();\r\n                        d.setFullYear(year);\r\n                        d.setMonth(month);\r\n                        d.setDate(niceDay);\r\n                        setPromotion((prev) =>\r\n                          Object.assign({}, prev, { end_date: d.getTime() })\r\n                        );\r\n                      }\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-sm-30 pr-sm-3 col-60 mb-4\">\r\n                <div className=\"row no-gutters\">Start Time</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 position-relative input-light\">\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(promotion.start_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setPromotion((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              start_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(promotion.start_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-30 col-60 mb-4\">\r\n                <div className=\"row no-gutters\">End Time</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 position-relative input-light\">\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(promotion.end_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setPromotion((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              end_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(promotion.end_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Status</div>\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-sm-30 col-60 pr-sm-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    popoverClass=\"col-60\"\r\n                    onSelect={(index) =>\r\n                      setPromotion((prev) =>\r\n                        Object.assign({}, prev, {\r\n                          status: publishStatuses[index],\r\n                        })\r\n                      )\r\n                    }\r\n                    className=\"w-100 input-light px-3\"\r\n                    items={publishStatuses}\r\n                    btnName={promotion.status ? promotion.status : \"Select\"}\r\n                  ></Select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mt-2\">\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n            onClick={getBack}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n            onClick={async () => {\r\n              setLoading(true);\r\n              let res = await Edit(promotion);\r\n              setLoading(false);\r\n              if (res.error) {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Error\",\r\n                    message: res.error,\r\n                    type: \"failure\",\r\n                  },\r\n                });\r\n              } else {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Promotion updated\",\r\n                    message: \"Promotion was successfully updated\",\r\n                    type: \"success\",\r\n                  },\r\n                });\r\n                getBack();\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPromotion;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BsCalendar, BsClock, BsSearch } from \"react-icons/bs\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport date from \"date-and-time\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport Emoji from \"../user/Emoji\";\r\nimport { GetReviews, CreatePromotions } from \"../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\n\r\nconst AddNewPromotion = ({ publicUsers, getBack, ratings }) => {\r\n  const [promotion, setPromotion] = useState({\r\n    description: \"\",\r\n    start_date: Date.now(),\r\n    end_date: Date.now(),\r\n    content_type: \"\",\r\n    status: \"Published\",\r\n  });\r\n  const [page, setPage] = useState(1);\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchKey, setSearchKey] = useState(\"User\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [candidates, setCandidates] = useState([]);\r\n  const searchKeys = [\"User\", \"Movie\", \"Review\"];\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let rev = await GetReviews();\r\n      if (!rev.error) {\r\n        setReviews(rev);\r\n      }\r\n\r\n      // let com = await GetComments();\r\n      // if (!com.error) {\r\n      //   setComments(com);\r\n      // }\r\n    }\r\n\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let arr = [];\r\n    if (search) {\r\n      if (searchKey === \"User\") {\r\n        if (Object.values(publicUsers).length) {\r\n          reviews.forEach((x) => {\r\n            if (\r\n              publicUsers[x.author].display_name\r\n                .toLowerCase()\r\n                .includes(search.toLowerCase())\r\n            ) {\r\n              arr.push(x);\r\n            }\r\n          });\r\n        }\r\n      } else if (searchKey === \"Movie\") {\r\n        reviews.forEach((x) => {\r\n          if (\r\n            ratings[x.movie_id] &&\r\n            ratings[x.movie_id].movie_title\r\n              .toLowerCase()\r\n              .includes(search.toLowerCase())\r\n          ) {\r\n            arr.push(x);\r\n          }\r\n        });\r\n      } else if (searchKey === \"Review\") {\r\n        reviews.forEach((x) => {\r\n          if (x.review.toLowerCase().includes(search.toLowerCase())) {\r\n            arr.push(x);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      arr = arr.concat([...reviews]);\r\n    }\r\n\r\n    setCandidates(arr.map((x) => Object.assign({}, x, { selected: false })));\r\n  }, [search, reviews]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= candidates.length) {\r\n    boundaries[1] = boundaries[1] - (boundaries[1] - candidates.length);\r\n  }\r\n\r\n  const columns = [\"Movie Name\", \"Review\", \"Rating\", \"Posted On\", \"Reported\"];\r\n\r\n  const validations = [\r\n    { valid: promotion.description, error: \"Description is required\" },\r\n    {\r\n      valid: promotion.start_date < promotion.end_date,\r\n      error: \"Start date must be before end date\",\r\n    },\r\n    {\r\n      valid: promotion.start_date !== promotion.end_date,\r\n      error: \"promotion duration is 0\",\r\n    },\r\n    {\r\n      valid: candidates.filter((x) => x.selected).length,\r\n      error: \"No content selected\",\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"row no-gutters p-sm-5 p-4\">\r\n      <div className=\"col-60 border-bottom mb-4\">\r\n        <div className=\"row no-gutters justify-content-between\">\r\n          <div className=\"col-auto py-3\">\r\n            <div className=\"row no-gutters admin-screen-title\">\r\n              Promote Content\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              Edit, add and delete promotions\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-xl-40 col-md-50 col-60\">\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters mb-1\">Description</div>\r\n            <div className=\"row no-gutters\">\r\n              <textarea\r\n                value={promotion.description ? promotion.description : \"\"}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setPromotion((prev) =>\r\n                    Object.assign({}, prev, { description: e.target.value })\r\n                  );\r\n                }}\r\n                className=\"textarea-light w-100\"\r\n                style={{ height: \"150px\" }}\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 pr-sm-3 mb-4\">\r\n                <div className=\"row no-gutters\">Start Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(promotion.start_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(promotion.start_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setPromotion((prev) =>\r\n                            Object.assign({}, prev, { start_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(promotion.start_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setPromotion((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              start_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(promotion.start_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters\">End Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(promotion.end_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(promotion.end_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setPromotion((prev) =>\r\n                            Object.assign({}, prev, { end_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(promotion.end_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setPromotion((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              end_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(promotion.end_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-3 h6 mt-4\">\r\n          Select Content To Promote\r\n        </div>\r\n        <div className=\"row no-gutters mb-3\">\r\n          <Select\r\n            onSelect={(index) => setSearchKey(searchKeys[index])}\r\n            className=\"table-input-prepend-select col-auto bg-custom-primary text-white\"\r\n            items={searchKeys}\r\n            btnName={`Search by ${searchKey}`}\r\n          ></Select>\r\n          <div className=\"col position-relative\" style={{ maxWidth: \"400px\" }}>\r\n            <BsSearch\r\n              fontSize=\"20px\"\r\n              style={{\r\n                position: \"absolute\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                right: \"18px\",\r\n              }}\r\n            ></BsSearch>\r\n            <input\r\n              value={search}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setSearch(e.target.value);\r\n              }}\r\n              className=\"table-input pr-5 pl-3 w-100\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters\">\r\n          <Swipeable\r\n            style={{ minWidth: \"100%\" }}\r\n            onSwipedLeft={() => {\r\n              setLastVisibleColumn(\r\n                lastVisibleColumn + 1 < 4\r\n                  ? lastVisibleColumn + 1\r\n                  : lastVisibleColumn\r\n              );\r\n            }}\r\n            onSwipedRight={() => {\r\n              setLastVisibleColumn(\r\n                lastVisibleColumn - 1 >= 0\r\n                  ? lastVisibleColumn - 1\r\n                  : lastVisibleColumn\r\n              );\r\n            }}\r\n          >\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table bg-white border\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">\r\n                      <Checkbox\r\n                        color={\"primary\"}\r\n                        checked={\r\n                          candidates\r\n                            .slice(boundaries[0], boundaries[1])\r\n                            .filter((x) => x.selected).length ===\r\n                          boundaries[1] - boundaries[0]\r\n                        }\r\n                        onChange={(e) => {\r\n                          setCandidates((prev) => {\r\n                            let arr = [...prev];\r\n                            for (\r\n                              let i = boundaries[0];\r\n                              i < boundaries[1];\r\n                              i++\r\n                            ) {\r\n                              arr[i].selected = e.target.checked;\r\n                            }\r\n                            return arr;\r\n                          });\r\n                        }}\r\n                      ></Checkbox>\r\n                    </th>\r\n                    <th className=\"table-header text-truncate text-left\">\r\n                      <div className=\"d-none d-lg-block\">Posted By</div>\r\n                      <div className=\"d-block d-lg-none\">By</div>\r\n                    </th>\r\n                    <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                      {columns[lastVisibleColumn]}\r\n                    </th>\r\n                    {columns.map((c, p) => (\r\n                      <th\r\n                        className=\"d-none d-xl-table-cell table-header text-truncate\"\r\n                        key={`x-col-${p}`}\r\n                      >\r\n                        <div>{c}</div>\r\n                      </th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {candidates.length ? (\r\n                    candidates\r\n                      .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                      .map((x, i) => (\r\n                        <tr\r\n                          className=\"font-weight-600 bg-light\"\r\n                          key={`shortlist-item-${i}`}\r\n                        >\r\n                          <td className=\"text-center\">\r\n                            <Checkbox\r\n                              color={\"primary\"}\r\n                              checked={x.selected}\r\n                              onChange={(e) => {\r\n                                setCandidates((prev) => {\r\n                                  let arr = [...prev];\r\n                                  arr[(page - 1) * 5 + i].selected =\r\n                                    e.target.checked;\r\n                                  return arr;\r\n                                });\r\n                              }}\r\n                            ></Checkbox>\r\n                          </td>\r\n                          <td style={{ whiteSpace: \"nowrap\" }}>\r\n                            <div className=\"d-inline-block mr-2\">\r\n                              <div\r\n                                className=\"square-50 rounded-circle bg-image\"\r\n                                style={{\r\n                                  backgroundImage: `url(${\r\n                                    Object.values(publicUsers).length\r\n                                      ? publicUsers[x.author].photo\r\n                                      : \"\"\r\n                                  })`,\r\n                                }}\r\n                              ></div>\r\n                            </div>\r\n                            {Object.values(publicUsers).length ? (\r\n                              <div className=\"d-none d-md-inline-block align-top\">\r\n                                <div className=\"h6 text-primary\">\r\n                                  {publicUsers[x.author].display_name}\r\n                                </div>\r\n                                <div>{publicUsers[x.author].email}</div>\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 0\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            {ratings[x.movie_id]\r\n                              ? ratings[x.movie_id].movie_title\r\n                              : \"\"}\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 1\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            {!x.comment ? (\r\n                              <div style={{ minWidth: \"200px\" }}>\r\n                                <div\r\n                                  className=\"text-clamp-4 cursor-pointer user-select-none\"\r\n                                  onClick={(e) => {\r\n                                    let target = e.currentTarget;\r\n                                    if (\r\n                                      target.classList.contains(\"text-clamp-4\")\r\n                                    ) {\r\n                                      target.classList.remove(\"text-clamp-4\");\r\n                                    } else {\r\n                                      target.classList.add(\"text-clamp-4\");\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  {x.review}\r\n                                </div>\r\n                              </div>\r\n                            ) : (\r\n                              <div\r\n                                className=\"text-clamp-4 cursor-pointer user-select-none\"\r\n                                onClick={(e) => {\r\n                                  let target = e.currentTarget;\r\n                                  if (\r\n                                    target.classList.contains(\"text-clamp-4\")\r\n                                  ) {\r\n                                    target.classList.remove(\"text-clamp-4\");\r\n                                  } else {\r\n                                    target.classList.add(\"text-clamp-4\");\r\n                                  }\r\n                                }}\r\n                              >\r\n                                {x.comment}\r\n                              </div>\r\n                            )}\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 2\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            {x.rating ? (\r\n                              <Emoji\r\n                                emoji={\r\n                                  x.rating === \"excellent_rate\"\r\n                                    ? \"fire\"\r\n                                    : x.rating === \"good_rate\"\r\n                                    ? \"heart\"\r\n                                    : x.rating === \"ok_rate\"\r\n                                    ? \"heavy_division_sign\"\r\n                                    : \"shit\"\r\n                                }\r\n                              />\r\n                            ) : (\r\n                              \"-\"\r\n                            )}\r\n                          </td>\r\n                          <td\r\n                            style={{ whiteSpace: \"nowrap\" }}\r\n                            className={`${\r\n                              lastVisibleColumn === 3\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div>\r\n                              {date.format(\r\n                                new Date(x.date),\r\n                                \"DD/MM/YYYY @ hh:mm A\"\r\n                              )}\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              !x.reported ? \"text-green\" : \"text-danger\"\r\n                            } ${\r\n                              lastVisibleColumn === 4\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            {x.reported ? \"Abused\" : \"Not Reported\"}\r\n                          </td>\r\n                        </tr>\r\n                      ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan={3} className=\" text-center py-5\">\r\n                        0 results found\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </Swipeable>\r\n        </div>\r\n        <div className=\"row no-gutters justify-content-end\">\r\n          <div className=\"col-auto\">\r\n            <Pagination\r\n              count={Math.ceil(candidates.length / 5)}\r\n              current={page}\r\n              setCurrent={setPage}\r\n            ></Pagination>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-60 mt-1 px-0\">\r\n          <div\r\n            style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n            className=\"row no-gutters align-items-center text-danger mb-2\"\r\n          >\r\n            {problem}\r\n          </div>\r\n          <div className=\"row no-gutters\">\r\n            <div\r\n              className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n              onClick={() => getBack()}\r\n            >\r\n              Cancel\r\n            </div>\r\n            <div\r\n              className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n              onClick={async () => {\r\n                let invalid = validations.filter((x) => !x.valid);\r\n                if (invalid.length) {\r\n                  setProblem(invalid[0].error);\r\n                } else {\r\n                  let promos = candidates\r\n                    .filter((x) => x.selected)\r\n                    .map((x) =>\r\n                      Object.assign({}, promotion, {\r\n                        content_type: x.comment ? \"Comment\" : \"Review\",\r\n                        content: x.comment\r\n                          ? { comment: x.comment }\r\n                          : { review: x.review, rating: x.rating },\r\n                        content_id: x._id,\r\n                        content_author: x.author,\r\n                        movie_title: x.movie_title,\r\n                        movie_genres: x.movie_genres,\r\n                        movie_poster: x.movie_poster,\r\n                        movie_release_date: x.movie_release_date,\r\n                        movie_id: x.movie_id,\r\n                      })\r\n                    );\r\n                  setLoading(true);\r\n                  let res = await CreatePromotions(promos);\r\n                  setLoading(false);\r\n                  if (res.error) {\r\n                    store.dispatch({\r\n                      type: \"SET_NOTIFICATION\",\r\n                      notification: {\r\n                        title: \"Error\",\r\n                        message: res.error,\r\n                        type: \"failure\",\r\n                      },\r\n                    });\r\n                  } else {\r\n                    store.dispatch({\r\n                      type: \"SET_NOTIFICATION\",\r\n                      notification: {\r\n                        title: \"Promotions created\",\r\n                        message: \"Promotions were successfully created\",\r\n                        type: \"success\",\r\n                      },\r\n                    });\r\n                    getBack();\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              <Loader\r\n                color={\"white\"}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  left: \"10px\",\r\n                  top: 0,\r\n                  bottom: 0,\r\n                  margin: \"auto\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                loading={loading}\r\n                size={20}\r\n              ></Loader>\r\n              Save\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(AddNewPromotion);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport date from \"date-and-time\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport {\r\n  GetNotifications,\r\n  DeleteMultipleNotifications,\r\n} from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\n\r\nconst Notifications = ({\r\n  setEditNotification,\r\n  setEditNotificationSection,\r\n  setAddNewNotificationSection,\r\n}) => {\r\n  const [action, setAction] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"Subject\");\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [typeFilter, setTypeFilter] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [mainFilter, setMainFilter] = useState({ key: \"\", value: \"\" });\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [filteredNotifications, setFilteredNotifications] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let data = await GetNotifications();\r\n      if (!data.error) {\r\n        setNotifications(\r\n          data.reverse().map((x) => Object.assign({}, x, { selected: false }))\r\n        );\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, [refresh]);\r\n\r\n  const types = [\"App\", \"Email\", \"System\"];\r\n\r\n  useEffect(() => {\r\n    let arr = [...notifications];\r\n    if (notifications.length) {\r\n      if (search) {\r\n        if (searchKey === \"Subject\") {\r\n          arr = arr.filter((x) =>\r\n            x.subject.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Description\") {\r\n          arr = arr.filter((x) =>\r\n            x.description.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        }\r\n      }\r\n\r\n      if (typeFilter) {\r\n        arr = arr.filter((x) => x.type === typeFilter);\r\n      }\r\n\r\n      if (mainFilter.key) {\r\n        arr = arr.filter((x) => x[mainFilter.key] === mainFilter.value);\r\n      }\r\n\r\n      setFilteredNotifications(arr);\r\n    }\r\n  }, [search, typeFilter, notifications, mainFilter]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //boundaries for slicing reviews array. (pagination)\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= filteredNotifications.length) {\r\n    boundaries[1] =\r\n      boundaries[1] - (boundaries[1] - filteredNotifications.length);\r\n  }\r\n\r\n  const statuses = [\"Sent\", \"Drafted\", \"Deleted\"];\r\n\r\n  const handleApply = async (all = false) => {\r\n    if (all) {\r\n      setTypeFilter(type);\r\n    }\r\n    if (action === \"Edit\") {\r\n      let selected = filteredNotifications.filter((x) => x.selected);\r\n      if (selected.length) {\r\n        setEditNotification(selected[0]);\r\n        setEditNotificationSection();\r\n      }\r\n    } else if (action === \"Delete\") {\r\n      let selected = filteredNotifications.filter((x) => x.selected);\r\n      if (selected.length) {\r\n        let res = await DeleteMultipleNotifications(\r\n          selected.map((x) => x._id),\r\n          { status: \"Deleted\" }\r\n        );\r\n        if (res.error) {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Error\",\r\n              message: res.error,\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Selected notifications deleted\",\r\n              message: \"Selected notifications were successfully deleted\",\r\n              type: \"success\",\r\n            },\r\n          });\r\n          store.dispatch({\r\n            type: \"UPDATE_USER\",\r\n            userProperty: { update: Date.now() },\r\n          });\r\n        }\r\n        setRefresh(!refresh);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row no-gutters admin-screen\">\r\n      <div className=\"col-60 border-bottom\">\r\n        <div className=\"row no-gutters justify-content-between pb-3 align-items-end\">\r\n          <div className=\"col-auto\">\r\n            <div className=\"row no-gutters admin-screen-title\">\r\n              Notifications\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              Create, send and manage notifications\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"col-auto btn-custom btn-custom-primary btn-natural\"\r\n            onClick={() => setAddNewNotificationSection()}\r\n          >\r\n            Add New\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-60 py-5\">\r\n            <div className=\"row no-gutters h6 mb-3\">\r\n              <div\r\n                onClick={() => {\r\n                  setTypeFilter(\"\");\r\n                  setType(\"\");\r\n                  setMainFilter({ key: \"\", value: \"\" });\r\n                }}\r\n                className={`col-auto cursor-pointer ${\r\n                  !typeFilter && !mainFilter.key ? \"text-primary\" : \"text-dark\"\r\n                }`}\r\n              >\r\n                All ({notifications.length})\r\n              </div>\r\n              {statuses.map((x, i) => (\r\n                <React.Fragment key={`status-${i}`}>\r\n                  <div className=\"col-auto px-2 text-muted\">|</div>\r\n                  <div\r\n                    onClick={() =>\r\n                      setMainFilter((prev) =>\r\n                        Object.assign({ key: \"status\", value: x })\r\n                      )\r\n                    }\r\n                    className={`col-auto cursor-pointer ${\r\n                      mainFilter.key === \"status\" && mainFilter.value === x\r\n                        ? \"text-primary\"\r\n                        : \"text-dark\"\r\n                    }`}\r\n                  >\r\n                    {x} ({notifications.filter((y) => y.status === x).length})\r\n                  </div>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-between\">\r\n              <div className=\"col-sm-auto col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) => setAction([\"Delete\"][index])}\r\n                        items={[\"Delete\"]}\r\n                        btnName={action ? action : \"Select Action\"}\r\n                        className=\"input-light px-3 col-auto\"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) => setType(types[index])}\r\n                        items={types}\r\n                        btnName={type ? type : \"Select Type\"}\r\n                        className=\"input-light px-3 col-auto\"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    onClick={() => handleApply(true)}\r\n                    className=\"btn-custom btn-custom-primary col-60 col-sm-auto mb-3 mr-3 btn-xsmall\"\r\n                  >\r\n                    Apply\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 d-block d-sm-none\">\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <Select\r\n                    popoverClass=\"w-100\"\r\n                    onSelect={(index) =>\r\n                      setSearchKey([\"Subject\", \"Description\"][index])\r\n                    }\r\n                    className=\"input-light col-60\"\r\n                    items={[\"Subject\", \"Description\"]}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <div className=\"col-60 position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      className=\"input-light w-100 pr-5 pl-3\"\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-auto mb-3 d-none d-sm-block\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    onSelect={(index) =>\r\n                      setSearchKey([\"Subject\", \"Description\"][index])\r\n                    }\r\n                    className=\"table-input-prepend-select col-auto\"\r\n                    items={[\"Subject\", \"Description\"]}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                  <div className=\"col position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                      className=\"table-input pr-5 pl-3\"\r\n                      style={{ minWidth: \"300px\" }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <Swipeable\r\n                style={{ minWidth: \"100%\" }}\r\n                onSwipedLeft={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn + 1 < 4\r\n                      ? lastVisibleColumn + 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n                onSwipedRight={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn - 1 >= 0\r\n                      ? lastVisibleColumn - 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n              >\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table bg-white border\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"text-center\">\r\n                          <Checkbox\r\n                            color={\"primary\"}\r\n                            checked={\r\n                              filteredNotifications\r\n                                .slice(boundaries[0], boundaries[1])\r\n                                .filter((x) => x.selected).length ===\r\n                              boundaries[1] - boundaries[0]\r\n                            }\r\n                            onChange={(e) => {\r\n                              setFilteredNotifications((prev) => {\r\n                                let arr = [...prev];\r\n                                for (\r\n                                  let i = boundaries[0];\r\n                                  i < boundaries[1];\r\n                                  i++\r\n                                ) {\r\n                                  arr[i].selected = e.target.checked;\r\n                                }\r\n                                return arr;\r\n                              });\r\n                            }}\r\n                          ></Checkbox>\r\n                        </th>\r\n                        <th className=\"table-header text-truncate text-left\">\r\n                          Subject\r\n                        </th>\r\n                        <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                          {\r\n                            [\"Type\", \"Description\", \"Duration\", \"Status\"][\r\n                              lastVisibleColumn\r\n                            ]\r\n                          }\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Type</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Description</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Duration</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Status</div>\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filteredNotifications.length ? (\r\n                        filteredNotifications\r\n                          .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                          .map((x, i) => (\r\n                            <tr\r\n                              className=\"font-weight-600 bg-light\"\r\n                              key={`shortlist-item-${i}`}\r\n                            >\r\n                              <td className=\"text-center\">\r\n                                <Checkbox\r\n                                  color={\"primary\"}\r\n                                  checked={x.selected}\r\n                                  onChange={(e) => {\r\n                                    setFilteredNotifications((prev) => {\r\n                                      let arr = [...prev];\r\n                                      arr[(page - 1) * 5 + i].selected =\r\n                                        e.target.checked;\r\n                                      return arr;\r\n                                    });\r\n                                  }}\r\n                                ></Checkbox>\r\n                              </td>\r\n                              <td style={{ whiteSpace: \"nowrap\" }}>\r\n                                <div className=\"mb-2\">{x.subject}</div>\r\n                                <div className=\"d-flex\">\r\n                                  <div\r\n                                    className=\"text-primary underline-link\"\r\n                                    onClick={() => {\r\n                                      setEditNotification(x);\r\n                                      setEditNotificationSection();\r\n                                    }}\r\n                                  >\r\n                                    Edit\r\n                                  </div>\r\n                                  <div className=\"px-2\">|</div>\r\n                                  <div\r\n                                    className=\"text-danger underline-link\"\r\n                                    onClick={async () => {\r\n                                      let res = await DeleteMultipleNotifications(\r\n                                        [x._id],\r\n                                        { status: \"Deleted\" }\r\n                                      );\r\n                                      if (res.error) {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Error\",\r\n                                            message: res.error,\r\n                                            type: \"failure\",\r\n                                          },\r\n                                        });\r\n                                      } else {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Notification was deleted\",\r\n                                            message:\r\n                                              \"Notification was successfully deleted\",\r\n                                            type: \"success\",\r\n                                          },\r\n                                        });\r\n                                        store.dispatch({\r\n                                          type: \"UPDATE_USER\",\r\n                                          userProperty: { update: Date.now() },\r\n                                        });\r\n                                      }\r\n                                      setRefresh(!refresh);\r\n                                    }}\r\n                                  >\r\n                                    Delete\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 0\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div>{x.type}</div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 1\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div\r\n                                  style={{ minWidth: \"200px\" }}\r\n                                  className=\"text-clamp-4 cursor-pointer user-select-none\"\r\n                                  onClick={(e) => {\r\n                                    let target = e.currentTarget;\r\n                                    if (\r\n                                      target.classList.contains(\"text-clamp-4\")\r\n                                    ) {\r\n                                      target.classList.remove(\"text-clamp-4\");\r\n                                    } else {\r\n                                      target.classList.add(\"text-clamp-4\");\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  {x.description}\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 2\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div className=\"d-flex mb-2\">\r\n                                  <div style={{ width: \"55px\" }}>From:</div>\r\n                                  <div>\r\n                                    <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                      {date.format(\r\n                                        new Date(x.start_date),\r\n                                        \"DD/MM/YYYY @ hh:mm A\"\r\n                                      )}\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"d-flex\">\r\n                                  <div style={{ width: \"55px\" }}>To:</div>\r\n                                  <div>\r\n                                    <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                      {date.format(\r\n                                        new Date(x.end_date),\r\n                                        \"DD/MM/YYYY @ hh:mm A\"\r\n                                      )}\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 3\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.status}\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan={6} className=\" text-center py-5\">\r\n                            0 results found\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </Swipeable>\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-center justify-content-sm-end\">\r\n              <div className=\"col-auto\">\r\n                <Pagination\r\n                  count={Math.ceil(filteredNotifications.length / 5)}\r\n                  current={page}\r\n                  setCurrent={setPage}\r\n                ></Pagination>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import { default as MuiAutocomplete } from \"@material-ui/lab/Autocomplete\";\r\nimport React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputRoot: {\r\n    \"& .MuiOutlinedInput-notchedOutline\": {\r\n      border: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"rgb(255, 0, 64)\",\r\n    },\r\n    secondary: {\r\n      main: \"#202020\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Autocomplete = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <MuiAutocomplete\r\n        {...props}\r\n        classes={classes}\r\n        multiple\r\n        id=\"tags-outlined\"\r\n        filterSelectedOptions\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"outlined\"\r\n            placeholder={props.placeholder}\r\n          />\r\n        )}\r\n      ></MuiAutocomplete>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Autocomplete;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Autocomplete from \"../utility/Autocomplete\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BsCalendar, BsClock } from \"react-icons/bs\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport date from \"date-and-time\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { EditNotification as Edit, GetUser } from \"../../server/DatabaseApi\";\r\n\r\nconst EditNotification = ({\r\n  currentNotification,\r\n  getBack,\r\n  publicUsers,\r\n  user,\r\n}) => {\r\n  const types = [\"App\", \"Email\", \"System\"];\r\n\r\n  let initialDate = Date.now();\r\n\r\n  const [notification, setNotification] = useState({\r\n    type: \"\",\r\n    subject: \"\",\r\n    start_date: initialDate,\r\n    end_date: initialDate,\r\n    receivers: [],\r\n    description: \"\",\r\n    status: \"Drafted\",\r\n  });\r\n\r\n  const statuses = [\"Sent\", \"Drafted\", \"Deleted\"];\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const validations = [\r\n    { valid: notification.subject, error: \"Subject is required\" },\r\n    { valid: notification.type, error: \"Select notification type\" },\r\n    {\r\n      valid: notification.receivers.length,\r\n      error: \"Select at least one receiver\",\r\n    },\r\n    { valid: notification.description, error: \"Description is required\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setNotification(currentNotification);\r\n  }, [currentNotification]);\r\n\r\n  const autocompleteOptions = {\r\n    All: \"All\",\r\n    \"All users\": \"User\",\r\n    \"All admins\": \"Administrator\",\r\n    \"Inactive users\": \"Inactive\",\r\n    \"Active users\": \"Active\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-sm-5 p-4\">\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">\r\n          Edit notification\r\n        </div>\r\n        <div className=\"row no-gutters\">Edit existing notification</div>\r\n      </div>\r\n      <div className=\"col-60\" style={{ maxWidth: \"800px\" }}>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Subject</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              disabled={notification.type === \"System\"}\r\n              type=\"text\"\r\n              className={`w-100 ${\r\n                notification.type === \"System\"\r\n                  ? \"input-light-disabled\"\r\n                  : \"input-light\"\r\n              } px-3`}\r\n              value={notification.subject}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNotification((prev) =>\r\n                  Object.assign({}, prev, { subject: e.target.value })\r\n                );\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Type</div>\r\n          <Select\r\n            disabled={notification.type === \"System\"}\r\n            popoverClass=\"col-sm-30 col-60\"\r\n            className={`input-light${\r\n              notification.type === \"System\" ? \"-disabled\" : \"\"\r\n            } col-60`}\r\n            btnName={notification.type ? notification.type : \"Select\"}\r\n            items={types}\r\n            onSelect={(index) =>\r\n              setNotification((prev) =>\r\n                Object.assign({}, prev, { type: types[index] })\r\n              )\r\n            }\r\n          ></Select>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Notification to</div>\r\n          <Autocomplete\r\n            disabled={notification.type === \"System\"}\r\n            value={notification.receivers}\r\n            onChange={(e, val) => {\r\n              setNotification((prev) =>\r\n                Object.assign({}, prev, { receivers: val })\r\n              );\r\n            }}\r\n            placeholder={\"Search by username\"}\r\n            color={\"primary\"}\r\n            className={`col-md-30 col-60 input-light-resize${\r\n              notification.type === \"System\" ? \"-disabled\" : \"\"\r\n            }`}\r\n            options={Object.keys(autocompleteOptions).concat(\r\n              Object.values(publicUsers).filter((x) => x.status !== \"Deleted\")\r\n            )}\r\n            getOptionLabel={(option) =>\r\n              option.display_name ? option.display_name : option\r\n            }\r\n          ></Autocomplete>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Description</div>\r\n          <div className=\"col-60\">\r\n            <textarea\r\n              disabled={notification.type === \"System\"}\r\n              value={notification.description}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                let text = e.target.value;\r\n                if (text.split(\" \").length <= 500) {\r\n                  setNotification((prev) =>\r\n                    Object.assign({}, prev, { description: text })\r\n                  );\r\n                }\r\n              }}\r\n              className={`${\r\n                notification.type === \"System\"\r\n                  ? \"textarea-light-disabled\"\r\n                  : \"textarea-light\"\r\n              } w-100`}\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div\r\n            className={`col-60 ${\r\n              notification.description.split(\" \").length <= 499\r\n                ? \"text-muted\"\r\n                : \"text-danger\"\r\n            }`}\r\n          >\r\n            {notification.description\r\n              ? 500 - notification.description.split(\" \").length\r\n              : 500}\r\n            words left\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 pr-sm-3 mb-4\">\r\n                <div className=\"row no-gutters\">Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(notification.start_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            disabled={notification.type === \"System\"}\r\n                            {...props}\r\n                            className={`input-light${\r\n                              notification.type === \"System\" ? \"-disabled\" : \"\"\r\n                            } w-100 pl-5 pr-3`}\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(notification.start_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setNotification((prev) =>\r\n                            Object.assign({}, prev, { start_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className={`col-auto position-relative input-light${\r\n                      notification.type === \"System\" ? \"-disabled\" : \"\"\r\n                    }`}\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    {notification.type === \"System\" ? (\r\n                      <div className=\"w-100 pl-5\">\r\n                        {date.format(\r\n                          new Date(notification.start_date),\r\n                          \"hh:mm A\"\r\n                        )}\r\n                      </div>\r\n                    ) : (\r\n                      <TimePicker\r\n                        clearIcon={null}\r\n                        clockIcon={null}\r\n                        className=\"w-100 pl-5\"\r\n                        onChange={(a) => {\r\n                          if (a) {\r\n                            let [h, m] = a.split(\":\");\r\n                            let newTime = new Date(notification.start_date);\r\n                            newTime.setHours(h);\r\n                            newTime.setMinutes(m);\r\n                            setNotification((prev) =>\r\n                              Object.assign({}, prev, {\r\n                                start_date: newTime.getTime(),\r\n                              })\r\n                            );\r\n                          }\r\n                        }}\r\n                        value={new Date(notification.start_date)}\r\n                      ></TimePicker>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Status</div>\r\n          <Select\r\n            disabled={notification.type === \"System\"}\r\n            popoverClass=\"col-sm-30 col-60\"\r\n            className={`input-light${\r\n              notification.type === \"System\" ? \"-disabled\" : \"\"\r\n            } col-60`}\r\n            btnName={\r\n              notification.status ? notification.status : \"Select status\"\r\n            }\r\n            items={statuses}\r\n            onSelect={(index) =>\r\n              setNotification((prev) =>\r\n                Object.assign({}, prev, { status: statuses[index] })\r\n              )\r\n            }\r\n          ></Select>\r\n        </div>\r\n        <div\r\n          style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n          className=\"row no-gutters align-items-center text-danger my-2\"\r\n        >\r\n          {problem}\r\n        </div>\r\n        {notification.type !== \"System\" ? (\r\n          <div className=\"row no-gutters\">\r\n            <div\r\n              className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n              onClick={getBack}\r\n            >\r\n              Cancel\r\n            </div>\r\n            <div\r\n              className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n              onClick={async () => {\r\n                let invalid = validations.filter((x) => !x.valid);\r\n                if (invalid.length) {\r\n                  setProblem(invalid[0].error);\r\n                } else {\r\n                  setLoading(true);\r\n\r\n                  let res = await Edit(notification);\r\n                  setLoading(false);\r\n                  if (res.error) {\r\n                    store.dispatch({\r\n                      type: \"SET_NOTIFICATION\",\r\n                      notification: {\r\n                        title: \"Error\",\r\n                        message: res.error,\r\n                        type: \"failure\",\r\n                      },\r\n                    });\r\n                  } else {\r\n                    store.dispatch({\r\n                      type: \"SET_NOTIFICATION\",\r\n                      notification: {\r\n                        title: \"Notification edited\",\r\n                        message: \"Notification was successfully edited\",\r\n                        type: \"success\",\r\n                      },\r\n                    });\r\n                    let updatedUser = await GetUser(user._id);\r\n                    store.dispatch({\r\n                      type: \"SET_USER\",\r\n                      user: updatedUser,\r\n                    });\r\n                    getBack();\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              <Loader\r\n                color={\"white\"}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  left: \"10px\",\r\n                  top: 0,\r\n                  bottom: 0,\r\n                  margin: \"auto\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                loading={loading}\r\n                size={20}\r\n              ></Loader>\r\n              Save\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"row no-gutters\">\r\n            <div\r\n              className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n              onClick={getBack}\r\n            >\r\n              Go back\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    user: state.user,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(EditNotification);\r\n","import React, { useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Autocomplete from \"../utility/Autocomplete\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BsCalendar, BsClock } from \"react-icons/bs\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport date from \"date-and-time\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { CreateNotification, GetUser } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\n\r\nconst AddNewNotification = ({ publicUsers, getBack, user }) => {\r\n  const types = [\"App\", \"Email\", \"System\"];\r\n  let initialDate = Date.now();\r\n  const [notification, setNotification] = useState({\r\n    type: \"\",\r\n    subject: \"\",\r\n    receivers: [],\r\n    start_date: initialDate,\r\n    end_date: initialDate,\r\n    description: \"\",\r\n    status: \"Sent\",\r\n  });\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const statuses = [\"Sent\", \"Drafted\", \"Deleted\"];\r\n  const validations = [\r\n    { valid: notification.subject, error: \"Subject is required\" },\r\n    { valid: notification.type, error: \"Select notification type\" },\r\n    {\r\n      valid: notification.receivers.length,\r\n      error: \"Select at least one receiver\",\r\n    },\r\n    { valid: notification.description, error: \"Description is required\" },\r\n  ];\r\n\r\n  const autocompleteOptions = {\r\n    All: \"All\",\r\n    \"All users\": \"User\",\r\n    \"All admins\": \"Administrator\",\r\n    \"Inactive users\": \"Inactive\",\r\n    \"Active users\": \"Active\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-sm-5 p-4\">\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">\r\n          Add new notification\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          Create a brand new notification and add to this site\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\" style={{ maxWidth: \"800px\" }}>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Subject</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"w-100 input-light px-3\"\r\n              value={notification.subject}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNotification((prev) =>\r\n                  Object.assign({}, prev, { subject: e.target.value })\r\n                );\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Type</div>\r\n          <Select\r\n            popoverClass=\"col-sm-30 col-60\"\r\n            className=\"input-light col-60 w-100\"\r\n            btnName={notification.type ? notification.type : \"Select\"}\r\n            items={types}\r\n            onSelect={(index) =>\r\n              setNotification((prev) =>\r\n                Object.assign({}, prev, { type: types[index] })\r\n              )\r\n            }\r\n          ></Select>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Notification to</div>\r\n\r\n          <Autocomplete\r\n            value={notification.receivers}\r\n            onChange={(e, val) => {\r\n              setNotification((prev) =>\r\n                Object.assign({}, prev, { receivers: val })\r\n              );\r\n            }}\r\n            placeholder={\"Search by username\"}\r\n            color={\"primary\"}\r\n            className=\"col-md-30 col-60 input-light-resize\"\r\n            options={Object.keys(autocompleteOptions).concat(\r\n              Object.values(publicUsers).filter((x) => x.status !== \"Deleted\")\r\n            )}\r\n            getOptionLabel={(option) =>\r\n              option.display_name ? option.display_name : option\r\n            }\r\n          ></Autocomplete>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Description</div>\r\n          <div className=\"col-60\">\r\n            <textarea\r\n              value={notification.description}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                let text = e.target.value;\r\n                if (text.split(\" \").length <= 500) {\r\n                  setNotification((prev) =>\r\n                    Object.assign({}, prev, { description: text })\r\n                  );\r\n                }\r\n              }}\r\n              className=\"textarea-light w-100\"\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div\r\n            className={`col-60 ${\r\n              notification.description.split(\" \").length <= 499\r\n                ? \"text-muted\"\r\n                : \"text-danger\"\r\n            }`}\r\n          >\r\n            {notification.description\r\n              ? 500 - notification.description.split(\" \").length\r\n              : 500}\r\n            words left\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 pr-sm-3 mb-4\">\r\n                <div className=\"row no-gutters\">Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(notification.start_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(notification.start_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setNotification((prev) =>\r\n                            Object.assign({}, prev, { start_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(notification.start_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setNotification((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              start_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(notification.start_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Status</div>\r\n          <Select\r\n            popoverClass=\"col-sm-30 col-60\"\r\n            className=\"input-light col-60\"\r\n            btnName={\r\n              notification.status ? notification.status : \"Select status\"\r\n            }\r\n            items={statuses}\r\n            onSelect={(index) =>\r\n              setNotification((prev) =>\r\n                Object.assign({}, prev, { status: statuses[index] })\r\n              )\r\n            }\r\n          ></Select>\r\n        </div>\r\n        <div\r\n          style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n          className=\"row no-gutters align-items-center text-danger my-2\"\r\n        >\r\n          {problem}\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n            onClick={getBack}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n            onClick={async () => {\r\n              let invalid = validations.filter((x) => !x.valid);\r\n              if (invalid.length) {\r\n                setProblem(invalid[0].error);\r\n              } else {\r\n                setLoading(true);\r\n\r\n                let res = await CreateNotification(notification);\r\n                setLoading(false);\r\n                if (res.error) {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Error\",\r\n                      message: res.error,\r\n                      type: \"failure\",\r\n                    },\r\n                  });\r\n                } else {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Notification created\",\r\n                      message: \"Notification was successfully created\",\r\n                      type: \"success\",\r\n                    },\r\n                  });\r\n                  let updatedUser = await GetUser(user._id);\r\n                  store.dispatch({\r\n                    type: \"SET_USER\",\r\n                    user: updatedUser,\r\n                  });\r\n\r\n                  getBack();\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    user: state.user,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(AddNewNotification);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport {\r\n  GetUsers,\r\n  EditMultipleUsers,\r\n  DeleteMultipleUsers,\r\n} from \"../../server/DatabaseApi\";\r\nimport { format as TimeAgo } from \"timeago.js\";\r\nimport store from \"../../store/store\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Users = ({\r\n  setEditUser,\r\n  setEditUserSection,\r\n  setAddNewUserSection,\r\n  publicUsers,\r\n  ratings,\r\n}) => {\r\n  const [action, setAction] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"User\");\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [roleFilter, setRoleFilter] = useState(\"\");\r\n  const [statusFilter, setStatusFilter] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let data = await GetUsers();\r\n      setUsers(data.map((x) => Object.assign({}, x, { selected: false })));\r\n    }\r\n\r\n    getData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    let arr = [...users];\r\n    if (users.length) {\r\n      if (search) {\r\n        if (searchKey === \"User\") {\r\n          arr = arr.filter((x) =>\r\n            x.display_name.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Email\") {\r\n          arr = arr.filter((x) =>\r\n            x.email.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        }\r\n      }\r\n\r\n      if (roleFilter) {\r\n        arr = arr.filter((x) => x.role === roleFilter);\r\n      }\r\n\r\n      if (statusFilter) {\r\n        arr = arr.filter((x) => x.status === statusFilter);\r\n      }\r\n    }\r\n    setFilteredUsers(arr);\r\n  }, [search, roleFilter, users, statusFilter]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //boundaries for slicing reviews array. (pagination)\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= filteredUsers.length) {\r\n    boundaries[1] = boundaries[1] - (boundaries[1] - filteredUsers.length);\r\n  }\r\n\r\n  const handleApply = async (all = false) => {\r\n    if (all) {\r\n      setRoleFilter(role === \"All\" ? \"\" : role);\r\n    }\r\n    let selected = filteredUsers.filter((x) => x.selected);\r\n\r\n    if (selected.length) {\r\n      if (action === \"Edit\") {\r\n        setEditUser(selected[0]);\r\n        setEditUserSection();\r\n      } else {\r\n        let update = {};\r\n        if (action === \"Delete\") {\r\n          update[\"status\"] = \"Deleted\";\r\n        } else if (action === \"Inactivate\") {\r\n          update[\"status\"] = \"Inactive\";\r\n        } else if (action === \"Block\") {\r\n          update[\"status\"] = \"Blocked\";\r\n        } else if (action === \"Activate\") {\r\n          update[\"status\"] = \"Active\";\r\n        }\r\n        let res = await EditMultipleUsers(\r\n          selected.map((x) => x._id),\r\n          selected.map((x) => publicUsers[x._id]._id),\r\n          update\r\n        );\r\n\r\n        if (res.error) {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Error\",\r\n              message: res.error,\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Users updated\",\r\n              message: \"User were successfully updated\",\r\n              type: \"success\",\r\n            },\r\n          });\r\n          setRefresh(!refresh);\r\n          let newPublicUsers = { ...publicUsers };\r\n          selected.forEach((x) => {\r\n            newPublicUsers[x._id].status = update[\"status\"];\r\n          });\r\n          store.dispatch({\r\n            type: \"SET_PUBLICUSERS\",\r\n            publicUsers: newPublicUsers,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const editUsers = async (update, ids, pids) => {\r\n    let res = await EditMultipleUsers(ids, pids, update);\r\n    if (res.error) {\r\n      store.dispatch({\r\n        type: \"SET_NOTIFICATION\",\r\n        notification: {\r\n          title: \"Error\",\r\n          message: res.error,\r\n          type: \"failure\",\r\n        },\r\n      });\r\n    } else {\r\n      store.dispatch({\r\n        type: \"SET_NOTIFICATION\",\r\n        notification: {\r\n          title: \"Users updated\",\r\n          message: \"User were successfully updated\",\r\n          type: \"success\",\r\n        },\r\n      });\r\n      setRefresh(!refresh);\r\n    }\r\n  };\r\n  const actions = [\"Block\", \"Inactivate\", \"Activate\", \"Delete\"];\r\n  const statuses = [\"Active\", \"Inactive\", \"Blocked\"];\r\n  const columns = [\"Email\", \"Role\", \"Last login\", \"Activity\", \"Status\"];\r\n  return (\r\n    <div className=\"row no-gutters admin-screen\">\r\n      <div className=\"col-60 border-bottom\">\r\n        <div className=\"row no-gutters justify-content-between pb-3 align-items-end\">\r\n          <div className=\"col-auto\">\r\n            <div className=\"row no-gutters admin-screen-title\">Users</div>\r\n            <div className=\"row no-gutters\">Add, edit and delete users</div>\r\n          </div>\r\n          <div\r\n            className=\"col-auto btn-custom btn-custom-primary btn-natural\"\r\n            onClick={() => setAddNewUserSection()}\r\n          >\r\n            Add New\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-60 py-5\">\r\n            <div className=\"row no-gutters h6 mb-3\">\r\n              <div\r\n                className={`col-auto ${\r\n                  statusFilter ? \"text-dark\" : \"text-primary\"\r\n                }`}\r\n                onClick={() => setStatusFilter(\"\")}\r\n              >\r\n                All ({users.length})\r\n              </div>\r\n              {statuses.map((x, i) => (\r\n                <React.Fragment key={`status-${i}`}>\r\n                  <div className=\"col-auto px-2 text-muted\">|</div>\r\n                  <div\r\n                    className={`col-auto cursor-pointer ${\r\n                      statusFilter === x ? \"text-primary\" : \"text-dark\"\r\n                    }`}\r\n                    onClick={() => setStatusFilter(x)}\r\n                  >\r\n                    {x} ({users.filter((y) => y.status === x).length})\r\n                  </div>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-between\">\r\n              <div className=\"col-sm-auto col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) => setAction(actions[index])}\r\n                        items={actions}\r\n                        btnName={action ? action : \"Select Action\"}\r\n                        className=\"input-light px-3 col-auto\"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) =>\r\n                          setRole([\"All\", \"Administrator\", \"User\"][index])\r\n                        }\r\n                        items={[\"All\", \"Administrator\", \"User\"]}\r\n                        btnName={role ? role : \"Select Role\"}\r\n                        className=\"input-light px-3 col-auto\"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    onClick={() => handleApply(true)}\r\n                    className=\"btn-custom btn-custom-primary col-60 col-sm-auto mb-3 mr-3 btn-xsmall\"\r\n                  >\r\n                    Apply\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 d-block d-sm-none\">\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <Select\r\n                    popoverClass=\"w-100\"\r\n                    onSelect={(index) => setSearchKey([\"User\", \"Email\"][index])}\r\n                    className=\"input-light col-60\"\r\n                    items={[\"User\", \"Email\"]}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <div className=\"col-60 position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      className=\"input-light w-100 pr-5 pl-3\"\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-auto mb-3 d-none d-sm-block\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    onSelect={(index) => setSearchKey([\"User\", \"Email\"][index])}\r\n                    className=\"table-input-prepend-select col-auto\"\r\n                    items={[\"User\", \"Email\"]}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                  <div className=\"col position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                      className=\"table-input pr-5 pl-3\"\r\n                      style={{ minWidth: \"300px\" }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <Swipeable\r\n                style={{ minWidth: \"100%\" }}\r\n                onSwipedLeft={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn + 1 < 4\r\n                      ? lastVisibleColumn + 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n                onSwipedRight={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn - 1 >= 0\r\n                      ? lastVisibleColumn - 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n              >\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table bg-white border\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"text-center\">\r\n                          <Checkbox\r\n                            color={\"primary\"}\r\n                            checked={\r\n                              filteredUsers\r\n                                .slice(boundaries[0], boundaries[1])\r\n                                .filter((x) => x.selected).length ===\r\n                              boundaries[1] - boundaries[0]\r\n                            }\r\n                            onChange={(e) => {\r\n                              setFilteredUsers((prev) => {\r\n                                let arr = [...prev];\r\n                                for (\r\n                                  let i = boundaries[0];\r\n                                  i < boundaries[1];\r\n                                  i++\r\n                                ) {\r\n                                  arr[i].selected = e.target.checked;\r\n                                }\r\n                                return arr;\r\n                              });\r\n                            }}\r\n                          ></Checkbox>\r\n                        </th>\r\n                        <th className=\"table-header text-truncate text-left\">\r\n                          <div className=\"d-none d-lg-block\">Display Name</div>\r\n                          <div className=\"d-block d-lg-none\">Name</div>\r\n                        </th>\r\n                        <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                          {columns[lastVisibleColumn]}\r\n                        </th>\r\n                        {columns.map((c, j) => (\r\n                          <th\r\n                            className=\"d-none d-xl-table-cell table-header text-truncate\"\r\n                            key={`column-${j}`}\r\n                          >\r\n                            <div>{c}</div>\r\n                          </th>\r\n                        ))}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filteredUsers.length ? (\r\n                        filteredUsers\r\n                          .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                          .map((x, i) => (\r\n                            <tr\r\n                              className=\"font-weight-600 bg-light\"\r\n                              key={`shortlist-item-${i}`}\r\n                            >\r\n                              <td className=\"text-center\">\r\n                                <Checkbox\r\n                                  color={\"primary\"}\r\n                                  checked={x.selected}\r\n                                  onChange={(e) => {\r\n                                    setFilteredUsers((prev) => {\r\n                                      let arr = [...prev];\r\n                                      arr[(page - 1) * 5 + i].selected =\r\n                                        e.target.checked;\r\n                                      return arr;\r\n                                    });\r\n                                  }}\r\n                                ></Checkbox>\r\n                              </td>\r\n                              <td style={{ whiteSpace: \"nowrap\" }}>\r\n                                <div>\r\n                                  <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                    <div className=\"d-inline-block mr-2\">\r\n                                      <div\r\n                                        className=\"square-50 rounded-circle bg-image\"\r\n                                        style={{\r\n                                          backgroundImage: `url(${x.photo})`,\r\n                                        }}\r\n                                      ></div>\r\n                                    </div>\r\n                                    <div className=\"d-none d-md-inline-block align-top\">\r\n                                      <div className=\"text-primary mb-2 text-truncate\" style={{maxWidth:\"300px\"}}>\r\n                                        {x.display_name}\r\n                                      </div>\r\n                                      <div className=\"d-flex\">\r\n                                        <div\r\n                                          className=\"text-primary underline-link\"\r\n                                          onClick={() => {\r\n                                            setEditUser(x);\r\n                                            setEditUserSection();\r\n                                          }}\r\n                                        >\r\n                                          Edit\r\n                                        </div>\r\n                                        <div className=\"px-2\">|</div>\r\n                                        <div\r\n                                          className=\"text-primary underline-link\"\r\n                                          onClick={() => {\r\n                                            editUsers(\r\n                                              { status: \"Blocked\" },\r\n                                              [x._id],\r\n                                              [publicUsers[x._id]._id]\r\n                                            );\r\n                                          }}\r\n                                        >\r\n                                          Block\r\n                                        </div>\r\n                                        <div className=\"px-2\">|</div>\r\n                                        <div\r\n                                          className=\"text-danger underline-link\"\r\n                                          onClick={async () => {\r\n                                            let res = await DeleteMultipleUsers(\r\n                                              [x._id],\r\n                                              [publicUsers[x._id]._id]\r\n                                            );\r\n                                            if (res.error) {\r\n                                              store.dispatch({\r\n                                                type: \"SET_NOTIFICATION\",\r\n                                                notification: {\r\n                                                  title: \"Error\",\r\n                                                  message: res.error,\r\n                                                  type: \"failure\",\r\n                                                },\r\n                                              });\r\n                                            } else {\r\n                                              store.dispatch({\r\n                                                type: \"SET_NOTIFICATION\",\r\n                                                notification: {\r\n                                                  title: \"Users deleted\",\r\n                                                  message:\r\n                                                    \"User were successfully deleted\",\r\n                                                  type: \"success\",\r\n                                                },\r\n                                              });\r\n                                              setRefresh(!refresh);\r\n                                              let newPublicUsers = {\r\n                                                ...publicUsers,\r\n                                              };\r\n                                              newPublicUsers[x._id].status =\r\n                                                \"Deleted\";\r\n\r\n                                              store.dispatch({\r\n                                                type: \"SET_PUBLICUSERS\",\r\n                                                publicUsers: newPublicUsers,\r\n                                              });\r\n                                            }\r\n                                          }}\r\n                                        >\r\n                                          Delete\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 0\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div>{x.email}</div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 1\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.role}\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 2\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.last_login\r\n                                  ? TimeAgo(x.last_login)\r\n                                  : \"No data\"}\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 3\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.last_activity\r\n                                  ? TimeAgo(x.last_activity)\r\n                                  : \"No data\"}\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  x.status === \"Active\"\r\n                                    ? \"text-green\"\r\n                                    : x.status === \"Inactive\"\r\n                                    ? \"text-orange\"\r\n                                    : \"text-danger\"\r\n                                } ${\r\n                                  lastVisibleColumn === 4\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.status}\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan={7} className=\" text-center py-5\">\r\n                            0 results found\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </Swipeable>\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-center justify-content-sm-end\">\r\n              <div className=\"col-auto\">\r\n                <Pagination\r\n                  count={Math.ceil(filteredUsers.length / 5)}\r\n                  current={page}\r\n                  setCurrent={setPage}\r\n                ></Pagination>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    ratings: state.ratings,\r\n    publicUsers: state.publicUsers,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Users);\r\n","import React, { useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport { CreateUserForAdmin } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { connect } from \"react-redux\";\r\nimport { validateEmail } from \"../../utilities/Functions\";\r\n\r\nconst AddNewUser = ({ getBack, publicUsers }) => {\r\n  const [newUser, setNewUser] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    display_name: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    re_password: \"\",\r\n    status: \"Active\",\r\n    role: \"User\",\r\n  });\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const validations = [\r\n    {\r\n      valid: newUser.email,\r\n      error: \"Email is required\",\r\n    },\r\n    {\r\n      valid: validateEmail(newUser.email),\r\n      error: \"Email is not valid\",\r\n    },\r\n    {\r\n      valid: newUser.password,\r\n      error: \"Password is required\",\r\n    },\r\n    {\r\n      valid: /[^\\w\\s]/.test(newUser.password) || /\\d/.test(newUser.password),\r\n      error: \"Password must contain number or symbol\",\r\n    },\r\n    {\r\n      valid: newUser.password === newUser.re_password,\r\n      error: \"Passwords don't match\",\r\n    },\r\n    {\r\n      valid: newUser.password.length >= 6,\r\n      error: \"Password must contain at least 6 characters\",\r\n    },\r\n\r\n    {\r\n      valid: !Object.values(publicUsers)\r\n        .map((x) => x.email)\r\n        .includes(newUser.email),\r\n      error: \"This email address is taken\",\r\n    },\r\n  ];\r\n\r\n  const statuses = [\"Active\", \"Inactive\", \"Blocked\"];\r\n  const roles = [\"Administrator\", \"User\"];\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\">\r\n      <div className=\"col-60\" style={{ maxWidth: \"800px\" }}>\r\n        <div className=\"row no-gutters border-bottom py-3 mb-5\">\r\n          <div className=\"col-60 admin-screen-title\">Add User</div>\r\n          <div className=\"col-60\">Add brand new user</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-sm-30 col-60 pr-sm-3 mb-4\">\r\n            <div className=\"row no-gutters mb-1\">First name</div>\r\n            <div className=\"row no-gutters\">\r\n              <input\r\n                spellCheck={false}\r\n                value={newUser.first_name}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      first_name: e.target.value,\r\n                    })\r\n                  );\r\n                }}\r\n                type=\"text\"\r\n                className=\"px-3 input-light w-100\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-30 col-60 mb-4\">\r\n            <div className=\"row no-gutters mb-1\">Last name</div>\r\n            <div className=\"row no-gutters\">\r\n              <input\r\n                spellCheck={false}\r\n                value={newUser.last_name}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      last_name: e.target.value,\r\n                    })\r\n                  );\r\n                }}\r\n                type=\"text\"\r\n                className=\"px-3 input-light w-100\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Display name</div>\r\n          <div className=\"col-60 mb-1\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.display_name}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    display_name: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"text\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-60 text-muted\">\r\n            This name will be visible for everyone\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">*Email</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.email}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    email: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"text\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">*Password</div>\r\n          <div className=\"col-60 mb-1\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.password}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    password: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"password\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-60 text-muted\">\r\n            Must be at least 6 characters and must contain a number or symbol\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">*Confirm Password</div>\r\n          <div className=\"col-60 mb-1\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.re_password}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    re_password: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"password\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-60 text-muted\">\r\n            Must be at least 6 characters and must contain a number or symbol\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-sm-20 col-60 pr-sm-3 mb-4\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-1\">Status</div>\r\n              <Select\r\n                popoverClass=\"w-100\"\r\n                onSelect={(index) =>\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      status: statuses[index],\r\n                    })\r\n                  )\r\n                }\r\n                items={statuses}\r\n                btnName={newUser.status ? newUser.status : \"Select\"}\r\n                className=\"input-light px-3 col-60\"\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-20 col-60 mb-4\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-1\">Role</div>\r\n              <Select\r\n                popoverClass=\"w-100\"\r\n                onSelect={(index) =>\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      role: roles[index],\r\n                    })\r\n                  )\r\n                }\r\n                items={roles}\r\n                btnName={newUser.role ? newUser.role : \"Select\"}\r\n                className=\"input-light px-3 col-60\"\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n          className=\"row no-gutters align-items-center text-danger\"\r\n        >\r\n          {problem}\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 col-sm-auto col-60 mb-3\"\r\n            onClick={() => getBack()}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small col-sm-auto col-60 mb-3\"\r\n            onClick={async () => {\r\n              let invalid = validations.filter((x) => !x.valid);\r\n              if (invalid.length) {\r\n                setProblem(invalid[0].error);\r\n              } else {\r\n                setLoading(true);\r\n                let res = await CreateUserForAdmin(newUser);\r\n                setLoading(false);\r\n                if (res.error) {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Error\",\r\n                      message: res.error,\r\n                      type: \"failure\",\r\n                    },\r\n                  });\r\n                } else {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"User created\",\r\n                      message: \"User was successfully created\",\r\n                      type: \"success\",\r\n                    },\r\n                  });\r\n                  store.dispatch({\r\n                    type: \"UPDATE_PUBLICUSERS\",\r\n                    publicUser: {\r\n                      [res.id]: Object.assign({}, newUser, {\r\n                        user_id: res.id,\r\n                        _id: res.pid,\r\n                      }),\r\n                    },\r\n                  });\r\n                  getBack();\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(AddNewUser);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport { EditUserForAdmin } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst EditUser = ({ currentUser, getBack, no_display_name_characters }) => {\r\n  const [newUser, setNewUser] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    display_name: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    re_password: \"\",\r\n    status: \"Active\",\r\n    role: \"Administrator\",\r\n  });\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setNewUser(\r\n        Object.assign({}, currentUser, { re_password: \"\", password: \"\" })\r\n      );\r\n    }\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const validations = [\r\n    {\r\n      valid: newUser.display_name.length <= no_display_name_characters,\r\n      error: \"Display name is too long\",\r\n    },\r\n    {\r\n      valid: /[^\\w\\s]/.test(newUser.password) || /\\d/.test(newUser.password),\r\n      error: \"Password must contain number or symbol\",\r\n    },\r\n    {\r\n      valid: newUser.password === newUser.re_password,\r\n      error: \"Passwords don't match\",\r\n    },\r\n    {\r\n      valid: newUser.password.length >= 6,\r\n      error: \"Password must contain at least 6 characters\",\r\n    },\r\n  ];\r\n\r\n  const statuses = [\"Active\", \"Inactive\", \"Blocked\"];\r\n  const roles = [\"Administrator\", \"User\"];\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\">\r\n      <div className=\"col-60\" style={{ maxWidth: \"800px\" }}>\r\n        <div className=\"row no-gutters border-bottom py-3 mb-5\">\r\n          <div className=\"col-60 admin-screen-title\">Edit User</div>\r\n          <div className=\"col-60\">Edit existing user</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-sm-30 col-60 pr-sm-3 mb-4\">\r\n            <div className=\"row no-gutters mb-1\">First name</div>\r\n            <div className=\"row no-gutters\">\r\n              <input\r\n                spellCheck={false}\r\n                value={newUser.first_name}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      first_name: e.target.value,\r\n                    })\r\n                  );\r\n                }}\r\n                type=\"text\"\r\n                className=\"px-3 input-light w-100\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-30 col-60 mb-4\">\r\n            <div className=\"row no-gutters mb-1\">Last name</div>\r\n            <div className=\"row no-gutters\">\r\n              <input\r\n                spellCheck={false}\r\n                value={newUser.last_name}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      last_name: e.target.value,\r\n                    })\r\n                  );\r\n                }}\r\n                type=\"text\"\r\n                className=\"px-3 input-light w-100\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Display name</div>\r\n          <div className=\"col-60 mb-1\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.display_name}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    display_name: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"text\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-60 text-muted\">\r\n            This name will be visible for everyone\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Email</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.email}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    email: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"text\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Password</div>\r\n          <div className=\"col-60 mb-1\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.password}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    password: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"password\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-60 text-muted\">\r\n            Must be at least 6 characters and must contain a number or symbol\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Confirm Password</div>\r\n          <div className=\"col-60 mb-1\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.re_password}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    re_password: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"password\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-60 text-muted\">\r\n            Must be at least 6 characters and must contain a number or symbol\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-sm-20 col-60 pr-sm-3 mb-4\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-1\">Status</div>\r\n              <Select\r\n                popoverClass=\"w-100\"\r\n                onSelect={(index) =>\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      status: statuses[index],\r\n                    })\r\n                  )\r\n                }\r\n                items={statuses}\r\n                btnName={newUser.status ? newUser.status : \"Select\"}\r\n                className=\"input-light px-3 col-60\"\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-20 col-60 mb-4\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-1\">Role</div>\r\n              <Select\r\n                popoverClass=\"w-100\"\r\n                onSelect={(index) =>\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      role: roles[index],\r\n                    })\r\n                  )\r\n                }\r\n                items={roles}\r\n                btnName={newUser.role ? newUser.role : \"Select\"}\r\n                className=\"input-light px-3 col-60\"\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n          className=\"row no-gutters align-items-center text-danger\"\r\n        >\r\n          {problem}\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 col-sm-auto col-60 mb-3\"\r\n            onClick={() => getBack()}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small col-sm-auto col-60 mb-3\"\r\n            onClick={async () => {\r\n              let allowEdit = true;\r\n              let finalUser = { ...newUser };\r\n              if (newUser.password) {\r\n                let invalid = validations.filter((x) => !x.valid);\r\n                if (invalid.length) {\r\n                  allowEdit = false;\r\n                  setProblem(invalid[0].error);\r\n                }\r\n              }\r\n              if (finalUser.password === \"\") {\r\n                delete finalUser.password;\r\n                delete finalUser.re_password;\r\n              }\r\n              if (allowEdit) {\r\n                setLoading(true);\r\n                let res = await EditUserForAdmin(finalUser);\r\n                setLoading(false);\r\n                if (res.error) {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Error\",\r\n                      message: res.error,\r\n                      type: \"failure\",\r\n                    },\r\n                  });\r\n                } else {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"User updated\",\r\n                      message: \"User was successfully updated\",\r\n                      type: \"success\",\r\n                    },\r\n                  });\r\n                  let publicUser = store.getState().publicUsers[newUser._id];\r\n                  publicUser.status = newUser.status;\r\n                  publicUser.role = newUser.role;\r\n                  store.dispatch({ type: \"UPDATE_PUBLICUSERS\", publicUser });\r\n                  getBack();\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    no_display_name_characters: state.settings.no_display_name_characters,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(EditUser);\r\n","import React, { useState } from \"react\";\r\nimport LeftSideMenu from \"./LeftSideMenu\";\r\nimport Settings from \"./Settings\";\r\nimport RightSideMenuFloating from \"./RightSideMenuFloating\";\r\nimport ReviewsAndComments from \"./ReviewAndComments\";\r\nimport EditReview from \"./EditReview\";\r\nimport { BsArrowLeft } from \"react-icons/bs\";\r\nimport EditComment from \"./EditComment\";\r\nimport Announcements from \"./Announcements\";\r\nimport EditAnnouncement from \"./EditAnnouncement\";\r\nimport AddNewAnnouncement from \"./AddNewAnnouncement\";\r\nimport Promotions from \"./Promotions\";\r\nimport EditPromotion from \"./EditPromotion\";\r\nimport AddNewPromotion from \"./AddNewPromotion\";\r\nimport Notifications from \"./Notifications\";\r\nimport EditNotification from \"./EditNotification\";\r\nimport AddNewNotification from \"./AddNewNotification\";\r\nimport Users from \"./Users\";\r\nimport AddNewUser from \"./AddNewUser\";\r\nimport EditUser from \"./EditUser\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst sections = {\r\n  settings: 0,\r\n  userManagement: 1,\r\n  reviewsAndComments: 2,\r\n  announcements: 3,\r\n  promotions: 4,\r\n  notifications: 5,\r\n  editReview: 6,\r\n  editComment: 7,\r\n  editAnnouncement: 8,\r\n  addNewAnnouncement: 9,\r\n  editPromotion: 10,\r\n  addNewPromotion: 11,\r\n  editNotification: 12,\r\n  addNewNotification: 13,\r\n  editUser: 14,\r\n  addNewUser: 15,\r\n};\r\n\r\nconst AdminDashboard = ({ dashboardMenuOpened }) => {\r\n  const [section, setSection] = useState(0);\r\n  const [editReview, setEditReview] = useState(null);\r\n  const [editComment, setEditComment] = useState(null);\r\n  const [editAnnouncement, setEditAnnouncement] = useState(null);\r\n  const [editPromotion, setEditPromotion] = useState(null);\r\n  const [editNotification, setEditNotification] = useState(null);\r\n  const [editUser, setEditUser] = useState(null);\r\n  return (\r\n    <div\r\n      className=\"row no-gutters justify-content-center\"\r\n      style={{ minHeight: window.innerHeight }}\r\n    >\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters h-100 position-relative bg-light\">\r\n          <RightSideMenuFloating\r\n            isMenuOpened={dashboardMenuOpened}\r\n            setSection={setSection}\r\n            section={section}\r\n          ></RightSideMenuFloating>\r\n          <div\r\n            className=\"col-auto d-none d-lg-block\"\r\n            style={{ width: \"300px\" }}\r\n          >\r\n            <LeftSideMenu\r\n              section={section}\r\n              setSection={setSection}\r\n            ></LeftSideMenu>\r\n          </div>\r\n          <div className=\"col\">\r\n            {section >= 6 && (\r\n              <div\r\n                className=\"row no-gutters px-md-5 px-4 pt-4\"\r\n                style={{ marginBottom: \"-40px\" }}\r\n              >\r\n                <div className=\"col-auto cursor-pointer\">\r\n                  <BsArrowLeft\r\n                    fontSize=\"24px\"\r\n                    onClick={() =>\r\n                      setSection(\r\n                        section === 6 || section === 7\r\n                          ? 2\r\n                          : section === 8 || section === 9\r\n                          ? 3\r\n                          : section === 10 || section === 11\r\n                          ? 4\r\n                          : section === 12 || section === 13\r\n                          ? 5\r\n                          : section === 14 || section === 15\r\n                          ? 1\r\n                          : 0\r\n                      )\r\n                    }\r\n                  ></BsArrowLeft>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {section === 0 ? (\r\n              <Settings></Settings>\r\n            ) : section === 1 ? (\r\n              <Users\r\n                setAddNewUserSection={() => setSection(sections[\"addNewUser\"])}\r\n                setEditUser={(u) => setEditUser(u)}\r\n                setEditUserSection={() => setSection(sections[\"editUser\"])}\r\n              ></Users>\r\n            ) : section === 2 ? (\r\n              <ReviewsAndComments\r\n                setEditReview={(rev) => setEditReview(rev)}\r\n                setEditReviewSection={() => setSection(sections[\"editReview\"])}\r\n                setEditComment={(rev) => setEditComment(rev)}\r\n                setEditCommentSection={() =>\r\n                  setSection(sections[\"editComment\"])\r\n                }\r\n              ></ReviewsAndComments>\r\n            ) : section === 3 ? (\r\n              <Announcements\r\n                setAddNewAnouncementSection={() =>\r\n                  setSection(sections[\"addNewAnnouncement\"])\r\n                }\r\n                setEditAnnouncement={(ann) => setEditAnnouncement(ann)}\r\n                setEditAnnouncementSection={() => {\r\n                  setSection(sections[\"editAnnouncement\"]);\r\n                }}\r\n              ></Announcements>\r\n            ) : section === 4 ? (\r\n              <Promotions\r\n                setAddNewPromotionSection={() =>\r\n                  setSection(sections[\"addNewPromotion\"])\r\n                }\r\n                setEditPromotion={(prom) => setEditPromotion(prom)}\r\n                setEditPromotionSection={() =>\r\n                  setSection(sections[\"editPromotion\"])\r\n                }\r\n              ></Promotions>\r\n            ) : section === 5 ? (\r\n              <Notifications\r\n                setAddNewNotificationSection={() =>\r\n                  setSection(sections[\"addNewNotification\"])\r\n                }\r\n                setEditNotification={(not) => setEditNotification(not)}\r\n                setEditNotificationSection={() =>\r\n                  setSection(sections[\"editNotification\"])\r\n                }\r\n              ></Notifications>\r\n            ) : section === 6 ? (\r\n              <EditReview\r\n                currentReview={editReview}\r\n                getBack={() => setSection(2)}\r\n              ></EditReview>\r\n            ) : section === 7 ? (\r\n              <EditComment\r\n                currentComment={editComment}\r\n                getBack={() => setSection(2)}\r\n              ></EditComment>\r\n            ) : section === 8 ? (\r\n              <EditAnnouncement\r\n                getBack={() => setSection(3)}\r\n                currentAnnouncement={editAnnouncement}\r\n              ></EditAnnouncement>\r\n            ) : section === 9 ? (\r\n              <AddNewAnnouncement getBack={() => setSection(3)} />\r\n            ) : section === 10 ? (\r\n              <EditPromotion\r\n                currentPromotion={editPromotion}\r\n                getBack={() => setSection(4)}\r\n              ></EditPromotion>\r\n            ) : section === 11 ? (\r\n              <AddNewPromotion getBack={() => setSection(4)}></AddNewPromotion>\r\n            ) : section === 12 ? (\r\n              <EditNotification\r\n                currentNotification={editNotification}\r\n                getBack={() => setSection(5)}\r\n              ></EditNotification>\r\n            ) : section === 13 ? (\r\n              <AddNewNotification\r\n                getBack={() => setSection(5)}\r\n              ></AddNewNotification>\r\n            ) : section === 14 ? (\r\n              <EditUser\r\n                currentUser={editUser}\r\n                getBack={() => setSection(1)}\r\n              ></EditUser>\r\n            ) : section === 15 ? (\r\n              <AddNewUser getBack={() => setSection(1)}></AddNewUser>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    dashboardMenuOpened: state.dashboardMenuOpened,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(AdminDashboard);\r\n"],"sourceRoot":""}