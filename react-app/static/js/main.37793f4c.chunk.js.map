{"version":3,"sources":["documents/TermsAndConditions.docx","documents/PrivacyPolicy.docx","documents/CookiesPolicy.docx","store/store.js","History.js","Data.js","server/DatabaseApi.js","Settings.js","components/utility/Popover.jsx","components/utility/Loader.jsx","components/user/WishlistButton.jsx","utilities/Functions.js","components/user/ReactionButton.jsx","server/MoviesApi.js","components/user/TrailerPlayer.jsx","components/utility/Modal.jsx","components/user/MoviesList.jsx","components/user/PopularMovies.jsx","components/user/Recommendations.jsx","components/utility/Paigination.jsx","components/user/ReplyToReview.jsx","components/user/PopularReviews.jsx","components/user/RecentReviews.jsx","components/user/Home.jsx","components/user/AddReview.jsx","components/user/MovieReviews.jsx","components/user/Movie.jsx","components/user/ReviewsList.jsx","components/user/SearchResults.jsx","images/Logo.jsx","components/admin/LeftSideMenu.jsx","components/admin/Settings.jsx","components/admin/RightSideMenuFloating.jsx","components/utility/Select.jsx","components/utility/Checkbox.jsx","components/admin/Reviews.jsx","components/admin/Comments.jsx","components/admin/ReviewAndComments.jsx","components/admin/EditReview.jsx","components/admin/EditComment.jsx","components/admin/Announcements.jsx","components/admin/EditAnnouncement.jsx","components/admin/AddNewAnnouncement.jsx","components/admin/Promotions.jsx","components/admin/EditPromotion.jsx","components/admin/AddNewPromotion.jsx","components/admin/Notifications.jsx","components/utility/Autocomplete.jsx","components/admin/EditNotification.jsx","components/admin/AddNewNotification.jsx","components/admin/Users.jsx","components/admin/AddNewUser.jsx","components/admin/EditUser.jsx","components/admin/AdminDashboard.jsx","components/login/Login.jsx","components/user/LegalDocument.jsx","components/login/Signup.jsx","components/user/Toast.jsx","components/user/MoveToWatchedButton.jsx","components/user/profile/MoviesList.jsx","components/user/profile/Wishlist.jsx","components/user/profile/Watchedlist.jsx","components/user/profile/Reviews.jsx","components/user/profile/Comments.jsx","components/user/profile/EditProfile.jsx","components/user/profile/Profile.jsx","utilities/PrivateRoute.jsx","components/user/Announcement.jsx","images/Notifications.jsx","components/user/MoviesListMinified.jsx","components/user/ReviewsListMinified.jsx","components/user/SearchBox.jsx","components/user/Navbar.jsx","components/user/Footer.jsx","components/user/Serie.jsx","components/user/CookiesPolicy.jsx","components/user/TermsAndConditions.jsx","components/user/PrivacyPolicy.jsx","App.js","index.js"],"names":["module","exports","rootReducer","combineReducers","publicUsers","state","action","type","Object","assign","publicUser","ratings","rating","user","first_name","last_name","display_name","photo","token","email","reviews","wishlist","watchedlist","notifications","userProperty","search","query","category","notification","title","message","expired","settings","movies_api_key","movie_data_api","latest_movies_api","no_popular_reviews","no_popular_movies","no_allowed_reviews","no_comment_characters","no_review_words","bg_image_refresh_time_days","bg_image_refresh_time_hours","bg_image_refresh_time_minutes","FacebookLink","InstagramLink","TwitterLink","LinkedinLink","current_bg_movie","date_set","Date","now","id","poster_path","backdrop_path","release_date","overview","genres","name","runtime","navbarHeight","height","dashboardMenuOpened","isOpened","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","createBrowserHistory","OfficialMoviesGenres","OfficialSeriesGenres","Ratings","element","className","style","lineHeight","emoji","set","size","SendPostRequest","path","data","fetch","method","body","JSON","stringify","headers","then","res","json","SendGetRequest","Login","credentials","LoginWithToken","GetAllRatings","callback","GetAllPublicUsers","WriteReview","review","movieId","apiKey","GetMovieReviews","GetMoviePromotedReviews","WriteComment","comment","GetReviewComments","reviewId","AddToWishList","AddViewToMovie","LikeReview","LikeComment","commentId","ReportReview","ReportComment","GetUser","userId","GetUserReviews","reviewIds","GetUserComments","commentIds","EditUser","update","GetPopularReviews","limit","GetRecentReviews","GetRecommendations","SearchReviews","UpdateOrCreateSettings","GetSettings","GetUsers","GetReviews","GetComments","EditReviewForAdmin","EditCommentForAdmin","DeleteMultipleReviews","ids","DeleteMultipleComments","EditMultipleUsers","pids","GetAnnouncements","CreateAnnouncement","announcement","DeleteMultipleAnnouncements","EditAnnouncement","GetActiveAnnouncements","GetPromotions","EditPromotion","promotion","GetUserNotifications","GetNotifications","CreateNotification","EditNotification","DeleteMultipleNotifications","MoveMovieToWatchList","GetPromotedReviews","Popover","onOpen","position","arrow","theme","content","trigger","delay","animation","open","undefined","onHide","rest","popoverWidth","useState","contentWidth","setContentWidth","useEffect","popovers","document","getElementsByClassName","i","length","parentNode","removeChild","wasShowed","setWasShowed","onShow","hideDelay","html","interactive","unmountHTMLWhenHide","React","cloneElement","children","props","ref","el","getBoundingClientRect","width","current","Loader","loading","connect","ownProps","movie","setLoading","handleClick","a","updatedUser","dispatch","ratingsArr","forEach","x","tmdb_id","error","replace","currentlyAdded","findIndex","movie_id","toString","w","pointerEvents","color","onClick","fontSize","marginRight","nFormatter","num","digits","si","value","symbol","toFixed","FormatDuration","minutes","h","Math","floor","m","validateEmail","test","String","toLowerCase","allowRate","selected","marginBottom","FormatRequestUrl","params","concat","join","GetPopularMoviesByGenre","GetTrailers","GetTvShow","GetMovie","GetCredits","SearchMovies","url","SearchSeries","encodeURI","onEnded","videoIds","setVideoIds","problem","setProblem","trailers","results","map","key","getData","config","youtube","playerVars","showinfo","iv_load_policy","playing","controls","Modal","overflow","top","onClose","strokeWidth","movies","trailerMovieId","setTrailerMovieId","openTrailer","setOpenTrailer","zIndex","alt","borderRadius","src","history","push","left","e","stopPropagation","genre_ids","gid","genre","find","g","rate_type","excellent_rate","good_rate","ok_rate","bad_rate","genresPairs","genresIds","horizontalMenu","useRef","setGenresIds","genreName","setGenreName","setMovies","slice","recalculate","padding","background","maxWidth","overflowX","whiteSpace","display","Recommendations","movie_poster","movie_title","movie_genres","Pagination","count","setCurrent","classNames","notSelected","first","second","third","Fragment","reviewAuthor","setReviewIdOfVisibleComments","setComments","refreshComments","refreshReviews","newComment","setNewComment","backgroundImage","onChange","persist","text","target","prev","spellCheck","placeholder","resize","opacity","finalComment","author_name","comment_id","review_id","_id","review_author","author","notificationReceivers","finalUser","bottom","margin","alignItems","comments","setReviews","promotedReviews","setPromotedReviews","reviewIdOfVisibleComments","loadingComment","setLoadingComment","loadingReview","setLoadingReview","loadingReport","setLoadingReport","commentsPage","setCommentsPage","topOfReviewsBlock","movie_release_date","setReview","addReplyOpen","setAddReplyOpen","setRefreshComments","setRefreshReviews","promotedContents","setPromotedContents","commentsObj","promoted","promotedContentIds","promoContents","content_id","promReviews","notPromotedReviews","includes","cursor","substring","date","format","likes","Collapse","in","marginLeft","values","renderComments","ind","filter","b","Paigination","ceil","GetClosestValidWidth","closestSize","minDifference","diff","abs","innerWidth","recommendedMovies","setRecommendedMovies","backgroundMovie","setBackgroundMovie","marginTop","innerHeight","right","fontWeight","newReview","setNewReview","split","addReviewTrigger","seekReviewId","seekCommentId","page","setPage","addReviewOpen","setAddReviewOpen","scrolledOnce","setScrolledOnce","reverse","unshift","realPage","scrollIntoView","behavior","content_author","match","setAddReviewTrigger","director","cast","setMovie","credits","directorObj","crew","job","scrollTo","currentTarget","classList","contains","remove","add","y","extractGenres","0","series","setSeries","selectedMovieGenre","setSelectedMovieGenre","selectedSerieGenre","setSelectedSerieGenre","onFail","moviesGenres","seriesGenres","minHeight","keys","Logo","fill","viewBox","clipPathUnits","ry","fillOpacity","strokeLinecap","paintOrder","transform","clipPath","d","menuItems","icon","MdSettings","MdGroup","MdRateReview","FaBullhorn","BsFillTagFill","BsBellFill","LeftSideMenu","section","setSection","isMenuOpened","mobile","borderLeft","socialIcons","FaFacebookF","FaInstagram","FaLinkedinIn","FaTwitter","validations","valid","LinkedinLinks","min","disabled","invalid","RightSideMenuFloating","transition","Select","items","btnName","multipleSelect","popoverClass","onSelect","isOpen","setIsOpen","opener","maxHeight","overflowY","uniqid","click","item","createMuiTheme","palette","primary","main","secondary","Checkbox","setEditReviewSection","setEditReview","setAction","role","setRole","searchKey","setSearchKey","lastVisibleColumn","setLastVisibleColumn","roleFilter","setRoleFilter","setSearch","mainFilter","setMainFilter","filteredReviews","setFilteredReviews","refresh","setRefresh","arr","boundaries","handleApply","columns","deleted","index","minWidth","onSwipedLeft","onSwipedRight","checked","reported","colSpan","setEditCommentSection","setEditComment","setCommentsObj","filteredComments","setFilteredComments","obj","allIds","fetchIds","idsArr","ReviewsAndComments","containerSpacing","tab","setTab","currentReview","getBack","setUser","currentComment","setComment","setEditAnnouncement","setEditAnnouncementSection","setAddNewAnouncementSection","setType","typeFilter","setTypeFilter","announcements","setAnnouncements","filteredAnnouncements","setFilteredAnnouncements","description","actions","types","status","start_date","end_date","currentAnnouncement","setAnnouncement","statuses","component","onDayChange","day","year","getFullYear","month","getMonth","niceDay","getDate","setFullYear","setMonth","setDate","getTime","clearIcon","clockIcon","newTime","setHours","setMinutes","Edit","setEditPromotion","setAddNewPromotionSection","setEditPromotionSection","promotions","setPromotions","filteredPromotions","setFilteredPromotions","content_type","RegExp","searchOptions","publish_status","c","j","currentPromotion","active_status","setPromotion","publishStatuses","newContent","candidates","setCandidates","searchKeys","rev","promos","Notifications","setEditNotification","setEditNotificationSection","setAddNewNotificationSection","setNotifications","filteredNotifications","setFilteredNotifications","subject","useStyles","makeStyles","inputRoot","border","Autocomplete","classes","multiple","filterSelectedOptions","renderInput","TextField","variant","currentNotification","initialDate","receivers","setNotification","val","options","All","getOptionLabel","option","setEditUser","setEditUserSection","setAddNewUserSection","statusFilter","setStatusFilter","users","setUsers","filteredUsers","setFilteredUsers","newPublicUsers","editUsers","last_login","TimeAgo","last_activity","username","password","re_password","newUser","setNewUser","roles","user_id","pid","currentUser","initialPassword","setInitialPassword","allowEdit","getState","sections","editReview","editComment","editAnnouncement","editPromotion","editNotification","editUser","u","ann","prom","not","handleSubmit","LoginFunction","localStorage","setItem","setEmail","setPassword","onKeyDown","keyCode","LegalDocument","fileType","filePath","PrivacyPolicy","CookiePolicy","TermsAndConditions","errorComponent","onError","console","log","Signup","confirmPassword","setConfirmPassword","validated","setValidated","agreedWithPolicies","setAgreedWithPolicies","legalDocument","setLegalDocument","notValid","success","sitekey","hovered","setHovered","setExpired","timeout","setTimeout","clearTimeout","adminNotification","onMouseOver","onMouseLeave","MoveToWatchedButton","refreshProfile","movieIndex","splice","listType","owner","formatedMovie","Wishlist","selectedGenre","setSelectedGenre","EditProfile","editProfileOpen","confirm_assword","setUpdate","photoUploader","handleFileUpload","imageFile","files","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","getDataUrlFromFile","dataUrl","finalUpdate","publiUser","updatedPublicUser","newToken","sectionInUrl","profileData","setProfileData","reviewsFetched","commentsFetched","setEditProfileOpen","setRefreshProfile","borderTop","borderBottom","Watchedlist","PrivateRoute","Component","bearerPath","successPath","computedMatch","ready","validity","setValidity","getItem","render","to","pathname","Announcement","notClosedAnnouncement","closedAnnouncements","parse","closed","setClosed","flexBasis","flexGrow","movieGenre","seriesGenre","categories","setQuery","populateBox","setPopulateBox","queryCleaned","onBlur","Promise","resolve","onFocus","onKeyUp","withResizeDetector","scrolledToTop","setScrolledTopTop","lastScroll","direction","setDirection","profilePopover","location","useLocation","handleScrolling","scrollY","addEventListener","removeEventListener","seen","prevNotifications","delIndex","n","removeItem","condition","secodaryItems","first_air_date","CookiesPolicy","doc","App","publicUsersArr","userToken","exact","Home","Movie","Serie","SearchResults","AdminDashboard","Profile","ReactDOM","StrictMode","getElementById"],"mappings":"uFAAAA,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,4C,iLC2I3C,IAAMC,EAAcC,YAAgB,CAClCC,YAhHF,WAAiD,IAArBC,EAAoB,uDAAZ,GAAIC,EAAQ,uCAC9C,OAAQA,EAAOC,MACb,IAAK,kBACH,OAAOD,EAAOF,YAChB,IAAK,qBACH,OAAOI,OAAOC,OAAO,GAAIJ,EAAOC,EAAOI,YACzC,QACE,OAAOL,IA0GXM,QAtGF,WAA6C,IAArBN,EAAoB,uDAAZ,GAAIC,EAAQ,uCAC1C,OAAQA,EAAOC,MACb,IAAK,cACH,OAAOD,EAAOK,QAChB,IAAK,iBACH,OAAOH,OAAOC,OAAO,GAAIJ,EAAOC,EAAOM,QACzC,QACE,OAAOP,IAgGXQ,KA5IF,WAeG,IAdDR,EAcA,uDAdQ,CACNS,WAAY,GACZC,UAAW,GACXC,aAAc,GACdC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPR,QAAS,GACTS,QAAS,GACTC,SAAU,GACVC,YAAa,GACbC,cAAe,IAEjBjB,EACA,uCACA,OAAQA,EAAOC,MACb,IAAK,WACH,OAAOD,EAAOO,KAChB,IAAK,cACH,OAAOL,OAAOC,OAAO,GAAIJ,EAAOC,EAAOkB,cACzC,QACE,OAAOnB,IAuHXoB,OA/EF,WAAwE,IAAjDpB,EAAgD,uDAAxC,CAAEqB,MAAO,GAAIC,SAAU,OAASrB,EAAQ,uCACrE,OAAQA,EAAOC,MACb,IAAK,aACH,OAAOD,EAAOmB,OAChB,IAAK,gBACH,OAAOjB,OAAOC,OAAO,GAAIJ,EAAOC,EAAOmB,QACzC,QACE,OAAOpB,IAyEXuB,aA9FF,WAGG,IAFDvB,EAEA,uDAFQ,CAAEwB,MAAO,GAAIC,QAAS,GAAIC,SAAS,GAC3CzB,EACA,uCACA,OAAQA,EAAOC,MACb,IAAK,mBACH,OAAOD,EAAOsB,aAChB,IAAK,sBACH,OAAOpB,OAAOC,OAAO,GAAIJ,EAAOC,EAAOsB,cACzC,QACE,OAAOvB,IAqFX2B,SApDF,WAmCG,IAlCD3B,EAkCA,uDAlCQ,CACN4B,eAAgB,GAChBC,eAAgB,GAChBC,kBAAmB,GACnBC,mBAAoB,EACpBC,kBAAmB,EACnBC,mBAAoB,EACpBC,sBAAuB,IACvBC,gBAAiB,GACjBC,2BAA4B,EAC5BC,4BAA6B,EAC7BC,8BAA+B,EAC/BC,aAAc,GACdC,cAAe,GACfC,YAAa,GACbC,aAAc,GACdC,iBAAkB,CAChBC,SAAUC,KAAKC,MACfC,GAAI,SACJC,YAAa,mCACbC,cAAe,mCACfC,aAAc,aACdC,SACE,6IACF3B,MAAO,4CACP4B,OAAQ,CACN,CAAEL,GAAI,GAAIM,KAAM,UAChB,CAAEN,GAAI,GAAIM,KAAM,WAChB,CAAEN,GAAI,GAAIM,KAAM,aAElBC,QAAS,MAGbrD,EACA,uCACA,OAAQA,EAAOC,MACb,IAAK,eACH,OAAOD,EAAO0B,SAChB,IAAK,kBACH,OAAOxB,OAAOC,OAAO,GAAIJ,EAAOC,EAAO0B,UACzC,QACE,OAAO3B,IAWXuD,aAvEF,WAAiD,IAApBvD,EAAmB,uDAAX,EAAGC,EAAQ,uCAC9C,OAAQA,EAAOC,MACb,IAAK,aACH,OAAOD,EAAOuD,OAChB,QACE,OAAOxD,IAmEXyD,oBA/DF,WAAsD,IAAxBzD,EAAuB,wDAARC,EAAQ,uCACnD,OAAQA,EAAOC,MACb,IAAK,4BACH,OAAOD,EAAOyD,SAChB,QACE,OAAO1D,MAkEE2D,EALDC,YACZ/D,EACAgE,OAAOC,8BAAgCD,OAAOC,gC,wBCtJjCC,gB,sBCCFC,EAAuB,CAClC,CAAEjB,GAAI,GAAIM,KAAM,UAChB,CAAEN,GAAI,GAAIM,KAAM,aAChB,CAAEN,GAAI,GAAIM,KAAM,aAChB,CAAEN,GAAI,GAAIM,KAAM,UAChB,CAAEN,GAAI,GAAIM,KAAM,SAChB,CAAEN,GAAI,GAAIM,KAAM,eAChB,CAAEN,GAAI,GAAIM,KAAM,SAChB,CAAEN,GAAI,MAAOM,KAAM,UACnB,CAAEN,GAAI,GAAIM,KAAM,WAChB,CAAEN,GAAI,GAAIM,KAAM,WAChB,CAAEN,GAAI,GAAIM,KAAM,UAChB,CAAEN,GAAI,MAAOM,KAAM,SACnB,CAAEN,GAAI,KAAMM,KAAM,WAClB,CAAEN,GAAI,MAAOM,KAAM,WACnB,CAAEN,GAAI,IAAKM,KAAM,mBACjB,CAAEN,GAAI,MAAOM,KAAM,YACnB,CAAEN,GAAI,GAAIM,KAAM,YAChB,CAAEN,GAAI,MAAOM,KAAM,OACnB,CAAEN,GAAI,GAAIM,KAAM,YAwBLY,EAAuB,CAClC,CACElB,GAAI,MACJM,KAAM,sBAER,CACEN,GAAI,GACJM,KAAM,aAER,CACEN,GAAI,GACJM,KAAM,UAER,CACEN,GAAI,GACJM,KAAM,SAER,CACEN,GAAI,GACJM,KAAM,eAER,CACEN,GAAI,GACJM,KAAM,SAER,CACEN,GAAI,MACJM,KAAM,UAER,CACEN,GAAI,MACJM,KAAM,QAER,CACEN,GAAI,KACJM,KAAM,WAER,CACEN,GAAI,MACJM,KAAM,QAER,CACEN,GAAI,MACJM,KAAM,WAER,CACEN,GAAI,MACJM,KAAM,oBAER,CACEN,GAAI,MACJM,KAAM,QAER,CACEN,GAAI,MACJM,KAAM,QAER,CACEN,GAAI,MACJM,KAAM,kBAER,CACEN,GAAI,GACJM,KAAM,YAuBGa,EAAU,CACrB,CACEb,KAAM,iBACNc,QACE,yBAAKC,UAAU,mBAAmBC,MAAO,CAAEC,WAAY,SACrD,kBAAC,IAAD,CAAOC,MAAM,OAAOC,IAAI,WAAWC,KAAM,OAI/C,CACEpB,KAAM,YACNc,QACE,yBAAKC,UAAU,mBAAmBC,MAAO,CAAEC,WAAY,SACrD,kBAAC,IAAD,CAAOC,MAAM,QAAQC,IAAI,WAAWC,KAAM,OAIhD,CACEpB,KAAM,UACNc,QACE,yBAAKC,UAAU,mBAAmBC,MAAO,CAAEC,WAAY,SACrD,kBAAC,IAAD,CAAOC,MAAM,sBAAsBC,IAAI,WAAWC,KAAM,OAI9D,CACEpB,KAAM,WACNc,QACE,yBAAKC,UAAU,mBAAmBC,MAAO,CAAEC,WAAY,SACrD,kBAAC,IAAD,CAAOC,MAAM,OAAOC,IAAI,WAAWC,KAAM,Q,QC7J3CC,EAAkB,SAACC,EAAMC,GAC7B,OAAOC,MAAM,GAAD,OCJuD,IDIvD,OAAaF,GAAQ,CAC/BG,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACP,eAAgB,sBAEjBC,MAAK,SAACC,GAAD,OAASA,EAAIC,WAGjBC,EAAiB,SAACX,GACtB,OAAOE,MAAM,GAAD,OCduD,IDcvD,OAAaF,IAAQQ,MAAK,SAACC,GAAD,OAASA,EAAIC,WAWxCE,EAAQ,SAACC,GACpB,OAAOd,EAAgB,cAAec,IAG3BC,EAAiB,SAAC5E,GAC7B,OAAO6D,EAAgB,uBAAwB7D,IAGpC6E,EAAgB,SAACC,GAC5BL,EAAe,oBAAoBH,MAAK,SAACC,GAAD,OAASO,EAASP,OAG/CQ,EAAoB,SAACD,GAChC,OAAOL,EAAe,wBAAwBH,MAAK,SAACC,GAAD,OAASO,EAASP,OAO1DS,EAAc,SAACC,EAAQC,EAASvF,EAAMwF,GACjD,OAAOtB,EAAgB,kBAAmB,CAAEoB,SAAQC,UAASvF,OAAMwF,YAGxDC,EAAkB,SAACF,GAC9B,OAAOrB,EAAgB,qBAAsB,CAAEqB,aAGpCG,EAA0B,SAACH,GACtC,OAAOrB,EAAgB,6BAA8B,CAAEqB,aAG5CI,EAAe,SAACC,EAAS5F,GACpC,OAAOkE,EAAgB,mBAAoB,CAAElE,OAAM4F,aAGxCC,EAAoB,SAACC,GAChC,OAAO5B,EAAgB,uBAAwB,CAAE4B,cAGtCC,EAAgB,SAAC/F,EAAMuF,EAASC,GAC3C,OAAOtB,EAAgB,uBAAwB,CAAElE,OAAMuF,UAASC,YAOrDQ,EAAiB,SAACT,EAASC,GACtC,OAAOtB,EAAgB,mBAAoB,CAAEqB,UAASC,YAG3CS,EAAa,SAACjG,EAAM8F,GAC/B,OAAO5B,EAAgB,gBAAiB,CAAElE,OAAM8F,cAGrCI,EAAc,SAAClG,EAAMmG,GAChC,OAAOjC,EAAgB,iBAAkB,CAAElE,OAAMmG,eAGtCC,EAAe,SAACpG,EAAM8F,GACjC,OAAO5B,EAAgB,kBAAmB,CAAElE,OAAM8F,cAGvCO,EAAgB,SAACrG,EAAMmG,GAClC,OAAOjC,EAAgB,mBAAoB,CAAElE,OAAMmG,eAGxCG,EAAU,SAACC,GACtB,OAAOrC,EAAgB,aAAc,CAAEqC,YAG5BC,EAAiB,SAACC,GAC7B,OAAOvC,EAAgB,oBAAqB,CAAEuC,eAGnCC,EAAkB,SAACC,GAC9B,OAAOzC,EAAgB,qBAAsB,CAAEyC,gBAGpCC,EAAW,SAACC,GACvB,OAAO3C,EAAgB,cAAe,CAAE2C,YAG7BC,EAAoB,SAACC,GAChC,OAAO7C,EAAgB,uBAAwB,CAAE6C,WAGtCC,EAAmB,SAACD,GAC/B,OAAO7C,EAAgB,sBAAuB,CAAE6C,WAGrCE,EAAqB,SAACF,GACjC,OAAO7C,EAAgB,0BAA2B,CAAE6C,WAGzCG,EAAgB,SAACrG,GAC5B,OAAOqD,EAAgB,kBAAmB,CAAErD,WAGjCsG,EAAyB,SAAChG,GACrC,OAAO+C,EAAgB,2BAA4B/C,IAGxCiG,EAAc,SAACjC,GAC1BL,EAAe,iBAAiBH,MAAK,SAACC,GAAD,OAASO,EAASP,OAG5CyC,EAAW,WACtB,OAAOvC,EAAe,qBAWXwC,EAAa,WACxB,OAAOxC,EAAe,uBAGXyC,EAAc,WACzB,OAAOzC,EAAe,wBAGX0C,GAAqB,SAAClC,EAAQtF,GACzC,OAAOkE,EAAgB,sBAAuB,CAAEoB,SAAQtF,UAE7CyH,GAAsB,SAAC7B,EAAS5F,GAC3C,OAAOkE,EAAgB,uBAAwB,CAAE0B,UAAS5F,UAG/C0H,GAAwB,SAACC,GACpC,OAAOzD,EAAgB,wBAAyByD,IAGrCC,GAAyB,SAACD,GACrC,OAAOzD,EAAgB,yBAA0ByD,IAGtCE,GAAoB,SAACF,EAAKG,EAAMjB,GAC3C,OAAO3C,EAAgB,4BAA6B,CAAEyD,MAAKG,OAAMjB,YAGtDkB,GAAmB,WAC9B,OAAOjD,EAAe,6BAGXkD,GAAqB,SAACC,GACjC,OAAO/D,EAAgB,8BAA+B+D,IAG3CC,GAA8B,SAACP,GAC1C,OAAOzD,EAAgB,8BAA+ByD,IAG3CQ,GAAmB,SAACF,GAC/B,OAAO/D,EAAgB,4BAA6B+D,IAGzCG,GAAyB,WACpC,OAAOtD,EAAe,6BAGXuD,GAAgB,WAC3B,OAAOvD,EAAe,0BAOXwD,GAAgB,SAACC,GAC5B,OAAOrE,EAAgB,yBAA0BqE,IAOtCC,GAAuB,SAACb,GACnC,OAAOzD,EAAgB,2BAA4B,CAAEyD,SAO1Cc,GAAmB,WAC9B,OAAO3D,EAAe,6BAGX4D,GAAqB,SAAC3H,GACjC,OAAOmD,EAAgB,8BAA+BnD,IAG3C4H,GAAmB,SAAC5H,GAC/B,OAAOmD,EAAgB,4BAA6BnD,IAGzC6H,GAA8B,SAACjB,EAAKd,GAC/C,OAAO3C,EAAgB,8BAA+B,CAAEyD,MAAKd,YAGlDgC,GAAuB,SAAC7I,EAAMuF,GACzC,OAAOrB,EAAgB,2BAA4B,CAAElE,OAAMuF,aAehDuD,GAAqB,WAChC,OAAOhE,EAAe,yB,6BE7KTiE,GAzEC,SAAC,GAcV,IAbLnF,EAaI,EAbJA,UAaI,IAZJoF,cAYI,MAZK,aAYL,MAXJC,gBAWI,MAXO,SAWP,MAVJC,aAUI,aATJC,aASI,MATI,QASJ,MARJC,eAQI,MARM,aAQN,MAPJC,eAOI,MAPM,QAON,MANJC,aAMI,MANI,EAMJ,MALJC,iBAKI,MALQ,QAKR,MAJJC,YAII,WAJGC,EAIH,MAHJC,cAGI,MAHK,aAGL,EADDC,GACC,EAFJC,aAEI,4IACoCC,mBAAS,GAD7C,mBACGC,EADH,KACiBC,EADjB,KAGJC,qBAAU,WACR,OAAO,WAEL,IADA,IAAIC,EAAWC,SAASC,uBAAuB,gBACtCC,EAAI,EAAGA,EAAIH,EAASI,OAAQD,IACnCH,EAASG,GAAGE,WAAWC,YAAYN,EAASG,OAG/C,IAVC,MAW8BP,oBAAS,GAXvC,mBAWGW,EAXH,KAWcC,EAXd,KAYJ,OACE,kBAAC,WAAD,CACEC,OAAQ,WACDF,IACHC,GAAa,GACbzB,MAGJU,OAAQA,EACRJ,MAAOA,EACPqB,UAAW,EACXC,KAAMxB,EAAQU,GACdb,SAAUA,EACVI,QAASA,EACTF,MAAOA,EACPD,MAAOA,EACP2B,aAAa,EACbtB,UAAWA,EACXC,KAAMA,EACNsB,qBAAqB,EACrBlH,UAAWA,GAEVmH,IAAMC,aACLrB,EAAKsB,SACLtL,OAAOC,OAAO,GAAI+J,EAAKsB,SAASC,MAAO,CACrCC,IAAK,SAACC,GACJ,GAAIA,IACmB,IAAjBtB,GACFC,EAAgBqB,EAAGC,wBAAwBC,OAEzC3B,EAAKsB,UAAU,CAAC,IACVE,EAAQxB,EAAKsB,SAAbE,IACJA,GAAO,YAAaA,IACtBA,EAAII,QAAUH,GAEG,oBAARD,GACTA,EAAIC,UCnDPI,GAbA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,QAA0C,IAAjCxH,YAAiC,MAA1B,GAA0B,MAAtBkF,aAAsB,MAAd,QAAc,EAC1D,OACEsC,GACE,yBAAK7H,UAAU,kCACb,yBACEA,UAAS,iBAAYuF,GACrBtF,MAAO,CAAEyH,MAAM,GAAD,OAAKrH,EAAL,MAAejB,OAAO,GAAD,OAAKiB,EAAL,WCuG9ByH,oBAPf,SAAclM,EAAOmM,GACnB,OAAO,aACLnG,OAAQhG,EAAM2B,SAASC,gBACpBuK,KAIQD,EAvGQ,SAAC,GAA6B,IAA3B1L,EAA0B,EAA1BA,KAAM4L,EAAoB,EAApBA,MAAOpG,EAAa,EAAbA,OAAa,EACpBqE,oBAAS,GADW,mBAC3C4B,EAD2C,KAClCI,EADkC,KAG5CC,EAAW,uCAAG,WAAO7K,GAAP,eAAA8K,EAAA,0DACd/L,EAAKG,aADS,qBAEZyL,EAAMrJ,GAFM,uBAGdsJ,GAAW,GAHG,SAIE9F,EAAc/F,EAAM4L,EAAMrJ,GAAIiD,GAJhC,OAIVZ,EAJU,OAKdiH,GAAW,GACPjH,EAAIoH,aACN7I,EAAM8I,SAAS,CACbvM,KAAM,cACNiB,aAAciE,EAAIoH,cAEpB7I,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAM,SAAD,OAAWC,EAAX,aACLA,QAAQ,sBAAD,OAAwBA,EAAxB,kBACPvB,KAAM,aAGVwF,GAAc,SAACgH,GACb,IAAIpM,EAAU,GACdoM,EAAWC,SAAQ,SAACC,GAClBtM,EAAQsM,EAAEC,SAAWD,KAEvBjJ,EAAM8I,SAAS,CAAEvM,KAAM,cAAeI,gBAGxCqD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASuD,KAAKC,UAAUG,EAAI0H,OAAOC,QAAQ,KAAM,IACjD7M,KAAM,aAhCE,+BAsChByD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QAAS,6CACTvB,KAAM,aA3CM,4CAAH,sDAiDX8M,GACoE,IAAxExM,EAAKQ,SAASiM,WAAU,SAACL,GAAD,OAAOA,EAAEM,WAAad,EAAMrJ,GAAGoK,cAKzD,OAFG,IADD3M,EAAKS,YAAYgM,WAAU,SAACL,GAAD,OAAOA,EAAEM,WAAad,EAAMrJ,GAAGoK,cAqC1D,GAjCA,kBAAC,GAAD,CACExD,MAAM,OACNF,SAAS,MACTG,QAAS,SAACwD,GAAD,OACP,yBAAKhJ,UAAU,aACZ4I,EAAiB,uBAAyB,oBAG/CnD,QAAQ,cAER,yBACExF,MAAO,CAAEgJ,cAAe,OACxBjJ,UAAS,qBACP4I,EAAiB,oBAAsB,sBAGxCf,EACC,kBAAC,GAAD,CAAQxH,KAAM,GAAIwH,QAASA,EAASqB,MAAO,UACzCN,EACF,kBAAC,IAAD,CACEO,QAAS,kBAAMjB,EAAY,iBAC3BkB,SAAS,SAGX,kBAAC,IAAD,CACED,QAAS,kBAAMjB,EAAY,aAC3BlI,UAAU,gBACVC,MAAO,CAAEoJ,YAAa,eC9FrBC,GAAa,SAACC,EAAKC,GAC9B,IAUIhD,EAVAiD,EAAK,CACP,CAAEC,MAAO,EAAGC,OAAQ,IACpB,CAAED,MAAO,IAAKC,OAAQ,KACtB,CAAED,MAAO,IAAKC,OAAQ,KACtB,CAAED,MAAO,IAAKC,OAAQ,KACtB,CAAED,MAAO,KAAMC,OAAQ,KACvB,CAAED,MAAO,KAAMC,OAAQ,KACvB,CAAED,MAAO,KAAMC,OAAQ,MAIzB,IAAKnD,EAAIiD,EAAGhD,OAAS,EAAGD,EAAI,KACtB+C,GAAOE,EAAGjD,GAAGkD,OADYlD,KAK/B,OAAQ+C,EAAME,EAAGjD,GAAGkD,OAAOE,QAAQJ,GAAQb,QAPlC,2BAO8C,MAAQc,EAAGjD,GAAGmD,QAG1DE,GAAiB,SAACC,GAC7B,IAAIC,EAAIC,KAAKC,MAAMH,EAAU,IACzBI,EAAIJ,EAAc,GAAJC,EAClB,MAAM,GAAN,OAAUA,EAAV,aAAgBG,EAAhB,MAEWC,GAAgB,SAACzN,GAG5B,MADW,0JACD0N,KAAKC,OAAO3N,GAAO4N,gBC+BhBxC,oBARf,SAAclM,EAAOmM,GACnB,OAAO,aACL3L,KAAMR,EAAMQ,KACZF,QAASN,EAAMM,SACZ6L,KAIQD,EAtDQ,SAAC,GAQjB,IAPL3H,EAOI,EAPJA,MACAgJ,EAMI,EANJA,QAMI,IALJ9I,YAKI,MALG,SAKH,MAJJkK,iBAII,SAHJC,EAGI,EAHJA,SACAxK,EAEI,EAFJA,UACA0J,EACI,EADJA,MAEA,OACE,yBACEP,QAAO,sBAAE,sBAAAhB,EAAA,sDACHoC,GACEpB,GACFA,IAHG,2CAOTnJ,UAAS,gCAA2BK,EAA3B,YACPkK,EAAY,eAAiB,IADtB,OAENC,EAAW,yBAA2B,IAFhC,OAGPxK,EAAS,WAAOA,GAAc,KAGhC,yBAAKA,UAAU,uEACF6F,IAAV6D,GAAiC,OAAVA,EACtB,yBAAK1J,UAAS,iBAAqB,UAATK,EAAmB,IAAM,MAChDiJ,GAAWI,EAAO,IAGrB,GAEF,yBAAK1J,UAAU,YACb,yBAAKC,MAAO,CAAEwK,aAAuB,WAATpK,EAAoB,OAAS,SACvD,kBAAC,IAAD,CACEF,MAAOA,EACPC,IAAI,WACJC,KAAe,UAATA,EAAmB,GAAc,WAATA,EAAoB,GAAK,Y,qBCvC/DqK,I,MAAmB,SAACnK,GAA+B,IAAzBoK,EAAwB,uDAAf,GAAI/I,EAAW,uCACtD,MAAM,GAAN,OAHa,gCAGb,OAAmBrB,EAAnB,oBAAmCqB,EAAnC,YAA6C,CAAC,kBAC3CgJ,OAAOD,GACPE,KAAK,QAaGC,GAA0B,SAAC9L,EAAQ4C,GAC9C,OAAOnB,MACLiK,GACE,kBACA,CAAC,0BAAD,sBAA2C1L,EAAO6L,KAAK,OACvDjJ,IAEFb,MAAK,SAACC,GAAD,OAASA,EAAIC,WAGT8J,GAAc,SAACpJ,EAASC,GACnC,OAAOnB,MACLiK,GAAiB,UAAD,OAAW/I,EAAX,WAA6B,GAAIC,IACjDb,MAAK,SAACC,GAAD,OAASA,EAAIC,WAOT+J,GAAY,SAACrJ,EAASC,GACjC,OAAOnB,MAAMiK,GAAiB,OAAD,OAAQ/I,GAAW,GAAIC,IAASb,MAAK,SAACC,GAAD,OAChEA,EAAIC,WAIKgK,GAAW,SAACtJ,EAASC,GAChC,OAAOnB,MAAMiK,GAAiB,UAAD,OAAW/I,GAAW,GAAIC,IAASb,MAAK,SAACC,GAAD,OACnEA,EAAIC,WAIKiK,GAAa,SAACvJ,EAASC,GAClC,OAAOnB,MACLiK,GAAiB,UAAD,OAAW/I,EAAX,YAA8B,GAAIC,IAClDb,MAAK,SAACC,GAAD,OAASA,EAAIC,WAGTkK,GAAe,SAAClO,EAAO2E,GAClC,IAAIwJ,EAAMV,GAAiB,gBAAiB,CAAC,SAAD,OAAUzN,IAAU2E,GAChE,OAAOnB,MAAM2K,GAAKrK,MAAK,SAACC,GAAD,OAASA,EAAIC,WAGzBoK,GAAe,SAACpO,EAAO2E,GAClC,IAAIwJ,EAAMV,GACR,aACA,CAAC,SAAD,OAAUY,UAAUrO,KACpB2E,GAEF,OAAOnB,MAAM2K,GAAKrK,MAAK,SAACC,GAAD,OAASA,EAAIC,WCJvB6G,oBAPf,SAAclM,EAAOmM,GACnB,OAAO,aACLxK,SAAU3B,EAAM2B,UACbwK,KAIQD,EA1DO,SAAC,GAAoC,IAAlCnG,EAAiC,EAAjCA,QAASpE,EAAwB,EAAxBA,SAAUgO,EAAc,EAAdA,QAAc,EACxBtF,mBAAS,IADe,mBACjDuF,EADiD,KACvCC,EADuC,OAE1BxF,mBAAS,IAFiB,mBAEjDyF,EAFiD,KAExCC,EAFwC,KAmBxD,OAfAvF,qBAAU,WAAM,4CACd,4BAAA+B,EAAA,0DACMxG,IAAWpE,EAASC,eAD1B,gCAEyBuN,GAAYpJ,EAASpE,EAASC,gBAFvD,QAEQoO,EAFR,QAGkBC,SAAYD,EAASC,QAAQpF,OAGzCgF,EAAYG,EAASC,QAAQC,KAAI,SAACtD,GAAD,OAAOA,EAAEuD,QAF1CJ,EAAW,2CAJjB,4CADc,uBAAC,WAAD,wBAYdK,KACC,CAACrK,EAASpE,EAASC,iBAGpB,yBAAKwC,UAAU,kDACb,yBAAKA,UAAU,kBACZwL,EAAS/E,OACR,yBAAKzG,UAAU,UACb,yBAAKA,UAAU,0BACb,kBAAC,KAAD,CACEuL,QAASA,EACTU,OAAQ,CACNC,QAAS,CACPC,WAAY,CAAEC,SAAU,EAAGC,eAAgB,KAG/CC,SAAO,EACPtM,UAAU,iBACVuM,UAAQ,EACR7E,MAAM,OACNtI,OAAO,OACPgM,IAAG,0CAAqCI,EAAS,QAIrDE,EACF,yBAAK1L,UAAU,wBAAwB0L,GAEvC,Q,SCnBKc,GA5BD,SAAClF,GASb,OARAlB,qBAAU,WACJkB,EAAM1B,KACRU,SAAS3F,KAAKV,MAAMwM,SAAW,SAE/BnG,SAAS3F,KAAKV,MAAMwM,SAAW,YAEhC,CAACnF,EAAM1B,OAEH0B,EAAM1B,KACX,yBAAK5F,UAAU,6EACb,yBACEA,UAAU,qCACVC,MAAO,CAAEoF,SAAU,SAAUqH,IAAK,IAElC,yBAAKvD,QAAS7B,EAAMqF,QAAS3M,UAAU,gBACrC,kBAAC,KAAD,CAAKoJ,SAAS,OAAOwD,YAAY,UAGrC,yBAAK5M,UAAU,kEACZsH,EAAMD,WAIX,ICoJWS,oBARf,SAAclM,EAAOmM,GACnB,OAAO,aACL3L,KAAMR,EAAMQ,KACZF,QAASN,EAAMM,SACZ6L,KAIQD,EArKI,SAAC,GAA+B,IAA7B+E,EAA4B,EAA5BA,OAAQzQ,EAAoB,EAApBA,KAAMF,EAAc,EAAdA,QAAc,EACJ+J,mBAAS,IADL,mBACzC6G,EADyC,KACzBC,EADyB,OAEV9G,oBAAS,GAFC,mBAEzC+G,EAFyC,KAE5BC,EAF4B,KAGhD,OACE,yBAAKjN,UAAU,2BACb,kBAAC,GAAD,CAAO4F,KAAMoH,EAAaL,QAAS,kBAAMM,GAAe,KACtD,kBAAC,GAAD,CACEtL,QAASmL,EACTvB,QAAS,kBAAM0B,GAAe,OAGjCJ,EAAOf,KAAI,SAACtD,EAAGhC,GAAJ,OACV,yBACEuF,IAAG,iBAAYvF,GACfxG,UAAU,uDAEV,yBACEA,UAAU,6EACVC,MAAO,CACLwK,aAAc,QACdyC,OAAQ,EACR9N,OAAQ,OACR6J,cAAe,SAGjB,kBAAC,GAAD,CAAgBjB,MAAOQ,EAAGpM,KAAMA,KAElC,yBAAK4D,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,2DACb,yBACEmN,IAAK3E,EAAE5J,YACP8I,MAAM,OACNzH,MAAO,CAAEmN,aAAc,QACvBpN,UAAU,gBACVqN,IACE7E,EAAE5J,YAAF,yCACsC4J,EAAE5J,aACpC,yDAGR,yBACEuK,QAAS,kBACPmE,EAAQC,KAAR,WAAiB/E,EAAEvJ,KAAO,SAAW,QAArC,YAAgDuJ,EAAE7J,MAEpDqB,UAAU,sEACVC,MAAO,CACLuN,KAAM,EACNd,IAAK,EACLrH,SAAU,WACV6H,OAAQ,EACRE,aAAc,SAGhB,yBACEpN,UAAU,uDACVmJ,QAAS,SAACsE,GACRA,EAAEC,kBACFX,EAAkBvE,EAAE7J,IACpBsO,GAAe,KAGjB,kBAAC,KAAD,CACEhN,MAAO,CACLmJ,SAAU,OACVF,MAAO,QACPG,YAAa,cAOzB,yBAAKrJ,UAAU,iBACb,yBACEA,UAAU,mDACVmJ,QAAS,kBAAMmE,EAAQC,KAAR,iBAAuB/E,EAAE7J,OAExC,yBAAKqB,UAAU,iBACZwI,EAAEpL,MAAQoL,EAAEpL,MAAQoL,EAAEvJ,OAG3B,yBAAKe,UAAU,kCACb,yBAAKA,UAAU,iBACZwI,EAAEmF,UAAUlH,OACT+B,EAAEmF,UACC7B,KAAI,SAAC8B,GACJ,IAAIC,EAAQrF,EAAEpL,MACVwC,EAAqBkO,MAAK,SAACC,GAAD,OAAOA,EAAEpP,KAAOiP,KAC1C/N,EAAqBiO,MAAK,SAACC,GAAD,OAAOA,EAAEpP,KAAOiP,KAE9C,OAAOC,EAAQA,EAAM5O,KAAO,aAE7B4L,KAAK,KACR,YAGR,yBAAK7K,UAAU,8CACb,kBAAC,GAAD,CACEwK,WACEpO,EAAKF,QAAQsM,EAAE7J,KACsB,mBAAjCvC,EAAKF,QAAQsM,EAAE7J,IAAIqP,UAGzBhG,MAAOQ,EACPrI,MAAM,OACNH,UAAU,YACVK,KAAK,QACLqJ,MAAOxN,EAAQsM,EAAE7J,IAAMzC,EAAQsM,EAAE7J,IAAIsP,eAAiB,IAExD,kBAAC,GAAD,CACE5N,KAAK,QACLmK,WACEpO,EAAKF,QAAQsM,EAAE7J,KACsB,cAAjCvC,EAAKF,QAAQsM,EAAE7J,IAAIqP,UAGzBhG,MAAOQ,EACPrI,MAAM,QACNH,UAAU,YACV0J,MAAOxN,EAAQsM,EAAE7J,IAAMzC,EAAQsM,EAAE7J,IAAIuP,UAAY,IAEnD,kBAAC,GAAD,CACE7N,KAAK,QACLmK,WACEpO,EAAKF,QAAQsM,EAAE7J,KACsB,YAAjCvC,EAAKF,QAAQsM,EAAE7J,IAAIqP,UAGzBhG,MAAOQ,EACPxI,UAAU,YACVG,MAAM,sBACNuJ,MAAOxN,EAAQsM,EAAE7J,IAAMzC,EAAQsM,EAAE7J,IAAIwP,QAAU,IAEjD,kBAAC,GAAD,CACE9N,KAAK,QACLF,MAAM,OACNuJ,MAAOxN,EAAQsM,EAAE7J,IAAMzC,EAAQsM,EAAE7J,IAAIyP,SAAW,EAChD5D,WACEpO,EAAKF,QAAQsM,EAAE7J,KACsB,aAAjCvC,EAAKF,QAAQsM,EAAE7J,IAAIqP,UAGzBhG,MAAOQ,KAGX,yBAAKxI,UAAU,mCACb,kBAAC,GAAD,CAAgBgI,MAAOQ,EAAGpM,KAAMA,e,SCtJ1CiS,GAAc,CAClB,CAAEpP,KAAM,MAAOqP,UAAW,IAC1B,CAAErP,KAAM,sBAAuBqP,UAAW,CAAC,GAAI,KAC/C,CAAErP,KAAM,qBAAsBqP,UAAW,CAAC,GAAI,KAC9C,CAAErP,KAAM,UAAWqP,UAAW,CAAC,QAC/B,CAAErP,KAAM,gBAAiBqP,UAAW,CAAC,GAAI,KACzC,CAAErP,KAAM,SAAUqP,UAAW,CAAC,MAC9B,CAAErP,KAAM,wBAAyBqP,UAAW,CAAC,GAAI,MAuFpCxG,oBAPf,SAAclM,EAAOmM,GACnB,OAAO,aACLxK,SAAU3B,EAAM2B,UACbwK,KAIQD,EApFO,SAAC,GAA0B,IAAxBlG,EAAuB,EAAvBA,OAAQrE,EAAe,EAAfA,SACzBgR,EAAiBC,mBADuB,EAGZvI,mBAAS,IAHG,mBAGvCqI,EAHuC,KAG5BG,EAH4B,OAIZxI,mBAAS,OAJG,mBAIvCyI,EAJuC,KAI5BC,EAJ4B,OAKlB1I,mBAAS,IALS,mBAKvC4G,EALuC,KAK/B+B,EAL+B,KAoB9C,OAdAxI,qBAAU,WAAM,4CACd,4BAAA+B,EAAA,0DACMvG,IAAUrE,EAASK,kBADzB,gCAEqBkN,GAAwBwD,EAAW1M,GAFxD,OAEQpB,EAFR,OAGIoO,EAAUpO,EAAKqL,QAAQgD,MAAM,EAAGtR,EAASK,oBAH7C,4CADc,uBAAC,WAAD,wBAOdoO,KACC,CAACsC,EAAW1M,EAAQrE,IAEvB6I,qBAAU,WACRmI,EAAe5G,QAAQmH,gBACtB,CAACjC,IAGF,yBAAK7M,UAAU,oDACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qBACb,yBACEA,UAAU,WACVC,MAAO,CACL8O,QAAS,mBACTC,WAAY,iDACZ5B,aAAc,gBALlB,mBAWF,yBAAKpN,UAAU,6BAAf,uCAGA,yBAAKA,UAAU,yEACb,yBAAKA,UAAU,YACb,kBAAC,KAAD,CACEuH,IAAKgH,EACLtO,MAAO,CACL8O,QAAS,SACTE,SAAU,OACVC,UAAW,OACXC,WAAY,WAGbd,GAAYvC,KAAI,SAACtD,EAAGhC,GAAJ,OACf,yBACE2C,QAAS,WACPwF,EAAanG,EAAEvJ,MACfwP,EAAajG,EAAE8F,YAEjBrO,MAAO,CAAEmP,QAAS,gBAClBrD,IAAG,kCAA6BvF,GAChCxG,UAAS,eACP0O,IAAclG,EAAEvJ,KACZ,mCACA,kCAGLuJ,EAAEvJ,YAMb,yBAAKe,UAAU,kBACb,kBAAC,GAAD,CAAY6M,OAAQA,UC7CfwC,GAvCS,SAAC,GAAgB,IAAdxC,EAAa,EAAbA,OACzB,OACE,yBAAK7M,UAAU,kBACZ6M,EAAOf,KAAI,SAACtD,EAAGhC,GAAJ,OACV,yBACExG,UAAU,8EACV+L,IAAG,kCAA6BvF,IAEhC,yBAAKxG,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBACEmN,IAAK3E,EAAE8G,aACPtP,UAAU,kCACVmJ,QAAS,kBAAMmE,EAAQC,KAAR,iBAAuB/E,EAAEM,YACxCpB,MAAM,OACNzH,MAAO,CACLmN,aAAc,QAEhBC,IAAG,yCAAoC7E,EAAE8G,iBAG7C,yBAAKtP,UAAU,mCACb,yBACEA,UAAU,gCACVmJ,QAAS,kBAAMmE,EAAQC,KAAR,iBAAuB/E,EAAEM,aAEvCN,EAAE+G,aAEL,yBAAKvP,UAAU,6BACb,2BAAOA,UAAU,iBAAiBwI,EAAEgH,uB,uCC6FrCC,GA1HI,SAAC,GAKb,IAJLC,EAII,EAJJA,MACA/H,EAGI,EAHJA,QACAgI,EAEI,EAFJA,WAEI,IADJC,kBACI,MADS,CAAEpF,SAAU,uBAAwBqF,YAAa,eAC1D,EACAC,EACFnI,IAAY+H,EAAQ/H,EAAU,EAAIA,EAAU,GAAK,EAAIA,EAAU,EAAIA,EACjEoI,EAASD,EAAQ,EACjBE,EAAQD,EAAS,EAQrB,OANA3J,qBAAU,WACM,IAAVsJ,GACFC,EAAW,KAEZ,CAACD,IAEGA,EAAQ,EACb,kBAAC,IAAMO,SAAP,KACE,yBAAKjQ,UAAU,oDACb,yBACEA,UAAS,mBAAc4P,EAAU,YAAxB,6BACTzG,QAAS,kBAAMwG,EAAWhI,EAAU,GAAK,EAAIA,EAAU,EAAIA,KAE3D,kBAAC,KAAD,CAAeyB,SAAS,UAE1B,yBACEpJ,UAAS,UAAK4P,EAAU,SAAf,8BACT3P,MAAO,CAAEyH,MAAO,SAEfC,GAEH,yBACE3H,UAAS,mBAAc4P,EAAU,YAAxB,wBACTzG,QAAS,kBACPwG,EAAWhI,EAAU,GAAK+H,EAAQ/H,EAAU,EAAIA,KAGlD,kBAAC,KAAD,CAAgByB,SAAS,WAG7B,yBAAKpJ,UAAU,oDACb,yBACEA,UAAS,mBAAc4P,EAAU,YAAxB,6BACTzG,QAAS,kBAAMwG,EAAWhI,EAAU,GAAK,EAAIA,EAAU,EAAIA,KAF7D,YAMCmI,EAAQ,GAAK,GACZ,yBACE9P,UAAS,mBAAc4P,EAAU,YAAxB,oCACT3P,MAAO,CAAEyH,MAAO,QAChByB,QAAS,kBAAMwG,EAAWG,EAAQ,GAAK,EAAIA,EAAQ,EAAIA,KAHzD,OAQDA,GAAS,GACR,yBACE7P,MAAO,CAAEyH,MAAO,QAChB1H,UAAS,wBACP2H,IAAYmI,EACRF,EAAU,SACVA,EAAU,YAHP,oCAKTzG,QAAS,kBAAMwG,EAAWG,KAEzBA,GAIJC,GAAUL,GAASK,GAAU,GAC5B,yBACE9P,MAAO,CAAEyH,MAAO,QAChB1H,UAAS,wBACP2H,IAAYoI,EACRH,EAAU,SACVA,EAAU,YAHP,oCAKTzG,QAAS,kBAAMwG,EAAWI,KAEzBA,GAGJC,GAASN,GAASM,GAAS,GAC1B,yBACEhQ,UAAS,wBACP2H,IAAYqI,EACRJ,EAAU,SACVA,EAAU,YAHP,oCAKT3P,MAAO,CAAEyH,MAAO,QAChByB,QAAS,kBAAMwG,EAAWK,KAEzBA,GAIJA,EAAQ,GAAKN,GACZ,yBACEvG,QAAS,kBAAMwG,EAAWK,EAAQ,GAAKN,EAAQM,EAAQ,EAAIrI,IAC3D3H,UAAS,mBAAc4P,EAAU,YAAxB,oCACT3P,MAAO,CAAEyH,MAAO,SAHlB,OAQF,yBACE1H,UAAS,mBAAc4P,EAAU,YAAxB,wBACTzG,QAAS,kBACPwG,EAAWhI,EAAU,GAAK+H,EAAQ/H,EAAU,EAAIA,KAHpD,UAWJ,ICwEWG,oBAPf,SAAclM,EAAOmM,GACnB,OAAO,aACLxK,SAAU3B,EAAM2B,UACbwK,KAIQD,EA1LO,SAAC,GAYhB,IAXLlC,EAWI,EAXJA,KACA+G,EAUI,EAVJA,QACAvQ,EASI,EATJA,KACAsF,EAQI,EARJA,OACAsG,EAOI,EAPJA,MACAkI,EAMI,EANJA,aAEAC,GAII,EALJC,YAKI,EAJJD,8BACAE,EAGI,EAHJA,gBACAC,EAEI,EAFJA,eACA/S,EACI,EADJA,SACI,EACgC0I,mBAAS,CAAEjE,QAAS,KADpD,mBACGuO,EADH,KACeC,EADf,OAE0BvK,mBAAS,IAFnC,mBAEGyF,EAFH,KAEYC,EAFZ,OAG0B1F,oBAAS,GAHnC,mBAGG4B,EAHH,KAGYI,EAHZ,KAKJ,OACE,kBAAC,GAAD,CAAOrC,KAAMA,EAAM+G,QAASA,GAC1B,yBAAK3M,UAAU,mDACb,yBAAKA,UAAU,0BAAf,YACYkQ,EAAa3T,cAEzB,yBAAKyD,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVC,MAAO,CAAEwQ,gBAAgB,OAAD,OAASrU,EAAKI,MAAd,SAG5B,yBAAKwD,UAAU,OACb,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,oCACVC,MAAO,CAAEwQ,gBAAgB,OAAD,OAASrU,EAAKI,MAAd,SAG5B,yBACEwD,UAAS,0CACPuQ,EAAWvO,QAAQyE,QACnBlJ,EAASO,sBAAwB,EAC7B,aACA,gBAGLyS,EAAWvO,QACRzE,EAASO,sBAAwByS,EAAWvO,QAAQyE,OACpDlJ,EAASO,sBAAuB,IAVtC,oBAcF,yBAAKkC,UAAU,sBAAsBC,MAAO,CAAEb,OAAQ,UACpD,8BACEsR,SAAU,SAACjD,GACTA,EAAEkD,UACF,IAAIC,EAAOnD,EAAEoD,OAAOnH,MAChBkH,EAAKnK,QAAUlJ,EAASO,uBAC1B0S,GAAc,SAACM,GAAD,OACZ/U,OAAOC,OAAO,GAAI8U,EAAM,CAAE9O,QAAS4O,QAIzClH,MAAO6G,EAAWvO,QAClB+O,YAAY,EACZC,YAAY,sBACZ/Q,MAAO,CAAEgR,OAAQ,QACjBjR,UAAU,0BAGd,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,sCACb,yBACEA,UAAS,qCACPuQ,EAAWvO,QAAQyE,QACnBlJ,EAASO,sBAAwB,EAC7B,aACA,gBAGLyS,EAAWvO,QACRzE,EAASO,sBACTyS,EAAWvO,QAAQyE,OACnBlJ,EAASO,sBAAuB,IAXtC,qBAgBJ,yBAAKkC,UAAU,UACb,yBACEA,UAAU,oEACVC,MAAO,CAAEb,OAAQ,OAAQ8R,QAASxF,EAAU,EAAI,IAE/CA,IAGL,yBACE1L,UAAU,0CACVmJ,QAAO,sBAAE,gCAAAhB,EAAA,yDACFoI,EAAWvO,QADT,gBAEL2J,EAAW,gBAFN,2BAIDvP,EAAKK,MAJJ,wBAKHwL,GAAW,GACPkJ,EAAepV,OAAOC,OAAO,GAAIuU,EAAY,CAC/Ca,YAAahV,EAAKG,aAClBuM,SAAUd,EAAMrJ,GAChB0S,WAAY3P,EAAO2P,WACnBC,UAAW5P,EAAO6P,IAClB7P,OAAQA,EAAOA,OACf8P,cAAe9P,EAAO+P,OACtBC,sBAAuBhQ,EAAOgQ,+BAE5BC,EAfD,eAekBvV,IACL,MAChBoU,EAAc,CAAExO,QAAS,KAjBtB,UAkBaD,EACdoP,EACAQ,GApBC,QAkBC3Q,EAlBD,OAuBHiH,GAAW,GACPjH,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,4BACPtB,KAAM,UACNuB,QAASuD,KAAKC,UAAUG,EAAI0H,OAAOC,QACjC,KACA,QAKNpJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,kCACPtB,KAAM,UACNuB,QAAS,qCAGbsP,IACAwD,EAA6BzO,EAAO6P,KACpClB,IACAC,KAhDC,wBAmDH3E,EAAW,sCAnDR,6CAwDT,kBAAC,GAAD,CACEzC,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,QAASA,EACTxH,KAAM,KAtEV,gBCymBCyH,oBAVf,SAAclM,EAAOmM,GACnB,OAAO,aACLpM,YAAaC,EAAMD,YACnB4B,SAAU3B,EAAM2B,SAChBrB,QAASN,EAAMM,QACfE,KAAMR,EAAMQ,MACT2L,KAIQD,EA5rBQ,SAAC,GAA8C,IAA5CnM,EAA2C,EAA3CA,YAAa4B,EAA8B,EAA9BA,SAAUnB,EAAoB,EAApBA,KAAMF,EAAc,EAAdA,QAAc,EAEnC+J,mBAAS,IAF0B,mBAE5D8L,EAF4D,KAElD3B,EAFkD,OAIrCnK,mBAAS,IAJ4B,mBAI5DtJ,EAJ4D,KAInDqV,EAJmD,OAKrB/L,mBAAS,IALY,mBAK5DgM,EAL4D,KAK3CC,EAL2C,OAODjM,oBAC/D,GARgE,mBAO5DkM,EAP4D,KAOjChC,EAPiC,OAWvBlK,oBAAU,GAXa,mBAW5DmM,EAX4D,KAW5CC,EAX4C,OAYzBpM,oBAAU,GAZe,mBAY5DqM,EAZ4D,KAY7CC,EAZ6C,OAazBtM,oBAAU,GAbe,mBAa5DuM,EAb4D,KAa7CC,EAb6C,OAgB3BxM,mBAAS,GAhBkB,mBAgB5DyM,EAhB4D,KAgB9CC,EAhB8C,KAmB7DC,EAAoBpE,iBAAO,MAnBkC,EAqBvCvI,mBAAS,CACnCsJ,YAAa,GACbzG,SAAU,GACV0G,aAAc,GACdqD,mBAAoB,GACpBvD,aAAc,KA1BmD,mBAqB5D5N,GArB4D,KAqBpDoR,GArBoD,QA6B3B7M,oBAAS,GA7BkB,qBA6B5D8M,GA7B4D,MA6B9CC,GA7B8C,SAgCrB/M,oBAAS,GAhCY,qBAgC5DoK,GAhC4D,MAgC3C4C,GAhC2C,SAmCvBhN,oBAAS,GAnCc,qBAmC5DqK,GAnC4D,MAmC5C4C,GAnC4C,SAwCnBjN,mBAAS,IAxCU,qBAwC5DkN,GAxC4D,MAwC1CC,GAxC0C,MA0CnEhN,qBAAU,WAAM,4CACd,8BAAA+B,EAAA,0DACqC,IAA/BgK,EADN,gCAEqBlQ,EAAkBkQ,GAFvC,OAEQ3R,EAFR,OAIQ6S,EAAc,GAClB7S,EAAK+H,SAAQ,SAACC,GACZ6K,EAAY7K,EAAE+I,KAAO/I,KAEvB4H,GAAY,SAACU,GAAD,OACV/U,OAAOC,OAAO,GAAI8U,EAAlB/U,OAAA,KAAAA,CAAA,GAA2BoW,EAA4BkB,OAT7D,4CADc,uBAAC,WAAD,wBAcdrH,KACC,CAACmG,EAA2B9B,KAE/BjK,qBAAU,WAAM,4CACd,sCAAA+B,EAAA,0DACM5K,EAASI,mBADf,iCAEyBuH,KAFzB,cAEQoO,EAFR,OAGQC,EAAqB,GACrBC,EAAgB,GACfF,EAAS5K,OACZ4K,EAAS/K,SAAQ,SAACC,GAChB+K,EAAmBhG,KAAK/E,EAAEiL,YAC1BD,EAAchL,EAAEiL,YAAcjL,KAGlC4K,GAAoBI,GAXxB,UAaqBtQ,EAAkB3F,EAASI,oBAbhD,SAaQ6C,EAbR,QAcckI,QACJgL,EAAc,GAChBC,EAAqB,GACvBnT,EAAK+H,SAAQ,SAACC,GACR+K,EAAmBK,SAASpL,EAAE+I,MAChC/I,EAAE8K,UAAW,EACbI,EAAYnG,KAAK/E,IAEjBmL,EAAmBpG,KAAK/E,MAG5B0J,EAAmBwB,GACnB1B,EAAW2B,IA1BjB,6CADc,uBAAC,WAAD,wBA+Bd3H,KACC,CAACzO,EAAU+S,KAiQd,OACE,yBAAKtQ,UAAU,oDACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qBACb,yBACEA,UAAU,WACVC,MAAO,CACL8O,QAAS,mBACTC,WAAY,iDACZ5B,aAAc,gBALlB,oBAWF,yBAAKpN,UAAU,kCAAf,0CAGA,yBAAKA,UAAU,sBAAsBuH,IAAKqL,IACzCX,EACErH,OAAOjO,GACPkS,MACC,EACA,GAED/C,KAAI,SAACtD,EAAGhC,GACP,IAAIrK,EAASgX,GAAiB3K,EAAE+I,KAC5B4B,GAAiB3K,EAAE+I,KAAK/L,QAAQrJ,OAChCqM,EAAErM,OACFuF,EAASyR,GAAiB3K,EAAE+I,KAC5B4B,GAAiB3K,EAAE+I,KAAK/L,QAAQ9D,OAChC8G,EAAE9G,OACN,OACE,kBAAC,IAAMuO,SAAP,CAAgBlE,IAAG,0BAAqBvF,IACtC,yBACEuF,IAAG,iBAAYvF,GACfxG,UAAU,wDAEV,yBACEA,UAAU,4CACVC,MAAO,CAAEgP,SAAU,UAEnB,yBAAKjP,UAAU,uBACb,yBACEmN,IAAG,oBAAe3E,EAAEM,UACpBK,QAAS,kBAAMmE,EAAQC,KAAR,iBAAuB/E,EAAEM,YACxCpB,MAAM,OACNzH,MAAO,CAAEmN,aAAc,OAAQyG,OAAQ,WACvCxG,IAAG,yCACDnR,EAAQsM,EAAEM,UACN5M,EAAQsM,EAAEM,UAAUwG,aACpB,4DAKZ,yBAAKtP,UAAU,0BACb,yBAAKA,UAAU,8EACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,6BACVC,MAAO,CACLwQ,gBAAgB,sCAAD,OACbvU,EAAQsM,EAAEM,UACN5M,EAAQsM,EAAEM,UAAUwG,aACpB,uDAHS,SAQrB,yBAAKtP,UAAU,OACb,yBAAKA,UAAU,kCACZ9D,EAAQsM,EAAEM,UACP5M,EAAQsM,EAAEM,UAAUyG,YACpB,GAAI,IAHV,IAKGrT,EAAQsM,EAAEM,UACP5M,EACEsM,EAAEM,UACF+J,mBAAmBiB,UAAU,EAAG,GAClC,GATN,QAeN,yBAAK9T,UAAU,UACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAY6M,EAAEiJ,QACV9V,EAAY6M,EAAEiJ,QAAQjV,MACtB,GAHS,SAQrB,yBAAKwD,UAAU,YACb,yBAAKA,UAAU,gDACb,yBAAKA,UAAU,sBACZrE,EAAY6M,EAAEiJ,QACX9V,EAAY6M,EAAEiJ,QAAQlV,aACtB,QAMd,yBAAKyD,UAAU,YACb,yBAAKA,UAAU,6BACb,0BAAMA,UAAU,QAAhB,aACA,0BAAMA,UAAU,cACb+T,KAAKC,OAAO,IAAIvV,KAAK+J,EAAEuL,MAAO,sBAO3C,yBAAK/T,UAAU,sFACZ0B,GAGH,yBAAK1B,UAAU,iDACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,wEACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKC,MAAO,CAAEwK,aAAc,SAC1B,kBAAC,IAAD,CACEtK,MACa,mBAAXhE,EACI,OACW,cAAXA,EACA,QACW,YAAXA,EACA,sBACA,OAENiE,IAAI,WACJC,KAAM,QAKd,yBAAKL,UAAU,iBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACZwI,EAAEyL,MAAMxN,QAEX,yBAAKzG,UAAU,kBACZsS,IAAkB9L,EACjB,yBAAKxG,UAAU,aACb,kBAAC,GAAD,CACEkJ,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,QAASyK,IAAkB9L,EAC3BnG,KAAM,MAIV,kBAAC,IAAD,CACE8I,QAAO,sBAAE,4BAAAhB,EAAA,0DACH/L,EAAKK,MADF,oBAEDL,EAAKmV,MAAQ/I,EAAEiJ,OAFd,wBAGHc,EAAiB/L,GAHd,SAIanE,EACdjG,EACAoM,EAAE+I,KAND,OAICvQ,EAJD,OAQHuR,GAAkB,GACdvR,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,aAIVoX,IAAmB5C,IAnBlB,wBAsBH/Q,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QACE,mCACFvB,KAAM,aA5BP,gCAiCLyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QACE,mCACFvB,KAAM,aAvCL,4CA4CTsN,SAAS,OACTpJ,UAAU,gDAIhB,yBAAKA,UAAU,iBACZwI,EAAEuJ,SAAStL,QAEd,yBAAKzG,UAAU,iBACb,kBAAC,IAAD,CACEmJ,QAAS,WACPgH,EACEgC,IAA8B3J,EAAE+I,KAC3B,EACD/I,EAAE+I,MAGVnI,SAAS,OACTpJ,UAAU,iDAGd,yBACEA,UAAU,oCACVmJ,QAAS,WACF/M,EAAKK,OAWRqW,GACE/W,OAAOC,OAAO,GAAIwM,EAAG,CACnBkJ,sBAAuB,CACrB/V,EAAY6M,EAAEiJ,YAIpBuB,IAAgB,IAjBhBzT,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QACE,qCACFvB,KAAM,eAVhB,gBAkCd,kBAACoY,GAAA,EAAD,CACEC,GAAIhC,IAA8B3J,EAAE+I,IACpCvR,UAAU,QAEV,yBACEA,UAAU,qBACVC,MAAO,CAAEmU,WAAY,SAFvB,aAKGrC,EAASvJ,EAAE+I,KACRxV,OAAOsY,OAAOtC,EAASvJ,EAAE+I,MAAM9K,OAC/B,EAPN,KAUCsL,EAASvJ,EAAE+I,KAjiBL,SAAjB+C,EAAkBvQ,EAAKrC,GAC3B,OAAOqC,EAAI+H,KAAI,SAACtD,EAAG+L,GACjB,OAAOxC,EAASrQ,EAAO6P,KAAK/I,GAC1B,kBAAC,IAAMyH,SAAP,KACE,yBACEhQ,MAAO,CACLmU,WAAW,GAAD,OAC+C,GAAvDrC,EAASrQ,EAAO6P,KAAK/I,GAAGkJ,sBAAsBjL,OAAc,GADpD,OAIZsF,IAAG,kBAAaoG,EAAb,YAA0CoC,GAC7CvU,UAAS,yEAET,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,QAChC9V,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,QAAQjV,MAC5C,GAHS,SAQrB,yBAAKwD,UAAU,OACb,yBAAKA,UAAU,kEACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,QAChC9V,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,QACjCjV,MACH,GAJS,SASrB,yBAAKwD,UAAU,oCACZrE,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,QACjC9V,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,QACjClV,aACH,MAIV,yBAAKyD,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBAAf,gBACA,yBAAKA,UAAU,4BACZ+T,KAAKC,OACJ,IAAIvV,KAAKsT,EAASrQ,EAAO6P,KAAK/I,GAAGuL,MACjC,mBAKR,kBAAC,GAAD,CACEzO,OAAO,EACPD,SAAS,MACTI,QAAQ,aACRF,MAAM,OACNC,QAAS,SAACwD,GAAD,OACP,yBAAKhJ,UAAU,kCAAf,kBAKF,yBACEA,UAAU,4DACVmJ,QAAO,sBAAE,4BAAAhB,EAAA,0DACH/L,EAAKK,MADF,uBAELgW,EAAiBjK,GAFZ,SAGW/F,EAAcrG,EAAMoM,GAH/B,OAGDxH,EAHC,OAILyR,GAAkB,GACdzR,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,aAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,mBACPC,QACE,6DACFvB,KAAM,aArBP,uBA0BLyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,sCACTvB,KAAM,aA/BL,6CAqCR0W,IAAkBhK,EACjB,yBAAKxI,UAAU,aACb,kBAAC,GAAD,CACEkJ,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,SAAS,EACTxH,KAAM,MAIV,kBAAC,IAAD,CAAQ+I,SAAS,cAQ7B,yBAAKpJ,UAAU,6DACZ+R,EAASrQ,EAAO6P,KAAK/I,GAAGxG,SAE3B,yBAAKhC,UAAU,yDACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACZ+R,EAASrQ,EAAO6P,KAAK/I,GAAGyL,MAAMxN,QAEjC,yBAAKzG,UAAU,kBACZoS,IAAmBmC,EAClB,yBAAKvU,UAAU,aACb,kBAAC,GAAD,CACEkJ,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,QAASuK,IAAmBmC,EAC5BlU,KAAM,MAIV,kBAAC,IAAD,CACE8I,QAAO,sBAAE,4BAAAhB,EAAA,0DACH/L,EAAKK,MADF,oBAEDL,EAAKmV,MAAQQ,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,OAFpC,wBAGHY,EAAkBkC,GAHf,SAIajS,EAAYlG,EAAMoM,GAJ/B,OAICxH,EAJD,OAKHqR,GAAmB,GACfrR,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,aAIVmX,IAAoB5C,IAhBnB,wBAmBH9Q,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QACE,oCACFvB,KAAM,aAzBP,gCA8BLyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,mCACTvB,KAAM,aAnCL,4CAwCTsN,SAAS,OACTpJ,UAAU,gDAIhB,yBACEA,UAAU,oCACVmJ,QAAS,WACF/M,EAAKK,OAURqW,GACE/W,OAAOC,OAAO,GAAI0F,EAAQ,CACxB2P,WAAY7I,EACZkJ,sBAAuBK,EAASrQ,EAAO6P,KACrC/I,GACAkJ,sBAAsB9G,OAAO,CAC7BjP,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,aAI1CuB,IAAgB,IAnBhBzT,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,qCACTvB,KAAM,eAThB,cAkCTwY,EAAevC,EAASrQ,EAAO6P,KAAK/I,GAAGuJ,SAAUrQ,IAGpD,MAwSc4S,CACEvY,OAAOsY,OAAOtC,EAASvJ,EAAE+I,MACtBiD,QAAO,SAACrM,GAAD,OAA0C,IAAnCA,EAAEuJ,sBAAsBjL,UACtCqF,KAAI,SAAC2I,GAAD,OAAOA,EAAElD,OAChB/I,GAEF,GACJ,yBAAKxI,UAAU,2CACb,yBAAKA,UAAU,iBACb,kBAAC0U,GAAD,CACEhF,MAAO1F,KAAK2K,KACV5C,EAASvJ,EAAE+I,KACPQ,EAASvJ,EAAE+I,KAAK9K,OAtmBpB,EAumBI,GAENkB,QAAS+K,EACT/C,WAAYgD,EACZ/C,WAAY,CACVC,YAAa,aACbrF,SAAU,gCAS5B,kBAAC,GAAD,CACE8F,eAAgB,kBAAM4C,IAAmB5C,KACzCH,6BAA8BA,EAC9BE,gBAAiB,kBAAM4C,IAAoB5C,KAC3CD,YAAaA,EACbpI,MAAO,CACLrJ,GAAI+C,GAAOoH,UAEboH,aACEvU,EAAY+F,GAAO+P,QACf9V,EAAY+F,GAAO+P,QACnB,CAAElV,aAAc,IAEtBmF,OAAQA,GACRkE,KAAMmN,GACNpG,QAAS,kBAAMqG,IAAgB,IAC/B5W,KAAMA,SCND0L,oBATf,SAAclM,EAAOmM,GACnB,OAAO,aACLpM,YAAaC,EAAMD,YACnBO,QAASN,EAAMM,QACfE,KAAMR,EAAMQ,MACT2L,KAIQD,EAtqBO,SAAC,GAAoC,IAAlCnM,EAAiC,EAAjCA,YAAaS,EAAoB,EAApBA,KAAMF,EAAc,EAAdA,QAAc,EAExB+J,mBAAS,IAFe,mBAEjD8L,EAFiD,KAEvC3B,EAFuC,OAI1BnK,mBAAS,IAJiB,mBAIjDtJ,EAJiD,KAIxCqV,EAJwC,OAMU/L,oBAC/D,GAPqD,mBAMjDkM,EANiD,KAMtBhC,EANsB,OAUZlK,oBAAU,GAVE,mBAUjDmM,EAViD,KAUjCC,EAViC,OAWdpM,oBAAU,GAXI,mBAWjDqM,EAXiD,KAWlCC,EAXkC,OAYdtM,oBAAU,GAZI,mBAYjDuM,EAZiD,KAYlCC,EAZkC,OAehBxM,mBAAS,GAfO,mBAejDyM,EAfiD,KAenCC,EAfmC,KAkBlDC,EAAoBpE,iBAAO,MAlBuB,EAqBhBvI,oBAAS,GArBO,mBAqBjD8M,EArBiD,KAqBnCC,EArBmC,OAuB5B/M,mBAAS,CACnCsJ,YAAa,GACbzG,SAAU,GACV0G,aAAc,GACdqD,mBAAoB,GACpBvD,aAAc,KA5BwC,mBAuBjD5N,EAvBiD,KAuBzCoR,GAvByC,QAgCV7M,oBAAS,GAhCC,qBAgCjDoK,GAhCiD,MAgChC4C,GAhCgC,SAmCZhN,oBAAS,GAnCG,qBAmCjDqK,GAnCiD,MAmCjC4C,GAnCiC,MAwCxD9M,qBAAU,WAAM,4CACd,8BAAA+B,EAAA,0DACqC,IAA/BgK,EADN,gCAEqBlQ,EAAkBkQ,GAFvC,OAEQ3R,EAFR,OAGQ6S,EAAc,GAClB7S,EAAK+H,SAAQ,SAACC,GACZ6K,EAAY7K,EAAE+I,KAAO/I,KAEvB4H,GAAY,SAACU,GAAD,OACV/U,OAAOC,OAAO,GAAI8U,EAAlB/U,OAAA,KAAAA,CAAA,GAA2BoW,EAA4BkB,OAR7D,4CADc,uBAAC,WAAD,wBAadrH,KACC,CAACmG,EAA2B9B,KAE/BjK,qBAAU,WAAM,4CACd,4BAAA+B,EAAA,sEACkB/E,EAAiB,IADnC,QACMpC,EADN,QAEW0H,OACPsJ,EAAWhR,GAHf,4CADc,uBAAC,WAAD,wBAOdgL,KACC,CAACsE,KAiQJ,OACE,yBAAKtQ,UAAU,oDACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qBACb,yBACEA,UAAU,WACVC,MAAO,CACL8O,QAAS,mBACTC,WAAY,iDACZ5B,aAAc,gBALlB,mBAWF,yBAAKpN,UAAU,kCAAf,+BAGA,yBAAKA,UAAU,sBAAsBuH,IAAKqL,IACzCjW,EACEkS,MACC,EACA,GAED/C,KAAI,SAACtD,EAAGhC,GAAJ,OACH,kBAAC,IAAMyJ,SAAP,CAAgBlE,IAAG,0BAAqBvF,IACtC,yBACEuF,IAAG,iBAAYvF,GACfxG,UAAU,wDAEV,yBACEA,UAAU,4CACVC,MAAO,CAAEgP,SAAU,UAEnB,yBAAKjP,UAAU,uBACb,yBACEmN,IAAG,oBAAe3E,EAAEM,UACpBK,QAAS,kBAAMmE,EAAQC,KAAR,iBAAuB/E,EAAEM,YACxCpB,MAAM,OACNzH,MAAO,CAAEmN,aAAc,OAAQyG,OAAQ,WACvCxG,IAAG,yCACDnR,EAAQsM,EAAEM,UACN5M,EAAQsM,EAAEM,UAAUwG,aACpB,4DAWZ,yBAAKtP,UAAU,0BACb,yBAAKA,UAAU,8EACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,6BACVC,MAAO,CACLwQ,gBAAgB,sCAAD,OACbvU,EAAQsM,EAAEM,UACN5M,EAAQsM,EAAEM,UAAUwG,aACpB,uDAHS,SAcrB,yBAAKtP,UAAU,OACb,yBAAKA,UAAU,kCACZ9D,EAAQsM,EAAEM,UACP5M,EAAQsM,EAAEM,UAAUyG,YACpB,GAAI,IAHV,IAKGrT,EAAQsM,EAAEM,UACP5M,EACEsM,EAAEM,UACF+J,mBAAmBiB,UAAU,EAAG,GAClC,GATN,QAoBN,yBAAK9T,UAAU,UACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAY6M,EAAEiJ,QACV9V,EAAY6M,EAAEiJ,QAAQjV,MACtB,GAHS,SAQrB,yBAAKwD,UAAU,YACb,yBAAKA,UAAU,gDACb,yBAAKA,UAAU,sBACZrE,EAAY6M,EAAEiJ,QACX9V,EAAY6M,EAAEiJ,QAAQlV,aACtB,QAMd,yBAAKyD,UAAU,YACb,yBAAKA,UAAU,6BACb,0BAAMA,UAAU,QAAhB,aACA,0BAAMA,UAAU,cACb+T,KAAKC,OAAO,IAAIvV,KAAK+J,EAAEuL,MAAO,sBAO3C,yBAAK/T,UAAU,sFACZwI,EAAE9G,QAGL,yBAAK1B,UAAU,iDACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,wEACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACZwI,EAAErM,OACD,yBAAK8D,MAAO,CAAEwK,aAAc,SAC1B,kBAAC,IAAD,CACEtK,MACe,mBAAbqI,EAAErM,OACE,OACa,cAAbqM,EAAErM,OACF,QACa,YAAbqM,EAAErM,OACF,sBACA,OAENiE,IAAI,WACJC,KAAM,MAIV,KAIN,yBAAKL,UAAU,iBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACZwI,EAAEyL,MAAMxN,QAEX,yBAAKzG,UAAU,kBACZsS,IAAkB9L,EACjB,yBAAKxG,UAAU,aACb,kBAAC,GAAD,CACEkJ,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,QAASyK,IAAkB9L,EAC3BnG,KAAM,MAIV,kBAAC,IAAD,CACE8I,QAAO,sBAAE,4BAAAhB,EAAA,0DACH/L,EAAKK,MADF,oBAEDL,EAAKmV,MAAQ/I,EAAEiJ,OAFd,wBAGHc,EAAiB/L,GAHd,SAIanE,EAAWjG,EAAMoM,EAAE+I,KAJhC,OAICvQ,EAJD,OAKHuR,GAAkB,GACdvR,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,aAIVoX,IAAmB5C,IAhBlB,wBAmBH/Q,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QACE,mCACFvB,KAAM,aAzBP,gCA8BLyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QACE,mCACFvB,KAAM,aApCL,4CAyCTsN,SAAS,OACTpJ,UAAU,gDAIhB,yBAAKA,UAAU,iBACZwI,EAAEuJ,SAAStL,QAEd,yBAAKzG,UAAU,iBACb,kBAAC,IAAD,CACEmJ,QAAS,WACPgH,EACEgC,IAA8B3J,EAAE+I,KAC3B,EACD/I,EAAE+I,MAGVnI,SAAS,OACTpJ,UAAU,iDAGd,yBACEA,UAAU,oCACVmJ,QAAS,WACF/M,EAAKK,OAWRqW,GACE/W,OAAOC,OAAO,GAAIwM,EAAG,CACnBkJ,sBAAuB,CACrB/V,EAAY6M,EAAEiJ,YAIpBuB,GAAgB,IAjBhBzT,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QACE,qCACFvB,KAAM,eAVhB,gBAkCd,kBAACoY,GAAA,EAAD,CACEC,GAAIhC,IAA8B3J,EAAE+I,IACpCvR,UAAU,QAEV,yBACEA,UAAU,qBACVC,MAAO,CAAEmU,WAAY,SAFvB,aAKGrC,EAASvJ,EAAE+I,KAAOxV,OAAOsY,OAAOtC,EAASvJ,EAAE+I,MAAM9K,OAAS,EAL7D,KAOCsL,EAASvJ,EAAE+I,KAxiBH,SAAjB+C,EAAkBvQ,EAAKrC,GAC3B,OAAOqC,EAAI+H,KAAI,SAACtD,EAAG+L,GACjB,OAAOxC,EAASrQ,EAAO6P,KAAK/I,GAC1B,kBAAC,IAAMyH,SAAP,KACE,yBACEhQ,MAAO,CACLmU,WAAW,GAAD,OAC+C,GAAvDrC,EAASrQ,EAAO6P,KAAK/I,GAAGkJ,sBAAsBjL,OAAc,GADpD,OAIZsF,IAAG,kBAAaoG,EAAb,YAA0CoC,GAC7CvU,UAAS,yEAET,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,QAChC9V,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,QAAQjV,MAC5C,GAHS,SAQrB,yBAAKwD,UAAU,OACb,yBAAKA,UAAU,kEACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,QAChC9V,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,QACjCjV,MACH,GAJS,SASrB,yBAAKwD,UAAU,oCACZrE,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,QACjC9V,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,QACjClV,aACH,MAIV,yBAAKyD,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBAAf,gBACA,yBAAKA,UAAU,4BACZ+T,KAAKC,OACJ,IAAIvV,KAAKsT,EAASrQ,EAAO6P,KAAK/I,GAAGuL,MACjC,mBAKR,kBAAC,GAAD,CACEzO,OAAO,EACPD,SAAS,MACTI,QAAQ,aACRF,MAAM,OACNC,QAAS,SAACwD,GAAD,OACP,yBAAKhJ,UAAU,kCAAf,kBAKF,yBACEA,UAAU,4DACVmJ,QAAO,sBAAE,4BAAAhB,EAAA,0DACH/L,EAAKK,MADF,uBAELgW,EAAiBjK,GAFZ,SAGW/F,EAAcrG,EAAMoM,GAH/B,OAGDxH,EAHC,OAILyR,GAAkB,GACdzR,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,aAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,mBACPC,QACE,6DACFvB,KAAM,aArBP,uBA0BLyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,sCACTvB,KAAM,aA/BL,6CAqCR0W,IAAkBhK,EACjB,yBAAKxI,UAAU,aACb,kBAAC,GAAD,CACEkJ,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,SAAS,EACTxH,KAAM,MAIV,kBAAC,IAAD,CAAQ+I,SAAS,cAQ7B,yBAAKpJ,UAAU,6DACZ+R,EAASrQ,EAAO6P,KAAK/I,GAAGxG,SAE3B,yBAAKhC,UAAU,yDACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACZ+R,EAASrQ,EAAO6P,KAAK/I,GAAGyL,MAAMxN,QAEjC,yBAAKzG,UAAU,kBACZoS,IAAmBmC,EAClB,yBAAKvU,UAAU,aACb,kBAAC,GAAD,CACEkJ,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,QAASuK,IAAmBmC,EAC5BlU,KAAM,MAIV,kBAAC,IAAD,CACE8I,QAAO,sBAAE,4BAAAhB,EAAA,0DACH/L,EAAKK,MADF,oBAEDL,EAAKmV,MAAQQ,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,OAFpC,wBAGHY,EAAkBkC,GAHf,SAIajS,EAAYlG,EAAMoM,GAJ/B,OAICxH,EAJD,OAKHqR,GAAmB,GACfrR,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,aAIVmX,IAAoB5C,IAhBnB,wBAmBH9Q,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QACE,oCACFvB,KAAM,aAzBP,gCA8BLyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,mCACTvB,KAAM,aAnCL,4CAwCTsN,SAAS,OACTpJ,UAAU,gDAIhB,yBACEA,UAAU,oCACVmJ,QAAS,WACF/M,EAAKK,OAURqW,GACE/W,OAAOC,OAAO,GAAI0F,EAAQ,CACxB2P,WAAY7I,EACZkJ,sBAAuBK,EAASrQ,EAAO6P,KACrC/I,GACAkJ,sBAAsB9G,OAAO,CAC7BjP,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,aAI1CuB,GAAgB,IAnBhBzT,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,qCACTvB,KAAM,eAThB,cAkCTwY,EAAevC,EAASrQ,EAAO6P,KAAK/I,GAAGuJ,SAAUrQ,IAGpD,MA+SY4S,CACEvY,OAAOsY,OAAOtC,EAASvJ,EAAE+I,MACtBiD,QAAO,SAACrM,GAAD,OAA0C,IAAnCA,EAAEuJ,sBAAsBjL,UACtCqF,KAAI,SAAC2I,GAAD,OAAOA,EAAElD,OAChB/I,GAEF,GACJ,yBAAKxI,UAAU,2CACb,yBAAKA,UAAU,iBACb,kBAAC0U,GAAD,CACEhF,MAAO1F,KAAK2K,KACV5C,EAASvJ,EAAE+I,KACPQ,EAASvJ,EAAE+I,KAAK9K,OAllBlB,EAmlBE,GAENkB,QAAS+K,EACT/C,WAAYgD,EACZ/C,WAAY,CACVC,YAAa,aACbrF,SAAU,gCAQ1B,kBAAC,GAAD,CACE8F,eAAgB,kBAAM4C,IAAmB5C,KACzCH,6BAA8BA,EAC9BE,gBAAiB,kBAAM4C,IAAoB5C,KAC3CD,YAAaA,EACbpI,MAAO,CACLrJ,GAAI+C,EAAOoH,UAEboH,aACEvU,EAAY+F,EAAO+P,QACf9V,EAAY+F,EAAO+P,QACnB,CAAElV,aAAc,IAEtBmF,OAAQA,EACRkE,KAAMmN,EACNpG,QAAS,kBAAMqG,GAAgB,IAC/B5W,KAAMA,SC7pBVwY,GAAuB,WAC3B,IACIC,EAAc,KACdC,EAAgB,KAQpB,MAVoB,CAAC,IAAK,IAAK,MAGjBvM,SAAQ,SAACC,GACrB,IAAIuM,EAAO/K,KAAKgL,IAAIvV,OAAOwV,WAAazM,GACpCuM,EAAOD,IACTA,EAAgBC,EAChBF,EAAcrM,MAGXqM,GAwQM/M,oBAXf,SAAclM,EAAOmM,GACnB,OAAO,aACL9L,WAAYL,EAAMD,YAClBO,QAASN,EAAMM,QACfqB,SAAU3B,EAAM2B,SAChBnB,KAAMR,EAAMQ,KACZ+C,aAAcvD,EAAMuD,cACjB4I,KAIQD,EArQF,SAAC,GAA2D,EAAzDnM,YAA0D,IAA7CO,EAA4C,EAA5CA,QAASE,EAAmC,EAAnCA,KAAMmB,EAA6B,EAA7BA,SAAU4B,EAAmB,EAAnBA,aAAmB,EACrB8G,mBAAS,IADY,mBAChEiP,EADgE,KAC7CC,EAD6C,OAEjClP,oBAAS,GAFwB,mBAEhE+G,EAFgE,KAEnDC,EAFmD,OAGzBhH,mBAAS,CACrDpH,cAAe,GACfD,YAAa,GACbM,QAAS,EACT9B,MAAO,GACP2B,SAAU,GACVJ,GAAI,GACJG,aAAc,GACdE,OAAQ,KAX6D,mBAGhEoW,EAHgE,KAG/CC,EAH+C,KA0BvE,OAbAjP,qBAAU,WAAM,4CACd,4BAAA+B,EAAA,yDACEkN,EAAmB9X,EAASgB,mBACxBhB,EAASC,eAFf,gCAGoB6F,EAAmB,GAHvC,QAGQrC,EAHR,QAIa0H,OACPyM,EAAqBnU,GAL3B,4CADc,uBAAC,WAAD,wBAUdgL,KACC,CAACzO,IAGF,yBAAKyC,UAAU,iBAAiBC,MAAO,CAAEqV,UAAU,IAAD,OAAMnW,EAAN,QAChD,yBAAKa,UAAU,UACb,yBACEA,UAAU,mEACVC,MAAO,CAAEb,OAAQK,OAAO8V,cAExB,yBACEvV,UAAU,gCACVC,MAAO,CACLyM,IAAK,EACLc,KAAM,EACNN,OAAQ,EACR8B,WAAW,4DAGf,kBAAC,GAAD,CAAOpJ,KAAMoH,EAAaL,QAAS,kBAAMM,GAAe,KACtD,kBAAC,GAAD,CACEtL,QAASyT,EAAgBzW,GACzB4M,QAAS,kBAAM0B,GAAe,OAGlC,yBACEjN,UAAU,2BACVC,MAAO,CACLyM,IAAK,EACLc,KAAM,EACNgI,MAAO,EACPvG,SAAU,SACV4C,OAAQ,SAGV,yBAAK7R,UAAU,qBACb,yBACEmN,IAAKiI,EAAgBxW,YACrBoB,UAAU,oBACV0H,MAAM,OACN2F,IAAG,yCAAoC+H,EAAgBxW,eAEzD,yBACEuO,IAAKiI,EAAgBxW,YACrBoB,UAAU,oBACV0H,MAAM,OACN2F,IAAG,sCAAiCuH,MAAjC,OAECQ,EAAgBvW,iBAEtB,yBACEmB,UAAU,gCACVC,MAAO,CACL+O,WACE,uGACFtC,IAAK,EACLc,KAAM,OAKd,yBACExN,UAAU,uEACVC,MAAO,CACLiN,OAAQ,IAGV,yBAAKlN,UAAU,4DACb,yBAAKA,UAAU,gFACb,yBACEA,UAAU,oCACVC,MAAO,CACLwV,WAAY,QAGbL,EAAgBhY,OAEnB,yBAAK4C,UAAU,kDACZoV,EAAgBrW,UAEnB,yBAAKiB,UAAU,uBACb,yBAAKA,UAAU,iBACZoV,EAAgBtW,aAAagV,UAAU,EAAG,GAC3C,4BAAQ9T,UAAU,QAAlB,UACCoV,EAAgBpW,OAAO8M,KAAI,SAACtD,GAAD,OAAOA,EAAEvJ,QAAM4L,KAAK,KAChD,4BAAQ7K,UAAU,QAAlB,UACC6J,GAAeuL,EAAgBlW,UAElC,yBAAKc,UAAU,kBACf,yBAAKA,UAAU,mBAEjB,yBAAKA,UAAU,uBACb,yBACEA,UAAU,wDACVmJ,QAAS,kBAAM8D,GAAe,KAFhC,gBAMA,kBAAC,GAAD,CACEjF,MAAOoN,EACPhZ,KAAMA,KAGV,yBAAK4D,UAAU,kBACb,kBAAC,GAAD,CACEwK,WACEpO,EAAKF,QAAQkZ,EAAgBzW,KAEzB,mBADAvC,EAAKF,QAAQkZ,EAAgBzW,IAAIqP,UAIvChG,MAAOoN,EACPjV,MAAM,OACNH,UAAU,YACV0J,MACExN,EAAQkZ,EAAgBzW,IACpBzC,EAAQkZ,EAAgBzW,IAAIsP,eAC5B,IAGR,kBAAC,GAAD,CACEzD,WACEpO,EAAKF,QAAQkZ,EAAgBzW,KAEzB,cADAvC,EAAKF,QAAQkZ,EAAgBzW,IAAIqP,UAIvChG,MAAOoN,EACPjV,MAAM,QACNH,UAAU,YACV0J,MACExN,EAAQkZ,EAAgBzW,IACpBzC,EAAQkZ,EAAgBzW,IAAIuP,UAC5B,IAGR,kBAAC,GAAD,CACE1D,WACEpO,EAAKF,QAAQkZ,EAAgBzW,KAEzB,YADAvC,EAAKF,QAAQkZ,EAAgBzW,IAAIqP,UAIvChG,MAAOoN,EACPpV,UAAU,YACVG,MAAM,sBACNuJ,MACExN,EAAQkZ,EAAgBzW,IACpBzC,EAAQkZ,EAAgBzW,IAAIwP,QAC5B,IAGR,kBAAC,GAAD,CACE3D,WACEpO,EAAKF,QAAQkZ,EAAgBzW,KAEzB,aADAvC,EAAKF,QAAQkZ,EAAgBzW,IAAIqP,UAIvChG,MAAOoN,EACPjV,MAAM,OACNuJ,MACExN,EAAQkZ,EAAgBzW,IACpBzC,EAAQkZ,EAAgBzW,IAAIyP,SAC5B,MAMZ,yBAAKpO,UAAU,4BACb,yBACEA,UAAU,+BACVC,MAAO,CACL8O,QAAS,WACTC,WACE,kDACF5B,aAAc,cAEd3C,aAAc,SARlB,0BAaA,kBAAC,GAAD,CACEoC,OAAQqI,EACR9Y,KAAMA,EACNF,QAASA,QAMnB,yBAAK8D,UAAU,mCACb,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,UACb,yBACEA,UAAU,+BACVC,MAAO,CACL8O,QAAS,WACTC,WACE,kDACF5B,aAAc,cAEd3C,aAAc,SARlB,2BAaA,kBAAC,GAAD,CACEoC,OAAQqI,EACR9Y,KAAMA,EACNF,QAASA,QAMnB,kBAAC,GAAD,CAAe0F,OAAQrE,EAASC,iBAChC,kBAAC,GAAD,MACA,kBAAC,GAAD,W,SClCOsK,oBARf,SAAclM,EAAOmM,GACnB,OAAO,aACLxK,SAAU3B,EAAM2B,SAChBrB,QAASN,EAAMM,SACZ6L,KAIQD,EArOG,SAAC,GAQZ,IAPLlC,EAOI,EAPJA,KACA+G,EAMI,EANJA,QACA3E,EAKI,EALJA,MACA5L,EAII,EAJJA,KACAkU,EAGI,EAHJA,eACA/S,EAEI,EAFJA,SACArB,EACI,EADJA,QACI,EAC8B+J,mBAAS,CACzCvE,OAAQ,GACRvF,OAAQ,KAHN,mBACGuZ,EADH,KACcC,EADd,OAK0B1P,mBAAS,IALnC,mBAKGyF,EALH,KAKYC,EALZ,OAM0B1F,oBAAS,GANnC,mBAMG4B,EANH,KAMYI,EANZ,KAOJ,OACE,kBAAC,GAAD,CAAOrC,KAAMA,EAAM+G,QAASA,GAC1B,yBAAK3M,UAAU,mDACb,yBAAKA,UAAU,0BAAf,gBACgBgI,EAAM5K,MADtB,KAC+B4K,EAAMlJ,aAAagV,UAAU,EAAG,GAD/D,KAGA,yBAAK9T,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVC,MAAO,CAAEwQ,gBAAgB,OAAD,OAASrU,EAAKI,MAAd,SAG5B,yBAAKwD,UAAU,OACb,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,oCACVC,MAAO,CAAEwQ,gBAAgB,OAAD,OAASrU,EAAKI,MAAd,SAG5B,yBACEwD,UAAS,0CACP0V,EAAUhU,OAAOkU,MAAM,KAAKnP,QAC5BlJ,EAASQ,gBAAkB,EACvB,aACA,gBAGL2X,EAAUhU,OACPnE,EAASQ,gBACT2X,EAAUhU,OAAOkU,MAAM,KAAKnP,OAC5BlJ,EAASQ,gBAAiB,IAXhC,eAeF,yBAAKiC,UAAU,sBAAsBC,MAAO,CAAEb,OAAQ,UACpD,8BACEsR,SAAU,SAACjD,GACTA,EAAEkD,UACF,IAAIC,EAAOnD,EAAEoD,OAAOnH,MAChBkH,EAAKgF,MAAM,KAAKnP,QAAUlJ,EAASQ,iBACrC4X,GAAa,SAAC7E,GAAD,OACX/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEpP,OAAQkP,QAIxClH,MAAOgM,EAAUhU,OACjBqP,YAAY,EACZC,YAAY,qBACZ/Q,MAAO,CAAEgR,OAAQ,QACjBjR,UAAU,0BAGd,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEuK,WAAW,EACXlK,KAAM,MACN8I,QAAS,kBACPwM,GAAa,SAAC7E,GAAD,OACX/U,OAAOC,OAAO,GAAI8U,EAAM,CAAE3U,OAAQ,uBAGtCqO,SAA+B,mBAArBkL,EAAUvZ,OACpBgE,MAAM,OACNH,UAAS,YACT0J,MACExN,EAAQ8L,EAAMrJ,IAAMzC,EAAQ8L,EAAMrJ,IAAIsP,eAAiB,IAG3D,kBAAC,GAAD,CACE1D,WAAW,EACXlK,KAAM,MACN8I,QAAS,kBACPwM,GAAa,SAAC7E,GAAD,OACX/U,OAAOC,OAAO,GAAI8U,EAAM,CAAE3U,OAAQ,kBAGtCqO,SAA+B,cAArBkL,EAAUvZ,OACpBgE,MAAM,QACNH,UAAS,YACT0J,MAAOxN,EAAQ8L,EAAMrJ,IAAMzC,EAAQ8L,EAAMrJ,IAAIuP,UAAY,IAE3D,kBAAC,GAAD,CACE3D,WAAW,EACXlK,KAAM,MACN8I,QAAS,kBACPwM,GAAa,SAAC7E,GAAD,OACX/U,OAAOC,OAAO,GAAI8U,EAAM,CAAE3U,OAAQ,gBAGtCqO,SAA+B,YAArBkL,EAAUvZ,OACpBgE,MAAM,sBACNH,UAAS,YACT0J,MAAOxN,EAAQ8L,EAAMrJ,IAAMzC,EAAQ8L,EAAMrJ,IAAIwP,QAAU,IAEzD,kBAAC,GAAD,CACE5D,WAAW,EACXlK,KAAM,MACN8I,QAAS,kBACPwM,GAAa,SAAC7E,GAAD,OACX/U,OAAOC,OAAO,GAAI8U,EAAM,CAAE3U,OAAQ,iBAGtCgE,MAAM,OACNqK,SAA+B,aAArBkL,EAAUvZ,OACpB6D,UAAS,OACT0J,MAAOxN,EAAQ8L,EAAMrJ,IAAMzC,EAAQ8L,EAAMrJ,IAAIyP,SAAW,MAI9D,yBACEpO,UAAS,qCACP0V,EAAUhU,OAAOkU,MAAM,KAAKnP,QAC5BlJ,EAASQ,gBAAkB,EACvB,aACA,gBAGL2X,EAAUhU,OACPnE,EAASQ,gBACT2X,EAAUhU,OAAOkU,MAAM,KAAKnP,OAC5BlJ,EAASQ,gBAAiB,IAXhC,eAeF,yBACEiC,UAAU,oEACVC,MAAO,CAAEb,OAAQ,OAAQ8R,QAASxF,EAAU,EAAI,IAE/CA,GAEH,yBAAK1L,UAAU,gEACb,yBACEA,UAAU,4DACVmJ,QAAO,sBAAE,8BAAAhB,EAAA,yDACFuN,EAAUvZ,OADR,gBAELwP,EAAW,iBAFN,0BAGK+J,EAAUhU,OAHf,gBAILiK,EAAW,mBAJN,8BAML1D,GAAW,GANN,UAOWxG,EACdiU,EACA1N,EAAMrJ,GACNvC,EACAmB,EAASC,gBAXN,QAODwD,EAPC,OAaLiH,GAAW,GACX0N,EAAa,CAAEjU,OAAQ,GAAIvF,OAAQ,KAC/B6E,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,2BACPtB,KAAM,UACNuB,QAASuD,KAAKC,UAAUG,EAAI0H,OAAOC,QAAQ,KAAM,QAIrDpJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iCACPtB,KAAM,UACNuB,QAAS,qCAGTR,EATC,aASiBT,EAAKS,cACf0Q,KAAK,CAAEzE,SAAUd,EAAMrJ,GAAGoK,aACtCxJ,EAAM8I,SAAS,CACbvM,KAAM,cACNiB,aAAc,CAAEF,iBAElB8P,IACA2D,KAxCG,6CA6CT,kBAAC,GAAD,CACEpH,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,QAASA,EACTxH,KAAM,KA3DV,kBCgmBCyH,oBAPf,SAAclM,EAAOmM,GACnB,OAAO,aACLpM,YAAaC,EAAMD,aAChBoM,KAIQD,EAvuBM,SAAC,GAOf,IANLE,EAMI,EANJA,MACA5L,EAKI,EALJA,KACAT,EAII,EAJJA,YACAka,EAGI,EAHJA,iBACAC,EAEI,EAFJA,aACAC,EACI,EADJA,cACI,EAE0B9P,mBAAS,IAFnC,mBAEGtJ,EAFH,KAEYqV,EAFZ,OAG0C/L,mBAAS,IAHnD,mBAGGgM,EAHH,KAGoBC,EAHpB,OAKwCjM,oBAAU,GALlD,mBAKGmM,EALH,KAKmBC,EALnB,OAMsCpM,oBAAU,GANhD,mBAMGqM,EANH,KAMkBC,EANlB,OAOsCtM,oBAAU,GAPhD,mBAOGuM,EAPH,KAOkBC,EAPlB,OAU4CxM,mBAAS,IAVrD,mBAUGkN,EAVH,KAUqBC,EAVrB,OAa4BnN,mBAAS,IAbrC,mBAaG8L,EAbH,KAaa3B,EAbb,OAgB8DnK,mBAChE8P,EAAgBD,GAAgB,GAjB9B,mBAgBG3D,EAhBH,KAgB8BhC,EAhB9B,QAqBoBlK,oBAAU,GArB9B,qBAqBG+P,GArBH,MAqBSC,GArBT,SAsBoChQ,mBAAS,GAtB7C,qBAsBGyM,GAtBH,MAsBiBC,GAtBjB,MAyBEC,GAAoBpE,iBAAO,MAzB7B,GA4BsCvI,oBAAS,GA5B/C,qBA4BGiQ,GA5BH,MA4BkBC,GA5BlB,SA+BwBlQ,mBAAS,IA/BjC,qBA+BGvE,GA/BH,MA+BWoR,GA/BX,SAkC0C7M,oBAAS,GAlCnD,qBAkCGoK,GAlCH,MAkCoB4C,GAlCpB,SAqCwChN,oBAAS,GArCjD,qBAqCGqK,GArCH,MAqCmB4C,GArCnB,SA0CoCjN,oBAAS,GA1C7C,qBA0CGmQ,GA1CH,MA0CiBC,GA1CjB,MA4CJjQ,qBAAU,WACJyP,GAAoB,GACtBM,IAAiB,KAElB,CAACN,IAEJzP,qBAAU,WAAM,4CACd,8BAAA+B,EAAA,0DACqC,IAA/BgK,EADN,gCAEqBlQ,EAAkBkQ,GAFvC,OAEQ3R,EAFR,OAGQ6S,EAAc,GAClB7S,EAAK+H,SAAQ,SAACC,GACZ6K,EAAY7K,EAAE+I,KAAO/I,KAEvB4H,GAAY,SAACU,GAAD,OACV/U,OAAOC,OAAO,GAAI8U,EAAlB/U,OAAA,KAAAA,CAAA,GAA2BoW,EAA4BkB,OAR7D,4CADc,uBAAC,WAAD,wBAadrH,KACC,CAACmG,EAA2B9B,KAE/BjK,qBAAU,WAAM,4CACd,sCAAA+B,EAAA,0DACMH,EAAMrJ,GADZ,iCAEyBmD,EAAwBkG,EAAMrJ,IAFvD,cAEQ2U,EAFR,OAGQC,EAAqB,GACrBC,EAAgB,GACfF,EAAS5K,OACZ4K,EAAS/K,SAAQ,SAACC,GAChB+K,EAAmBhG,KAAK/E,EAAEiL,YAC1BD,EAAchL,EAAEiL,YAAcjL,KAGlC4K,EAAoBI,GAXxB,UAYqB3R,EAAgBmG,EAAMrJ,IAZ3C,SAYQ6B,EAZR,QAackI,QACJgL,EAAc,GAChBC,EAAqB,GACvBnT,EAAK8V,UAAU/N,SAAQ,SAACC,GAClBA,EAAE+I,MAAQuE,EACZpC,EAAY6C,QAAQ/N,GACX+K,EAAmBK,SAASpL,EAAE+I,MACvC/I,EAAE8K,UAAW,EACbI,EAAYnG,KAAK/E,IAEjBmL,EAAmBpG,KAAK/E,MAG5B0J,EAAmBwB,GACnB1B,EAAW2B,IA3BjB,6CADc,uBAAC,WAAD,wBAgCd3H,KACC,CAAChE,EAAOsI,KAEX,IAqQMkG,IAAqB,IAAVR,GAAc,EAAIA,GAEnC,OACE,yBAAKhW,UAAU,kBACZrD,EAAQ8J,OACP,yBAAKzG,UAAU,kBAAf,YACYsJ,GAAW3M,EAAQ8J,OAAQ,GADvC,KAIA,GAEF,yBAAKzG,UAAU,UACb,yBAAKA,UAAU,sBAAsBuH,IAAKqL,KACzCX,EACErH,OAAOjO,GACPkS,MAjVc,GAkVZ2H,GAAW,GAlVC,GAmVZA,GAAW,GAnVC,GAqVd1K,KAAI,SAACtD,EAAGhC,GACP,IAAIrK,EAASgX,EAAiB3K,EAAE+I,KAC5B4B,EAAiB3K,EAAE+I,KAAK/L,QAAQrJ,OAChCqM,EAAErM,OACFuF,EAASyR,EAAiB3K,EAAE+I,KAC5B4B,EAAiB3K,EAAE+I,KAAK/L,QAAQ9D,OAChC8G,EAAE9G,OACN,OACE,kBAAC,IAAMuO,SAAP,CAAgBlE,IAAG,0BAAqBvF,IACtC,yBACEe,IAAK,SAACC,GACCuO,GACCvN,EAAE+I,MAAQuE,GAAgBtO,IAAO4O,KACnCC,IAAgB,GAChB7O,EAAGiP,eAAe,CAAEC,SAAU,aAKpC3K,IAAG,iBAAYvF,GACfxG,UAAS,8DACPwI,EAAE+I,MAAQuE,GAAiBC,EAEvB,GADA,mBAIN,yBAAK/V,UAAU,mCACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAY6M,EAAEiJ,OAASjJ,EAAEiJ,OAASjJ,EAAEmO,gBAChChb,EACE6M,EAAEiJ,OAASjJ,EAAEiJ,OAASjJ,EAAEmO,gBACxBna,MACF,GALS,SAUrB,yBAAKwD,UAAU,OACb,yBAAKA,UAAU,kEACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAY6M,EAAEiJ,QACV9V,EAAY6M,EAAEiJ,QAAQjV,MACtB,GAHS,SAQrB,yBAAKwD,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,oCACZrE,EAAY6M,EAAEiJ,QACX9V,EAAY6M,EAAEiJ,QAAQlV,aACtB,IAEN,yBAAKyD,UAAU,4BACZ+T,KAAKC,OAAO,IAAIvV,KAAK+J,EAAEuL,MAAO,qBAMzC,kBAAC,GAAD,CACEzO,OAAO,EACPD,SAAS,MACTI,QAAQ,aACRF,MAAM,OACNC,QAAS,SAACwD,GAAD,OACP,yBAAKhJ,UAAU,6BAAf,kBAKF,yBACEA,UAAU,4DACVmJ,QAAO,sBAAE,4BAAAhB,EAAA,0DACH/L,EAAKK,MADF,uBAELgW,EAAiBjK,EAAE+I,KAFd,SAGW/O,EAAapG,EAAMoM,EAAE+I,KAHhC,OAGDvQ,EAHC,OAILyR,GAAkB,GACdzR,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,aAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,kBACPC,QACE,4DACFvB,KAAM,aArBP,uBA0BLyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,qCACTvB,KAAM,aA/BL,6CAqCR0W,IAAkBhK,EAAE+I,IACnB,yBAAKvR,UAAU,aACb,kBAAC,GAAD,CACEkJ,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,SAAS,EACTxH,KAAM,MAIV,kBAAC,IAAD,CAAQ+I,SAAS,YAMzB,yBAAKpJ,UAAU,6DACb,yBAAKA,UAAU,cAAc0B,IAE/B,yBAAK1B,UAAU,6DACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACEG,MACa,mBAAXhE,EACI,OACW,cAAXA,EACA,QACW,YAAXA,EACA,sBACA,OAENiE,IAAI,WACJC,KAAM,MAGV,yBAAKL,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBAAiBwI,EAAEyL,MAAMxN,QACxC,yBAAKzG,UAAU,kBACZsS,IAAkB9L,EACjB,yBAAKxG,UAAU,aACb,kBAAC,GAAD,CACEkJ,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,QAASyK,IAAkB9L,EAC3BnG,KAAM,MAIV,kBAAC,IAAD,CACE8I,QAAO,sBAAE,4BAAAhB,EAAA,0DACH/L,EAAKK,MADF,oBAEDL,EAAKmV,MAAQ/I,EAAEiJ,OAFd,wBAGHc,EAAiB/L,GAHd,SAIanE,EAAWjG,EAAMoM,EAAE+I,KAJhC,OAICvQ,EAJD,OAKHuR,GAAkB,GACdvR,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,aAIVoX,IAAmB5C,IAhBlB,wBAmBH/Q,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QACE,kCACFvB,KAAM,aAzBP,gCA8BLyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QACE,mCACFvB,KAAM,aApCL,4CAyCTsN,SAAS,OACTpJ,UAAU,gDAIhB,yBAAKA,UAAU,iBACZwI,EAAEuJ,SAAStL,QAEd,yBAAKzG,UAAU,iBACb,kBAAC,IAAD,CACEmJ,QAAS,WACPgH,EACEgC,IAA8B3J,EAAE+I,KAC3B,EACD/I,EAAE+I,MAGVnI,SAAS,OACTpJ,UAAU,iDAGd,yBACEA,UAAU,oCACVmJ,QAAS,kBACP2J,GACE/W,OAAOC,OAAO,GAAIwM,EAAG,CACnBkJ,sBAAuB,CACrB/V,EAAY6M,EAAEiJ,cANxB,cAmBV,kBAACyC,GAAA,EAAD,CACEC,GAAIhC,IAA8B3J,EAAE+I,IACpCvR,UAAU,QAEV,yBAAKC,MAAO,CAAEmU,WAAY,QAAUpU,UAAU,WAA9C,aAEG+R,EAASvJ,EAAE+I,KACRxV,OAAOsY,OAAOtC,EAASvJ,EAAE+I,MAAM9K,OAC/B,EAJN,KAOCsL,EAASvJ,EAAE+I,KA9iBL,SAAjB+C,EAAkBvQ,EAAKrC,GAC3B,OAAOqC,EAAI+H,KAAI,SAACtD,EAAG+L,GACjB,OAAOxC,EAASrQ,EAAO6P,KAAK/I,GAC1B,kBAAC,IAAMyH,SAAP,CACElE,IAAG,2BAAsBoG,EAAtB,YAAmDoC,IAEtD,yBACEhN,IAAK,SAACC,GACAgB,IAAMuN,GAAiBvO,IAAO4O,KAChCC,IAAgB,GAChB7O,EAAGiP,eAAe,CAAEC,SAAU,aAIlCzW,MAAO,CACLmU,WAAW,GAAD,OAC+C,GAAvDrC,EAASrQ,EAAO6P,KAAK/I,GAAGkJ,sBAAsBjL,OAAc,GADpD,OAIZsF,IAAG,kBAAaoG,EAAb,YAA0CoC,GAC7CvU,UAAS,+EACPwI,IAAMuN,EAAgB,iBAAmB,KAG3C,yBAAK/V,UAAU,mCACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,QAChC9V,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,QAAQjV,MAC5C,GAHS,SAQrB,yBAAKwD,UAAU,OACb,yBAAKA,UAAU,kEACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,QAChC9V,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,QACjCjV,MACH,GAJS,SASrB,yBAAKwD,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,oCACZrE,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,QACjC9V,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,QACjClV,aACH,IAEN,yBAAKyD,UAAU,4BACZ+T,KAAKC,OACJ,IAAIvV,KAAKsT,EAASrQ,EAAO6P,KAAK/I,GAAGuL,MACjC,qBAOZ,kBAAC,GAAD,CACEzO,OAAO,EACPD,SAAS,MACTI,QAAQ,aACRF,MAAM,OACNC,QAAS,SAACwD,GAAD,OACP,yBAAKhJ,UAAU,6BAAf,kBAKF,yBACEA,UAAU,4DACVmJ,QAAO,sBAAE,4BAAAhB,EAAA,0DACH/L,EAAKK,MADF,uBAELgW,EAAiBjK,GAFZ,SAGW/F,EAAcrG,EAAMoM,GAH/B,OAGDxH,EAHC,OAILyR,GAAkB,GACdzR,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,aAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,mBACPC,QACE,6DACFvB,KAAM,aArBP,uBA0BLyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,sCACTvB,KAAM,aA/BL,6CAqCR0W,IAAkBhK,EACjB,yBAAKxI,UAAU,aACb,kBAAC,GAAD,CACEkJ,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,SAAS,EACTxH,KAAM,MAIV,kBAAC,IAAD,CAAQ+I,SAAS,YAMzB,yBAAKpJ,UAAU,6DACZ+R,EAASrQ,EAAO6P,KAAK/I,GAAGxG,SAE3B,yBAAKhC,UAAU,yDACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACZ+R,EAASrQ,EAAO6P,KAAK/I,GAAGyL,MAAMxN,QAEjC,yBAAKzG,UAAU,kBACZoS,IAAmBmC,EAClB,yBAAKvU,UAAU,aACb,kBAAC,GAAD,CACEkJ,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,QAASuK,IAAmBmC,EAC5BlU,KAAM,MAIV,kBAAC,IAAD,CACE8I,QAAO,sBAAE,4BAAAhB,EAAA,0DACH/L,EAAKK,MADF,oBAEDL,EAAKmV,MAAQQ,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,OAFpC,wBAGHY,EAAkBkC,GAHf,SAIajS,EAAYlG,EAAMoM,GAJ/B,OAICxH,EAJD,OAKHqR,GAAmB,GACfrR,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,aAIVmX,IAAoB5C,IAhBnB,wBAmBH9Q,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QACE,oCACFvB,KAAM,aAzBP,gCA8BLyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,mCACTvB,KAAM,aAnCL,4CAwCTsN,SAAS,OACTpJ,UAAU,gDAIhB,yBACEA,UAAU,oCACVmJ,QAAS,WACF/M,EAAKK,MAURqW,GACE/W,OAAOC,OAAO,GAAI0F,EAAQ,CACxB2P,WAAY7I,EACZkJ,sBAAuBK,EAASrQ,EAAO6P,KACrC/I,GACAkJ,sBAAsB9G,OAAO,CAC7BjP,EAAYoW,EAASrQ,EAAO6P,KAAK/I,GAAGiJ,aAf1ClS,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,qCACTvB,KAAM,eAThB,cAiCTwY,EAAevC,EAASrQ,EAAO6P,KAAK/I,GAAGuJ,SAAUrQ,IAGpD,MAgTc4S,CACEvY,OAAOsY,OAAOtC,EAASvJ,EAAE+I,MACtBiD,QAAO,SAACrM,GAAD,OAA0C,IAAnCA,EAAEuJ,sBAAsBjL,UACtCqF,KAAI,SAAC2I,GAAD,OAAOA,EAAElD,OAChB/I,GAEF,GACJ,yBAAKxI,UAAU,sCACb,yBAAKA,UAAU,YACb,kBAAC0U,GAAD,CACEhF,MAAO1F,KAAK2K,KACV5C,EAASvJ,EAAE+I,KACPQ,EAASvJ,EAAE+I,KAAK9K,OAznBpB,EA0nBI,GAENkB,QAAS+K,GACT/C,WAAYgD,GACZ/C,WAAY,CACVC,YAAa,aACbrF,SAAU,gCAS5B,yBAAKxK,UAAU,2CACb,yBAAKA,UAAU,YACb,kBAAC0U,GAAD,CACE9E,WAAY,CACVC,YAAa,aACbrF,SAAU,uBAEZkF,MAAO1F,KAAK2K,KAAKhY,EAAQ8J,OA/oBd,GAgpBXkB,QAAS6O,GACT7G,WAAYsG,MAGhB,kBAAC,GAAD,CACErQ,KAAMsQ,GACNvJ,QAAS,kBAAMwJ,IAAiB,IAChCnO,MAAOA,EACP5L,KAAMA,EACNkU,eAAgB,kBAAM4C,IAAmB5C,OAE3C,kBAAC,GAAD,CACEA,eAAgB,kBAAM4C,IAAmB5C,KACzCH,6BAA8BA,EAC9BE,gBAAiB,kBAAM4C,IAAoB5C,KAC3CD,YAAaA,EACbpI,MAAOA,EACPkI,aACEvU,EAAY+F,GAAO+P,QACf9V,EAAY+F,GAAO+P,QACnB,CAAElV,aAAc,IAEtBmF,OAAQA,GACRkE,KAAMlE,GACNiL,QAAS,kBAAMmG,GAAU,KACzB1W,KAAMA,U,SC/ZH0L,oBATf,SAAclM,EAAOmM,GACnB,OAAO,aACL3L,KAAMR,EAAMQ,KACZF,QAASN,EAAMM,QACfqB,SAAU3B,EAAM2B,UACbwK,KAIQD,EAhUD,SAACR,GACb,IAAM3F,EAAU2F,EAAMsP,MAAMjM,OAAOhJ,QAC7BzF,EAAUoL,EAAMpL,QAChB0F,EAAS0F,EAAM/J,SAASC,eACxBsY,EAAexO,EAAMsP,MAAMjM,OAAOzI,SAClC6T,EAAgBzO,EAAMsP,MAAMjM,OAAOpI,UAEnCnG,EAAOkL,EAAMlL,KAPI,EASyB6J,oBAAU,GATnC,mBAShB4P,EATgB,KASEgB,EATF,OAWG5Q,mBAAS,CACjCrH,YAAa,GACbI,OAAQ,GACR5B,MAAO,GACP2B,SAAU,GACV+X,SAAU,GACVC,KAAM,GACN7X,QAAS,EACTJ,aAAc,GACdH,GAAI,KApBiB,mBAWhBqJ,EAXgB,KAWTgP,EAXS,OAwBe/Q,oBAAS,GAxBxB,mBAwBhB+G,EAxBgB,KAwBHC,EAxBG,KAyEvB,OA/CA7G,qBAAU,WAEJ4B,EAAM5K,QACRgF,EAAe4F,EAAMrJ,GAAIiD,GACnBoG,EAAMrJ,MAAMzC,GAChBqD,EAAM8I,SAAS,CACbvM,KAAM,iBACNK,OAAO,gBACJ6L,EAAMrJ,GAAK,CACVsP,eAAgB,EAChBE,QAAS,EACTC,SAAU,EACVF,UAAW,EACXoB,aAActH,EAAMpJ,YACpB2Q,YAAavH,EAAM5K,MACnBoS,aAAcxH,EAAMhJ,OAAO8M,KAAI,SAACtD,GAAD,OAAOA,EAAEvJ,QACxC4T,mBAAoB7K,EAAMlJ,oBAMnC,CAACkJ,EAAM5K,QAEVgJ,qBAAU,WAAM,4CAEd,oCAAA+B,EAAA,0DACMxG,IAAWC,EADjB,iCAEqBqJ,GAAStJ,EAASC,GAFvC,cAEQpB,EAFR,OAGIwW,GAAS,SAAClG,GAAD,OAAU/U,OAAOC,OAAO,GAAI8U,EAAMtQ,MAH/C,SAIwB0K,GAAWvJ,EAASC,GAJ5C,OAIQqV,EAJR,OAKQC,EAAcD,EAAQE,KACtBF,EAAQE,KAAKrJ,MAAK,SAACtF,GAAD,MAAiB,aAAVA,EAAE4O,OAC3B,KACAN,EAAWI,EAAcA,EAAYjY,KAAO,UAC5C8X,EAAOE,EAAQF,KAAOE,EAAQF,KAAKjL,KAAI,SAACtD,GAAD,OAAOA,EAAEvJ,QAAQ,GAC5DuB,EAAKsW,SAAWA,EAChBtW,EAAKuW,KAAOA,EACZC,GAAS,SAAClG,GAAD,OAAU/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEgG,WAAUC,YAZ3D,6CAFc,sBACdtX,OAAO4X,SAAS,EAAG,GADL,mCAkBdrL,KACC,CAACrK,EAASC,IAKX,yBAAK5B,UAAU,8EACb,yBACEA,UAAU,4CACVC,MAAO,CACLyM,IAAK,EACLc,KAAM,IAGR,yBACExN,UAAU,oBACVC,MAAO,CAAEb,OAAQK,OAAO8V,YAAa9I,SAAU,WAE/C,yBAAKzM,UAAU,qBACb,yBACEmN,IAAKnF,EAAMpJ,YACX8I,MAAM,OACN2F,IAAG,0CAAqCrF,EAAMpJ,eAEhD,yBACEoB,UAAU,gCACVC,MAAO,CACL+O,WAAY,iDACZtC,IAAK,EACLc,KAAM,MAIZ,yBACExN,UAAU,gCACVC,MAAO,CACL+O,WAAY,2CACZtC,IAAK,EACLc,KAAM,OAKd,kBAAC,GAAD,CAAO5H,KAAMoH,EAAaL,QAAS,kBAAMM,GAAe,KACtD,kBAAC,GAAD,CACEtL,QAASA,EACT4J,QAAS,kBAAM0B,GAAe,OAGlC,yBAAKjN,UAAU,yDACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,2BACb,yBACEmN,IAAKnF,EAAMpJ,YACXqB,MAAO,CAAEmN,aAAc,QACvB1F,MAAM,QACN2F,IAAG,0CAAqCrF,EAAMpJ,eAEhD,yBACEuK,QAAS,kBAAMmE,EAAQC,KAAR,iBAAuBvF,EAAMrJ,MAC5CqB,UAAU,sEACVC,MAAO,CACLuN,KAAM,EACNd,IAAK,EACLrH,SAAU,WACV6H,OAAQ,EACRE,aAAc,SAGhB,yBACEpN,UAAU,uDACVmJ,QAAS,SAACsE,GACRA,EAAEC,kBACFT,GAAe,KAGjB,kBAAC,KAAD,CACEhN,MAAO,CACLmJ,SAAU,OACVF,MAAO,QACPG,YAAa,cAOzB,yBAAKrJ,UAAU,yBACb,yBACEA,UAAU,mCACVC,MAAO,CAAEiN,OAAQ,IAEjB,yBAAKlN,UAAU,UACb,yBAAKA,UAAU,qBACZgI,EAAM5K,MADT,KACkB4K,EAAMlJ,aAAagV,UAAU,EAAG,GADlD,KAGA,yBAAK9T,UAAU,wCACb,yBAAKA,UAAU,iBACZgI,EAAMhJ,OAAO8M,KAAI,SAACtD,GAAD,OAAOA,EAAEvJ,QAAM4L,KAAK,OAG1C,yBAAK7K,UAAU,uBACb,yBAAKA,UAAU,iCAAf,aACA,yBAAKA,UAAU,6BACZ6J,GAAe7B,EAAM9I,WAG1B,yBAAKc,UAAU,kCACZgI,EAAMjJ,UAET,yBAAKiB,UAAU,uBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iBAAf,aACA,yBAAKA,UAAU,kCACZgI,EAAM8O,SAAW9O,EAAM8O,SAAW,aAIzC,yBAAK9W,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iBAAf,SACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,kBACb,yBACEA,UAAU,+CACVmJ,QAAS,SAACsE,GAENA,EAAE6J,cAAcC,UAAUC,SACxB,gBAGF/J,EAAE6J,cAAcC,UAAUE,OACxB,gBAGFhK,EAAE6J,cAAcC,UAAUG,IAAI,kBAIjC1P,EAAM+O,KAAKlM,KAAK,cAO7B,yBAAK7K,UAAU,uBACb,kBAAC,GAAD,CACEwK,WACEpO,EAAKF,QAAQ8L,EAAMrJ,KACsB,mBAArCvC,EAAKF,QAAQ8L,EAAMrJ,IAAIqP,UAG7BhG,MAAOA,EACP7H,MAAM,OACNH,UAAU,YACV0J,MACExN,EAAQ8L,EAAMrJ,IAAMzC,EAAQ8L,EAAMrJ,IAAIsP,eAAiB,IAG3D,kBAAC,GAAD,CACEzD,WACEpO,EAAKF,QAAQ8L,EAAMrJ,KACsB,cAArCvC,EAAKF,QAAQ8L,EAAMrJ,IAAIqP,UAG7BhG,MAAOA,EACP7H,MAAM,QACNH,UAAU,YACV0J,MAAOxN,EAAQ8L,EAAMrJ,IAAMzC,EAAQ8L,EAAMrJ,IAAIuP,UAAY,IAE3D,kBAAC,GAAD,CACE1D,WACEpO,EAAKF,QAAQ8L,EAAMrJ,KACsB,YAArCvC,EAAKF,QAAQ8L,EAAMrJ,IAAIqP,UAG7BhG,MAAOA,EACPhI,UAAU,YACVG,MAAM,sBACNuJ,MAAOxN,EAAQ8L,EAAMrJ,IAAMzC,EAAQ8L,EAAMrJ,IAAIwP,QAAU,IAEzD,kBAAC,GAAD,CACEhO,MAAM,OACNuJ,MAAOxN,EAAQ8L,EAAMrJ,IAAMzC,EAAQ8L,EAAMrJ,IAAIyP,SAAW,EACxD5D,WACEpO,EAAKF,QAAQ8L,EAAMrJ,KACsB,aAArCvC,EAAKF,QAAQ8L,EAAMrJ,IAAIqP,UAG7BhG,MAAOA,KAGX,yBAAKhI,UAAU,uBACb,yBAAKA,UAAU,iBAAf,iBACA,yBAAKA,UAAU,6BACZ+T,KAAKC,OAAO,IAAIvV,KAAKuJ,EAAMlJ,cAAe,mBAG/C,yBAAKkB,UAAU,kEACb,yBACEA,UAAU,wDACVmJ,QAAS,WACF/M,EAAKK,MAURoa,EAAoBhB,EAAmB,GATvCtW,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,qCACTvB,KAAM,eAThB,aAkBE,kBAAC,KAAD,CACEsN,SAAS,OACTpJ,UAAU,UAGd,kBAAC,GAAD,CAAgBgI,MAAOA,EAAO5L,KAAMA,SAM9C,kBAAC,GAAD,CACE2Z,cAAeA,EACfD,aAAcA,EACd9N,MAAOA,EACP5L,KAAMA,EACNyZ,iBAAkBA,SC1Bb/N,oBARf,SAAclM,EAAOmM,GACnB,OAAO,aACLpM,YAAaC,EAAMD,YACnBO,QAASN,EAAMM,SACZ6L,KAIQD,EA5RK,SAAC,GAAuC,IAArCnL,EAAoC,EAApCA,QAAShB,EAA2B,EAA3BA,YAAaO,EAAc,EAAdA,QAAc,EACS+J,oBAC/D,GAFsD,mBAClDkM,EADkD,KACvBhC,EADuB,OAMjBlK,mBAAS,GANQ,mBAMlDyM,EANkD,KAMpCC,EANoC,OAQzB1M,mBAAS,IARgB,mBAQlD8L,EARkD,KAQxC3B,EARwC,KAyBzD,OAZAhK,qBAAU,WAAM,4CACd,4BAAA+B,EAAA,0DACqC,IAA/BgK,EADN,gCAEqBlQ,EAAkBkQ,GAFvC,OAEQ3R,EAFR,OAGI4P,GAAY,SAACU,GAAD,OACV/U,OAAOC,OAAO,GAAI8U,EAAlB/U,OAAA,KAAAA,CAAA,GAA2BoW,EAA4B3R,OAJ7D,4CADc,uBAAC,WAAD,wBASdwL,KACC,CAACmG,IAEGxV,EACJkS,MACC,EACA,GAED/C,KAAI,SAACtD,EAAGhC,GAAJ,OACH,kBAAC,IAAMyJ,SAAP,CAAgBlE,IAAG,0BAAqBvF,IACtC,yBACEuF,IAAG,iBAAYvF,GACfxG,UAAU,wDAEV,yBACEA,UAAU,4CACVC,MAAO,CAAEgP,SAAU,UAEnB,yBAAKjP,UAAU,uBACb,yBACEmN,IAAKjR,EAAQsM,EAAEM,UAAUwG,aACzBnG,QAAS,kBAAMmE,EAAQC,KAAR,iBAAuB/E,EAAEM,YACxCpB,MAAM,OACNzH,MAAO,CAAEmN,aAAc,OAAQyG,OAAQ,WACvCxG,IAAG,yCACDnR,EAAQsM,EAAEM,UAAUwG,kBAK5B,yBAAKtP,UAAU,0BACb,yBAAKA,UAAU,8EACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,6BACVC,MAAO,CACLwQ,gBAAgB,sCAAD,OACbvU,EAAQsM,EAAEM,UAAUwG,aADP,SAYrB,yBAAKtP,UAAU,OACb,yBAAKA,UAAU,qCACZ9D,EAAQsM,EAAEM,UAAUyG,YADvB,KAEGrT,EAAQsM,EAAEM,UAAU+J,mBAAmBiB,UAAU,EAAG,IAEvD,yBAAK9T,UAAU,6BACb,yBAAKA,UAAU,iBAAiBwI,EAAEgH,kBAK1C,yBAAKxP,UAAU,UACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAY6M,EAAEiJ,QACV9V,EAAY6M,EAAEiJ,QAAQjV,MACtB,GAHS,SAQrB,yBAAKwD,UAAU,YACb,yBAAKA,UAAU,gDACb,yBAAKA,UAAU,sBACZrE,EAAY6M,EAAEiJ,QACX9V,EAAY6M,EAAEiJ,QAAQlV,aACtB,QAMd,yBAAKyD,UAAU,YACb,yBAAKA,UAAU,6BACb,0BAAMA,UAAU,QAAhB,oBACA,0BAAMA,UAAU,cACb+T,KAAKC,OAAO,IAAIvV,KAAK+J,EAAEuL,MAAO,sBAO3C,yBAAK/T,UAAU,2EACZwI,EAAE9G,QAGL,yBAAK1B,UAAU,iDACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,wEACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACZwI,EAAErM,OACD,yBAAK8D,MAAO,CAAEwK,aAAc,SAC1B,kBAAC,IAAD,CACEtK,MACe,mBAAbqI,EAAErM,OACE,OACa,cAAbqM,EAAErM,OACF,QACa,YAAbqM,EAAErM,OACF,sBACA,OAENiE,IAAI,WACJC,KAAM,MAIV,KAIN,yBAAKL,UAAU,iBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBAAiBwI,EAAEyL,MAAMxN,QACxC,yBAAKzG,UAAU,kBACb,kBAAC,IAAD,CACEoJ,SAAS,OACTpJ,UAAU,gBAGd,yBAAKA,UAAU,iBAAiBwI,EAAEuJ,SAAStL,QAC3C,yBAAKzG,UAAU,YACb,kBAAC,IAAD,CACEmJ,QAAS,WACPgH,EACEgC,IAA8B3J,EAAE+I,KAAO,EAAI/I,EAAE+I,MAGjDnI,SAAS,OACTpJ,UAAU,wDAU5B,kBAACkU,GAAA,EAAD,CAAUC,GAAIhC,IAA8B3J,EAAE+I,IAAKvR,UAAU,QAC3D,yBAAKA,UAAU,2BAAf,aACa+R,EAASvJ,EAAE+I,KAAOQ,EAASvJ,EAAE+I,KAAK9K,OAAS,EADxD,KAGCsL,EAASvJ,EAAE+I,KACRQ,EAASvJ,EAAE+I,KACR1C,MACC6D,GAAgBA,EAAe,GAC/BA,GAAgBA,EAAe,GAjLvB,GAmLT5G,KAAI,SAAC6L,EAAGpD,GAAJ,OACH,yBACExI,IAAG,kBAAaoG,EAAb,YAA0CoC,GAC7CvU,UAAU,6DAEV,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAYgc,EAAElG,QACV9V,EAAYgc,EAAElG,QAAQjV,MACtB,GAHS,SAQrB,yBAAKwD,UAAU,OACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAYgc,EAAElG,QACV9V,EAAYgc,EAAElG,QAAQjV,MACtB,GAHS,SAQrB,yBAAKwD,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,oCACZrE,EAAYgc,EAAElG,QACX9V,EAAYgc,EAAElG,QAAQlV,aACtB,IAEN,yBAAKyD,UAAU,4BACZ+T,KAAKC,OAAO,IAAIvV,KAAKkZ,EAAE5D,MAAO,oBAMvC,yBAAK/T,UAAU,kCACZ2X,EAAE3V,SAEL,yBAAKhC,UAAU,6DACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACZ2X,EAAE1D,MAAMxN,QAEX,yBAAKzG,UAAU,kBACb,kBAAC,IAAD,CACEoJ,SAAS,OACTpJ,UAAU,uCAS5B,GACJ,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,iBACb,kBAAC0U,GAAD,CACEhF,MAAO1F,KAAK2K,KACV5C,EAASvJ,EAAE+I,KAAOQ,EAASvJ,EAAE+I,KAAK9K,OA1P1B,EA0PqD,GAE/DkB,QAAS+K,EACT/C,WAAYgD,EACZ/C,WAAY,CACVC,YAAa,aACbrF,SAAU,mCCxQtBoN,GAAgB,SAAC/K,GACrB,IAAI7N,EAAS,CAAE6Y,EAAG,OAclB,OAbAhL,EAAOtE,SAAQ,SAACC,GACdA,EAAEmF,UAAUpF,SAAQ,SAACqF,GACnB,IAAIC,EAAQrF,EAAEpL,MACVwC,EAAqBkO,MAAK,SAACC,GAAD,OAAOA,EAAEpP,KAAOiP,KAC1C/N,EAAqBiO,MAAK,SAACC,GAAD,OAAOA,EAAEpP,KAAOiP,KAC1CC,GAASA,EAAM5O,OACX2O,KAAO5O,IACXA,EAAO4O,GAAOC,EAAM5O,aAMrBD,GAsOM8I,oBARf,SAAclM,EAAOmM,GACnB,OAAO,aACLxK,SAAU3B,EAAM2B,SAChBP,OAAQpB,EAAMoB,QACX+K,KAIQD,EAnOO,SAAC,GAA0B,IAAxB9K,EAAuB,EAAvBA,OAAQO,EAAe,EAAfA,SAAe,EAChB0I,mBAAS,IADO,mBACvCtJ,EADuC,KAC9BqV,EAD8B,OAElB/L,mBAAS,IAFS,mBAEvC4G,EAFuC,KAE/B+B,EAF+B,OAGlB3I,mBAAS,IAHS,mBAGvC6R,EAHuC,KAG/BC,EAH+B,OAIM9R,mBAAS,GAJf,mBAIvC+R,EAJuC,KAInBC,EAJmB,OAKMhS,mBAAS,GALf,mBAKvCiS,EALuC,KAKnBC,EALmB,KAMxCjb,EAAWF,EAAOE,SAElBkb,EAAS,WACb7Y,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS,uDACTvB,KAAM,cAKZsK,qBAAU,WAAM,4CACd,gCAAA+B,EAAA,0DACMnL,EAAOC,MADb,oBAEqB,YAAbC,GAAuC,QAAbA,EAFlC,gCAG0BoG,EAActG,EAAOC,OAH/C,QAGUN,EAHV,QAImB+L,OACXsJ,EAAWrV,GALnB,sBAQMqV,EAAW,IARjB,UAUqB,WAAb9U,GAAsC,QAAbA,EAVjC,kCAWyBiO,GACjBnO,EAAOC,MACPM,EAASC,gBAbjB,SAWUqP,EAXV,QAeiBhB,QACT+C,EAAU/B,EAAOhB,SAEjBuM,IAlBR,wBAqBMxJ,EAAU,IArBhB,WAuBqB,WAAb1R,GAAsC,QAAbA,EAvBjC,kCAwByBmO,GACjBrO,EAAOC,MACPM,EAASC,gBA1BjB,SAwBUsa,EAxBV,QA4BiBjM,QACTkM,EAAUD,EAAOjM,SAEjBuM,IA/BR,wBAkCML,EAAU,IAlChB,6CADc,uBAAC,WAAD,wBAuCd/L,KACC,CAAChP,IAEJ,IAAMqb,EAAeT,GAAc/K,GAC7ByL,EAAeV,GAAcE,GACnC,OACE,yBACE9X,UAAU,qDACVC,MAAO,CAAEsY,UAAW9Y,OAAO8V,cAE3B,yBAAKvV,UAAU,6BACb,yBAAKA,UAAU,+BACf,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,qDACb,yBAAKA,UAAU,8DACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,qBAAf,kBACA,yBAAKA,UAAU,gDAAf,wBAIF,yBAAKA,UAAU,UACZ6M,EAAOpG,OACN,yBAAKzG,UAAU,0BAAf,WACW6M,EAAOpG,OADlB,KAIA,GAEF,yBAAKzG,UAAU,yEACb,yBAAKA,UAAU,YACZjE,OAAOyc,KAAKH,GAAc5R,OAAS,EAClC,kBAAC,KAAD,CACExG,MAAO,CACL8O,QAAS,SACTrH,MAAO,OACPwH,UAAW,OACXC,WAAY,WAGbpT,OAAOyc,KAAKH,GAAcvM,KAAI,SAACtD,EAAGhC,GAAJ,OAC7B,yBACE2C,QAAS,WACP8O,EAAsBzP,IAExBvI,MAAO,CAAEmP,QAAS,gBAClBrD,IAAG,kCAA6BvF,GAChCxG,UAAS,gBACNgY,KAAwBxP,EACrB,mCACA,kCAGL6P,EAAa7P,QAKpB,MAKR,yBAAKxI,UAAU,UACZ6M,EAAOpG,OACN,kBAAC,IAAMwJ,SAAP,KACE,kBAAC,GAAD,CACEpD,OAAQA,EAAO2H,QAAO,SAAChM,GACrB,OACEA,EAAEmF,UAAUiG,UAAUoE,IACE,KAAvBA,QAMT,GAEF,yBAAKhY,UAAU,wBACf,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,UACZ8X,EAAOrR,OACN,yBAAKzG,UAAU,0BAAf,WACW8X,EAAOrR,OADlB,KAIA,GAEF,yBAAKzG,UAAU,yEACb,yBAAKA,UAAU,YACZjE,OAAOyc,KAAKF,GAAc7R,OAAS,EAClC,kBAAC,KAAD,CACExG,MAAO,CACL8O,QAAS,SACTrH,MAAO,OACPwH,UAAW,OACXC,WAAY,WAGbpT,OAAOyc,KAAKF,GAAcxM,KAAI,SAACtD,EAAGhC,GAAJ,OAC7B,yBACE2C,QAAS,WACPgP,EAAsB3P,IAExBvI,MAAO,CAAEmP,QAAS,gBAClBrD,IAAG,kCAA6BvF,GAChCxG,UAAS,gBACNkY,KAAwB1P,EACrB,mCACA,kCAGL8P,EAAa9P,QAKpB,OAMTsP,EAAOrR,OACN,kBAAC,IAAMwJ,SAAP,KACE,kBAAC,GAAD,CACEpD,OAAQiL,EAAOtD,QAAO,SAAChM,GACrB,OACEA,EAAEmF,UAAUiG,UAAUsE,IACE,KAAvBA,QAMT,GAEF,yBAAKlY,UAAU,wBACdrD,EAAQ8J,OACP,kBAAC,IAAMwJ,SAAP,KACE,yBAAKjQ,UAAU,0BAAf,YACYrD,EAAQ8J,OADpB,KAGA,kBAAC,GAAD,CAAa9J,QAASA,KAGxB,cCxHP8b,OAlHf,SAAcnR,GACZ,OACE,qCACEoR,KAAM,cACN/Z,GAAG,aACHga,QAAQ,mBACRvZ,OAAQ,QACJkI,GAEJ,wBAAM3I,GAAG,eACP,4BAAUia,cAAc,iBAAiBja,GAAG,qBAC1C,wBACEA,GAAG,gBACH+I,MAAO,OACPtI,OAAQ,QACRoJ,EAAG,QACHmP,EAAG,QACHkB,GAAI,OACJH,KAAK,UACLI,YAAa,IACblM,YAAa,MACbmM,cAAc,SACdC,WAAW,yBAGf,4BAAUra,GAAG,oBAAoBia,cAAc,kBAC7C,wBACEC,GAAI,MACJlB,EAAG,QACHnP,EAAG,QACHpJ,OAAQ,QACRsI,MAAO,OACP/I,GAAG,gBACH+Z,KAAK,UACLI,YAAa,IACblM,YAAa,MACbmM,cAAc,SACdC,WAAW,0BAIjB,qBAAGra,GAAG,eAAesa,UAAU,8BAC7B,qBACEta,GAAG,aACHsa,UAAU,0CACVC,SAAS,2BAET,wBAAMva,GAAG,gBAAgBwa,EAAE,sBAC3B,qBAAGxa,GAAG,cACJ,wBACEA,GAAG,gBACHwa,EAAE,ghCACFnZ,UAAU,cAEZ,wBACErB,GAAG,gBACHwa,EAAE,4vCACFnZ,UAAU,cAEZ,wBACErB,GAAG,gBACHwa,EAAE,k3BACFnZ,UAAU,cAEZ,wBACErB,GAAG,gBACHwa,EAAE,kzBACFnZ,UAAU,cAEZ,wBACErB,GAAG,gBACHwa,EAAE,oVACFnZ,UAAU,cAEZ,wBACErB,GAAG,gBACHwa,EAAE,8UACFnZ,UAAU,cAEZ,wBACErB,GAAG,gBACHwa,EAAE,sSACFnZ,UAAU,cAEZ,wBACErB,GAAG,gBACHwa,EAAE,8UACFnZ,UAAU,cAEZ,wBACErB,GAAG,gBACHwa,EAAE,iJACFnZ,UAAU,cAEZ,wBACErB,GAAG,gBACHwa,EAAE,6OACFnZ,UAAU,cAEZ,wBACErB,GAAG,gBACHwa,EAAE,0LACFnZ,UAAU,iBAKlB,yBAAOrB,GAAG,WAAW7C,KAAK,YACvB,sDCvGHsd,GAAY,CAChB,CAAEna,KAAM,WAAYoa,KAAMC,KAC1B,CAAEra,KAAM,kBAAmBoa,KAAME,KACjC,CAAEta,KAAM,qBAAsBoa,KAAMG,KACpC,CAAEva,KAAM,gBAAiBoa,KAAMI,MAC/B,CAAExa,KAAM,aAAcoa,KAAMK,MAC5B,CAAEza,KAAM,gBAAiBoa,KAAMM,OAwElBC,GArEM,SAAC,GAKf,IAJLC,EAII,EAJJA,QACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,aAEI,IADJC,cACI,SACJ,OACE,yBAAKha,UAAU,mEACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,wFACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,+BAAf,gBAGJ,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACEA,UAAU,iBACVoJ,SAAS,OACTD,QAAS,WACP5J,EAAM8I,SAAS,CACbvM,KAAM,4BACNwD,UAAWya,SAMpBX,GAAUtN,KAAI,SAACtD,EAAGhC,GAAJ,OACb,yBACEuF,IAAG,yBAAoBvF,GACvBxG,UAAU,2BACVC,MAAO,CACLga,WACEJ,IAAYrT,EACR,4BACA,0BAGR,yBAAKxG,UAAU,UACb,yBACEmJ,QAAS,WACP2Q,EAAWtT,GACPwT,GACFza,EAAM8I,SAAS,CACbvM,KAAM,4BACNwD,UAAWya,KAIjBhO,IAAG,oBAAevF,GAClBxG,UAAS,qEACP6Z,IAAYrT,EAAI,qBAAuB,KAGzC,kBAACgC,EAAE6Q,KAAH,CAAQrZ,UAAU,gBAAgBoJ,SAAS,SAC3C,yBAAKpJ,UAAU,YAAYwI,EAAEvJ,eC1DvCib,GAAc,CAClB,CAAEb,KAAMc,KAAalb,KAAM,YAC3B,CAAEoa,KAAMe,KAAanb,KAAM,aAC3B,CAAEoa,KAAMgB,KAAcpb,KAAM,YAC5B,CAAEoa,KAAMiB,KAAWrb,KAAM,YA2eZ6I,oBAPf,SAAclM,EAAOmM,GACnB,OAAO,aACLxK,SAAU3B,EAAM2B,UACbwK,KAIQD,EAxeE,SAAC,GAAkB,IAAhBvK,EAAe,EAAfA,SAAe,EACH0I,mBAAS,IADN,mBAC1ByF,EAD0B,KACjBC,EADiB,OAEH1F,oBAAS,GAFN,mBAE1B4B,EAF0B,KAEjBI,EAFiB,KAI3BsS,EAAc,CAClB,CACEC,OACG,QAAQpQ,KAAK7M,EAASY,eAA2C,KAA1BZ,EAASY,gBAChD,QAAQiM,KAAK7M,EAASc,cAAyC,KAAzBd,EAASc,eAC/C,QAAQ+L,KAAK7M,EAASkd,gBACK,KAA1Bld,EAASe,gBACV,QAAQ8L,KAAK7M,EAASa,gBAA6C,KAA3Bb,EAASa,eAEpDsK,MAAO,oDAGX,OACE,yBAAK1I,UAAS,+BACZ,yBAAKA,UAAU,UACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,6BAAf,YACA,yBAAKA,UAAU,UAAf,2CAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBAAf,mDAGA,yBAAKA,UAAU,kBACb,2BACElE,KAAK,OACLkV,YAAY,gBACZtH,MAAOnM,EAASC,eAChBkT,SAAU,SAACjD,GACTA,EAAEkD,UACFpR,EAAM8I,SAAS,CACbvM,KAAM,kBACNyB,SAAU,CAAEC,eAAgBiQ,EAAEoD,OAAOnH,UAGzC1J,UAAU,6BAIhB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBAAf,gCAGA,yBAAKA,UAAU,kBACb,2BACE0J,MAAOnM,EAASE,eAChBiT,SAAU,SAACjD,GACTA,EAAEkD,UACFpR,EAAM8I,SAAS,CACbvM,KAAM,kBACNyB,SAAU,CAAEE,eAAgBgQ,EAAEoD,OAAOnH,UAGzC5N,KAAK,OACLkV,YAAY,gBACZhR,UAAU,6BAIhB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBAAf,mCAGA,yBAAKA,UAAU,kBACb,2BACElE,KAAK,OACLkV,YAAY,gBACZtH,MAAOnM,EAASG,kBAChBgT,SAAU,SAACjD,GACTA,EAAEkD,UACFpR,EAAM8I,SAAS,CACbvM,KAAM,kBACNyB,SAAU,CAAEG,kBAAmB+P,EAAEoD,OAAOnH,UAG5C1J,UAAU,6BAIhB,yBAAKA,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uBAAf,qCAGA,yBAAKA,UAAU,kBACb,2BACE0J,MAAOnM,EAASI,mBAChB+S,SAAU,SAACjD,GACTA,EAAEkD,UACFpR,EAAM8I,SAAS,CACbvM,KAAM,kBACNyB,SAAU,CAAEI,mBAAoB8P,EAAEoD,OAAOnH,UAG7CgR,IAAK,EACL5e,KAAK,SACLkE,UAAU,+BAMpB,yBAAKA,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uBAAf,oCAGA,yBAAKA,UAAU,kBACb,2BACE0J,MAAOnM,EAASK,kBAChB8S,SAAU,SAACjD,GACTA,EAAEkD,UACFpR,EAAM8I,SAAS,CACbvM,KAAM,kBACNyB,SAAU,CAAEK,kBAAmB6P,EAAEoD,OAAOnH,UAG5CgR,IAAK,EACL5e,KAAK,SACLkE,UAAU,+BAMpB,yBAAKA,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uBAAf,8CAGA,yBAAKA,UAAU,kBACb,2BACE0J,MAAOnM,EAASM,mBAChB6S,SAAU,SAACjD,GACTA,EAAEkD,UACFpR,EAAM8I,SAAS,CACbvM,KAAM,kBACNyB,SAAU,CAAEM,mBAAoB4P,EAAEoD,OAAOnH,UAG7CgR,IAAK,EACL5e,KAAK,SACLkE,UAAU,+BAMpB,yBAAKA,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uBAAf,4CAGA,yBAAKA,UAAU,kBACb,2BACE0J,MAAOnM,EAASO,sBAChB4S,SAAU,SAACjD,GACTA,EAAEkD,UACFpR,EAAM8I,SAAS,CACbvM,KAAM,kBACNyB,SAAU,CAAEO,sBAAuB2P,EAAEoD,OAAOnH,UAGhDgR,IAAK,EACL5e,KAAK,SACLkE,UAAU,+BAMpB,yBAAKA,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uBAAf,qCAGA,yBAAKA,UAAU,kBACb,2BACE0J,MAAOnM,EAASQ,gBAChB2S,SAAU,SAACjD,GACTA,EAAEkD,UACFpR,EAAM8I,SAAS,CACbvM,KAAM,kBACNyB,SAAU,CAAEQ,gBAAiB0P,EAAEoD,OAAOnH,UAG1CgR,IAAK,EACL5e,KAAK,SACLkE,UAAU,+BAMpB,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uBAAf,wDAGA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,6BAAf,QACA,yBAAKA,UAAU,kBACb,2BACE0J,MAAOnM,EAASS,2BAChB0S,SAAU,SAACjD,GACTA,EAAEkD,UACFpR,EAAM8I,SAAS,CACbvM,KAAM,kBACNyB,SAAU,CACRS,2BAA4ByP,EAAEoD,OAAOnH,UAI3CgR,IAAK,EACL5e,KAAK,SACLkE,UAAU,6BAIhB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,6BAAf,SACA,yBAAKA,UAAU,kBACb,2BACE0J,MAAOnM,EAASU,4BAChByS,SAAU,SAACjD,GACTA,EAAEkD,UACFpR,EAAM8I,SAAS,CACbvM,KAAM,kBACNyB,SAAU,CACRU,4BAA6BwP,EAAEoD,OAAOnH,UAI5CgR,IAAK,EACL5e,KAAK,SACLkE,UAAU,6BAIhB,yBAAKA,UAAU,WACb,yBAAKA,UAAU,6BAAf,WACA,yBAAKA,UAAU,kBACb,2BACE0J,MAAOnM,EAASW,8BAChBwS,SAAU,SAACjD,GACTA,EAAEkD,UACFpR,EAAM8I,SAAS,CACbvM,KAAM,kBACNyB,SAAU,CACRW,8BAA+BuP,EAAEoD,OAAOnH,UAI9CgR,IAAK,EACL5e,KAAK,SACLkE,UAAU,+BAMpB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBAAf,4BAGA,yBAAKA,UAAU,uBACb,yBACEmN,IAAK5P,EAASgB,iBAAiBM,cAC/BoB,MAAO,CAAEgP,SAAU,SACnBvH,MAAM,OACN2F,IAAG,yCAAoC9P,EAASgB,iBAAiBM,kBAGrE,yBAAKmB,UAAU,uBAAf,SACA,yBAAKA,UAAU,uBACb,2BACE2a,UAAQ,EACR3a,UAAU,kCACV0J,MAAOnM,EAASgB,iBAAiBnB,SAGrC,yBAAK4C,UAAU,uBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,uBAAf,YACA,yBAAKA,UAAU,kBACb,2BACE2a,UAAQ,EACR3a,UAAU,4BACV0J,MAAOqK,KAAKC,OACV,IAAIvV,KAAKlB,EAASgB,iBAAiBC,UACnC,4BAKR,yBAAKwB,UAAU,YACb,yBAAKA,UAAU,uBAAf,gBACA,yBAAKA,UAAU,kBACb,2BACE2a,UAAQ,EACR3a,UAAU,4BACV0J,MAAOqK,KAAKC,OACV,IAAIvV,KACFlB,EAASgB,iBAAiBC,SACiB,IAAzCjB,EAASW,8BAC8B,KAAvCX,EAASU,4BAC6B,MAAtCV,EAASS,4BAEb,6BAOV,yBAAKgC,UAAU,kBACb,yBACEA,UAAU,mDACVmJ,QAAO,sBAAE,4BAAAhB,EAAA,0DACH5K,EAASC,eADN,uBAELyK,GAAW,GAFN,SzBjHSrG,EyBqHZrE,EAASC,ezBpH1B8C,EAAgB,yBAA0B,CAAEsB,WyBgHxB,OAGDZ,EAHC,OAMLiH,GAAW,GACNjH,EAAI0H,MAMPnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QAAS2D,EAAI0H,MACb5M,KAAM,aAVVyD,EAAM8I,SAAS,CACbvM,KAAM,kBACNyB,SAAU,CAAEgB,iBAAkByC,KAV7B,uBAuBLzB,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QACE,4DACFvB,KAAM,aA7BL,kCzBjHQ,IAAC8F,IyBiHT,QAmCRiG,EACC,kBAAC,GAAD,CACEqB,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,QAASA,EACTxH,KAAM,KAGR,aAKR,yBAAKL,UAAU,UACb,yBAAKA,UAAU,uBAAf,oBACCka,GAAYpO,KAAI,SAACtD,EAAGhC,GAAJ,OACf,yBACExG,UAAU,sBACV+L,IAAG,gCAA2BvF,IAE9B,yBAAKxG,UAAU,iBACb,yBAAKA,UAAU,wDACb,kBAACwI,EAAE6Q,KAAH,CAAQjQ,SAAS,OAAOpJ,UAAU,gBAGtC,yBAAKA,UAAU,OACb,2BACE+Q,YAAY,EACZjV,KAAK,OACLkV,YAAW,gBAAWxI,EAAEvJ,KAAb,SACXyK,MAAOnM,EAAS,GAAD,OAAIiL,EAAEvJ,KAAN,SACfyR,SAAU,SAACjD,GACTA,EAAEkD,UACFpR,EAAM8I,SAAS,CACbvM,KAAM,kBACNyB,SAAS,0BAAOiL,EAAEvJ,KAAV,QAAuBwO,EAAEoD,OAAOnH,UAG5C1J,UAAU,iCAMpB,yBAAKA,UAAU,eACb,yBACEC,MAAO,CAAEb,OAAQ,OAAQ8R,QAASxF,EAAU,EAAI,GAChD1L,UAAU,iDAET0L,GAEH,yBAAK1L,UAAU,kBACb,yBAAKA,UAAU,6EAAf,UAGA,yBACEA,UAAU,kEACVmJ,QAAO,sBAAE,4BAAAhB,EAAA,2DACHyS,EAAUL,EAAY/F,QAAO,SAAChM,GAAD,OAAQA,EAAEgS,UAC/B/T,OAFL,gBAGLkF,EAAWiP,EAAQ,GAAGlS,OAHjB,8BAKLiD,EAAW,IALN,SAMWpI,EAAuBhG,GANlC,cAOGmL,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS,4BACTvB,KAAM,cAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,oBACPC,QAAS,qCACTvB,KAAM,aAGV0H,GAAY,SAACjG,GACNA,EAASmL,OACRnL,EAASkJ,QACXlH,EAAM8I,SAAS,CACbvM,KAAM,kBACNyB,SAAUA,EAAS,SA9BxB,6CAFX,kBC3ZHsd,GAtCe,SAAC,GAA2C,IAAzCd,EAAwC,EAAxCA,aAAcD,EAA0B,EAA1BA,WAAYD,EAAc,EAAdA,QACzD,OACE,yBACE7Z,UAAS,4FACN+Z,EAA8B,GAAf,cAElB9Z,MAAO,CACLoF,SAAU,QACVmQ,MAAO,EACP9I,IAAK,IAGP,yBAAK1M,UAAU,iCACb,yBACEA,UAAU,uBACVC,MAAO,CACLb,OAAQ,OACRsI,MAAO,OACP8N,MAAOuE,EAAe,EAAI,QAC1Be,WAAY,aACZzV,SAAU,WACV6H,OAAQ,GACR8B,WAAY,UAGd,kBAAC,GAAD,CACEgL,QAAQ,EACRha,UAAU,mCACV6Z,QAASA,EACTE,aAAcA,EACdD,WAAYA,Q,qBCiCTiB,GA7DA,SAAC,GAQT,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,QAMI,IALJjb,iBAKI,MALQ,GAKR,MAJJkb,sBAII,aAHJC,oBAGI,MAHW,GAGX,OAFJnV,aAEI,EADJoV,iBACI,MADO,aACP,IACwBnV,oBAAS,GADjC,mBACGoV,EADH,KACWC,EADX,KAEEC,EAAS/M,iBAAO,MACtB,OACE,kBAAC,GAAD,CACExO,UAAWmb,EACX7V,OAAO,EACPF,OAAQ,kBAAMkW,GAAU,IACxBxV,OAAQ,kBAAMwV,GAAU,IACxB9V,QAAS,SAACwD,GAAD,OACP,yBACEhJ,UAAU,WACVC,MAAO,CAAEub,UAAW,QAASC,UAAW,OAAQ/T,MAAOsB,IAEtDgS,EAAMlP,KAAI,SAACtD,EAAGhC,GAAJ,OACT,yBACEuF,IAAK2P,OACL1b,UAAU,qBACVmJ,QAAS,WACPiS,EAAS5U,GACJ0U,GACHK,EAAO5T,QAAQgU,UAInB,6BAAMnT,EAAEoT,KAAOpT,EAAEoT,KAAOpT,UAMhC,yBACEjB,IAAKgU,EACLvb,UACE,qFACAA,GAGF,yBAAKA,UAAU,QAAQib,GACvB,kBAAC,IAAD,CACE7R,SAAS,OACTwD,YAAY,QACZ5M,UAAU,gBACVC,MAAO,CACLgZ,UAAU,UAAD,OAAYoC,EAAS,SAAW,OAAhC,KACTP,WAAY,uB,8BCtDlBvV,GAAQsW,aAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,mBAERC,UAAW,CACTD,KAAM,cAaGE,GARE,SAAC5U,GAChB,OACE,kBAAC,KAAD,CAAkB/B,MAAOA,IACvB,kBAAC,KAAgB+B,K,SC+kBRQ,oBARf,SAAclM,EAAOmM,GACnB,OAAO,aACLpM,YAAaC,EAAMD,YACnBO,QAASN,EAAMM,SACZ6L,KAIQD,EAplBC,SAAC,GAKV,IAJLqU,EAII,EAJJA,qBACAC,EAGI,EAHJA,cACAzgB,EAEI,EAFJA,YACAO,EACI,EADJA,QACI,EACwB+J,mBAAS,IADjC,mBACGpK,EADH,KACWwgB,EADX,OAEoBpW,mBAAS,IAF7B,mBAEGqW,EAFH,KAESC,EAFT,OAG8BtW,mBAAS,QAHvC,mBAGGuW,EAHH,KAGcC,EAHd,OAI8CxW,mBAAS,GAJvD,mBAIGyW,EAJH,KAIsBC,EAJtB,OAKoB1W,mBAAS,GAL7B,mBAKG+P,EALH,KAKSC,EALT,OAMgChQ,mBAAS,IANzC,mBAMG2W,EANH,KAMeC,EANf,OAOwB5W,mBAAS,IAPjC,mBAOGjJ,EAPH,KAOW8f,EAPX,OAQgC7W,mBAAS,CAAE8F,IAAK,GAAIrC,MAAO,KAR3D,mBAQGqT,EARH,KAQeC,EARf,OAS0B/W,mBAAS,IATnC,mBASGtJ,EATH,KASYqV,EATZ,OAU0C/L,mBAAS,IAVnD,mBAUGgX,EAVH,KAUoBC,EAVpB,QAW0BjX,oBAAS,GAXnC,qBAWGkX,GAXH,MAWYC,GAXZ,MAYJhX,qBAAU,WAAM,4CACd,4BAAA+B,EAAA,sEACkBzE,IADlB,QACM1C,EADN,QAEW0H,OACPsJ,EACEhR,EAAIsV,UAAUxK,KAAI,SAACtD,GAAD,OAAOzM,OAAOC,OAAO,GAAIwM,EAAG,CAAEgC,UAAU,QAJhE,4CADc,uBAAC,WAAD,wBASdwB,KACC,CAACmR,KAEJ/W,qBAAU,WACR,IAAIiX,EAAG,aAAO1gB,GACVA,EAAQ8J,SACNzJ,IACgB,SAAdwf,EACFa,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OACf7M,EAAY6M,EAAEiJ,QAAQlV,aACnB+N,cACAsJ,SAAS5W,EAAOsN,kBAEE,WAAdkS,EACTa,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OACfA,EAAE9G,OAAO4I,cAAcsJ,SAAS5W,EAAOsN,kBAElB,UAAdkS,IACTa,EAAMA,EAAI7I,QACR,SAAChM,GAAD,OACEtM,EAAQsM,EAAEM,WACV5M,EAAQsM,EAAEM,UAAUyG,YACjBjF,cACAsJ,SAAS5W,EAAOsN,oBAKvBsS,IACFS,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OAAO7M,EAAY6M,EAAEiJ,QAAQ6K,OAASM,MAElC,SAAnBG,EAAWhR,KAAkBgR,EAAWrT,QAC1C2T,EAAMA,EAAI7I,QACR,SAAChM,GAAD,OAAO7M,EAAY6M,EAAEiJ,QAAQsL,EAAWhR,OAASgR,EAAWrT,UAK9D2T,EADqB,YAAnBN,EAAWhR,KAAqBgR,EAAWrT,MACvC2T,EAAI7I,QAAO,SAAChM,GAAD,OAAOA,EAAC,UAAgBuU,EAAWrT,SAE9C2T,EAAI7I,QAAO,SAAChM,GAAD,OAAQA,EAAC,WAG5B0U,EAAmBG,MAEpB,CAACrgB,EAAQ4f,EAAYjgB,EAASogB,IAGjC,IAAIO,GAAa,CAAc,GAAZtH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GAC/CsH,GAAW,IAAML,EAAgBxW,SACnC6W,GAAW,GAAKA,GAAW,IAAMA,GAAW,GAAKL,EAAgBxW,SAGnE,IAAM8W,GAAW,uCAAG,4CAAApV,EAAA,0FAEhB0U,EAAuB,QAATP,EAAiB,GAAKA,GAEvB,SAAXzgB,EAJc,iBAKZ2O,EAAWyS,EAAgBzI,QAAO,SAAChM,GAAD,OAAOA,EAAEgC,aAClC/D,SACX2V,EAAc5R,EAAS,IACvB2R,KARc,0BAUI,WAAXtgB,EAVO,sBAWZ2O,EAAWyS,EAAgBzI,QAAO,SAAChM,GAAD,OAAOA,EAAEgC,aAClC/D,OAZG,kCAaE3C,GAAsB0G,EAASsB,KAAI,SAACtD,GAAD,OAAOA,EAAE+I,QAb9C,SAaVvQ,EAbU,QAcN0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,aAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,uBACPC,QAAS,oCACTvB,KAAM,aAIZshB,IAAYD,IAjCE,4CAAH,qDAsCXK,GAAU,CAAC,QAAS,SAAU,SAAU,YAAa,YAE3D,OACE,yBAAKxd,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,0BACb,yBACEA,UAAS,kCACN+c,EAAWhR,KAAQ6Q,EAA8B,YAAjB,gBAEnCzT,QAAS,WACP6T,EAAc,CAAEjR,IAAK,GAAIrC,MAAO,KAChCmT,EAAc,MANlB,QASQlgB,EAAQ6X,QAAO,SAAChM,GAAD,OAAQA,EAAEiV,WAAShX,OAT1C,KAWA,yBAAKzG,UAAU,4BAAf,KACA,yBACEmJ,QAAS,kBACP6T,GAAc,SAAClM,GAAD,OACZ/U,OAAOC,OAAO,GAAI8U,EAAM,CAAE/E,IAAK,OAAQrC,MAAO,sBAGlD1J,UAAS,kCACY,SAAnB+c,EAAWhR,KAAuC,kBAArBgR,EAAWrT,MACpC,eACA,cATR,sBAaG3N,OAAOsY,OAAO1Y,GAAa8K,OACxB9J,EAAQ6X,QACN,SAAChM,GAAD,OACE7M,EAAY6M,EAAEiJ,SACiB,kBAA/B9V,EAAY6M,EAAEiJ,QAAQ6K,OACrB9T,EAAEiV,WACLhX,OACF,GApBN,KAuBA,yBAAKzG,UAAU,4BAAf,KACA,yBACEmJ,QAAS,kBACP6T,GAAc,SAAClM,GAAD,OACZ/U,OAAOC,OAAO,GAAI8U,EAAM,CAAE/E,IAAK,UAAWrC,OAAO,QAGrD1J,UAAS,kCACY,YAAnB+c,EAAWhR,MAA0C,IAArBgR,EAAWrT,MACvC,eACA,cATR,YAYY/M,EAAQ6X,QAAO,SAAChM,GAAD,OAAOA,EAAEiV,WAAShX,OAZ7C,MAeF,yBAAKzG,UAAU,0CACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,qBACbC,SAAU,SAACsC,GAAD,OAAWrB,EAAU,CAAC,UAAUqB,KAC1C1C,MAAO,CAAC,UACRC,QAASpf,GAAkB,gBAC3BmE,UAAU,iCAIhB,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,qBACbC,SAAU,SAACsC,GAAD,OACRnB,EAAQ,CAAC,MAAO,gBAAiB,QAAQmB,KAE3C1C,MAAO,CAAC,MAAO,gBAAiB,QAChCC,QAASqB,GAAc,cACvBtc,UAAU,gCAIhB,yBACEmJ,QAAS,kBAAMoU,IAAY,IAC3Bvd,UAAU,yEAFZ,WAQJ,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CACEmb,aAAa,QACbC,SAAU,SAACsC,GAAD,OACRjB,EAAa,CAAC,OAAQ,SAAU,SAASiB,KAE3C1d,UAAU,qBACVgb,MAAO,CAAC,OAAQ,SAAU,SAC1BC,QAAO,oBAAeuB,MAG1B,yBAAKxc,UAAU,uBACb,yBAAKA,UAAU,4BACb,kBAAC,KAAD,CACEoJ,SAAS,OACTnJ,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACR2D,MAAO,UAGX,2BACExV,UAAU,8BACV0J,MAAO1M,EACP0T,SAAU,SAACjD,GACTA,EAAEkD,UACFmM,EAAUrP,EAAEoD,OAAOnH,aAM7B,yBAAK1J,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEob,SAAU,SAACsC,GAAD,OACRjB,EAAa,CAAC,OAAQ,SAAU,SAASiB,KAE3C1d,UAAU,sCACVgb,MAAO,CAAC,OAAQ,SAAU,SAC1BC,QAAO,oBAAeuB,KAExB,yBAAKxc,UAAU,yBACb,kBAAC,KAAD,CACEoJ,SAAS,OACTnJ,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACR2D,MAAO,UAGX,2BACE9L,MAAO1M,EACP0T,SAAU,SAACjD,GACTA,EAAEkD,UACFmM,EAAUrP,EAAEoD,OAAOnH,QAErB1J,UAAU,wBACVC,MAAO,CAAE0d,SAAU,eAM7B,yBAAK3d,UAAU,kBACb,kBAAC,KAAD,CACEC,MAAO,CAAE0d,SAAU,QACnBC,aAAc,WACZjB,EACED,EAAoB,EAAI,EACpBA,EAAoB,EACpBA,IAGRmB,cAAe,WACblB,EACED,EAAoB,GAAK,EACrBA,EAAoB,EACpBA,KAIR,yBAAK1c,UAAU,oBACb,2BAAOA,UAAU,yBACf,+BACE,4BACE,wBAAIA,UAAU,eACZ,kBAAC,GAAD,CACEkJ,MAAO,UACP4U,QACEnhB,EACGkS,MAAMyO,GAAW,GAAIA,GAAW,IAChC9I,QAAO,SAAChM,GAAD,OAAOA,EAAEgC,YAAU/D,SAC7B6W,GAAW,GAAKA,GAAW,GAE7B5M,SAAU,SAACjD,GACTyP,GAAmB,SAACpM,GAElB,IADA,IAAIuM,EAAG,aAAOvM,GAERtK,EAAI8W,GAAW,GACnB9W,EAAI8W,GAAW,GACf9W,IAEA6W,EAAI7W,GAAGgE,SAAWiD,EAAEoD,OAAOiN,QAE7B,OAAOT,SAKf,wBAAIrd,UAAU,wCACZ,yBAAKA,UAAU,qBAAf,aACA,yBAAKA,UAAU,qBAAf,OAEF,wBAAIA,UAAU,qDACXwd,GAAQd,IAEVc,GAAQ1R,KAAI,SAACtD,EAAGhC,GAAJ,OACX,wBACEuF,IAAG,qBAAgBvF,GACnBxG,UAAU,qDAEV,6BAAMwI,SAKd,+BACGyU,EAAgBxW,OACfwW,EACGpO,MAAmB,GAAZmH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GACvClK,KAAI,SAACtD,EAAGhC,GAAJ,OACH,wBACExG,UAAU,2BACV+L,IAAG,yBAAoBvF,IAEvB,wBAAIxG,UAAU,eACZ,kBAAC,GAAD,CACEkJ,MAAO,UACP4U,QAAStV,EAAEgC,SACXkG,SAAU,SAACjD,GACTyP,GAAmB,SAACpM,GAClB,IAAIuM,EAAG,aAAOvM,GAGd,OAFAuM,EAAiB,GAAZrH,EAAO,GAASxP,GAAGgE,SACtBiD,EAAEoD,OAAOiN,QACJT,SAKf,4BACG1hB,EAAY6M,EAAEiJ,QACb,6BACE,yBAAKxR,MAAO,CAAEkP,WAAY,WACxB,yBAAKnP,UAAU,uBACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAY6M,EAAEiJ,QAAQjV,MADT,SAMrB,yBAAKwD,UAAU,sCACb,yBAAKA,UAAU,mBACZrE,EAAY6M,EAAEiJ,QAAQlV,cAEzB,yBAAKyD,UAAU,QACZrE,EAAY6M,EAAEiJ,QAAQ/U,OAEzB,yBAAKsD,UAAU,UACb,yBACEA,UAAU,8BACVmJ,QAAS,WACPiT,EAAc5T,GACd2T,MAJJ,QASA,yBAAKnc,UAAU,QAAf,KACA,yBACEA,UAAU,6BACVmJ,QAAO,sBAAE,4BAAAhB,EAAA,sEACSrE,GACd,CAAC0E,EAAE+I,MAFE,QACHvQ,EADG,QAIC0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,aAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QACE,kCACFvB,KAAM,aAIZshB,IAAYD,IAxBL,4CAFX,cAoCR,IAGJ,wBACEnd,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGN,yBAAKzc,MAAO,CAAEgP,SAAU,UACrB/S,EAAQsM,EAAEM,UACP5M,EAAQsM,EAAEM,UAAUyG,YACpB,KAGR,wBACEvP,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGN,6BACE,yBACEzc,MAAO,CAAE0d,SAAU,SACnB3d,UAAU,wDACVmJ,QAAS,SAACsE,GACRH,EAAQC,KAAR,iBAAuB/E,EAAEM,SAAzB,YAAqCN,EAAE+I,QAGxC/I,EAAE9G,UAIT,wBACE1B,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGN,yBAAKzc,MAAO,CAAEwK,aAAc,SAC1B,kBAAC,IAAD,CACEtK,MACe,mBAAbqI,EAAErM,OACE,OACa,cAAbqM,EAAErM,OACF,QACa,YAAbqM,EAAErM,OACF,sBACA,OAENiE,IAAI,WACJC,KAAM,OAIZ,wBACEL,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGN,yBAAKzc,MAAO,CAAEkP,WAAY,WACvB4E,KAAKC,OACJ,IAAIvV,KAAK+J,EAAEuL,MACX,0BAIN,wBACE/T,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGLlU,EAAEuV,SACD,yBAAK/d,UAAU,eAAf,UAEA,yBAAKA,UAAU,gBAAf,WAMV,4BACE,wBAAIge,QAAS,EAAGhe,UAAU,qBAA1B,yBAqDd,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,YACb,kBAAC,GAAD,CACE0P,MAAO1F,KAAK2K,KAAKsI,EAAgBxW,OAAS,GAC1CkB,QAASqO,EACTrG,WAAYsG,WCyCXnO,oBARf,SAAclM,EAAOmM,GACnB,OAAO,aACLpM,YAAaC,EAAMD,YACnBO,QAASN,EAAMM,SACZ6L,KAIQD,EA7mBE,SAAC,GAKX,IAJLmW,EAII,EAJJA,sBACAC,EAGI,EAHJA,eACAviB,EAEI,EAFJA,YACAO,EACI,EADJA,QACI,EACwB+J,mBAAS,IADjC,mBACGpK,EADH,KACWwgB,EADX,OAEoBpW,mBAAS,IAF7B,mBAEGqW,EAFH,KAESC,EAFT,OAG8BtW,mBAAS,QAHvC,mBAGGuW,EAHH,KAGcC,EAHd,OAI8CxW,mBAAS,GAJvD,mBAIGyW,EAJH,KAIsBC,EAJtB,OAKoB1W,mBAAS,GAL7B,mBAKG+P,EALH,KAKSC,EALT,OAMgChQ,mBAAS,IANzC,mBAMG2W,EANH,KAMeC,EANf,OAOgC5W,mBAAS,CAAE8F,IAAK,GAAIrC,MAAO,KAP3D,mBAOGqT,EAPH,KAOeC,EAPf,OAQwB/W,mBAAS,IARjC,mBAQGjJ,EARH,KAQW8f,EARX,OAU4B7W,mBAAS,IAVrC,mBAUG8L,EAVH,KAUa3B,EAVb,OAWkCnK,mBAAS,IAX3C,mBAWGoN,EAXH,KAWgB8K,EAXhB,OAa4ClY,mBAAS,IAbrD,oBAaGmY,GAbH,MAaqBC,GAbrB,SAc0BpY,oBAAS,GAdnC,qBAcGkX,GAdH,MAcYC,GAdZ,MAgBJhX,qBAAU,WAAM,4CACd,8BAAA+B,EAAA,sEACkBxE,IADlB,QACM3C,EADN,QAEW0H,QACP0H,EACEpP,EAAIsV,UAAUxK,KAAI,SAACtD,GAAD,OAAOzM,OAAOC,OAAO,GAAIwM,EAAG,CAAEgC,UAAU,QAExD8T,EAAM,GACVtd,EAAIuH,SAAQ,SAACC,GACX8V,EAAI9V,EAAE+I,KAAO/I,KAEf2V,EAAeG,IAVnB,4CADc,uBAAC,WAAD,wBAcdtS,KACC,CAACmR,KAEJ/W,qBAAU,WACR,IAAIiX,EAAG,aAAOtL,GACVA,EAAStL,SACPzJ,IACgB,SAAdwf,EACFa,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OACf7M,EAAY6M,EAAEiJ,QAAQlV,aACnB+N,cACAsJ,SAAS5W,EAAOsN,kBAEE,YAAdkS,IACTa,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OACfA,EAAExG,QAAQsI,cAAcsJ,SAAS5W,EAAOsN,oBAK1CsS,IACFS,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OAAO7M,EAAY6M,EAAEiJ,QAAQ6K,OAASM,MAGlC,SAAnBG,EAAWhR,KAAkBgR,EAAWrT,QAC1C2T,EAAMA,EAAI7I,QACR,SAAChM,GAAD,OAAO7M,EAAY6M,EAAEiJ,QAAQsL,EAAWhR,OAASgR,EAAWrT,UAK9D2T,EADqB,YAAnBN,EAAWhR,KAAqBgR,EAAWrT,MACvC2T,EAAI7I,QAAO,SAAChM,GAAD,OAAOA,EAAC,UAAgBuU,EAAWrT,SAE9C2T,EAAI7I,QAAO,SAAChM,GAAD,OAAQA,EAAC,WAG5B6V,GAAoBhB,MAErB,CAACrgB,EAAQ4f,EAAY7K,EAAUgL,IAGlC,IAAIO,GAAa,CAAc,GAAZtH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GAC/CsH,GAAW,IAAMc,GAAiB3X,SACpC6W,GAAW,GAAKA,GAAW,IAAMA,GAAW,GAAKc,GAAiB3X,SAGpE,IAAM8W,GAAW,uCAAG,8CAAApV,EAAA,0FAEhB0U,EAAuB,QAATP,EAAiB,GAAKA,KAElC9R,EAAW4T,GAAiB5J,QAAO,SAAChM,GAAD,OAAOA,EAAEgC,aACnC/D,OALK,oBAMD,SAAX5K,EANY,gBAOdqiB,EAAe1T,EAAS,IACxByT,IARc,8BAUVla,EAAMyG,EAASsB,KAAI,SAACtD,GAAD,OAAOA,EAAE+I,OAC5BgN,EAXU,aAWGxa,GAEA,SAAXya,EAAYC,GAChBF,EAASA,EAAO3T,OAAO6T,GACvBA,EAAOlW,SAAQ,SAACC,GAAD,OAAOgW,EAASnL,EAAY7K,GAAGuJ,aAGhDyM,CAASza,GAlBK,UAoBEC,GAAuBua,GApBzB,SAoBVvd,EApBU,QAqBN0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,cAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,wBACPC,QAAS,qCACTvB,KAAM,aAGVshB,IAAYD,KAvCA,4CAAH,qDA6CjB,OACE,yBAAKnd,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,0BACb,yBACEA,UAAS,kCACN+c,EAAWhR,KAAQ6Q,EAA8B,YAAjB,gBAEnCzT,QAAS,WACP6T,EAAc,CAAEjR,IAAK,GAAIrC,MAAO,KAChCmT,EAAc,MANlB,QASQ9K,EAASyC,QAAO,SAAChM,GAAD,OAAQA,EAAEiV,WAAShX,OAT3C,KAWA,yBAAKzG,UAAU,4BAAf,KACA,yBACEmJ,QAAS,kBACP6T,GAAc,SAAClM,GAAD,OACZ/U,OAAOC,OAAO,GAAI8U,EAAM,CAAE/E,IAAK,OAAQrC,MAAO,sBAGlD1J,UAAS,kCACY,SAAnB+c,EAAWhR,KAAuC,kBAArBgR,EAAWrT,MACpC,eACA,cATR,sBAaG3N,OAAOsY,OAAO1Y,GAAa8K,OACxBsL,EAASyC,QACP,SAAChM,GAAD,MACiC,kBAA/B7M,EAAY6M,EAAEiJ,QAAQ6K,OAA6B9T,EAAEiV,WACvDhX,OACF,GAlBN,KAqBA,yBAAKzG,UAAU,4BAAf,KACA,yBACEmJ,QAAS,kBACP6T,GAAc,SAAClM,GAAD,OACZ/U,OAAOC,OAAO,GAAI8U,EAAM,CAAE/E,IAAK,UAAWrC,OAAO,QAGrD1J,UAAS,kCACY,YAAnB+c,EAAWhR,MAA0C,IAArBgR,EAAWrT,MACvC,eACA,cATR,YAYYqI,EAASyC,QAAO,SAAChM,GAAD,OAAOA,EAAEiV,WAAShX,OAZ9C,MAeF,yBAAKzG,UAAU,0CACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,qBACbC,SAAU,SAACsC,GAAD,OAAWrB,EAAU,CAAC,UAAUqB,KAC1C1C,MAAO,CAAC,UACRC,QAASpf,GAAkB,gBAC3BmE,UAAU,gCAIhB,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,qBACbC,SAAU,SAACsC,GAAD,OACRnB,EAAQ,CAAC,MAAO,gBAAiB,QAAQmB,KAE3C1C,MAAO,CAAC,MAAO,gBAAiB,QAChCC,QAASqB,GAAc,cACvBtc,UAAU,gCAIhB,yBACEmJ,QAAS,kBAAMoU,IAAY,IAC3Bvd,UAAU,yEAFZ,WAQJ,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CACEmb,aAAa,QACbC,SAAU,SAACsC,GAAD,OAAWjB,EAAa,CAAC,OAAQ,WAAWiB,KACtD1d,UAAU,qBACVgb,MAAO,CAAC,OAAQ,WAChBC,QAAO,oBAAeuB,MAG1B,yBAAKxc,UAAU,uBACb,yBAAKA,UAAU,4BACb,kBAAC,KAAD,CACEoJ,SAAS,OACTnJ,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACR2D,MAAO,UAGX,2BACExV,UAAU,8BACV0J,MAAO1M,EACP0T,SAAU,SAACjD,GACTA,EAAEkD,UACFmM,EAAUrP,EAAEoD,OAAOnH,aAM7B,yBAAK1J,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEob,SAAU,SAACsC,GAAD,OAAWjB,EAAa,CAAC,OAAQ,WAAWiB,KACtD1d,UAAU,sCACVgb,MAAO,CAAC,OAAQ,WAChBC,QAAO,oBAAeuB,KAExB,yBAAKxc,UAAU,yBACb,kBAAC,KAAD,CACEoJ,SAAS,OACTnJ,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACR2D,MAAO,UAGX,2BACE9L,MAAO1M,EACP0T,SAAU,SAACjD,GACTA,EAAEkD,UACFmM,EAAUrP,EAAEoD,OAAOnH,QAErB1J,UAAU,wBACVC,MAAO,CAAE0d,SAAU,eAM7B,yBAAK3d,UAAU,kBACb,kBAAC,KAAD,CACEC,MAAO,CAAE0d,SAAU,QACnBC,aAAc,WACZjB,EACED,EAAoB,EAAI,EACpBA,EAAoB,EACpBA,IAGRmB,cAAe,WACblB,EACED,EAAoB,GAAK,EACrBA,EAAoB,EACpBA,KAIR,yBAAK1c,UAAU,oBACb,2BAAOA,UAAU,yBACf,+BACE,4BACE,wBAAIA,UAAU,eACZ,kBAAC,GAAD,CACEkJ,MAAO,UACP4U,QACEM,GACGvP,MAAMyO,GAAW,GAAIA,GAAW,IAChC9I,QAAO,SAAChM,GAAD,OAAOA,EAAEgC,YAAU/D,SAC7B6W,GAAW,GAAKA,GAAW,GAE7B5M,SAAU,SAACjD,GACT4Q,IAAoB,SAACvN,GAEnB,IADA,IAAIuM,EAAG,aAAOvM,GAERtK,EAAI8W,GAAW,GACnB9W,EAAI8W,GAAW,GACf9W,IAEA6W,EAAI7W,GAAGgE,SAAWiD,EAAEoD,OAAOiN,QAE7B,OAAOT,SAKf,wBAAIrd,UAAU,wCACZ,yBAAKA,UAAU,qBAAf,aACA,yBAAKA,UAAU,qBAAf,OAEF,wBAAIA,UAAU,qDAEV,CAAC,UAAW,iBAAkB,YAAa,YACzC0c,IAIN,wBAAI1c,UAAU,qDACZ,yCAEF,wBAAIA,UAAU,qDACZ,gDAEF,wBAAIA,UAAU,qDACZ,2CAEF,wBAAIA,UAAU,qDACZ,4CAIN,+BACGoe,GAAiB3X,OAChB2X,GACGvP,MAAmB,GAAZmH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GACvClK,KAAI,SAACtD,EAAGhC,GAAJ,OACH,wBACExG,UAAU,2BACV+L,IAAG,yBAAoBvF,IAEvB,wBAAIxG,UAAU,eACZ,kBAAC,GAAD,CACEkJ,MAAO,UACP4U,QAAStV,EAAEgC,SACXkG,SAAU,SAACjD,GACT4Q,IAAoB,SAACvN,GACnB,IAAIuM,EAAG,aAAOvM,GAGd,OAFAuM,EAAiB,GAAZrH,EAAO,GAASxP,GAAGgE,SACtBiD,EAAEoD,OAAOiN,QACJT,SAKf,4BACE,6BACG1hB,EAAY6M,EAAEiJ,QACb,yBAAKxR,MAAO,CAAEkP,WAAY,WACxB,yBAAKnP,UAAU,uBACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAY6M,EAAEiJ,QAAQjV,MADT,SAMrB,yBAAKwD,UAAU,sCACb,yBAAKA,UAAU,gBACZrE,EAAY6M,EAAEiJ,QAAQlV,cAEzB,yBAAKyD,UAAU,QACZrE,EAAY6M,EAAEiJ,QAAQ/U,OAEzB,yBAAKsD,UAAU,UACb,yBACEA,UAAU,8BACVmJ,QAAS,WACP+U,EAAe1V,GACfyV,MAJJ,QASA,yBAAKje,UAAU,QAAf,KACA,yBACEA,UAAU,6BACVmJ,QAAO,sBAAE,8BAAAhB,EAAA,6DACHoW,EAAS,CAAC/V,EAAE+I,KAEC,SAAXiN,EAAYC,GAChBF,EAASA,EAAO3T,OAAO6T,GACvBA,EAAOlW,SAAQ,SAAC5J,GAAD,OACb6f,EAASnL,EAAY1U,GAAIoT,aAI7ByM,CAASD,GAVF,SAYSva,GACdua,GAbK,QAYHvd,EAZG,QAeC0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,aAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,sBACPC,QACE,mCACFvB,KAAM,aAIZshB,IAAYD,IAnCL,4CAFX,aA8CN,KAIN,wBACEnd,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGN,6BACE,yBACEzc,MAAO,CAAE0d,SAAU,SACnB3d,UAAU,wDACVmJ,QAAS,SAACsE,GACRH,EAAQC,KAAR,iBACY/E,EAAEM,SADd,YAC0BN,EAAE8I,UAD5B,YACyC9I,EAAE+I,QAI5C/I,EAAExG,WAIT,wBACEhC,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGN,sCACS,IACNxgB,EAAQsM,EAAEM,UACP5M,EAAQsM,EAAEM,UAAUyG,YACpB,IAEN,yBAAKvP,UAAU,UACb,yBACEmJ,QAAO,sBAAE,sBAAAhB,EAAA,sDACPmF,EAAQC,KAAR,iBACY/E,EAAEM,SADd,YAC0BN,EAAE8I,YAFrB,2CAKTtR,UAAU,8BACVC,MAAO,CAAEkP,WAAY,WAPvB,iBAaJ,wBACEnP,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGN,yBAAKzc,MAAO,CAAEkP,WAAY,WACvB4E,KAAKC,OACJ,IAAIvV,KAAK+J,EAAEuL,MACX,0BAIN,wBACE/T,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGLlU,EAAEuV,SACD,yBAAK/d,UAAU,eAAf,UAEA,yBAAKA,UAAU,gBAAf,WAMV,4BACE,wBAAIge,QAAS,EAAGhe,UAAU,oBAA1B,yBAiEd,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,YACb,kBAAC,GAAD,CACE0P,MAAO1F,KAAK2K,KAAKyJ,GAAiB3X,OAAS,GAC3CkB,QAASqO,EACTrG,WAAYsG,WCtiBXyI,GA9DY,SAAC,GAMrB,IALLtC,EAKI,EALJA,cACAD,EAII,EAJJA,qBACA8B,EAGI,EAHJA,sBACAC,EAEI,EAFJA,eAEI,KADJS,iBAEsB1Y,mBAAS,IAD3B,mBACG2Y,EADH,KACQC,EADR,KAGJ,OACE,yBAAK7e,UAAS,+BACZ,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,qCAAf,sBAGA,yBAAKA,UAAU,kBAAf,6CAIF,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,iCACb,yBACEC,MAAO,CAAEyH,MAAO,SAChByB,QAAS,kBAAM0V,EAAO,IACtB7e,UAAS,oCACC,IAAR4e,EAAY,sBAAwB,KAJxC,WASA,yBACE3e,MAAO,CAAEyH,MAAO,SAChByB,QAAS,kBAAM0V,EAAO,IACtB7e,UAAS,qCACC,IAAR4e,EAAY,sBAAwB,KAJxC,gBAaR,yBAAK5e,UAAU,UACJ,IAAR4e,EACC,kBAAC,GAAD,CACEzC,qBAAsBA,EACtBC,cAAeA,IAGjB,kBAAC,GAAD,CACE8B,eAAgBA,EAChBD,sBAAuBA,OC2IpBnW,oBARf,SAAclM,EAAOmM,GACnB,OAAO,aACLpM,YAAaC,EAAMD,YACnBO,QAASN,EAAMM,SACZ6L,KAIQD,EA7LI,SAAC,GAAsD,IAApDgX,EAAmD,EAAnDA,cAAenjB,EAAoC,EAApCA,YAAaojB,EAAuB,EAAvBA,QAAS7iB,EAAc,EAAdA,QAAc,EAC3C+J,mBAAS,IADkC,mBAChEvE,EADgE,KACxDoR,EADwD,OAE/C7M,mBAAS,CAAE1J,aAAc,GAAIG,MAAO,KAFW,mBAEhEN,EAFgE,KAE1D4iB,EAF0D,OAGzC/Y,oBAAS,GAHgC,mBAGhE4B,EAHgE,KAGvDI,EAHuD,KAIvE7B,qBAAU,WACJ0Y,IACFhM,EAAUgM,GACVE,EAAQrjB,EAAYmjB,EAAcrN,YAEnC,CAACqN,IAEJ1Y,qBAAU,WACR3G,OAAO4X,SAAS,EAAG,KAClB,IAEH,IAAMxK,EAAS9Q,OAAOsY,OAAOnY,GAAS4P,KAAI,SAACtD,GAAD,OAAOA,EAAE+G,eAEnD,OACE,yBAAKvP,UAAU,4BAA4BC,MAAO,CAAEgP,SAAU,UAC5D,yBAAKjP,UAAU,kCACb,yBAAKA,UAAU,qCAAf,sBAGA,yBAAKA,UAAU,kBAAf,8CAIF,yBAAKA,UAAU,UACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,UACb,2BACElE,KAAK,OACLkE,UAAU,yBACV0J,MAAOtN,EAAKG,aACZmU,SAAU,SAACjD,GACTA,EAAEkD,UACFqO,GAAQ,SAAClO,GAAD,OACN/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEvU,aAAckR,EAAEoD,OAAOnH,gBAM3D,yBAAK1J,UAAU,uBACb,yBAAKA,UAAU,eAAf,WACA,yBAAKA,UAAU,UACb,8BACE0J,MAAOhI,EAAOA,OAASA,EAAOA,OAAS,GACvCgP,SAAU,SAACjD,GACTA,EAAEkD,UACFmC,GAAU,SAAChC,GAAD,OACR/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEpP,OAAQ+L,EAAEoD,OAAOnH,YAG/C1J,UAAU,uBACVC,MAAO,CAAEb,OAAQ,cAKzB,yBAAKY,UAAU,eACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,WAAf,WAEF,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,mBACbnb,UAAU,mBACVib,QACEvZ,EAAOvF,OACH2D,EAAQgO,MAAK,SAACtF,GAAD,OAAOA,EAAEvJ,OAASyC,EAAOvF,UAAQ4D,QAC9C,SAENqb,SAAU,SAACsC,GACT5K,GAAU,SAAChC,GAAD,OACR/U,OAAOC,OAAO,GAAI8U,EAAM,CAAE3U,OAAQ2D,EAAQ4d,GAAOze,WAGrD+b,MAAOlb,EAAQgM,KAAI,SAACtD,GAAD,OAAOA,EAAEzI,eAIlC,yBAAKC,UAAU,eACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,WAAf,kBAEF,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,mBACbnb,UAAU,mBACVib,QAASvZ,EAAOqc,SAAW,WAAa,eACxC3C,SAAU,SAACsC,GACT5K,GAAU,SAAChC,GAAD,OACR/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBiN,SAAoB,IAAVL,QAIhB1C,MAAO,CAAC,WAAY,oBAI1B,yBAAKhb,UAAU,eACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,WAAf,eAEF,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,mBACbnb,UAAU,mBACVib,QAASvZ,EAAO6N,YAAc7N,EAAO6N,YAAc,SACnD6L,SAAU,SAACsC,GACT5K,GAAU,SAAChC,GAAD,OACR/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBvB,YAAa1C,EAAO6Q,SAI1B1C,MAAOnO,MAIb,yBAAK7M,UAAU,eACb,yBAAKA,UAAU,kBACb,yBACEA,UAAU,4EACVmJ,QAAS,kBAAM4V,MAFjB,UAMA,yBACE/e,UAAU,kEACVmJ,QAAO,sBAAE,4BAAAhB,EAAA,6DACPF,GAAW,GADJ,SAESrE,GAAmBlC,EAAQtF,GAFpC,OAEH4E,EAFG,OAGPiH,GAAW,GACPjH,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,cAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,kCACTvB,KAAM,aAGVijB,KAtBK,4CA0BT,kBAAC,GAAD,CACE7V,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,QAASA,EACTxH,KAAM,KAxCV,cCaKyH,oBAPf,SAAclM,EAAOmM,GACnB,OAAO,aACLpM,YAAaC,EAAMD,aAChBoM,KAIQD,EAjJK,SAAC,GAA8C,IAA5CmX,EAA2C,EAA3CA,eAAgBtjB,EAA2B,EAA3BA,YAAaojB,EAAc,EAAdA,QAAc,EAClC9Y,mBAAS,IADyB,mBACzDjE,EADyD,KAChDkd,EADgD,OAExCjZ,mBAAS,CAAE1J,aAAc,GAAIG,MAAO,KAFI,mBAEzDN,EAFyD,KAEnD4iB,EAFmD,OAGlC/Y,oBAAS,GAHyB,mBAGzD4B,EAHyD,KAGhDI,EAHgD,KAgBhE,OAXA7B,qBAAU,WACJ6Y,IACFC,EAAWD,GACXD,EAAQrjB,EAAYsjB,EAAexN,YAEpC,CAACwN,IAEJ7Y,qBAAU,WACR3G,OAAO4X,SAAS,EAAG,KAClB,IAGD,yBAAKrX,UAAU,4BAA4BC,MAAO,CAAEgP,SAAU,UAC5D,yBAAKjP,UAAU,kCACb,yBAAKA,UAAU,qCAAf,sBAGA,yBAAKA,UAAU,kBAAf,8CAIF,yBAAKA,UAAU,UACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,UACb,2BACElE,KAAK,OACLkE,UAAU,yBACV0J,MAAOtN,EAAKG,aACZmU,SAAU,SAACjD,GACTA,EAAEkD,UACFqO,GAAQ,SAAClO,GAAD,OACN/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEvU,aAAckR,EAAEoD,OAAOnH,gBAM3D,yBAAK1J,UAAU,uBACb,yBAAKA,UAAU,eAAf,WACA,yBAAKA,UAAU,UACb,8BACE0J,MAAO1H,EAAQA,QACf0O,SAAU,SAACjD,GACTA,EAAEkD,UACFuO,GAAW,SAACpO,GAAD,OACT/U,OAAOC,OAAO,GAAI8U,EAAM,CAAE9O,QAASyL,EAAEoD,OAAOnH,YAGhD1J,UAAU,uBACVC,MAAO,CAAEb,OAAQ,cAKzB,yBAAKY,UAAU,eACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,WAAf,kBAEF,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,mBACbnb,UAAU,mBACVib,QAASjZ,EAAQ+b,SAAW,WAAa,eACzC3C,SAAU,SAACsC,GACTwB,GAAW,SAACpO,GAAD,OACT/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBiN,SAAoB,IAAVL,QAIhB1C,MAAO,CAAC,WAAY,oBAI1B,yBAAKhb,UAAU,eACb,yBAAKA,UAAU,kBACb,yBACEA,UAAU,4EACVmJ,QAAS,kBAAM4V,MAFjB,UAMA,yBACE/e,UAAU,kEACVmJ,QAAO,sBAAE,4BAAAhB,EAAA,6DACPF,GAAW,GADJ,SAESpE,GAAoB7B,EAAS5F,GAFtC,OAEH4E,EAFG,OAGPiH,GAAW,GACPjH,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,cAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,kCACTvB,KAAM,aAGVijB,KAtBK,4CA0BT,kBAAC,GAAD,CACE7V,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,QAASA,EACTxH,KAAM,KAxCV,cC0gBKyH,oBAPf,SAAclM,EAAOmM,GACnB,OAAO,aACLpM,YAAaC,EAAMD,aAChBoM,KAIQD,EA3lBO,SAAC,GAKhB,IAJLqX,EAII,EAJJA,oBACAC,EAGI,EAHJA,2BACAC,EAEI,EAFJA,4BACA1jB,EACI,EADJA,YACI,EACwBsK,mBAAS,IADjC,mBACGpK,EADH,KACWwgB,EADX,OAEoBpW,mBAAS,IAF7B,mBAEGnK,EAFH,KAESwjB,EAFT,OAG8BrZ,mBAAS,QAHvC,mBAGGuW,EAHH,KAGcC,EAHd,OAI8CxW,mBAAS,GAJvD,mBAIGyW,EAJH,KAIsBC,EAJtB,OAKoB1W,mBAAS,GAL7B,mBAKG+P,EALH,KAKSC,EALT,OAMgChQ,mBAAS,IANzC,mBAMGsZ,EANH,KAMeC,EANf,OAOwBvZ,mBAAS,IAPjC,mBAOGjJ,EAPH,KAOW8f,EAPX,OASgC7W,mBAAS,CAAE8F,IAAK,GAAIrC,MAAO,KAT3D,mBASGqT,EATH,KASeC,EATf,OAW0B/W,oBAAS,GAXnC,mBAWGkX,EAXH,KAWYC,EAXZ,OAYsCnX,mBAAS,IAZ/C,mBAYGwZ,EAZH,KAYkBC,EAZlB,OAasDzZ,mBAAS,IAb/D,mBAaG0Z,EAbH,KAa0BC,GAb1B,KAcJxZ,qBAAU,WAAM,4CACd,4BAAA+B,EAAA,sEACkBhE,KADlB,QACMnD,EADN,QAEW0H,OACPgX,EACE1e,EAAI8K,KAAI,SAACtD,GAAD,OAAOzM,OAAOC,OAAO,GAAIwM,EAAG,CAAEgC,UAAU,QAJtD,4CADc,uBAAC,WAAD,wBASdwB,KACC,CAACmR,IAEJ/W,qBAAU,WACR,IAAIiX,EAAG,aAAOoC,GACVA,EAAchZ,SACZzJ,IACgB,SAAdwf,EACFa,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OACf7M,EAAY6M,EAAEiJ,QAAQlV,aACnB+N,cACAsJ,SAAS5W,EAAOsN,kBAEE,gBAAdkS,IACTa,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OACfA,EAAEqX,YAAYvV,cAAcsJ,SAAS5W,EAAOsN,oBAK9CiV,IACFlC,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OAAOA,EAAE1M,OAASyjB,MAGjCxC,EAAWhR,MACbsR,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OAAOA,EAAEuU,EAAWhR,OAASgR,EAAWrT,UAG3DkW,GAAyBvC,MAE1B,CAACrgB,EAAQuiB,EAAYE,EAAe1C,IAGvC,IAAIO,GAAa,CAAc,GAAZtH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GAC/CsH,GAAW,IAAMqC,EAAsBlZ,SACzC6W,GAAW,GACTA,GAAW,IAAMA,GAAW,GAAKqC,EAAsBlZ,SAG3D,IACMqZ,GAAU,CAAC,UAEXvC,GAAW,uCAAG,4CAAApV,EAAA,0FAEhBqX,EAAc1jB,GAED,SAAXD,EAJc,iBAKZ2O,EAAWmV,EAAsBnL,QAAO,SAAChM,GAAD,OAAOA,EAAEgC,aACxC/D,SACX0Y,EAAoB3U,EAAS,IAC7B4U,KARc,0BAUI,WAAXvjB,EAVO,sBAWZ2O,EAAWmV,EAAsBnL,QAAO,SAAChM,GAAD,OAAOA,EAAEgC,aACxC/D,OAZG,kCAaEnC,GAA4BkG,EAASsB,KAAI,SAACtD,GAAD,OAAOA,EAAE+I,QAbpD,SAaVvQ,EAbU,QAcN0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,aAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,6BACPC,QAAS,0CACTvB,KAAM,aAIZshB,GAAYD,GAjCE,4CAAH,qDAsCX4C,GAAQ,CAAC,cAAe,QAAS,WAEvC,OACE,yBAAK/f,UAAU,+BACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCAAf,iBAGA,yBAAKA,UAAU,kBAAf,kCAEF,yBACEA,UAAU,qDACVmJ,QAAS,kBAAMkW,MAFjB,aAQJ,yBAAKrf,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,0BACb,yBACEmJ,QAAS,WACP6T,EAAc,CAAEjR,IAAK,GAAIrC,MAAO,KAChC4V,EAAQ,IACRE,EAAc,KAEhBxf,UAAS,kCACNuf,GAAexC,EAAWhR,IAAuB,YAAjB,iBAPrC,QAUQ0T,EAAchZ,OAVtB,KAjEK,CAAC,YAAa,UAAW,WA6EpBqF,KAAI,SAACtD,EAAGhC,GAAJ,OACZ,kBAAC,IAAMyJ,SAAP,CAAgBlE,IAAG,iBAAYvF,IAC7B,yBAAKxG,UAAU,4BAAf,KACA,yBACEmJ,QAAS,kBACP6T,GAAc,SAAClM,GAAD,OACZ/U,OAAOC,OAAO,GAAI8U,EAAM,CACtB/E,IAAK,SACLrC,MAAOlB,QAIbxI,UAAS,kCACY,WAAnB+c,EAAWhR,KAAoBgR,EAAWrT,QAAUlB,EAChD,eACA,cAGLA,EAfH,KAeQiX,EAAcjL,QAAO,SAACmD,GAAD,OAAOA,EAAEqI,SAAWxX,KAAG/B,OAfpD,UAoBN,yBAAKzG,UAAU,0CACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,qBACbC,SAAU,SAACsC,GAAD,OAAWrB,EAAUyD,GAAQpC,KACvC1C,MAAO8E,GACP7E,QAASpf,GAAkB,gBAC3BmE,UAAU,iCAIhB,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,qBACbC,SAAU,SAACsC,GAAD,OAAW4B,EAAQS,GAAMrC,KACnC1C,MAAO+E,GACP9E,QAASnf,GAAc,cACvBkE,UAAU,iCAIhB,yBACEmJ,QAAS,kBAAMoU,IAAY,IAC3Bvd,UAAU,yEAFZ,WAQJ,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CACEmb,aAAa,QACbC,SAAU,SAACsC,GAAD,OACRjB,EAAa,CAAC,OAAQ,eAAeiB,KAEvC1d,UAAU,qBACVgb,MAAO,CAAC,OAAQ,eAChBC,QAAO,oBAAeuB,MAG1B,yBAAKxc,UAAU,uBACb,yBAAKA,UAAU,4BACb,kBAAC,KAAD,CACEoJ,SAAS,OACTnJ,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACR2D,MAAO,UAGX,2BACExV,UAAU,8BACV0J,MAAO1M,EACP0T,SAAU,SAACjD,GACTA,EAAEkD,UACFmM,EAAUrP,EAAEoD,OAAOnH,aAM7B,yBAAK1J,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEob,SAAU,SAACsC,GAAD,OACRjB,EAAa,CAAC,OAAQ,eAAeiB,KAEvC1d,UAAU,sCACVgb,MAAO,CAAC,OAAQ,eAChBC,QAAO,oBAAeuB,KAExB,yBAAKxc,UAAU,yBACb,kBAAC,KAAD,CACEoJ,SAAS,OACTnJ,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACR2D,MAAO,UAGX,2BACE9L,MAAO1M,EACP0T,SAAU,SAACjD,GACTA,EAAEkD,UACFmM,EAAUrP,EAAEoD,OAAOnH,QAErB1J,UAAU,wBACVC,MAAO,CAAE0d,SAAU,eAM7B,yBAAK3d,UAAU,kBACb,kBAAC,KAAD,CACEC,MAAO,CAAE0d,SAAU,QACnBC,aAAc,WACZjB,EACED,EAAoB,EAAI,EACpBA,EAAoB,EACpBA,IAGRmB,cAAe,WACblB,EACED,EAAoB,GAAK,EACrBA,EAAoB,EACpBA,KAIR,yBAAK1c,UAAU,oBACb,2BAAOA,UAAU,yBACf,+BACE,4BACE,wBAAIA,UAAU,eACZ,kBAAC,GAAD,CACEkJ,MAAO,UACP4U,QACE6B,EACG9Q,MAAMyO,GAAW,GAAIA,GAAW,IAChC9I,QAAO,SAAChM,GAAD,OAAOA,EAAEgC,YAAU/D,SAC7B6W,GAAW,GAAKA,GAAW,GAE7B5M,SAAU,SAACjD,GACTmS,IAAyB,SAAC9O,GAExB,IADA,IAAIuM,EAAG,aAAOvM,GAERtK,EAAI8W,GAAW,GACnB9W,EAAI8W,GAAW,GACf9W,IAEA6W,EAAI7W,GAAGgE,SAAWiD,EAAEoD,OAAOiN,QAE7B,OAAOT,SAKf,wBAAIrd,UAAU,wCACZ,yBAAKA,UAAU,qBAAf,aACA,yBAAKA,UAAU,qBAAf,OAEF,wBAAIA,UAAU,qDAEV,CAAC,OAAQ,cAAe,WAAY,UAClC0c,IAIN,wBAAI1c,UAAU,qDACZ,sCAEF,wBAAIA,UAAU,qDACZ,6CAEF,wBAAIA,UAAU,qDACZ,0CAEF,wBAAIA,UAAU,qDACZ,0CAIN,+BACG2f,EAAsBlZ,OACrBkZ,EACG9Q,MAAmB,GAAZmH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GACvClK,KAAI,SAACtD,EAAGhC,GAAJ,OACH,wBACExG,UAAU,2BACV+L,IAAG,yBAAoBvF,IAEvB,wBAAIxG,UAAU,eACZ,kBAAC,GAAD,CACEkJ,MAAO,UACP4U,QAAStV,EAAEgC,SACXkG,SAAU,SAACjD,GACTmS,IAAyB,SAAC9O,GACxB,IAAIuM,EAAG,aAAOvM,GAGd,OAFAuM,EAAiB,GAAZrH,EAAO,GAASxP,GAAGgE,SACtBiD,EAAEoD,OAAOiN,QACJT,SAKf,4BACGthB,OAAOsY,OAAO1Y,GAAa8K,OAC1B,kBAAC,IAAMwJ,SAAP,KACE,6BACE,yBAAKhQ,MAAO,CAAEkP,WAAY,WACxB,yBAAKnP,UAAU,uBACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAY6M,EAAEiJ,QAAQjV,MADT,SAMrB,yBAAKwD,UAAU,sCACb,yBAAKA,UAAU,gBACZrE,EAAY6M,EAAEiJ,QAAQlV,cAEzB,yBAAKyD,UAAU,QACZrE,EAAY6M,EAAEiJ,QAAQ/U,OAEzB,yBAAKsD,UAAU,UACb,yBACEA,UAAU,8BACVmJ,QAAS,WACPgW,EAAoB3W,GACpB4W,MAJJ,QASA,yBAAKpf,UAAU,QAAf,KACA,yBACEA,UAAU,6BACVmJ,QAAO,sBAAE,4BAAAhB,EAAA,sEACS7D,GACd,CAACkE,EAAE+I,MAFE,QACHvQ,EADG,QAIC0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,aAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MACE,2BACFC,QACE,wCACFvB,KAAM,aAIZshB,GAAYD,GAzBL,4CAFX,eAsCV,IAGJ,wBACEnd,UAAS,UACI,YAAXwI,EAAE1M,KACE,eACW,gBAAX0M,EAAE1M,KACF,eACW,UAAX0M,EAAE1M,KACF,cACA,IAPG,OASe,IAAtB4gB,EACI,gBACA,4BAGN,6BAAMlU,EAAE1M,OAEV,wBACEkE,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGN,yBACEzc,MAAO,CAAE0d,SAAU,SACnB3d,UAAU,+CACVmJ,QAAS,SAACsE,GACR,IAAIoD,EAASpD,EAAE6J,cAEbzG,EAAO0G,UAAUC,SAAS,gBAE1B3G,EAAO0G,UAAUE,OAAO,gBAExB5G,EAAO0G,UAAUG,IAAI,kBAIxBlP,EAAEqX,cAGP,wBACE7f,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGN,yBAAKzc,MAAO,CAAEkP,WAAY,WACxB,yBAAKnP,UAAU,uBACb,uCACA,sCAEF,yBAAKA,UAAU,kBACb,yBAAKC,MAAO,CAAEkP,WAAY,WACvB4E,KAAKC,OACJ,IAAIvV,KAAK+J,EAAEyX,YACX,wBAEF,yBAAKhgB,MAAO,CAAEkP,WAAY,WACvB4E,KAAKC,OACJ,IAAIvV,KAAK+J,EAAE0X,UACX,6BAOZ,wBACElgB,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGLlU,EAAEwX,YAKX,4BACE,wBAAIhC,QAAS,EAAGhe,UAAU,qBAA1B,yBA6Dd,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,YACb,kBAAC,GAAD,CACE0P,MAAO1F,KAAK2K,KAAKgL,EAAsBlZ,OAAS,GAChDkB,QAASqO,EACTrG,WAAYsG,a,gDC5Qf1R,GAhUU,SAAC,GAAsC,IAApC4b,EAAmC,EAAnCA,oBAAqBpB,EAAc,EAAdA,QAAc,EACrB9Y,mBAAS,CAC/C4Z,YAAa,GACb/jB,KAAM,GACNmkB,WAAYxhB,KAAKC,MACjBwhB,SAAUzhB,KAAKC,MACfshB,OAAQ,KANmD,mBACtD3b,EADsD,KACxC+b,EADwC,OAS/Bna,oBAAS,GATsB,mBAStD4B,EATsD,KAS7CI,EAT6C,KAW7D7B,qBAAU,WACJ+Z,GACFC,EAAgBD,KAEjB,CAACA,IAEJ/Z,qBAAU,WACR3G,OAAO4X,SAAS,EAAG,KAClB,IAEH,IAAM0I,EAAQ,CAAC,cAAe,UAAW,SACnCM,EAAW,CAAC,YAAa,UAAW,WAE1C,OACE,yBAAKrgB,UAAU,6BACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,qCAAf,iBACA,yBAAKA,UAAU,kBAAf,+BAEF,yBAAKA,UAAU,UACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,QACA,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,mBACbC,SAAU,SAACsC,GAAD,OACR0C,GAAgB,SAACtP,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEhV,KAAMikB,EAAMrC,SAG1C1d,UAAU,yBACVgb,MAAO+E,EACP9E,QAAS5W,EAAavI,KAAOuI,EAAavI,KAAO,cAKzD,yBAAKkE,UAAU,uBACb,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,UACb,8BACE0J,MAAOrF,EAAawb,YAAcxb,EAAawb,YAAc,GAC7DnP,SAAU,SAACjD,GACTA,EAAEkD,UACFyP,GAAgB,SAACtP,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAE+O,YAAapS,EAAEoD,OAAOnH,YAGpD1J,UAAU,uBACVC,MAAO,CAAEb,OAAQ,YAIrB,yBACEY,UAAS,iBACPqE,EAAawb,YAAYjK,MAAM,KAAKnP,QAAU,IAC1C,aACA,gBAGLpC,EAAawb,YACV,IAAMxb,EAAawb,YAAYjK,MAAM,KAAKnP,OAC1C,IAAK,IATX,eAaF,yBAAKzG,UAAU,kBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBAAf,cACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBAAgBC,MAAO,CAAEyH,MAAO,UAC7C,kBAAC,KAAD,CACEgC,MAAOqK,KAAKC,OACV,IAAIvV,KAAK4F,EAAa4b,YACtB,cAEFK,UAAW,SAAChZ,GAAD,OACT,yBAAKtH,UAAU,qBACb,kBAAC,KAAD,CACEC,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,2CACMlG,EADN,CAEEtH,UAAU,8BACVgR,YAAY,kBAIlBuP,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAIrH,EAAI,IAAI1a,KAAK4F,EAAa4b,YAC1BQ,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClB3H,EAAE4H,YAAYN,GACdtH,EAAE6H,SAASL,GACXxH,EAAE8H,QAAQJ,GACVT,GAAgB,SAACtP,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEmP,WAAY9G,EAAE+H,oBAMlD,yBACElhB,UAAU,yCACVC,MAAO,CAAEyH,MAAO,UAEhB,kBAAC,KAAD,CACEzH,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,kBAAC,KAAD,CACE2T,UAAW,KACXC,UAAW,KACXphB,UAAU,aACV0Q,SAAU,SAACvI,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyN,MAAM,KADhB,mBACA7L,EADA,KACGG,EADH,KAEDmX,EAAU,IAAI5iB,KAAK4F,EAAa4b,YACpCoB,EAAQC,SAASvX,GACjBsX,EAAQE,WAAWrX,GACnBkW,GAAgB,SAACtP,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBmP,WAAYoB,EAAQH,iBAK5BxX,MAAO,IAAIjL,KAAK4F,EAAa4b,kBAMvC,yBAAKjgB,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,kBAAf,YACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBAAgBC,MAAO,CAAEyH,MAAO,UAC7C,kBAAC,KAAD,CACEgC,MAAOqK,KAAKC,OACV,IAAIvV,KAAK4F,EAAa6b,UACtB,cAEFI,UAAW,SAAChZ,GAAD,OACT,yBAAKtH,UAAU,qBACb,kBAAC,KAAD,CACEC,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,2CACMlG,EADN,CAEEtH,UAAU,8BACVgR,YAAY,kBAIlBuP,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAIrH,EAAI,IAAI1a,KAAK4F,EAAa6b,UAC1BO,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClB3H,EAAE4H,YAAYN,GACdtH,EAAE6H,SAASL,GACXxH,EAAE8H,QAAQJ,GACVT,GAAgB,SAACtP,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEoP,SAAU/G,EAAE+H,oBAMhD,yBACElhB,UAAU,yCACVC,MAAO,CAAEyH,MAAO,UAEhB,kBAAC,KAAD,CACEzH,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,kBAAC,KAAD,CACE2T,UAAW,KACXC,UAAW,KACXphB,UAAU,aACV0Q,SAAU,SAACvI,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyN,MAAM,KADhB,mBACA7L,EADA,KACGG,EADH,KAEDmX,EAAU,IAAI5iB,KAAK4F,EAAa6b,UACpCmB,EAAQC,SAASvX,GACjBsX,EAAQE,WAAWrX,GACnBkW,GAAgB,SAACtP,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBoP,SAAUmB,EAAQH,iBAK1BxX,MAAO,IAAIjL,KAAK4F,EAAa6b,kBAQ3C,yBAAKlgB,UAAU,uBACb,yBAAKA,UAAU,eAAf,QACA,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,mBACbC,SAAU,SAACsC,GAAD,OACR0C,GAAgB,SAACtP,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEkP,OAAQK,EAAS3C,SAG/C1d,UAAU,yBACVgb,MAAOqF,EACPpF,QAAS5W,EAAa2b,OAAS3b,EAAa2b,OAAS,eAO/D,yBAAKhgB,UAAU,eACb,yBAAKA,UAAU,kBACb,yBACEA,UAAU,4EACVmJ,QAAS,kBAAM4V,MAFjB,UAMA,yBACE/e,UAAU,kEACVmJ,QAAO,sBAAE,4BAAAhB,EAAA,6DACPF,GAAW,GADJ,SAESuZ,GAAKnd,GAFd,OAEHrD,EAFG,OAGPiH,GAAW,GACPjH,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,cAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,uBACPC,QAAS,wCACTvB,KAAM,aAGVijB,KAtBK,4CA0BT,kBAAC,GAAD,CACE7V,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,QAASA,EACTxH,KAAM,KAxCV,YCwFKyH,oBAPf,SAAclM,EAAOmM,GACnB,OAAO,aACL3L,KAAMR,EAAMQ,MACT2L,KAIQD,EArWY,SAAC,GAAuB,IAArB1L,EAAoB,EAApBA,KAAM2iB,EAAc,EAAdA,QAAc,EACR9Y,mBAAS,CAC/C4Z,YAAa,GACb/jB,KAAM,GACNmkB,WAAYxhB,KAAKC,MACjBwhB,SAAUzhB,KAAKC,MACfshB,OAAQ,cANsC,mBACzC3b,EADyC,KAC3B+b,EAD2B,OASlBna,mBAAS,IATS,mBASzCyF,EATyC,KAShCC,EATgC,OAUlB1F,oBAAS,GAVS,mBAUzC4B,EAVyC,KAUhCI,EAVgC,KAY1C8X,EAAQ,CAAC,cAAe,UAAW,SACnCM,EAAW,CAAC,YAAa,UAAW,WAEpC9F,EAAc,CAClB,CAAEC,MAAOnW,EAAawb,YAAanX,MAAO,2BAC1C,CAAE8R,MAAOnW,EAAavI,KAAM4M,MAAO,oBACnC,CACE8R,MAAOnW,EAAa4b,WAAa5b,EAAa6b,SAC9CxX,MAAO,sCAET,CACE8R,MAAOnW,EAAa4b,aAAe5b,EAAa6b,SAChDxX,MAAO,+BAIX,OACE,yBAAK1I,UAAU,6BACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,qCAAf,iBACA,yBAAKA,UAAU,kBAAf,wDAIF,yBAAKA,UAAU,UACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,QACA,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,mBACbC,SAAU,SAACsC,GAAD,OACR0C,GAAgB,SAACtP,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEhV,KAAMikB,EAAMrC,SAG1C1d,UAAU,yBACVgb,MAAO+E,EACP9E,QAAS5W,EAAavI,KAAOuI,EAAavI,KAAO,cAKzD,yBAAKkE,UAAU,uBACb,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,UACb,8BACE0J,MAAOrF,EAAawb,YAAcxb,EAAawb,YAAc,GAC7DnP,SAAU,SAACjD,GACTA,EAAEkD,UACFyP,GAAgB,SAACtP,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAE+O,YAAapS,EAAEoD,OAAOnH,YAGpD1J,UAAU,uBACVC,MAAO,CAAEb,OAAQ,YAIrB,yBACEY,UAAS,iBACPqE,EAAawb,YAAYjK,MAAM,KAAKnP,QAAU,IAC1C,aACA,gBAGLpC,EAAawb,YACV,IAAMxb,EAAawb,YAAYjK,MAAM,KAAKnP,OAC1C,IAAK,IATX,eAaF,yBAAKzG,UAAU,kBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBAAf,cACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBAAgBC,MAAO,CAAEyH,MAAO,UAC7C,kBAAC,KAAD,CACEgC,MAAOqK,KAAKC,OACV,IAAIvV,KAAK4F,EAAa4b,YACtB,cAEFK,UAAW,SAAChZ,GAAD,OACT,yBAAKtH,UAAU,qBACb,kBAAC,KAAD,CACEC,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,2CACMlG,EADN,CAEEtH,UAAU,8BACVgR,YAAY,kBAIlBuP,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAIrH,EAAI,IAAI1a,KAAK4F,EAAa4b,YAC1BQ,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClB3H,EAAE4H,YAAYN,GACdtH,EAAE6H,SAASL,GACXxH,EAAE8H,QAAQJ,GACVT,GAAgB,SAACtP,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEmP,WAAY9G,EAAE+H,oBAMlD,yBACElhB,UAAU,yCACVC,MAAO,CAAEyH,MAAO,UAEhB,kBAAC,KAAD,CACEzH,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,kBAAC,KAAD,CACE2T,UAAW,KACXC,UAAW,KACXphB,UAAU,aACV0Q,SAAU,SAACvI,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyN,MAAM,KADhB,mBACA7L,EADA,KACGG,EADH,KAEDmX,EAAU,IAAI5iB,KAAK4F,EAAa4b,YACpCoB,EAAQC,SAASvX,GACjBsX,EAAQE,WAAWrX,GACnBkW,GAAgB,SAACtP,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBmP,WAAYoB,EAAQH,iBAK5BxX,MAAO,IAAIjL,KAAK4F,EAAa4b,kBAMvC,yBAAKjgB,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,kBAAf,YACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBAAgBC,MAAO,CAAEyH,MAAO,UAC7C,kBAAC,KAAD,CACEgC,MAAOqK,KAAKC,OACV,IAAIvV,KAAK4F,EAAa6b,UACtB,cAEFI,UAAW,SAAChZ,GAAD,OACT,yBAAKtH,UAAU,qBACb,kBAAC,KAAD,CACEC,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,2CACMlG,EADN,CAEEtH,UAAU,8BACVgR,YAAY,kBAIlBuP,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAIrH,EAAI,IAAI1a,KAAK4F,EAAa6b,UAC1BO,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClB3H,EAAE4H,YAAYN,GACdtH,EAAE6H,SAASL,GACXxH,EAAE8H,QAAQJ,GACVT,GAAgB,SAACtP,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEoP,SAAU/G,EAAE+H,oBAMhD,yBACElhB,UAAU,yCACVC,MAAO,CAAEyH,MAAO,UAEhB,kBAAC,KAAD,CACEzH,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,kBAAC,KAAD,CACE2T,UAAW,KACXC,UAAW,KACXphB,UAAU,aACV0Q,SAAU,SAACvI,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyN,MAAM,KADhB,mBACA7L,EADA,KACGG,EADH,KAEDmX,EAAU,IAAI5iB,KAAK4F,EAAa6b,UACpCmB,EAAQC,SAASvX,GACjBsX,EAAQE,WAAWrX,GACnBkW,GAAgB,SAACtP,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBoP,SAAUmB,EAAQH,iBAK1BxX,MAAO,IAAIjL,KAAK4F,EAAa6b,kBAQ3C,yBAAKlgB,UAAU,uBACb,yBAAKA,UAAU,eAAf,UACA,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,mBACbC,SAAU,SAACsC,GAAD,OACR0C,GAAgB,SAACtP,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEkP,OAAQK,EAAS3C,SAG/C1d,UAAU,yBACVgb,MAAOqF,EACPpF,QAAS5W,EAAa2b,OAAS3b,EAAa2b,OAAS,eAO/D,yBAAKhgB,UAAU,eACb,yBACEC,MAAO,CAAEb,OAAQ,OAAQ8R,QAASxF,EAAU,EAAI,GAChD1L,UAAU,iDAET0L,GAEH,yBAAK1L,UAAU,uBACb,yBACEA,UAAU,4EACVmJ,QAAS,kBAAM4V,MAFjB,UAMA,yBACE/e,UAAU,kEACVmJ,QAAO,sBAAE,8BAAAhB,EAAA,0DACH/L,EAAKmV,IADF,sBAEDqJ,EAAUL,EAAY/F,QAAO,SAAChM,GAAD,OAAQA,EAAEgS,UAC/B/T,OAHP,gBAIHkF,EAAWiP,EAAQ,GAAGlS,OAJnB,8BAMHT,GAAW,GANR,SAOa7D,GACdrI,OAAOC,OAAO,GAAIqI,EAAc,CAAEoN,OAAQrV,EAAKmV,OAR9C,OAOCvQ,EAPD,OAUHiH,GAAW,GACPjH,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,cAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,uBACPC,QAAS,wCACTvB,KAAM,aAGVijB,KA7BC,gCAiCLxf,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,4CACTvB,KAAM,aAtCL,6CA4CT,kBAAC,GAAD,CACEoN,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,QAASA,EACTxH,KAAM,KA1DV,cC4SKyH,oBAPf,SAAclM,EAAOmM,GACnB,OAAO,aACL7L,QAASN,EAAMM,SACZ6L,KAIQD,EAlkBI,SAAC,GAKb,IAJL2Z,EAII,EAJJA,iBACAC,EAGI,EAHJA,0BACAC,EAEI,EAFJA,wBAEI,KADJzlB,QAE4B+J,mBAAS,KADjC,mBACGpK,EADH,KACWwgB,EADX,OAEoBpW,mBAAS,IAF7B,mBAEGnK,EAFH,KAESwjB,EAFT,OAG8BrZ,mBAAS,eAHvC,mBAGGuW,EAHH,KAGcC,EAHd,OAI8CxW,mBAAS,GAJvD,mBAIGyW,EAJH,KAIsBC,EAJtB,OAKoB1W,mBAAS,GAL7B,mBAKG+P,EALH,KAKSC,EALT,OAMgChQ,mBAAS,IANzC,mBAMGsZ,EANH,KAMeC,EANf,OAOwBvZ,mBAAS,IAPjC,mBAOGjJ,EAPH,KAOW8f,EAPX,OAQgC7W,mBAAS,CAAE8F,IAAK,GAAIrC,MAAO,KAR3D,mBAQGqT,EARH,KAQeC,EARf,OAUgC/W,mBAAS,IAVzC,mBAUG2b,EAVH,KAUeC,EAVf,OAWgD5b,mBAAS,IAXzD,mBAWG6b,EAXH,KAWuBC,EAXvB,OAY0B9b,oBAAS,GAZnC,oBAYGkX,GAZH,MAYYC,GAZZ,MAcJhX,qBAAU,WAAM,4CACd,4BAAA+B,EAAA,sEACmB1D,KADnB,QACMjE,EADN,QAEYkI,OACRmZ,EACErhB,EAAKsL,KAAI,SAACtD,GAAD,OAAOzM,OAAOC,OAAO,GAAIwM,EAAG,CAAEgC,UAAU,QAJvD,4CADc,uBAAC,WAAD,wBAUdwB,KACC,CAACmR,KAEJ/W,qBAAU,WACR,IAAIiX,EAAG,aAAOuE,GACVA,EAAWnb,SACTzJ,IACgB,gBAAdwf,EACFa,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OACfA,EAAEqX,YAAYvV,cAAcsJ,SAAS5W,EAAOsN,kBAEvB,WAAdkS,IACTa,EAAMA,EAAI7I,QACR,SAAChM,GAAD,MACqB,WAAnBA,EAAEwZ,cACFxZ,EAAEhD,QAAQ9D,OAAO4I,cAAcsJ,SAAS5W,EAAOsN,oBAKnDiV,IACFlC,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OACfA,EAAEwZ,aAAapL,MAAM,IAAIqL,OAAO1C,EAAY,UAI5CxC,EAAWhR,MACbsR,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OAAOA,EAAEuU,EAAWhR,OAASgR,EAAWrT,UAG3DqY,EAAsB1E,MAEvB,CAACrgB,EAAQuiB,EAAYqC,EAAY7E,IAGpC,IAAIO,GAAa,CAAc,GAAZtH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GAC/CsH,GAAW,IAAMwE,EAAmBrb,SACtC6W,GAAW,GAAKA,GAAW,IAAMA,GAAW,GAAKwE,EAAmBrb,SAGtE,IAAM+W,GAAU,CAAC,SAAU,SAAU,WAAY,UAC3C0E,GAAgB,CAAC,cAAe,UAGtC,OACE,yBAAKliB,UAAU,+BACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCAAf,mBAGA,yBAAKA,UAAU,kBAAf,mCAEF,yBACEA,UAAU,qDACVmJ,QAAS,kBAAMuY,MAFjB,aAQJ,yBAAK1hB,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,0BACb,yBACEA,UAAS,kCACY,KAAnB+c,EAAWhR,KAAewT,EAEtB,YADA,gBAGNpW,QAAS,WACPqW,EAAc,IACdF,EAAQ,IACRtC,EAAc,CAAEjR,IAAK,GAAIrC,MAAO,OATpC,QAYQkY,EAAWnb,OAZnB,KAvBY,CAAC,YAAa,UAAW,WAqCpBqF,KAAI,SAACtD,EAAGhC,GAAJ,OACnB,kBAAC,IAAMyJ,SAAP,CAAgBlE,IAAG,iBAAYvF,IAC7B,yBAAKxG,UAAU,4BAAf,KACA,yBACEmJ,QAAS,kBACP6T,GAAc,SAAClM,GAAD,OACZ/U,OAAOC,OAAO,GAAI8U,EAAM,CACtB/E,IAAK,iBACLrC,MAAOlB,QAIbxI,UAAS,kCACY,mBAAnB+c,EAAWhR,KACXgR,EAAWrT,QAAUlB,EACjB,eACA,cAGLA,EAhBH,KAiBGoZ,EAAWpN,QAAO,SAACmD,GAAD,OAAOA,EAAEwK,iBAAmB3Z,KAAG/B,OAjBpD,UAsBN,yBAAKzG,UAAU,0CACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,qBACbC,SAAU,SAACsC,GAAD,OAAWrB,EAAU,CAAC,UAAUqB,KAC1C1C,MAAO,CAAC,UACRC,QAASpf,GAAkB,gBAC3BmE,UAAU,gCAIhB,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,qBACbC,SAAU,SAACsC,GAAD,OACR4B,EAAQ,CAAC,SAAU,WAAW5B,KAEhC1C,MAAO,CAAC,SAAU,WAClBC,QAASnf,GAAc,cACvBkE,UAAU,gCAIhB,yBACEmJ,QAAS,WACP,GAAe,SAAXtN,EAAmB,CACrB,IAAI2O,EAAWsX,EAAmBtN,QAChC,SAAChM,GAAD,OAAOA,EAAEgC,YAEPA,EAAS/D,SACXgb,EAAiBjX,EAAS,IAC1BmX,SAEkB,WAAX9lB,GAGT2jB,EAAc1jB,IAGlBkE,UAAU,yEAhBZ,WAsBJ,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CACEmb,aAAa,QACbC,SAAU,SAACsC,GAAD,OAAWjB,EAAayF,GAAcxE,KAChD1d,UAAU,qBACVgb,MAAOkH,GACPjH,QAAO,oBAAeuB,MAG1B,yBAAKxc,UAAU,uBACb,yBAAKA,UAAU,4BACb,kBAAC,KAAD,CACEoJ,SAAS,OACTnJ,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACR2D,MAAO,UAGX,2BACExV,UAAU,8BACV0J,MAAO1M,EACP0T,SAAU,SAACjD,GACTA,EAAEkD,UACFmM,EAAUrP,EAAEoD,OAAOnH,aAM7B,yBAAK1J,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEob,SAAU,SAACsC,GAAD,OAAWjB,EAAayF,GAAcxE,KAChD1d,UAAU,sCACVgb,MAAOkH,GACPjH,QAAO,oBAAeuB,KAExB,yBAAKxc,UAAU,yBACb,kBAAC,KAAD,CACEoJ,SAAS,OACTnJ,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACR2D,MAAO,UAGX,2BACE9L,MAAO1M,EACP0T,SAAU,SAACjD,GACTA,EAAEkD,UACFmM,EAAUrP,EAAEoD,OAAOnH,QAErB1J,UAAU,wBACVC,MAAO,CAAE0d,SAAU,eAM7B,yBAAK3d,UAAU,kBACb,kBAAC,KAAD,CACEC,MAAO,CAAE0d,SAAU,QACnBC,aAAc,WACZjB,EACED,EAAoB,EAAI,EACpBA,EAAoB,EACpBA,IAGRmB,cAAe,WACblB,EACED,EAAoB,GAAK,EACrBA,EAAoB,EACpBA,KAIR,yBAAK1c,UAAU,oBACb,2BAAOA,UAAU,yBACf,+BACE,4BACE,wBAAIA,UAAU,eACZ,kBAAC,GAAD,CACEkJ,MAAO,UACP4U,QACEgE,EACGjT,MAAMyO,GAAW,GAAIA,GAAW,IAChC9I,QAAO,SAAChM,GAAD,OAAOA,EAAEgC,YAAU/D,SAC7B6W,GAAW,GAAKA,GAAW,GAE7B5M,SAAU,SAACjD,GACTsU,GAAsB,SAACjR,GAErB,IADA,IAAIuM,EAAG,aAAOvM,GAERtK,EAAI8W,GAAW,GACnB9W,EAAI8W,GAAW,GACf9W,IAEA6W,EAAI7W,GAAGgE,SAAWiD,EAAEoD,OAAOiN,QAE7B,OAAOT,SAKf,wBAAIrd,UAAU,wCAAd,eAGA,wBAAIA,UAAU,qDACXwd,GAAQd,IAEVc,GAAQ1R,KAAI,SAACsW,EAAGC,GAAJ,OACX,wBACEriB,UAAU,oDACV+L,IAAG,iBAAYsW,IAEf,6BAAMD,SAKd,+BACGN,EAAmBrb,OAClBqb,EACGjT,MAAmB,GAAZmH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GACvClK,KAAI,SAACtD,EAAGhC,GAAJ,OACH,wBACExG,UAAU,2BACV+L,IAAG,yBAAoBvF,IAEvB,wBAAIxG,UAAU,eACZ,kBAAC,GAAD,CACEkJ,MAAO,UACP4U,QAAStV,EAAEgC,SACXkG,SAAU,SAACjD,GACTsU,GAAsB,SAACjR,GACrB,IAAIuM,EAAG,aAAOvM,GAGd,OAFAuM,EAAiB,GAAZrH,EAAO,GAASxP,GAAGgE,SACtBiD,EAAEoD,OAAOiN,QACJT,SAKf,wBAAIpd,MAAO,CAAEkP,WAAY,WACvB,yBACEnP,UAAU,OACVC,MAAO,CAAE0d,SAAU,UAElBnV,EAAEqX,aAEL,yBAAK7f,UAAU,UACb,yBACEA,UAAU,8BACVmJ,QAAS,WACPsY,EAAiBjZ,GACjBmZ,MAJJ,QASA,yBAAK3hB,UAAU,QAAf,KACA,yBACEA,UAAU,6BACVmJ,QAAO,sBAAE,4BAAAhB,EAAA,sErCpKJpE,EqCsKD,CAACyE,EAAE+I,KrCrKlCjR,EAAgB,2BAA4B,CAAEyD,MAAKd,OqCsKpB,CAAE+c,OAAQ,aAHL,QACHhf,EADG,QAKC0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,aAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,wBACPC,QACE,qCACFvB,KAAM,aAIZshB,IAAYD,IAzBL,iCrCpKL,IAACpZ,IqCoKI,QAFX,YAkCJ,wBACE/D,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGc,WAAnBlU,EAAEwZ,aACD,yBAAK/hB,MAAO,CAAE0d,SAAU,UACtB,yBACE3d,UAAU,2CACVmJ,QAAS,SAACsE,GACRH,EAAQC,KAAR,iBACY/E,EAAEM,SADd,YAC0BN,EAAEiL,eAI7BjL,EAAEhD,QAAQ9D,SAIf,yBACE1B,UAAU,+CACVmJ,QAAS,SAACsE,GACR,IAAIoD,EAASpD,EAAE6J,cAEbzG,EAAO0G,UAAUC,SACf,gBAGF3G,EAAO0G,UAAUE,OAAO,gBAExB5G,EAAO0G,UAAUG,IAAI,kBAIxBlP,EAAEhD,QAAQxD,UAIjB,wBACEhC,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGLlU,EAAEhD,QAAQrJ,OACT,yBAAK8D,MAAO,CAAEwK,aAAc,SAC1B,kBAAC,IAAD,CACEtK,MACuB,mBAArBqI,EAAEhD,QAAQrJ,OACN,OACqB,cAArBqM,EAAEhD,QAAQrJ,OACV,QACqB,YAArBqM,EAAEhD,QAAQrJ,OACV,sBACA,OAENiE,IAAI,WACJC,KAAM,MAIV,KAGJ,wBACEL,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGN,yBAAKzc,MAAO,CAAEkP,WAAY,WACxB,yBAAKnP,UAAU,uBACb,uCACA,sCAEF,yBAAKA,UAAU,kBACb,yBAAKC,MAAO,CAAEkP,WAAY,WACvB4E,KAAKC,OACJ,IAAIvV,KAAK+J,EAAEyX,YACX,wBAEF,yBAAKhgB,MAAO,CAAEkP,WAAY,WACvB4E,KAAKC,OACJ,IAAIvV,KAAK+J,EAAE0X,UACX,6BAOZ,wBACElgB,UAAS,UACM,cAAbwI,EAAEwX,OACE,aACa,YAAbxX,EAAEwX,OACF,cACA,cALG,YAOe,IAAtBtD,EACI,eACA,2BAGQ,cAAblU,EAAEwX,OACC,SACa,YAAbxX,EAAEwX,OACF,WACAxX,EAAEwX,YAKd,4BACE,wBAAIhC,QAAS,EAAGhe,UAAU,qBAA1B,yBAoDd,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,YACb,kBAAC,GAAD,CACE0P,MAAO1F,KAAK2K,KAAKmN,EAAmBrb,OAAS,GAC7CkB,QAASqO,EACTrG,WAAYsG,aCpJfvR,GAhaO,SAAC,GAAmC,IAAjC4d,EAAgC,EAAhCA,iBAAkBvD,EAAc,EAAdA,QAAc,EACrB9Y,mBAAS,CACzCvE,OAAQ,GACRM,QAAS,GACTsP,UAAW,EACXD,WAAY,EACZ2Q,aAAc,GACdG,eAAgB,GAChBI,cAAe,GACftC,WAAYxhB,KAAKC,MACjBwhB,SAAUzhB,KAAKC,MACf6Q,YAAa,GACbzG,SAAU,GACVtD,QAAS,GACTpI,MAAO,KAd8C,mBAChDuH,EADgD,KACrC6d,EADqC,OAiBzBvc,oBAAS,GAjBgB,mBAiBhD4B,EAjBgD,KAiBvCI,EAjBuC,KAmBvD7B,qBAAU,WACRoc,GAAa,SAAC1R,GAAD,OAAU/U,OAAOC,OAAO,GAAI8U,EAAMwR,QAC9C,CAACA,IAEJlc,qBAAU,WACR3G,OAAO4X,SAAS,EAAG,KAClB,IAEH,IAAMoL,EAAkB,CAAC,YAAa,UAAW,WAEjD,OACE,yBAAKziB,UAAU,6BACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,qCAAf,mBACA,yBAAKA,UAAU,kBAAf,4BAEF,yBAAKA,UAAU,UAqBb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,uBAAf,eACA,yBAAKA,UAAU,kBACb,8BACE0J,MAAO/E,EAAUkb,YAAclb,EAAUkb,YAAc,GACvDnP,SAAU,SAACjD,GACTA,EAAEkD,UACF6R,GAAa,SAAC1R,GAAD,OACX/U,OAAOC,OAAO,GAAI8U,EAAM,CAAE+O,YAAapS,EAAEoD,OAAOnH,YAGpD1J,UAAU,uBACVC,MAAO,CAAEb,OAAQ,cAKzB,yBAAKY,UAAU,uBACb,yBAAKA,UAAU,mCACZ2E,EAAUqd,cAEb,yBAAKhiB,UAAU,8BACb,8BACE0J,MACE/E,EAAUa,QACqB,WAA3Bb,EAAUqd,aACRrd,EAAUa,QAAQ9D,OAClBiD,EAAUa,QAAQxD,QACpB,GAEN0O,SAAU,SAACjD,GACTA,EAAEkD,UACF,IAAIC,EAAOnD,EAAEoD,OAAOnH,MACpB,GAAIkH,EAAKgF,MAAM,KAAKnP,QAAU,IAC5B,GAA+B,WAA3B9B,EAAUqd,aAA2B,CACvC,IAAIU,EAAU,eAAQ/d,EAAUa,SAChCkd,EAAWhhB,OAASkP,EACpB4R,GAAa,SAAC1R,GAAD,OACX/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEtL,QAASkd,WAEhC,CACL,IAAIA,EAAU,eAAQ/d,EAAUa,SAChCkd,EAAW1gB,QAAU4O,EACrB4R,GAAa,SAAC1R,GAAD,OACX/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEtL,QAASkd,SAK3C1iB,UAAU,uBACVC,MAAO,CAAEb,OAAQ,YAIrB,yBACEY,UAAS,iBACP2E,EAAUqd,aACqB,WAA3Brd,EAAUqd,aACRrd,EAAUa,QAAQ9D,OAAOkU,MAAM,KAAKnP,QAAU,IAC5C,aACA,cACF9B,EAAUa,QAAQxD,QAAQ4T,MAAM,KAAKnP,QAAU,IAC/C,aACA,cACF,KAGL9B,EAAUa,QAAQ9D,OACfiD,EAAUa,QAAQ9D,OAAO+E,OACvB,IAAM9B,EAAUa,QAAQ9D,OAAOkU,MAAM,KAAKnP,OAC1C,IACF9B,EAAUa,QAAQxD,QAClB2C,EAAUa,QAAQxD,QAAQyE,OACxB,IAAM9B,EAAUa,QAAQxD,QAAQ4T,MAAM,KAAKnP,OAC3C,IACF,GAAI,IArBV,eAyB0B,WAA3B9B,EAAUqd,cACT,yBAAKhiB,UAAU,wCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,UAAf,WAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,SACbnb,UAAU,mBACVib,QACEtW,EAAUa,QAAQrJ,OACd2D,EAAQgO,MACN,SAACtF,GAAD,OAAOA,EAAEvJ,OAAS0F,EAAUa,QAAQrJ,UACpC4D,QACF,SAENqb,SAAU,SAACsC,GACT,IAAIlY,EAAO,eAAQb,EAAUa,SAC7BA,EAAQrJ,OAAS2D,EAAQ4d,GAAOze,KAChCujB,GAAa,SAAC1R,GAAD,OACX/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEtL,QAASA,QAGvCwV,MAAOlb,EAAQgM,KAAI,SAACtD,GAAD,OAAOA,EAAEzI,iBAQxC,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,kBAAf,cACA,yBAAKA,UAAU,kBACb,kBAAC,KAAD,CACE0J,MAAOqK,KAAKC,OACV,IAAIvV,KAAKkG,EAAUsb,YACnB,cAEFK,UAAW,SAAChZ,GAAD,OACT,yBAAKtH,UAAU,2BACb,kBAAC,KAAD,CACEC,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,2CACMlG,EADN,CAEEtH,UAAU,8BACVgR,YAAY,kBAIlBuP,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAIrH,EAAI,IAAI1a,KAAKkG,EAAUsb,YACvBQ,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClB3H,EAAE4H,YAAYN,GACdtH,EAAE6H,SAASL,GACXxH,EAAE8H,QAAQJ,GACV2B,GAAa,SAAC1R,GAAD,OACX/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEmP,WAAY9G,EAAE+H,qBAOpD,yBAAKlhB,UAAU,yBACb,yBAAKA,UAAU,kBAAf,YACA,yBAAKA,UAAU,kBACb,kBAAC,KAAD,CACE0J,MAAOqK,KAAKC,OACV,IAAIvV,KAAKkG,EAAUub,UACnB,cAEFI,UAAW,SAAChZ,GAAD,OACT,yBAAKtH,UAAU,2BACb,kBAAC,KAAD,CACEC,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,2CACMlG,EADN,CAEEtH,UAAU,8BACVgR,YAAY,kBAIlBuP,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAIrH,EAAI,IAAI1a,KAAKkG,EAAUub,UACvBO,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClB3H,EAAE4H,YAAYN,GACdtH,EAAE6H,SAASL,GACXxH,EAAE8H,QAAQJ,GACV2B,GAAa,SAAC1R,GAAD,OACX/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEoP,SAAU/G,EAAE+H,sBAQpD,yBAAKlhB,UAAU,kBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,kBAAf,cACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,wCACb,kBAAC,KAAD,CACEC,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,kBAAC,KAAD,CACE2T,UAAW,KACXC,UAAW,KACXphB,UAAU,aACV0Q,SAAU,SAACvI,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyN,MAAM,KADhB,mBACA7L,EADA,KACGG,EADH,KAEDmX,EAAU,IAAI5iB,KAAKkG,EAAUsb,YACjCoB,EAAQC,SAASvX,GACjBsX,EAAQE,WAAWrX,GACnBsY,GAAa,SAAC1R,GAAD,OACX/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBmP,WAAYoB,EAAQH,iBAK5BxX,MAAO,IAAIjL,KAAKkG,EAAUsb,iBAKlC,yBAAKjgB,UAAU,yBACb,yBAAKA,UAAU,kBAAf,YACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,wCACb,kBAAC,KAAD,CACEC,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,kBAAC,KAAD,CACE2T,UAAW,KACXC,UAAW,KACXphB,UAAU,aACV0Q,SAAU,SAACvI,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyN,MAAM,KADhB,mBACA7L,EADA,KACGG,EADH,KAEDmX,EAAU,IAAI5iB,KAAKkG,EAAUub,UACjCmB,EAAQC,SAASvX,GACjBsX,EAAQE,WAAWrX,GACnBsY,GAAa,SAAC1R,GAAD,OACX/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBoP,SAAUmB,EAAQH,iBAK1BxX,MAAO,IAAIjL,KAAKkG,EAAUub,kBAQxC,yBAAKlgB,UAAU,uBACb,yBAAKA,UAAU,eAAf,UACA,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,SACbC,SAAU,SAACsC,GAAD,OACR8E,GAAa,SAAC1R,GAAD,OACX/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBkP,OAAQyC,EAAgB/E,SAI9B1d,UAAU,yBACVgb,MAAOyH,EACPxH,QAAStW,EAAUqb,OAASrb,EAAUqb,OAAS,iBAQ7D,yBAAKhgB,UAAU,eACb,yBAAKA,UAAU,kBACb,yBACEA,UAAU,4EACVmJ,QAAS4V,GAFX,UAMA,yBACE/e,UAAU,kEACVmJ,QAAO,sBAAE,4BAAAhB,EAAA,6DACPF,GAAW,GADJ,SAESuZ,GAAK7c,GAFd,OAEH3D,EAFG,OAGPiH,GAAW,GACPjH,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,cAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,oBACPC,QAAS,qCACTvB,KAAM,aAGVijB,KAtBK,4CA0BT,kBAAC,GAAD,CACE7V,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,QAASA,EACTxH,KAAM,KAxCV,YC0SKyH,oBARf,SAAclM,EAAOmM,GACnB,OAAO,aACLpM,YAAaC,EAAMD,YACnBO,QAASN,EAAMM,SACZ6L,KAIQD,EAppBS,SAAC,GAAuC,IAArCnM,EAAoC,EAApCA,YAAaojB,EAAuB,EAAvBA,QAAS7iB,EAAc,EAAdA,QAAc,EAC3B+J,mBAAS,CACzC4Z,YAAa,GACbI,WAAYxhB,KAAKC,MACjBwhB,SAAUzhB,KAAKC,MACfsjB,aAAc,GACdhC,OAAQ,cANmD,mBACtDrb,EADsD,KAC3C6d,EAD2C,OAQrCvc,mBAAS,GAR4B,mBAQtD+P,EARsD,KAQhDC,EARgD,OAU/BhQ,mBAAS,IAVsB,mBAUtDyF,EAVsD,KAU7CC,EAV6C,OAY/B1F,oBAAS,GAZsB,mBAYtD4B,EAZsD,KAY7CI,EAZ6C,OAa3BhC,mBAAS,QAbkB,mBAatDuW,EAbsD,KAa3CC,EAb2C,OAcjCxW,mBAAS,IAdwB,mBActDjJ,EAdsD,KAc9C8f,EAd8C,OAezB7W,mBAAS,IAfgB,mBAetD0c,EAfsD,KAe1CC,EAf0C,KAgBvDC,EAAa,CAAC,OAAQ,QAAS,UAhBwB,EAiBX5c,mBAAS,GAjBE,mBAiBtDyW,EAjBsD,KAiBnCC,EAjBmC,OAkB/B1W,mBAAS,IAlBsB,mBAkBtDtJ,EAlBsD,KAkB7CqV,EAlB6C,KAoB7D5L,qBAAU,WAAM,4CACd,4BAAA+B,EAAA,sEACkBzE,IADlB,QACMof,EADN,QAEWpa,OACPsJ,EAAW8Q,GAHf,4CADc,uBAAC,WAAD,wBAad9W,KACC,IAEH5F,qBAAU,WACR,IAAIiX,EAAM,GACNrgB,EACgB,SAAdwf,EACEzgB,OAAOsY,OAAO1Y,GAAa8K,QAC7B9J,EAAQ4L,SAAQ,SAACC,GAEb7M,EAAY6M,EAAEiJ,QAAQlV,aACnB+N,cACAsJ,SAAS5W,EAAOsN,gBAEnB+S,EAAI9P,KAAK/E,MAIQ,UAAdgU,EACT7f,EAAQ4L,SAAQ,SAACC,GAEbtM,EAAQsM,EAAEM,WACV5M,EAAQsM,EAAEM,UAAUyG,YACjBjF,cACAsJ,SAAS5W,EAAOsN,gBAEnB+S,EAAI9P,KAAK/E,MAGU,WAAdgU,GACT7f,EAAQ4L,SAAQ,SAACC,GACXA,EAAE9G,OAAO4I,cAAcsJ,SAAS5W,EAAOsN,gBACzC+S,EAAI9P,KAAK/E,MAKf6U,EAAMA,EAAIzS,OAAJ,aAAejO,IAGvBimB,EAAcvF,EAAIvR,KAAI,SAACtD,GAAD,OAAOzM,OAAOC,OAAO,GAAIwM,EAAG,CAAEgC,UAAU,UAC7D,CAACxN,EAAQL,IAEZ,IAAI2gB,EAAa,CAAc,GAAZtH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GAC/CsH,EAAW,IAAMqF,EAAWlc,SAC9B6W,EAAW,GAAKA,EAAW,IAAMA,EAAW,GAAKqF,EAAWlc,SAG9D,IAAM+W,EAAU,CAAC,aAAc,SAAU,SAAU,YAAa,YAE1DjD,EAAc,CAClB,CAAEC,MAAO7V,EAAUkb,YAAanX,MAAO,2BACvC,CACE8R,MAAO7V,EAAUsb,WAAatb,EAAUub,SACxCxX,MAAO,sCAET,CACE8R,MAAO7V,EAAUsb,aAAetb,EAAUub,SAC1CxX,MAAO,2BAET,CACE8R,MAAOmI,EAAWnO,QAAO,SAAChM,GAAD,OAAOA,EAAEgC,YAAU/D,OAC5CiC,MAAO,wBAGX,OACE,yBAAK1I,UAAU,6BACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,qCAAf,mBAGA,yBAAKA,UAAU,kBAAf,sCAMN,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,uBAAf,eACA,yBAAKA,UAAU,kBACb,8BACE0J,MAAO/E,EAAUkb,YAAclb,EAAUkb,YAAc,GACvDnP,SAAU,SAACjD,GACTA,EAAEkD,UACF6R,GAAa,SAAC1R,GAAD,OACX/U,OAAOC,OAAO,GAAI8U,EAAM,CAAE+O,YAAapS,EAAEoD,OAAOnH,YAGpD1J,UAAU,uBACVC,MAAO,CAAEb,OAAQ,cAKzB,yBAAKY,UAAU,kBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBAAf,cACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBAAgBC,MAAO,CAAEyH,MAAO,UAC7C,kBAAC,KAAD,CACEgC,MAAOqK,KAAKC,OACV,IAAIvV,KAAKkG,EAAUsb,YACnB,cAEFK,UAAW,SAAChZ,GAAD,OACT,yBAAKtH,UAAU,qBACb,kBAAC,KAAD,CACEC,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,2CACMlG,EADN,CAEEtH,UAAU,8BACVgR,YAAY,kBAIlBuP,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAIrH,EAAI,IAAI1a,KAAKkG,EAAUsb,YACvBQ,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClB3H,EAAE4H,YAAYN,GACdtH,EAAE6H,SAASL,GACXxH,EAAE8H,QAAQJ,GACV2B,GAAa,SAAC1R,GAAD,OACX/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEmP,WAAY9G,EAAE+H,oBAMlD,yBACElhB,UAAU,yCACVC,MAAO,CAAEyH,MAAO,UAEhB,kBAAC,KAAD,CACEzH,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,kBAAC,KAAD,CACE2T,UAAW,KACXC,UAAW,KACXphB,UAAU,aACV0Q,SAAU,SAACvI,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyN,MAAM,KADhB,mBACA7L,EADA,KACGG,EADH,KAEDmX,EAAU,IAAI5iB,KAAKkG,EAAUsb,YACjCoB,EAAQC,SAASvX,GACjBsX,EAAQE,WAAWrX,GACnBsY,GAAa,SAAC1R,GAAD,OACX/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBmP,WAAYoB,EAAQH,iBAK5BxX,MAAO,IAAIjL,KAAKkG,EAAUsb,kBAMpC,yBAAKjgB,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,kBAAf,YACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBAAgBC,MAAO,CAAEyH,MAAO,UAC7C,kBAAC,KAAD,CACEgC,MAAOqK,KAAKC,OACV,IAAIvV,KAAKkG,EAAUub,UACnB,cAEFI,UAAW,SAAChZ,GAAD,OACT,yBAAKtH,UAAU,qBACb,kBAAC,KAAD,CACEC,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,2CACMlG,EADN,CAEEtH,UAAU,8BACVgR,YAAY,kBAIlBuP,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAIrH,EAAI,IAAI1a,KAAKkG,EAAUub,UACvBO,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClB3H,EAAE4H,YAAYN,GACdtH,EAAE6H,SAASL,GACXxH,EAAE8H,QAAQJ,GACV2B,GAAa,SAAC1R,GAAD,OACX/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEoP,SAAU/G,EAAE+H,oBAMhD,yBACElhB,UAAU,yCACVC,MAAO,CAAEyH,MAAO,UAEhB,kBAAC,KAAD,CACEzH,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,kBAAC,KAAD,CACE2T,UAAW,KACXC,UAAW,KACXphB,UAAU,aACV0Q,SAAU,SAACvI,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyN,MAAM,KADhB,mBACA7L,EADA,KACGG,EADH,KAEDmX,EAAU,IAAI5iB,KAAKkG,EAAUub,UACjCmB,EAAQC,SAASvX,GACjBsX,EAAQE,WAAWrX,GACnBsY,GAAa,SAAC1R,GAAD,OACX/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBoP,SAAUmB,EAAQH,iBAK1BxX,MAAO,IAAIjL,KAAKkG,EAAUub,kBAQxC,yBAAKlgB,UAAU,+BAAf,6BAGA,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CACEob,SAAU,SAACsC,GAAD,OAAWjB,EAAaoG,EAAWnF,KAC7C1d,UAAU,mEACVgb,MAAO6H,EACP5H,QAAO,oBAAeuB,KAExB,yBAAKxc,UAAU,wBAAwBC,MAAO,CAAEgP,SAAU,UACxD,kBAAC,KAAD,CACE7F,SAAS,OACTnJ,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACR2D,MAAO,UAGX,2BACE9L,MAAO1M,EACP0T,SAAU,SAACjD,GACTA,EAAEkD,UACFmM,EAAUrP,EAAEoD,OAAOnH,QAErB1J,UAAU,mCAKlB,yBAAKA,UAAU,UACb,yBAAKA,UAAU,kBACb,kBAAC,KAAD,CACEC,MAAO,CAAE0d,SAAU,QACnBC,aAAc,WACZjB,EACED,EAAoB,EAAI,EACpBA,EAAoB,EACpBA,IAGRmB,cAAe,WACblB,EACED,EAAoB,GAAK,EACrBA,EAAoB,EACpBA,KAIR,yBAAK1c,UAAU,oBACb,2BAAOA,UAAU,yBACf,+BACE,4BACE,wBAAIA,UAAU,eACZ,kBAAC,GAAD,CACEkJ,MAAO,UACP4U,QACE6E,EACG9T,MAAMyO,EAAW,GAAIA,EAAW,IAChC9I,QAAO,SAAChM,GAAD,OAAOA,EAAEgC,YAAU/D,SAC7B6W,EAAW,GAAKA,EAAW,GAE7B5M,SAAU,SAACjD,GACTmV,GAAc,SAAC9R,GAEb,IADA,IAAIuM,EAAG,aAAOvM,GAERtK,EAAI8W,EAAW,GACnB9W,EAAI8W,EAAW,GACf9W,IAEA6W,EAAI7W,GAAGgE,SAAWiD,EAAEoD,OAAOiN,QAE7B,OAAOT,SAKf,wBAAIrd,UAAU,wCACZ,yBAAKA,UAAU,qBAAf,aACA,yBAAKA,UAAU,qBAAf,OAEF,wBAAIA,UAAU,qDACXwd,EAAQd,IAEVc,EAAQ1R,KAAI,SAACsW,GAAD,OACX,wBAAIpiB,UAAU,qDACZ,6BAAMoiB,SAKd,+BACGO,EAAWlc,OACVkc,EACG9T,MAAmB,GAAZmH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GACvClK,KAAI,SAACtD,EAAGhC,GAAJ,OACH,wBACExG,UAAU,2BACV+L,IAAG,yBAAoBvF,IAEvB,wBAAIxG,UAAU,eACZ,kBAAC,GAAD,CACEkJ,MAAO,UACP4U,QAAStV,EAAEgC,SACXkG,SAAU,SAACjD,GACTmV,GAAc,SAAC9R,GACb,IAAIuM,EAAG,aAAOvM,GAGd,OAFAuM,EAAiB,GAAZrH,EAAO,GAASxP,GAAGgE,SACtBiD,EAAEoD,OAAOiN,QACJT,SAKf,wBAAIpd,MAAO,CAAEkP,WAAY,WACvB,yBAAKnP,UAAU,uBACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb1U,OAAOsY,OAAO1Y,GAAa8K,OACvB9K,EAAY6M,EAAEiJ,QAAQjV,MACtB,GAHS,SAQpBT,OAAOsY,OAAO1Y,GAAa8K,OAC1B,yBAAKzG,UAAU,sCACb,yBAAKA,UAAU,mBACZrE,EAAY6M,EAAEiJ,QAAQlV,cAEzB,6BAAMZ,EAAY6M,EAAEiJ,QAAQ/U,QAG9B,IAGJ,wBACEsD,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGLxgB,EAAQsM,EAAEM,UACP5M,EAAQsM,EAAEM,UAAUyG,YACpB,IAEN,wBACEvP,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGJlU,EAAExG,QAmBF,yBACEhC,UAAU,+CACVmJ,QAAS,SAACsE,GACR,IAAIoD,EAASpD,EAAE6J,cAEbzG,EAAO0G,UAAUC,SAAS,gBAE1B3G,EAAO0G,UAAUE,OAAO,gBAExB5G,EAAO0G,UAAUG,IAAI,kBAIxBlP,EAAExG,SA/BL,yBAAK/B,MAAO,CAAE0d,SAAU,UACtB,yBACE3d,UAAU,+CACVmJ,QAAS,SAACsE,GACR,IAAIoD,EAASpD,EAAE6J,cAEbzG,EAAO0G,UAAUC,SAAS,gBAE1B3G,EAAO0G,UAAUE,OAAO,gBAExB5G,EAAO0G,UAAUG,IAAI,kBAIxBlP,EAAE9G,UAqBX,wBACE1B,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGLlU,EAAErM,OACD,yBAAK8D,MAAO,CAAEwK,aAAc,SAC1B,kBAAC,IAAD,CACEtK,MACe,mBAAbqI,EAAErM,OACE,OACa,cAAbqM,EAAErM,OACF,QACa,YAAbqM,EAAErM,OACF,sBACA,OAENiE,IAAI,WACJC,KAAM,MAIV,KAGJ,wBACEJ,MAAO,CAAEkP,WAAY,UACrBnP,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGN,6BACG3I,KAAKC,OACJ,IAAIvV,KAAK+J,EAAEuL,MACX,0BAIN,wBACE/T,UAAS,UACNwI,EAAEuV,SAA0B,cAAf,aADP,YAGe,IAAtBrB,EACI,eACA,2BAGLlU,EAAEuV,SAAW,SAAW,oBAKjC,4BACE,wBAAIC,QAAS,EAAGhe,UAAU,qBAA1B,yBAUd,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,YACb,kBAAC,GAAD,CACE0P,MAAO1F,KAAK2K,KAAKgO,EAAWlc,OAAS,GACrCkB,QAASqO,EACTrG,WAAYsG,MAIlB,yBAAKjW,UAAU,oBACb,yBACEC,MAAO,CAAEb,OAAQ,OAAQ8R,QAASxF,EAAU,EAAI,GAChD1L,UAAU,sDAET0L,GAEH,yBAAK1L,UAAU,kBACb,yBACEA,UAAU,4EACVmJ,QAAS,kBAAM4V,MAFjB,UAMA,yBACE/e,UAAU,kEACVmJ,QAAO,sBAAE,gCAAAhB,EAAA,2DACHyS,EAAUL,EAAY/F,QAAO,SAAChM,GAAD,OAAQA,EAAEgS,UAC/B/T,OAFL,gBAGLkF,EAAWiP,EAAQ,GAAGlS,OAHjB,8BAKDqa,EAASJ,EACVnO,QAAO,SAAChM,GAAD,OAAOA,EAAEgC,YAChBsB,KAAI,SAACtD,GAAD,OACHzM,OAAOC,OAAO,GAAI2I,EAAW,CAC3Bqd,aAAcxZ,EAAExG,QAAU,UAAY,SACtCwD,QAASgD,EAAExG,QACP,CAAEA,QAASwG,EAAExG,SACb,CAAEN,OAAQ8G,EAAE9G,OAAQvF,OAAQqM,EAAErM,QAClCsX,WAAYjL,EAAE+I,IACdoF,eAAgBnO,EAAEiJ,OAClBlC,YAAa/G,EAAE+G,YACfC,aAAchH,EAAEgH,aAChBF,aAAc9G,EAAE8G,aAChBuD,mBAAoBrK,EAAEqK,mBACtB/J,SAAUN,EAAEM,cAGlBb,GAAW,GAtBN,SvC/Yd3H,EAAgB,2BuCsa0ByiB,GAvB5B,OAuBD/hB,EAvBC,OAwBLiH,GAAW,GACPjH,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,cAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QAAS,uCACTvB,KAAM,aAGVijB,KA3CG,6CAgDT,kBAAC,GAAD,CACE7V,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,QAASA,EACTxH,KAAM,KA9DV,eCfG2iB,GAvjBO,SAAC,GAIhB,IAHLC,EAGI,EAHJA,oBACAC,EAEI,EAFJA,2BACAC,EACI,EADJA,6BACI,EACwBld,mBAAS,IADjC,mBACGpK,EADH,KACWwgB,EADX,OAEoBpW,mBAAS,IAF7B,mBAEGnK,EAFH,KAESwjB,EAFT,OAG8BrZ,mBAAS,WAHvC,mBAGGuW,EAHH,KAGcC,EAHd,OAI8CxW,mBAAS,GAJvD,mBAIGyW,EAJH,KAIsBC,EAJtB,OAKoB1W,mBAAS,GAL7B,mBAKG+P,EALH,KAKSC,EALT,OAMgChQ,mBAAS,IANzC,mBAMGsZ,EANH,KAMeC,EANf,OAOwBvZ,mBAAS,IAPjC,mBAOGjJ,EAPH,KAOW8f,EAPX,OAQgC7W,mBAAS,CAAE8F,IAAK,GAAIrC,MAAO,KAR3D,mBAQGqT,EARH,KAQeC,EARf,OASsC/W,mBAAS,IAT/C,mBASGnJ,EATH,KASkBsmB,EATlB,OAUsDnd,mBAAS,IAV/D,mBAUGod,EAVH,KAU0BC,EAV1B,OAW0Brd,oBAAS,GAXnC,mBAWGkX,EAXH,KAWYC,EAXZ,KAaJhX,qBAAU,WAAM,4CACd,4BAAA+B,EAAA,sEACmBtD,KADnB,QACMrE,EADN,QAEYkI,OACR0a,EACE5iB,EAAK8V,UAAUxK,KAAI,SAACtD,GAAD,OAAOzM,OAAOC,OAAO,GAAIwM,EAAG,CAAEgC,UAAU,QAJjE,4CADc,uBAAC,WAAD,wBAUdwB,KACC,CAACmR,IAEJ,IAAM4C,GAAQ,CAAC,MAAO,SAEtB3Z,qBAAU,WACR,IAAIiX,EAAG,aAAOvgB,GACVA,EAAc2J,SACZzJ,IACgB,YAAdwf,EACFa,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OACfA,EAAE+a,QAAQjZ,cAAcsJ,SAAS5W,EAAOsN,kBAEnB,gBAAdkS,IACTa,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OACfA,EAAEqX,YAAYvV,cAAcsJ,SAAS5W,EAAOsN,oBAK9CiV,IACFlC,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OAAOA,EAAE1M,OAASyjB,MAGjCxC,EAAWhR,MACbsR,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OAAOA,EAAEuU,EAAWhR,OAASgR,EAAWrT,UAG3D4Z,EAAyBjG,MAE1B,CAACrgB,EAAQuiB,EAAYziB,EAAeigB,IAGvC,IAAIO,GAAa,CAAc,GAAZtH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GAC/CsH,GAAW,IAAM+F,EAAsB5c,SACzC6W,GAAW,GACTA,GAAW,IAAMA,GAAW,GAAK+F,EAAsB5c,SAG3D,IAEM8W,GAAW,uCAAG,4CAAApV,EAAA,0FAEhBqX,EAAc1jB,GAED,SAAXD,EAJc,iBAKZ2O,EAAW6Y,EAAsB7O,QAAO,SAAChM,GAAD,OAAOA,EAAEgC,aACxC/D,SACXwc,EAAoBzY,EAAS,IAC7B0Y,KARc,0BAUI,WAAXrnB,EAVO,sBAWZ2O,EAAW6Y,EAAsB7O,QAAO,SAAChM,GAAD,OAAOA,EAAEgC,aACxC/D,OAZG,kCAaEzB,GACdwF,EAASsB,KAAI,SAACtD,GAAD,OAAOA,EAAE+I,OACtB,CAAEyO,OAAQ,YAfE,SAaVhf,EAbU,QAiBN0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,cAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iCACPC,QAAS,mDACTvB,KAAM,aAGVyD,EAAM8I,SAAS,CACbvM,KAAM,cACNiB,aAAc,CAAEkG,OAAQxE,KAAKC,UAGjC0e,GAAYD,GAxCE,4CAAH,qDA6CjB,OACE,yBAAKnd,UAAU,+BACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCAAf,iBAGA,yBAAKA,UAAU,kBAAf,0CAIF,yBACEA,UAAU,qDACVmJ,QAAS,kBAAMga,MAFjB,aAQJ,yBAAKnjB,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,0BACb,yBACEmJ,QAAS,WACPqW,EAAc,IACdF,EAAQ,IACRtC,EAAc,CAAEjR,IAAK,GAAIrC,MAAO,MAElC1J,UAAS,kCACNuf,GAAexC,EAAWhR,IAAuB,YAAjB,iBAPrC,QAUQjP,EAAc2J,OAVtB,KAvEK,CAAC,OAAQ,UAAW,WAmFfqF,KAAI,SAACtD,EAAGhC,GAAJ,OACZ,kBAAC,IAAMyJ,SAAP,CAAgBlE,IAAG,iBAAYvF,IAC7B,yBAAKxG,UAAU,4BAAf,KACA,yBACEmJ,QAAS,kBACP6T,GAAc,SAAClM,GAAD,OACZ/U,OAAOC,OAAO,CAAE+P,IAAK,SAAUrC,MAAOlB,QAG1CxI,UAAS,kCACY,WAAnB+c,EAAWhR,KAAoBgR,EAAWrT,QAAUlB,EAChD,eACA,cAGLA,EAZH,KAYQ1L,EAAc0X,QAAO,SAACmD,GAAD,OAAOA,EAAEqI,SAAWxX,KAAG/B,OAZpD,UAiBN,yBAAKzG,UAAU,0CACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,qBACbC,SAAU,SAACsC,GAAD,OAAWrB,EAAU,CAAC,UAAUqB,KAC1C1C,MAAO,CAAC,UACRC,QAASpf,GAAkB,gBAC3BmE,UAAU,gCAIhB,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,qBACbC,SAAU,SAACsC,GAAD,OAAW4B,EAAQS,GAAMrC,KACnC1C,MAAO+E,GACP9E,QAASnf,GAAc,cACvBkE,UAAU,gCAIhB,yBACEmJ,QAAS,kBAAMoU,IAAY,IAC3Bvd,UAAU,yEAFZ,WAQJ,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CACEmb,aAAa,QACbC,SAAU,SAACsC,GAAD,OACRjB,EAAa,CAAC,UAAW,eAAeiB,KAE1C1d,UAAU,qBACVgb,MAAO,CAAC,UAAW,eACnBC,QAAO,oBAAeuB,MAG1B,yBAAKxc,UAAU,uBACb,yBAAKA,UAAU,4BACb,kBAAC,KAAD,CACEoJ,SAAS,OACTnJ,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACR2D,MAAO,UAGX,2BACExV,UAAU,8BACV0J,MAAO1M,EACP0T,SAAU,SAACjD,GACTA,EAAEkD,UACFmM,EAAUrP,EAAEoD,OAAOnH,aAM7B,yBAAK1J,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEob,SAAU,SAACsC,GAAD,OACRjB,EAAa,CAAC,UAAW,eAAeiB,KAE1C1d,UAAU,sCACVgb,MAAO,CAAC,UAAW,eACnBC,QAAO,oBAAeuB,KAExB,yBAAKxc,UAAU,yBACb,kBAAC,KAAD,CACEoJ,SAAS,OACTnJ,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACR2D,MAAO,UAGX,2BACE9L,MAAO1M,EACP0T,SAAU,SAACjD,GACTA,EAAEkD,UACFmM,EAAUrP,EAAEoD,OAAOnH,QAErB1J,UAAU,wBACVC,MAAO,CAAE0d,SAAU,eAM7B,yBAAK3d,UAAU,kBACb,kBAAC,KAAD,CACEC,MAAO,CAAE0d,SAAU,QACnBC,aAAc,WACZjB,EACED,EAAoB,EAAI,EACpBA,EAAoB,EACpBA,IAGRmB,cAAe,WACblB,EACED,EAAoB,GAAK,EACrBA,EAAoB,EACpBA,KAIR,yBAAK1c,UAAU,oBACb,2BAAOA,UAAU,yBACf,+BACE,4BACE,wBAAIA,UAAU,eACZ,kBAAC,GAAD,CACEkJ,MAAO,UACP4U,QACEuF,EACGxU,MAAMyO,GAAW,GAAIA,GAAW,IAChC9I,QAAO,SAAChM,GAAD,OAAOA,EAAEgC,YAAU/D,SAC7B6W,GAAW,GAAKA,GAAW,GAE7B5M,SAAU,SAACjD,GACT6V,GAAyB,SAACxS,GAExB,IADA,IAAIuM,EAAG,aAAOvM,GAERtK,EAAI8W,GAAW,GACnB9W,EAAI8W,GAAW,GACf9W,IAEA6W,EAAI7W,GAAGgE,SAAWiD,EAAEoD,OAAOiN,QAE7B,OAAOT,SAKf,wBAAIrd,UAAU,wCAAd,WAGA,wBAAIA,UAAU,qDAEV,CAAC,OAAQ,cAAe,WAAY,UAClC0c,IAIN,wBAAI1c,UAAU,qDACZ,sCAEF,wBAAIA,UAAU,qDACZ,6CAEF,wBAAIA,UAAU,qDACZ,0CAEF,wBAAIA,UAAU,qDACZ,0CAIN,+BACGqjB,EAAsB5c,OACrB4c,EACGxU,MAAmB,GAAZmH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GACvClK,KAAI,SAACtD,EAAGhC,GAAJ,OACH,wBACExG,UAAU,2BACV+L,IAAG,yBAAoBvF,IAEvB,wBAAIxG,UAAU,eACZ,kBAAC,GAAD,CACEkJ,MAAO,UACP4U,QAAStV,EAAEgC,SACXkG,SAAU,SAACjD,GACT6V,GAAyB,SAACxS,GACxB,IAAIuM,EAAG,aAAOvM,GAGd,OAFAuM,EAAiB,GAAZrH,EAAO,GAASxP,GAAGgE,SACtBiD,EAAEoD,OAAOiN,QACJT,SAKf,wBAAIpd,MAAO,CAAEkP,WAAY,WACvB,yBAAKnP,UAAU,QAAQwI,EAAE+a,SACzB,yBAAKvjB,UAAU,UACb,yBACEA,UAAU,8BACVmJ,QAAS,WACP8Z,EAAoBza,GACpB0a,MAJJ,QASA,yBAAKljB,UAAU,QAAf,KACA,yBACEA,UAAU,6BACVmJ,QAAO,sBAAE,4BAAAhB,EAAA,sEACSnD,GACd,CAACwD,EAAE+I,KACH,CAAEyO,OAAQ,YAHL,QACHhf,EADG,QAKC0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,cAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,2BACPC,QACE,wCACFvB,KAAM,aAGVyD,EAAM8I,SAAS,CACbvM,KAAM,cACNiB,aAAc,CAAEkG,OAAQxE,KAAKC,UAGjC0e,GAAYD,GA7BL,4CAFX,YAsCJ,wBACEnd,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGN,6BAAMlU,EAAE1M,OAEV,wBACEkE,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGN,yBACEzc,MAAO,CAAE0d,SAAU,SACnB3d,UAAU,+CACVmJ,QAAS,SAACsE,GACR,IAAIoD,EAASpD,EAAE6J,cAEbzG,EAAO0G,UAAUC,SAAS,gBAE1B3G,EAAO0G,UAAUE,OAAO,gBAExB5G,EAAO0G,UAAUG,IAAI,kBAIxBlP,EAAEqX,cAGP,wBACE7f,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGN,yBAAK1c,UAAU,eACb,yBAAKC,MAAO,CAAEyH,MAAO,SAArB,SACA,6BACE,yBAAKzH,MAAO,CAAEkP,WAAY,WACvB4E,KAAKC,OACJ,IAAIvV,KAAK+J,EAAEyX,YACX,2BAKR,yBAAKjgB,UAAU,UACb,yBAAKC,MAAO,CAAEyH,MAAO,SAArB,OACA,6BACE,yBAAKzH,MAAO,CAAEkP,WAAY,WACvB4E,KAAKC,OACJ,IAAIvV,KAAK+J,EAAE0X,UACX,4BAMV,wBACElgB,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGLlU,EAAEwX,YAKX,4BACE,wBAAIhC,QAAS,EAAGhe,UAAU,qBAA1B,yBA4Dd,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,YACb,kBAAC,GAAD,CACE0P,MAAO1F,KAAK2K,KAAK0O,EAAsB5c,OAAS,GAChDkB,QAASqO,EACTrG,WAAYsG,W,8BCnjBxBuN,GAAYC,cAAW,SAACle,GAAD,MAAY,CACvCme,UAAW,CACT,qCAAsC,CACpCC,OAAQ,aAKRpe,GAAQsW,aAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,mBAERC,UAAW,CACTD,KAAM,cA2BG4H,GAtBM,SAACtc,GACpB,IAAMuc,EAAUL,KAChB,OACE,kBAAC,KAAD,CAAkBje,MAAOA,IACvB,kBAAC,KAAD,iBACM+B,EADN,CAEEuc,QAASA,EACTC,UAAQ,EACRnlB,GAAG,gBACHolB,uBAAqB,EACrBC,YAAa,SAACrZ,GAAD,OACX,kBAACsZ,GAAA,EAAD,iBACMtZ,EADN,CAEEuZ,QAAQ,WACRlT,YAAa1J,EAAM0J,qBC0ShBlJ,oBARf,SAAclM,EAAOmM,GACnB,OAAO,aACLpM,YAAaC,EAAMD,YACnBS,KAAMR,EAAMQ,MACT2L,KAIQD,EApUU,SAAC,GAKnB,IAJLqc,EAII,EAJJA,oBACApF,EAGI,EAHJA,QACApjB,EAEI,EAFJA,YACAS,EACI,EADJA,KAEM2jB,EAAQ,CAAC,MAAO,SAElBqE,EAAc3lB,KAAKC,MAHnB,EAKoCuH,mBAAS,CAC/CnK,KAAM,GACNynB,QAAS,GACTtD,WAAYmE,EACZlE,SAAUkE,EACVC,UAAW,GACXxE,YAAa,GACbG,OAAQ,YAZN,mBAKG7iB,EALH,KAKiBmnB,EALjB,KAeEjE,EAAW,CAAC,OAAQ,UAAW,WAfjC,EAiB0Bpa,mBAAS,IAjBnC,mBAiBGyF,EAjBH,KAiBYC,EAjBZ,OAkB0B1F,oBAAS,GAlBnC,mBAkBG4B,EAlBH,KAkBYI,EAlBZ,KAoBEsS,EAAc,CAClB,CAAEC,MAAOrd,EAAaomB,QAAS7a,MAAO,uBACtC,CAAE8R,MAAOrd,EAAarB,KAAM4M,MAAO,4BACnC,CACE8R,MAAOrd,EAAaknB,UAAU5d,OAC9BiC,MAAO,gCAET,CAAE8R,MAAOrd,EAAa0iB,YAAanX,MAAO,4BAG5CtC,qBAAU,WACR3G,OAAO4X,SAAS,EAAG,KAClB,IAEHjR,qBAAU,WACRke,EAAgBH,KACf,CAACA,IAUJ,OACE,yBAAKnkB,UAAU,6BACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,qCAAf,qBAGA,yBAAKA,UAAU,kBAAf,+BAEF,yBAAKA,UAAU,SAASC,MAAO,CAAEgP,SAAU,UACzC,yBAAKjP,UAAU,uBACb,yBAAKA,UAAU,eAAf,WACA,yBAAKA,UAAU,UACb,2BACElE,KAAK,OACLkE,UAAU,yBACV0J,MAAOvM,EAAaomB,QACpB7S,SAAU,SAACjD,GACTA,EAAEkD,UACF2T,GAAgB,SAACxT,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEyS,QAAS9V,EAAEoD,OAAOnH,gBAMtD,yBAAK1J,UAAU,uBACb,yBAAKA,UAAU,eAAf,QACA,kBAAC,GAAD,CACEmb,aAAa,mBACbnb,UAAU,qBACVib,QAAS9d,EAAarB,KAAOqB,EAAarB,KAAO,SACjDkf,MAAO+E,EACP3E,SAAU,SAACsC,GAAD,OACR4G,GAAgB,SAACxT,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEhV,KAAMikB,EAAMrC,YAK9C,yBAAK1d,UAAU,uBACb,yBAAKA,UAAU,eAAf,mBACA,kBAAC,GAAD,CACE0J,MAAOvM,EAAaknB,UACpB3T,SAAU,SAACjD,EAAG8W,GACZD,GAAgB,SAACxT,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEuT,UAAWE,QAGzCvT,YAAa,qBACb9H,MAAO,UACPlJ,UAAU,sCACVwkB,QAASzoB,OAAOyc,KA3DE,CAC1BiM,IAAK,MACL,YAAa,OACb,aAAc,gBACd,iBAAkB,WAClB,eAAgB,WAsDkC7Z,OACxC7O,OAAOsY,OAAO1Y,GAAa6Y,QAAO,SAAChM,GAAD,MAAoB,YAAbA,EAAEwX,WAE7C0E,eAAgB,SAACC,GAAD,OACdA,EAAOpoB,aAAeooB,EAAOpoB,aAAeooB,MAIlD,yBAAK3kB,UAAU,uBACb,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,UACb,8BACE0J,MAAOvM,EAAa0iB,YACpBnP,SAAU,SAACjD,GACTA,EAAEkD,UACF,IAAIC,EAAOnD,EAAEoD,OAAOnH,MAChBkH,EAAKgF,MAAM,KAAKnP,QAAU,KAC5B6d,GAAgB,SAACxT,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAE+O,YAAajP,QAI7C5Q,UAAU,uBACVC,MAAO,CAAEb,OAAQ,YAIrB,yBACEY,UAAS,iBACP7C,EAAa0iB,YAAYjK,MAAM,KAAKnP,QAAU,IAC1C,aACA,gBAGLtJ,EAAa0iB,YACV,IAAM1iB,EAAa0iB,YAAYjK,MAAM,KAAKnP,OAC1C,IATN,eAaF,yBAAKzG,UAAU,kBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBAAf,QACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBAAgBC,MAAO,CAAEyH,MAAO,UAC7C,kBAAC,KAAD,CACEgC,MAAOqK,KAAKC,OACV,IAAIvV,KAAKtB,EAAa8iB,YACtB,cAEFK,UAAW,SAAChZ,GAAD,OACT,yBAAKtH,UAAU,qBACb,kBAAC,KAAD,CACEC,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,2CACMlG,EADN,CAEEtH,UAAU,8BACVgR,YAAY,kBAIlBuP,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAIrH,EAAI,IAAI1a,KAAKtB,EAAa8iB,YAC1BQ,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClB3H,EAAE4H,YAAYN,GACdtH,EAAE6H,SAASL,GACXxH,EAAE8H,QAAQJ,GACVyD,GAAgB,SAACxT,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEmP,WAAY9G,EAAE+H,oBAMlD,yBACElhB,UAAU,yCACVC,MAAO,CAAEyH,MAAO,UAEhB,kBAAC,KAAD,CACEzH,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,kBAAC,KAAD,CACE2T,UAAW,KACXC,UAAW,KACXphB,UAAU,aACV0Q,SAAU,SAACvI,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyN,MAAM,KADhB,mBACA7L,EADA,KACGG,EADH,KAEDmX,EAAU,IAAI5iB,KAAKtB,EAAa8iB,YACpCoB,EAAQC,SAASvX,GACjBsX,EAAQE,WAAWrX,GACnBoa,GAAgB,SAACxT,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBmP,WAAYoB,EAAQH,iBAK5BxX,MAAO,IAAIjL,KAAKtB,EAAa8iB,oBAQ3C,yBAAKjgB,UAAU,uBACb,yBAAKA,UAAU,eAAf,UACA,kBAAC,GAAD,CACEmb,aAAa,mBACbnb,UAAU,qBACVib,QACE9d,EAAa6iB,OAAS7iB,EAAa6iB,OAAS,gBAE9ChF,MAAOqF,EACPjF,SAAU,SAACsC,GAAD,OACR4G,GAAgB,SAACxT,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEkP,OAAQK,EAAS3C,YAKnD,yBACEzd,MAAO,CAAEb,OAAQ,OAAQ8R,QAASxF,EAAU,EAAI,GAChD1L,UAAU,sDAET0L,GAEH,yBAAK1L,UAAU,kBACb,yBACEA,UAAU,4EACVmJ,QAAS4V,GAFX,UAMA,yBACE/e,UAAU,kEACVmJ,QAAO,sBAAE,gCAAAhB,EAAA,2DACHyS,EAAUL,EAAY/F,QAAO,SAAChM,GAAD,OAAQA,EAAEgS,UAC/B/T,OAFL,gBAGLkF,EAAWiP,EAAQ,GAAGlS,OAHjB,8BAKLT,GAAW,GALN,SAOWuZ,GAAKrkB,GAPhB,UAOD6D,EAPC,OAQLiH,GAAW,IACPjH,EAAI0H,MATH,iBAUHnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,aAfP,+BAmBHyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,sBACPC,QAAS,uCACTvB,KAAM,aAxBP,UA2BqB4G,EAAQtG,EAAKmV,KA3BlC,QA2BCnJ,EA3BD,OA4BH7I,EAAM8I,SAAS,CACbvM,KAAM,WACNM,KAAMgM,IAER2W,IAhCG,6CAqCT,kBAAC,GAAD,CACE7V,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,QAASA,EACTxH,KAAM,KAnDV,cCwDKyH,oBARf,SAAclM,EAAOmM,GACnB,OAAO,aACLpM,YAAaC,EAAMD,YACnBS,KAAMR,EAAMQ,MACT2L,KAIQD,EAvTY,SAAC,GAAoC,IAAlCnM,EAAiC,EAAjCA,YAAaojB,EAAoB,EAApBA,QAAS3iB,EAAW,EAAXA,KAC5C2jB,EAAQ,CAAC,MAAO,SAClBqE,EAAc3lB,KAAKC,MAFsC,EAGrBuH,mBAAS,CAC/CnK,KAAM,GACNynB,QAAS,GACTc,UAAW,GACXpE,WAAYmE,EACZlE,SAAUkE,EACVvE,YAAa,GACbG,OAAQ,SAVmD,mBAGtD7iB,EAHsD,KAGxCmnB,EAHwC,OAa/Bre,mBAAS,IAbsB,mBAatDyF,EAbsD,KAa7CC,EAb6C,OAc/B1F,oBAAS,GAdsB,mBActD4B,EAdsD,KAc7CI,EAd6C,KAevDoY,EAAW,CAAC,OAAQ,UAAW,WAC/B9F,EAAc,CAClB,CAAEC,MAAOrd,EAAaomB,QAAS7a,MAAO,uBACtC,CAAE8R,MAAOrd,EAAarB,KAAM4M,MAAO,4BACnC,CACE8R,MAAOrd,EAAaknB,UAAU5d,OAC9BiC,MAAO,gCAET,CAAE8R,MAAOrd,EAAa0iB,YAAanX,MAAO,4BAW5C,OACE,yBAAK1I,UAAU,6BACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,qCAAf,wBAGA,yBAAKA,UAAU,kBAAf,yDAIF,yBAAKA,UAAU,SAASC,MAAO,CAAEgP,SAAU,UACzC,yBAAKjP,UAAU,uBACb,yBAAKA,UAAU,eAAf,WACA,yBAAKA,UAAU,UACb,2BACElE,KAAK,OACLkE,UAAU,yBACV0J,MAAOvM,EAAaomB,QACpB7S,SAAU,SAACjD,GACTA,EAAEkD,UACF2T,GAAgB,SAACxT,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEyS,QAAS9V,EAAEoD,OAAOnH,gBAMtD,yBAAK1J,UAAU,uBACb,yBAAKA,UAAU,eAAf,QACA,kBAAC,GAAD,CACEmb,aAAa,mBACbnb,UAAU,2BACVib,QAAS9d,EAAarB,KAAOqB,EAAarB,KAAO,SACjDkf,MAAO+E,EACP3E,SAAU,SAACsC,GAAD,OACR4G,GAAgB,SAACxT,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEhV,KAAMikB,EAAMrC,YAK9C,yBAAK1d,UAAU,uBACb,yBAAKA,UAAU,eAAf,mBAEA,kBAAC,GAAD,CACE0J,MAAOvM,EAAaknB,UACpB3T,SAAU,SAACjD,EAAG8W,GACZD,GAAgB,SAACxT,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEuT,UAAWE,QAGzCvT,YAAa,qBACb9H,MAAO,UACPlJ,UAAU,sCACVwkB,QAASzoB,OAAOyc,KA9DE,CAC1BiM,IAAK,MACL,YAAa,OACb,aAAc,gBACd,iBAAkB,WAClB,eAAgB,WAyDkC7Z,OACxC7O,OAAOsY,OAAO1Y,GAAa6Y,QAAO,SAAChM,GAAD,MAAoB,YAAbA,EAAEwX,WAE7C0E,eAAgB,SAACC,GAAD,OACdA,EAAOpoB,aAAeooB,EAAOpoB,aAAeooB,MAIlD,yBAAK3kB,UAAU,uBACb,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,UACb,8BACE0J,MAAOvM,EAAa0iB,YACpBnP,SAAU,SAACjD,GACTA,EAAEkD,UACF,IAAIC,EAAOnD,EAAEoD,OAAOnH,MAChBkH,EAAKgF,MAAM,KAAKnP,QAAU,KAC5B6d,GAAgB,SAACxT,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAE+O,YAAajP,QAI7C5Q,UAAU,uBACVC,MAAO,CAAEb,OAAQ,YAIrB,yBACEY,UAAS,iBACP7C,EAAa0iB,YAAYjK,MAAM,KAAKnP,QAAU,IAC1C,aACA,gBAGLtJ,EAAa0iB,YACV,IAAM1iB,EAAa0iB,YAAYjK,MAAM,KAAKnP,OAC1C,IATN,eAaF,yBAAKzG,UAAU,kBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBAAf,QACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBAAgBC,MAAO,CAAEyH,MAAO,UAC7C,kBAAC,KAAD,CACEgC,MAAOqK,KAAKC,OACV,IAAIvV,KAAKtB,EAAa8iB,YACtB,cAEFK,UAAW,SAAChZ,GAAD,OACT,yBAAKtH,UAAU,qBACb,kBAAC,KAAD,CACEC,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,2CACMlG,EADN,CAEEtH,UAAU,8BACVgR,YAAY,kBAIlBuP,YAAa,SAACC,GACZ,GAAIA,EAAK,CACP,IAAIrH,EAAI,IAAI1a,KAAKtB,EAAa8iB,YAC1BQ,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZC,EAAUL,EAAIM,UAClB3H,EAAE4H,YAAYN,GACdtH,EAAE6H,SAASL,GACXxH,EAAE8H,QAAQJ,GACVyD,GAAgB,SAACxT,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEmP,WAAY9G,EAAE+H,oBAMlD,yBACElhB,UAAU,yCACVC,MAAO,CAAEyH,MAAO,UAEhB,kBAAC,KAAD,CACEzH,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRrE,KAAM,UAGV,kBAAC,KAAD,CACE2T,UAAW,KACXC,UAAW,KACXphB,UAAU,aACV0Q,SAAU,SAACvI,GACT,GAAIA,EAAG,CAAC,IAAD,EACQA,EAAEyN,MAAM,KADhB,mBACA7L,EADA,KACGG,EADH,KAEDmX,EAAU,IAAI5iB,KAAKtB,EAAa8iB,YACpCoB,EAAQC,SAASvX,GACjBsX,EAAQE,WAAWrX,GACnBoa,GAAgB,SAACxT,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBmP,WAAYoB,EAAQH,iBAK5BxX,MAAO,IAAIjL,KAAKtB,EAAa8iB,oBAQ3C,yBAAKjgB,UAAU,uBACb,yBAAKA,UAAU,eAAf,UACA,kBAAC,GAAD,CACEmb,aAAa,mBACbnb,UAAU,qBACVib,QACE9d,EAAa6iB,OAAS7iB,EAAa6iB,OAAS,gBAE9ChF,MAAOqF,EACPjF,SAAU,SAACsC,GAAD,OACR4G,GAAgB,SAACxT,GAAD,OACd/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEkP,OAAQK,EAAS3C,YAKnD,yBACEzd,MAAO,CAAEb,OAAQ,OAAQ8R,QAASxF,EAAU,EAAI,GAChD1L,UAAU,sDAET0L,GAEH,yBAAK1L,UAAU,kBACb,yBACEA,UAAU,4EACVmJ,QAAS4V,GAFX,UAMA,yBACE/e,UAAU,kEACVmJ,QAAO,sBAAE,gCAAAhB,EAAA,2DACHyS,EAAUL,EAAY/F,QAAO,SAAChM,GAAD,OAAQA,EAAEgS,UAC/B/T,OAFL,gBAGLkF,EAAWiP,EAAQ,GAAGlS,OAHjB,8BAKLT,GAAW,GALN,SAOWnD,GAAmB3H,GAP9B,UAOD6D,EAPC,OAQLiH,GAAW,IACPjH,EAAI0H,MATH,iBAUHnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,aAfP,+BAmBHyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,uBACPC,QAAS,wCACTvB,KAAM,aAxBP,UA2BqB4G,EAAQtG,EAAKmV,KA3BlC,QA2BCnJ,EA3BD,OA4BH7I,EAAM8I,SAAS,CACbvM,KAAM,WACNM,KAAMgM,IAGR2W,IAjCG,6CAsCT,kBAAC,GAAD,CACE7V,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,QAASA,EACTxH,KAAM,KApDV,c,UC0TKyH,oBARf,SAAclM,EAAOmM,GACnB,OAAO,aACL7L,QAASN,EAAMM,QACfP,YAAaC,EAAMD,aAChBoM,KAIQD,EAziBD,SAAC,GAMR,IALL8c,EAKI,EALJA,YACAC,EAII,EAJJA,mBACAC,EAGI,EAHJA,qBACAnpB,EAEI,EAFJA,YAEI,KADJO,QAE4B+J,mBAAS,KADjC,mBACGpK,EADH,KACWwgB,EADX,OAEoBpW,mBAAS,IAF7B,mBAEGqW,EAFH,KAESC,EAFT,OAG8BtW,mBAAS,QAHvC,mBAGGuW,EAHH,KAGcC,EAHd,OAI8CxW,mBAAS,GAJvD,mBAIGyW,EAJH,KAIsBC,EAJtB,OAKoB1W,mBAAS,GAL7B,mBAKG+P,EALH,KAKSC,EALT,OAMgChQ,mBAAS,IANzC,mBAMG2W,EANH,KAMeC,EANf,OAOoC5W,mBAAS,IAP7C,mBAOG8e,EAPH,KAOiBC,EAPjB,OAQwB/e,mBAAS,IARjC,mBAQGjJ,EARH,KAQW8f,EARX,OAUsB7W,mBAAS,IAV/B,mBAUGgf,EAVH,KAUUC,EAVV,OAWsCjf,mBAAS,IAX/C,mBAWGkf,EAXH,KAWkBC,EAXlB,QAY0Bnf,oBAAS,GAZnC,qBAYGkX,GAZH,MAYYC,GAZZ,MAcJhX,qBAAU,WAAM,4CACd,4BAAA+B,EAAA,sEACmB1E,IADnB,OACMjD,EADN,OAEE0kB,EAAS1kB,EAAKsL,KAAI,SAACtD,GAAD,OAAOzM,OAAOC,OAAO,GAAIwM,EAAG,CAAEgC,UAAU,QAF5D,4CADc,uBAAC,WAAD,wBAMdwB,KACC,CAACmR,KAEJ/W,qBAAU,WACR,IAAIiX,EAAG,aAAO4H,GACVA,EAAMxe,SACJzJ,IACgB,SAAdwf,EACFa,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OACfA,EAAEjM,aAAa+N,cAAcsJ,SAAS5W,EAAOsN,kBAExB,UAAdkS,IACTa,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OACfA,EAAE9L,MAAM4N,cAAcsJ,SAAS5W,EAAOsN,oBAKxCsS,IACFS,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OAAOA,EAAE8T,OAASM,MAGjCmI,IACF1H,EAAMA,EAAI7I,QAAO,SAAChM,GAAD,OAAOA,EAAEwX,SAAW+E,OAGzCK,EAAiB/H,KAChB,CAACrgB,EAAQ4f,EAAYqI,EAAOF,IAG/B,IAAIzH,GAAa,CAAc,GAAZtH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GAC/CsH,GAAW,IAAM6H,EAAc1e,SACjC6W,GAAW,GAAKA,GAAW,IAAMA,GAAW,GAAK6H,EAAc1e,SAGjE,IAAM8W,GAAW,uCAAG,8CAAApV,EAAA,0FAEhB0U,EAAuB,QAATP,EAAiB,GAAKA,KAElC9R,EAAW2a,EAAc3Q,QAAO,SAAChM,GAAD,OAAOA,EAAEgC,aAEhC/D,OANK,oBAOD,SAAX5K,EAPY,gBAQd+oB,EAAYpa,EAAS,IACrBqa,IATc,8BAWV5hB,EAAS,GACE,WAAXpH,EACFoH,EAAM,OAAa,UACC,eAAXpH,EACToH,EAAM,OAAa,WACC,UAAXpH,EACToH,EAAM,OAAa,UACC,aAAXpH,IACToH,EAAM,OAAa,UAnBP,UAqBEgB,GACduG,EAASsB,KAAI,SAACtD,GAAD,OAAOA,EAAE+I,OACtB/G,EAASsB,KAAI,SAACtD,GAAD,OAAO7M,EAAY6M,EAAE+I,KAAKA,OACvCtO,GAxBY,SAqBVjC,EArBU,QA2BN0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,cAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,gBACPC,QAAS,iCACTvB,KAAM,aAGVshB,IAAYD,IACRkI,EAVC,eAUqB1pB,GAC1B6O,EAASjC,SAAQ,SAACC,GAChB6c,EAAe7c,EAAE+I,KAAKyO,OAAS/c,EAAM,UAEvC1D,EAAM8I,SAAS,CACbvM,KAAM,kBACNH,YAAa0pB,KApDH,4CAAH,qDA2DXC,GAAS,uCAAG,WAAOriB,EAAQc,EAAKG,GAApB,eAAAiE,EAAA,sEACAlE,GAAkBF,EAAKG,EAAMjB,GAD7B,QACZjC,EADY,QAER0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,cAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,gBACPC,QAAS,iCACTvB,KAAM,aAGVshB,IAAYD,KApBE,2CAAH,0DAuBT2C,GAAU,CAAC,QAAS,aAAc,WAAY,UAE9CtC,GAAU,CAAC,QAAS,OAAQ,aAAc,WAAY,UAC5D,OACE,yBAAKxd,UAAU,+BACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCAAf,SACA,yBAAKA,UAAU,kBAAf,+BAEF,yBACEA,UAAU,qDACVmJ,QAAS,kBAAM2b,MAFjB,aAQJ,yBAAK9kB,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,0BACb,yBACEA,UAAS,mBACP+kB,EAAe,YAAc,gBAE/B5b,QAAS,kBAAM6b,EAAgB,MAJjC,QAMQC,EAAMxe,OANd,KAtBK,CAAC,SAAU,WAAY,WA8BlBqF,KAAI,SAACtD,EAAGhC,GAAJ,OACZ,kBAAC,IAAMyJ,SAAP,CAAgBlE,IAAG,iBAAYvF,IAC7B,yBAAKxG,UAAU,4BAAf,KACA,yBACEA,UAAS,kCACP+kB,IAAiBvc,EAAI,eAAiB,aAExCW,QAAS,kBAAM6b,EAAgBxc,KAE9BA,EANH,KAMQyc,EAAMzQ,QAAO,SAACmD,GAAD,OAAOA,EAAEqI,SAAWxX,KAAG/B,OAN5C,UAWN,yBAAKzG,UAAU,0CACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,qBACbC,SAAU,SAACsC,GAAD,OAAWrB,EAAUyD,GAAQpC,KACvC1C,MAAO8E,GACP7E,QAASpf,GAAkB,gBAC3BmE,UAAU,gCAIhB,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,qBACbC,SAAU,SAACsC,GAAD,OACRnB,EAAQ,CAAC,MAAO,gBAAiB,QAAQmB,KAE3C1C,MAAO,CAAC,MAAO,gBAAiB,QAChCC,QAASqB,GAAc,cACvBtc,UAAU,gCAIhB,yBACEmJ,QAAS,kBAAMoU,IAAY,IAC3Bvd,UAAU,yEAFZ,WAQJ,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CACEmb,aAAa,QACbC,SAAU,SAACsC,GAAD,OAAWjB,EAAa,CAAC,OAAQ,SAASiB,KACpD1d,UAAU,qBACVgb,MAAO,CAAC,OAAQ,SAChBC,QAAO,oBAAeuB,MAG1B,yBAAKxc,UAAU,uBACb,yBAAKA,UAAU,4BACb,kBAAC,KAAD,CACEoJ,SAAS,OACTnJ,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACR2D,MAAO,UAGX,2BACExV,UAAU,8BACV0J,MAAO1M,EACP0T,SAAU,SAACjD,GACTA,EAAEkD,UACFmM,EAAUrP,EAAEoD,OAAOnH,aAM7B,yBAAK1J,UAAU,mCACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEob,SAAU,SAACsC,GAAD,OAAWjB,EAAa,CAAC,OAAQ,SAASiB,KACpD1d,UAAU,sCACVgb,MAAO,CAAC,OAAQ,SAChBC,QAAO,oBAAeuB,KAExB,yBAAKxc,UAAU,yBACb,kBAAC,KAAD,CACEoJ,SAAS,OACTnJ,MAAO,CACLoF,SAAU,WACVqH,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACR2D,MAAO,UAGX,2BACE9L,MAAO1M,EACP0T,SAAU,SAACjD,GACTA,EAAEkD,UACFmM,EAAUrP,EAAEoD,OAAOnH,QAErB1J,UAAU,wBACVC,MAAO,CAAE0d,SAAU,eAM7B,yBAAK3d,UAAU,kBACb,kBAAC,KAAD,CACEC,MAAO,CAAE0d,SAAU,QACnBC,aAAc,WACZjB,EACED,EAAoB,EAAI,EACpBA,EAAoB,EACpBA,IAGRmB,cAAe,WACblB,EACED,EAAoB,GAAK,EACrBA,EAAoB,EACpBA,KAIR,yBAAK1c,UAAU,oBACb,2BAAOA,UAAU,yBACf,+BACE,4BACE,wBAAIA,UAAU,eACZ,kBAAC,GAAD,CACEkJ,MAAO,UACP4U,QACEqH,EACGtW,MAAMyO,GAAW,GAAIA,GAAW,IAChC9I,QAAO,SAAChM,GAAD,OAAOA,EAAEgC,YAAU/D,SAC7B6W,GAAW,GAAKA,GAAW,GAE7B5M,SAAU,SAACjD,GACT2X,GAAiB,SAACtU,GAEhB,IADA,IAAIuM,EAAG,aAAOvM,GAERtK,EAAI8W,GAAW,GACnB9W,EAAI8W,GAAW,GACf9W,IAEA6W,EAAI7W,GAAGgE,SAAWiD,EAAEoD,OAAOiN,QAE7B,OAAOT,SAKf,wBAAIrd,UAAU,wCACZ,yBAAKA,UAAU,qBAAf,gBACA,yBAAKA,UAAU,qBAAf,SAEF,wBAAIA,UAAU,qDACXwd,GAAQd,IAEVc,GAAQ1R,KAAI,SAACsW,EAAGC,GAAJ,OACX,wBACEriB,UAAU,oDACV+L,IAAG,iBAAYsW,IAEf,6BAAMD,SAKd,+BACG+C,EAAc1e,OACb0e,EACGtW,MAAmB,GAAZmH,EAAO,GAAqB,GAAZA,EAAO,GAAS,GACvClK,KAAI,SAACtD,EAAGhC,GAAJ,OACH,wBACExG,UAAU,2BACV+L,IAAG,yBAAoBvF,IAEvB,wBAAIxG,UAAU,eACZ,kBAAC,GAAD,CACEkJ,MAAO,UACP4U,QAAStV,EAAEgC,SACXkG,SAAU,SAACjD,GACT2X,GAAiB,SAACtU,GAChB,IAAIuM,EAAG,aAAOvM,GAGd,OAFAuM,EAAiB,GAAZrH,EAAO,GAASxP,GAAGgE,SACtBiD,EAAEoD,OAAOiN,QACJT,SAKf,wBAAIpd,MAAO,CAAEkP,WAAY,WACvB,6BACE,yBAAKlP,MAAO,CAAEkP,WAAY,WACxB,yBAAKnP,UAAU,uBACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OAASjI,EAAEhM,MAAX,SAIrB,yBAAKwD,UAAU,sCACb,yBAAKA,UAAU,qBACZwI,EAAEjM,cAEL,yBAAKyD,UAAU,UACb,yBACEA,UAAU,8BACVmJ,QAAS,WACPyb,EAAYpc,GACZqc,MAJJ,QASA,yBAAK7kB,UAAU,QAAf,KACA,yBACEA,UAAU,8BACVmJ,QAAS,WACPmc,GACE,CAAEtF,OAAQ,WACV,CAACxX,EAAE+I,KACH,CAAC5V,EAAY6M,EAAE+I,KAAKA,QAN1B,SAYA,yBAAKvR,UAAU,QAAf,KACA,yBACEA,UAAU,6BACVmJ,QAAO,sBAAE,8BAAAhB,EAAA,sE5CzLfpE,E4C2LU,CAACyE,EAAE+I,K5C3LRrN,E4C4LK,CAACvI,EAAY6M,EAAE+I,KAAKA,K5C3LzDjR,EAAgB,8BAA+B,CAAEyD,MAAKG,S4CwLZ,QACHlD,EADG,QAKC0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,cAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,gBACPC,QACE,iCACFvB,KAAM,aAGVshB,IAAYD,KACRkI,EAXC,eAYA1pB,IAEU6M,EAAE+I,KAAKyO,OACpB,UAEFzgB,EAAM8I,SAAS,CACbvM,KAAM,kBACNH,YAAa0pB,KAjCV,iC5CzLhB,IAACthB,EAAKG,I4CyLU,QAFX,eA+CV,wBACElE,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGN,6BAAMlU,EAAE9L,QAEV,wBACEsD,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGLlU,EAAE8T,MAEL,wBACEtc,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGLlU,EAAE+c,WACCC,kBAAQhd,EAAE+c,YACV,WAEN,wBACEvlB,UAAS,UACe,IAAtB0c,EACI,eACA,2BAGLlU,EAAEid,cACCD,kBAAQhd,EAAEid,eACV,WAEN,wBACEzlB,UAAS,UACM,WAAbwI,EAAEwX,OACE,aACa,aAAbxX,EAAEwX,OACF,cACA,cALG,YAOe,IAAtBtD,EACI,eACA,2BAGLlU,EAAEwX,YAKX,4BACE,wBAAIhC,QAAS,EAAGhe,UAAU,qBAA1B,yBAUd,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,YACb,kBAAC,GAAD,CACE0P,MAAO1F,KAAK2K,KAAKwQ,EAAc1e,OAAS,GACxCkB,QAASqO,EACTrG,WAAYsG,aCxOfnO,oBAPf,SAAclM,EAAOmM,GACnB,OAAO,aACLpM,YAAaC,EAAMD,aAChBoM,KAIQD,EArTI,SAAC,GAA8B,IAA5BiX,EAA2B,EAA3BA,QAASpjB,EAAkB,EAAlBA,YAAkB,EACjBsK,mBAAS,CACrC5J,WAAY,GACZC,UAAW,GACXC,aAAc,GACdG,MAAO,GACPgpB,SAAU,GACVC,SAAU,GACVC,YAAa,GACb5F,OAAQ,SACR1D,KAAM,SAVuC,mBACxCuJ,EADwC,KAC/BC,EAD+B,OAajB7f,mBAAS,IAbQ,mBAaxCyF,EAbwC,KAa/BC,EAb+B,OAejB1F,oBAAS,GAfQ,mBAexC4B,EAfwC,KAe/BI,EAf+B,KAiBzCsS,EAAc,CAClB,CACEC,MAAOqL,EAAQnpB,MACfgM,MAAO,qBAET,CACE8R,MAAOrQ,GAAc0b,EAAQnpB,OAC7BgM,MAAO,sBAET,CACE8R,MAAOqL,EAAQF,SACfjd,MAAO,wBAET,CACE8R,MAAO,UAAUpQ,KAAKyb,EAAQF,WAAa,KAAKvb,KAAKyb,EAAQF,UAC7Djd,MAAO,0CAET,CACE8R,MAAOqL,EAAQF,WAAaE,EAAQD,YACpCld,MAAO,yBAET,CACE8R,MAAOqL,EAAQF,SAASlf,QAAU,EAClCiC,MAAO,+CAGT,CACE8R,OAAQze,OAAOsY,OAAO1Y,GACnBmQ,KAAI,SAACtD,GAAD,OAAOA,EAAE9L,SACbkX,SAASiS,EAAQnpB,OACpBgM,MAAO,gCAIL2X,EAAW,CAAC,SAAU,WAAY,WAClC0F,EAAQ,CAAC,gBAAiB,QAEhC,OACE,yBAAK/lB,UAAU,6BACb,yBAAKA,UAAU,SAASC,MAAO,CAAEgP,SAAU,UACzC,yBAAKjP,UAAU,0CACb,yBAAKA,UAAU,6BAAf,YACA,yBAAKA,UAAU,UAAf,uBAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,uBAAf,cACA,yBAAKA,UAAU,kBACb,2BACE+Q,YAAY,EACZrH,MAAOmc,EAAQxpB,WACfqU,SAAU,SAACjD,GACTA,EAAEkD,UACFmV,GAAW,SAAChV,GAAD,OACT/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBzU,WAAYoR,EAAEoD,OAAOnH,YAI3B5N,KAAK,OACLkE,UAAU,6BAIhB,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uBAAf,aACA,yBAAKA,UAAU,kBACb,2BACE+Q,YAAY,EACZrH,MAAOmc,EAAQvpB,UACfoU,SAAU,SAACjD,GACTA,EAAEkD,UACFmV,GAAW,SAAChV,GAAD,OACT/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBxU,UAAWmR,EAAEoD,OAAOnH,YAI1B5N,KAAK,OACLkE,UAAU,8BAKlB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,eACb,2BACE+Q,YAAY,EACZrH,MAAOmc,EAAQtpB,aACfmU,SAAU,SAACjD,GACTA,EAAEkD,UACFmV,GAAW,SAAChV,GAAD,OACT/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBvU,aAAckR,EAAEoD,OAAOnH,YAI7B5N,KAAK,OACLkE,UAAU,4BAGd,yBAAKA,UAAU,qBAAf,2CAIF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,UACA,yBAAKA,UAAU,UACb,2BACE+Q,YAAY,EACZrH,MAAOmc,EAAQnpB,MACfgU,SAAU,SAACjD,GACTA,EAAEkD,UACFmV,GAAW,SAAChV,GAAD,OACT/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBpU,MAAO+Q,EAAEoD,OAAOnH,YAItB5N,KAAK,OACLkE,UAAU,6BAIhB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,aACA,yBAAKA,UAAU,eACb,2BACE+Q,YAAY,EACZrH,MAAOmc,EAAQF,SACfjV,SAAU,SAACjD,GACTA,EAAEkD,UACFmV,GAAW,SAAChV,GAAD,OACT/U,OAAOC,OAAO,GAAI8U,EAAM,CACtB6U,SAAUlY,EAAEoD,OAAOnH,YAIzB5N,KAAK,WACLkE,UAAU,4BAGd,yBAAKA,UAAU,qBAAf,sEAKF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,qBACA,yBAAKA,UAAU,eACb,2BACE+Q,YAAY,EACZrH,MAAOmc,EAAQD,YACflV,SAAU,SAACjD,GACTA,EAAEkD,UACFmV,GAAW,SAAChV,GAAD,OACT/U,OAAOC,OAAO,GAAI8U,EAAM,CACtB8U,YAAanY,EAAEoD,OAAOnH,YAI5B5N,KAAK,WACLkE,UAAU,4BAGd,yBAAKA,UAAU,qBAAf,sEAIF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eAAf,UACA,kBAAC,GAAD,CACEmb,aAAa,QACbC,SAAU,SAACsC,GAAD,OACRoI,GAAW,SAAChV,GAAD,OACT/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBkP,OAAQK,EAAS3C,SAIvB1C,MAAOqF,EACPpF,QAAS4K,EAAQ7F,OAAS6F,EAAQ7F,OAAS,SAC3ChgB,UAAU,8BAIhB,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eAAf,QACA,kBAAC,GAAD,CACEmb,aAAa,QACbC,SAAU,SAACsC,GAAD,OACRoI,GAAW,SAAChV,GAAD,OACT/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBwL,KAAMyJ,EAAMrI,SAIlB1C,MAAO+K,EACP9K,QAAS4K,EAAQvJ,KAAOuJ,EAAQvJ,KAAO,SACvCtc,UAAU,+BAKlB,yBACEC,MAAO,CAAEb,OAAQ,OAAQ8R,QAASxF,EAAU,EAAI,GAChD1L,UAAU,iDAET0L,GAEH,yBAAK1L,UAAU,kBACb,yBACEA,UAAU,4EACVmJ,QAAS,kBAAM4V,MAFjB,UAMA,yBACE/e,UAAU,kEACVmJ,QAAO,sBAAE,8BAAAhB,EAAA,2DACHyS,EAAUL,EAAY/F,QAAO,SAAChM,GAAD,OAAQA,EAAEgS,UAC/B/T,OAFL,gBAGLkF,EAAWiP,EAAQ,GAAGlS,OAHjB,8BAKLT,GAAW,GALN,S7CzGZ3H,EAAgB,sB6C+G0BulB,GAN9B,OAMD7kB,EANC,OAOLiH,GAAW,GACPjH,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,cAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,eACPC,QAAS,gCACTvB,KAAM,aAGVyD,EAAM8I,SAAS,CACbvM,KAAM,qBACNG,WAAW,gBACR+E,EAAIrC,GAAK5C,OAAOC,OAAO,GAAI6pB,EAAS,CACnCG,QAAShlB,EAAIrC,GACb4S,IAAKvQ,EAAIilB,SAIflH,KAnCG,6CAwCT,kBAAC,GAAD,CACE7V,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,QAASA,EACTxH,KAAM,KAtDV,cCyDK2C,GAzSE,SAAC,GAA8B,IAA5BkjB,EAA2B,EAA3BA,YAAanH,EAAc,EAAdA,QAAc,EACf9Y,mBAAS,CACrC5J,WAAY,GACZC,UAAW,GACXC,aAAc,GACdG,MAAO,GACPgpB,SAAU,GACVC,SAAU,GACVC,YAAa,GACb5F,OAAQ,SACR1D,KAAM,kBAVqC,mBACtCuJ,EADsC,KAC7BC,EAD6B,OAaC7f,mBAAS,IAbV,mBAatCkgB,EAbsC,KAarBC,EAbqB,OAcfngB,mBAAS,IAdM,mBActCyF,EAdsC,KAc7BC,EAd6B,OAgBf1F,oBAAS,GAhBM,mBAgBtC4B,EAhBsC,KAgB7BI,EAhB6B,KAkB7C7B,qBAAU,WACJ8f,IACFE,EAAmBF,EAAYP,UAC/BG,EACE/pB,OAAOC,OAAO,GAAIkqB,EAAa,CAAEN,YAAaM,EAAYP,eAG7D,CAACO,IAEJ9f,qBAAU,WACR3G,OAAO4X,SAAS,EAAG,KAClB,IAEH,IAAMkD,EAAc,CAClB,CACEC,MAAO,UAAUpQ,KAAKyb,EAAQF,WAAa,KAAKvb,KAAKyb,EAAQF,UAC7Djd,MAAO,0CAET,CACE8R,MAAOqL,EAAQF,WAAaE,EAAQD,YACpCld,MAAO,yBAET,CACE8R,MAAOqL,EAAQF,SAASlf,QAAU,EAClCiC,MAAO,gDAIL2X,EAAW,CAAC,SAAU,WAAY,WAClC0F,EAAQ,CAAC,gBAAiB,QAEhC,OACE,yBAAK/lB,UAAU,6BACb,yBAAKA,UAAU,SAASC,MAAO,CAAEgP,SAAU,UACzC,yBAAKjP,UAAU,0CACb,yBAAKA,UAAU,6BAAf,aACA,yBAAKA,UAAU,UAAf,uBAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,uBAAf,cACA,yBAAKA,UAAU,kBACb,2BACE+Q,YAAY,EACZrH,MAAOmc,EAAQxpB,WACfqU,SAAU,SAACjD,GACTA,EAAEkD,UACFmV,GAAW,SAAChV,GAAD,OACT/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBzU,WAAYoR,EAAEoD,OAAOnH,YAI3B5N,KAAK,OACLkE,UAAU,6BAIhB,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uBAAf,aACA,yBAAKA,UAAU,kBACb,2BACE+Q,YAAY,EACZrH,MAAOmc,EAAQvpB,UACfoU,SAAU,SAACjD,GACTA,EAAEkD,UACFmV,GAAW,SAAChV,GAAD,OACT/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBxU,UAAWmR,EAAEoD,OAAOnH,YAI1B5N,KAAK,OACLkE,UAAU,8BAKlB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,eACb,2BACE+Q,YAAY,EACZrH,MAAOmc,EAAQtpB,aACfmU,SAAU,SAACjD,GACTA,EAAEkD,UACFmV,GAAW,SAAChV,GAAD,OACT/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBvU,aAAckR,EAAEoD,OAAOnH,YAI7B5N,KAAK,OACLkE,UAAU,4BAGd,yBAAKA,UAAU,qBAAf,2CAIF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,SACA,yBAAKA,UAAU,UACb,2BACE+Q,YAAY,EACZrH,MAAOmc,EAAQnpB,MACfgU,SAAU,SAACjD,GACTA,EAAEkD,UACFmV,GAAW,SAAChV,GAAD,OACT/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBpU,MAAO+Q,EAAEoD,OAAOnH,YAItB5N,KAAK,OACLkE,UAAU,6BAIhB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,YACA,yBAAKA,UAAU,eACb,2BACE+Q,YAAY,EACZrH,MAAOmc,EAAQF,SACfjV,SAAU,SAACjD,GACTA,EAAEkD,UACFmV,GAAW,SAAChV,GAAD,OACT/U,OAAOC,OAAO,GAAI8U,EAAM,CACtB6U,SAAUlY,EAAEoD,OAAOnH,YAIzB5N,KAAK,WACLkE,UAAU,4BAGd,yBAAKA,UAAU,qBAAf,sEAKF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,oBACA,yBAAKA,UAAU,eACb,2BACE+Q,YAAY,EACZrH,MAAOmc,EAAQD,YACflV,SAAU,SAACjD,GACTA,EAAEkD,UACFmV,GAAW,SAAChV,GAAD,OACT/U,OAAOC,OAAO,GAAI8U,EAAM,CACtB8U,YAAanY,EAAEoD,OAAOnH,YAI5B5N,KAAK,WACLkE,UAAU,4BAGd,yBAAKA,UAAU,qBAAf,sEAIF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eAAf,UACA,kBAAC,GAAD,CACEmb,aAAa,QACbC,SAAU,SAACsC,GAAD,OACRoI,GAAW,SAAChV,GAAD,OACT/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBkP,OAAQK,EAAS3C,SAIvB1C,MAAOqF,EACPpF,QAAS4K,EAAQ7F,OAAS6F,EAAQ7F,OAAS,SAC3ChgB,UAAU,8BAIhB,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eAAf,QACA,kBAAC,GAAD,CACEmb,aAAa,QACbC,SAAU,SAACsC,GAAD,OACRoI,GAAW,SAAChV,GAAD,OACT/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBwL,KAAMyJ,EAAMrI,SAIlB1C,MAAO+K,EACP9K,QAAS4K,EAAQvJ,KAAOuJ,EAAQvJ,KAAO,SACvCtc,UAAU,+BAKlB,yBACEC,MAAO,CAAEb,OAAQ,OAAQ8R,QAASxF,EAAU,EAAI,GAChD1L,UAAU,iDAET0L,GAEH,yBAAK1L,UAAU,kBACb,yBACEA,UAAU,4EACVmJ,QAAS,kBAAM4V,MAFjB,UAMA,yBACE/e,UAAU,kEACVmJ,QAAO,sBAAE,kCAAAhB,EAAA,yDACHke,GAAY,EACZR,EAAQF,WAAaQ,IACnBvL,EAAUL,EAAY/F,QAAO,SAAChM,GAAD,OAAQA,EAAEgS,UAC/B/T,SACV4f,GAAY,EACZ1a,EAAWiP,EAAQ,GAAGlS,SAGtB2d,EATG,uBAULpe,GAAW,GAVN,S9CtGZ3H,EAAgB,oB8CiHwBulB,GAX5B,OAWD7kB,EAXC,OAYLiH,GAAW,GACPjH,EAAI0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,cAIVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,eACPC,QAAS,gCACTvB,KAAM,cAGNG,EAAasD,EAAM+mB,WAAW3qB,YAAYkqB,EAAQtU,MAC3CyO,OAAS6F,EAAQ7F,OAC5B/jB,EAAWqgB,KAAOuJ,EAAQvJ,KAC1B/c,EAAM8I,SAAS,CAAEvM,KAAM,qBAAsBG,eAC7C8iB,KAnCG,4CAwCT,kBAAC,GAAD,CACE7V,MAAO,QACPjJ,MAAO,CACLoF,SAAU,WACVmI,KAAM,OACNd,IAAK,EACLkF,OAAQ,EACRC,OAAQ,OACRzC,QAAS,OACT0C,WAAY,UAEdjK,QAASA,EACTxH,KAAM,KAtDV,YCzNJkmB,GAOQ,EAPRA,GAQS,EARTA,GASc,EATdA,GAUgB,EAVhBA,GAWW,GAXXA,GAYa,GAZbA,GAac,GAbdA,GAcgB,GAdhBA,GAeM,GAfNA,GAgBQ,GAoKCze,oBAPf,SAAclM,EAAOmM,GACnB,OAAO,aACL1I,oBAAqBzD,EAAMyD,qBACxB0I,KAIQD,EAjKQ,SAAC,GAA6B,IAA3BzI,EAA0B,EAA1BA,oBAA0B,EACpB4G,mBAAS,GADW,mBAC3C4T,EAD2C,KAClCC,EADkC,OAEd7T,mBAAS,MAFK,mBAE3CugB,EAF2C,KAE/BpK,EAF+B,OAGZnW,mBAAS,MAHG,mBAG3CwgB,EAH2C,KAG9BvI,EAH8B,OAIFjY,mBAAS,MAJP,mBAI3CygB,EAJ2C,KAIzBvH,EAJyB,OAKRlZ,mBAAS,MALD,mBAK3C0gB,EAL2C,KAK5BlF,EAL4B,OAMFxb,mBAAS,MANP,mBAM3C2gB,EAN2C,KAMzB3D,EANyB,OAOlBhd,mBAAS,MAPS,mBAO3C4gB,EAP2C,KAOjCjC,EAPiC,KAQlD,OACE,yBACE5kB,UAAU,wCACVC,MAAO,CAAEsY,UAAW9Y,OAAO8V,cAE3B,yBAAKvV,UAAU,UACb,yBAAKA,UAAU,mDACb,kBAAC,GAAD,CACE+Z,aAAc1a,EACdya,WAAYA,EACZD,QAASA,IAEX,yBACE7Z,UAAU,6BACVC,MAAO,CAAEyH,MAAO,UAEhB,kBAAC,GAAD,CACEmS,QAASA,EACTC,WAAYA,KAGhB,yBAAK9Z,UAAU,OACZ6Z,GAAW,GACV,yBACE7Z,UAAU,mCACVC,MAAO,CAAEwK,aAAc,UAEvB,yBAAKzK,UAAU,2BACb,kBAAC,KAAD,CACEoJ,SAAS,OACTD,QAAS,kBACP2Q,EACc,IAAZD,GAA6B,IAAZA,EACb,EACY,IAAZA,GAA6B,IAAZA,EACjB,EACY,KAAZA,GAA8B,KAAZA,EAClB,EACY,KAAZA,GAA8B,KAAZA,EAClB,EACY,KAAZA,GAA8B,KAAZA,EAClB,EACA,QAOH,IAAZA,EACC,kBAAC,GAAD,MACc,IAAZA,EACF,kBAAC,GAAD,CACEiL,qBAAsB,kBAAMhL,EAAWyM,KACvC3B,YAAa,SAACkC,GAAD,OAAOlC,EAAYkC,IAChCjC,mBAAoB,kBAAM/K,EAAWyM,OAEzB,IAAZ1M,EACF,kBAAC,GAAD,CACEuC,cAAe,SAAC0G,GAAD,OAAS1G,EAAc0G,IACtC3G,qBAAsB,kBAAMrC,EAAWyM,KACvCrI,eAAgB,SAAC4E,GAAD,OAAS5E,EAAe4E,IACxC7E,sBAAuB,kBACrBnE,EAAWyM,OAGD,IAAZ1M,EACF,kBAAC,GAAD,CACEwF,4BAA6B,kBAC3BvF,EAAWyM,KAEbpH,oBAAqB,SAAC4H,GAAD,OAAS5H,EAAoB4H,IAClD3H,2BAA4B,WAC1BtF,EAAWyM,OAGD,IAAZ1M,EACF,kBAAC,GAAD,CACE6H,0BAA2B,kBACzB5H,EAAWyM,KAEb9E,iBAAkB,SAACuF,GAAD,OAAUvF,EAAiBuF,IAC7CrF,wBAAyB,kBACvB7H,EAAWyM,OAGD,IAAZ1M,EACF,kBAAC,GAAD,CACEsJ,6BAA8B,kBAC5BrJ,EAAWyM,KAEbtD,oBAAqB,SAACgE,GAAD,OAAShE,EAAoBgE,IAClD/D,2BAA4B,kBAC1BpJ,EAAWyM,OAGD,IAAZ1M,EACF,kBAAC,GAAD,CACEiF,cAAe0H,EACfzH,QAAS,kBAAMjF,EAAW,MAEd,IAAZD,EACF,kBAAC,GAAD,CACEoF,eAAgBwH,EAChB1H,QAAS,kBAAMjF,EAAW,MAEd,IAAZD,EACF,kBAAC,GAAD,CACEkF,QAAS,kBAAMjF,EAAW,IAC1BqG,oBAAqBuG,IAET,IAAZ7M,EACF,kBAAC,GAAD,CAAoBkF,QAAS,kBAAMjF,EAAW,MAChC,KAAZD,EACF,kBAAC,GAAD,CACEyI,iBAAkBqE,EAClB5H,QAAS,kBAAMjF,EAAW,MAEd,KAAZD,EACF,kBAAC,GAAD,CAAiBkF,QAAS,kBAAMjF,EAAW,MAC7B,KAAZD,EACF,kBAAC,GAAD,CACEsK,oBAAqByC,EACrB7H,QAAS,kBAAMjF,EAAW,MAEd,KAAZD,EACF,kBAAC,GAAD,CACEkF,QAAS,kBAAMjF,EAAW,MAEd,KAAZD,EACF,kBAAC,GAAD,CACEqM,YAAaW,EACb9H,QAAS,kBAAMjF,EAAW,MAEd,KAAZD,EACF,kBAAC,GAAD,CAAYkF,QAAS,kBAAMjF,EAAW,MAEtC,UCnLRoN,GAAY,uCAAG,WAAO9lB,GAAP,eAAA+G,EAAA,sEACHgf,EAAc/lB,GADX,QACfJ,EADe,QAEX0H,MACNnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZrB,KAAM,UACNsB,MAAO,QACPC,QAAS2D,EAAI0H,UAIjB0e,aAAaC,QAAQ,oBAAqBrmB,EAAIvE,OAC9C8C,EAAM8I,SAAS,CAAEvM,KAAM,WAAYM,KAAM4E,IACzCsM,EAAQC,KAAK,MAdI,2CAAH,sDAqIHpM,GAnHD,WAAO,IAAD,EACQ8E,mBAAS,IADjB,mBACXvJ,EADW,KACJ4qB,EADI,OAEcrhB,mBAAS,IAFvB,mBAEX0f,EAFW,KAED4B,EAFC,KAGlB,OACE,yBACEvnB,UAAU,gFACVC,MAAO,CAAEb,OAAQK,OAAO8V,cAExB,yBAAKvV,UAAU,gFACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,sDACb,yBACEA,UAAU,wEACVmJ,QAAS,kBAAMmE,EAAQC,KAAK,MAC5BtN,MAAO,CAAEyM,IAAK,OAAQc,KAAM,SAE5B,kBAAC,KAAD,CAAexN,UAAU,SAL3B,gBAOA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,sBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,iCAAf,iBAIN,yBACEA,UAAU,6DACVC,MAAO,CACLsY,UAAW9Y,OAAO8V,YAAc,MAGlC,yBAAKvV,UAAU,6BACb,yBAAKA,UAAU,kDACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,kBAAf,uBACA,yBAAKA,UAAU,UAAf,+EAMJ,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,eAAf,SACA,yBAAKA,UAAU,UACb,2BACElE,KAAK,OACLkE,UAAU,yBACV0J,MAAOhN,EACPgU,SAAU,SAACjD,GACTA,EAAEkD,UACF2W,EAAS7Z,EAAEoD,OAAOnH,YAK1B,yBAAK1J,UAAU,uBACb,yBAAKA,UAAU,eAAf,YACA,yBAAKA,UAAU,UACb,2BACElE,KAAK,WACLkE,UAAU,yBACV0J,MAAOic,EACPjV,SAAU,SAACjD,GACTA,EAAEkD,UACF4W,EAAY9Z,EAAEoD,OAAOnH,QAEvB8d,UAAW,SAAC/Z,GACQ,KAAdA,EAAEga,SACJP,GAAa,CAAExqB,QAAOipB,kBAMhC,yBAAK3lB,UAAU,uBACb,yBACEA,UAAU,uCACVmJ,QAAS,kBAAM+d,GAAa,CAAExqB,QAAOipB,eAFvC,UAOF,yBACE3lB,UAAU,yCACVC,MAAO,CAAEmJ,SAAU,SAEnB,yBAAKpJ,UAAU,iBAAf,yBACyB,IACvB,0BACEA,UAAU,0BACVmJ,QAAS,kBAAMmE,EAAQC,KAAK,aAF9B,YAOF,yBAAKvN,UAAU,oCAAf,6B,6FChGP0nB,GAvBO,SAAC,GAAc,IAAZ5rB,EAAW,EAAXA,KACvB,OACE,yBAAKkE,UAAU,uBACb,yBAAKA,UAAU,yBACb,kBAAC,KAAD,CACE2nB,SAAU,OACVC,SACW,mBAAT9rB,EACI+rB,KACS,mBAAT/rB,EACAgsB,KACS,yBAAThsB,EACAisB,KACA,GAENC,eAAgB,kBAAM,+BACtBC,QAAS,kBAAMC,QAAQC,IAAI,mBCkPtBC,GA3PA,WAAO,IAAD,EACOniB,mBAAS,IADhB,mBACZvJ,EADY,KACL4qB,EADK,OAEarhB,mBAAS,IAFtB,mBAEZ0f,EAFY,KAEF4B,EAFE,OAG2BthB,mBAAS,IAHpC,mBAGZoiB,EAHY,KAGKC,EAHL,OAIeriB,oBAAS,GAJxB,mBAIZsiB,EAJY,KAIDC,EAJC,OAKiCviB,oBAAS,GAL1C,mBAKZwiB,EALY,KAKQC,EALR,OAMWziB,mBAAS,IANpB,mBAMZyF,EANY,KAMHC,EANG,OAOuB1F,mBAAS,IAPhC,mBAOZ0iB,EAPY,KAOGC,EAPH,KASbrO,EAAc,CAClB,CAAEC,MAAOrQ,GAAczN,GAAQgM,MAAO,sBACtC,CACE8R,MAAO,UAAUpQ,KAAKub,IAAa,KAAKvb,KAAKub,GAC7Cjd,MAAO,0CAET,CACE8R,MAAOmL,IAAa0C,EACpB3f,MAAO,yBAET,CACE8R,MAAOmL,EAASlf,QAAU,EAC1BiC,MAAO,+CAET,CACE8R,MAAO+N,EACP7f,MAAO,2BAGT,CACE8R,MAAOiO,EACP/f,MAAO,oEAILwe,EAAY,uCAAG,8BAAA/e,EAAA,yDAEK,KADpB0gB,EAAWtO,EAAY/F,QAAO,SAAChM,GAAD,OAAQA,EAAEgS,UAC/B/T,OAFM,gClDxBdnG,EAAgB,ekD2BY,CAAE5D,QAAOipB,aAHvB,QAGb3kB,EAHa,QAIT8nB,SACNvpB,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,mBACPC,QACE,yEACFvB,KAAM,aAIVyD,EAAM8I,SAAS,CACbvM,KAAM,qBACNG,WAAW,gBAAI+E,EAAI/E,WAAW+pB,QAAUhlB,EAAI/E,cAE9CqR,EAAQC,KAAK,WAEbhO,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZE,QAAS2D,EAAI0H,MACb5M,KAAM,UACNsB,MAAO,2BA1BI,sBA+BjBuO,EAAWkd,EAAS,GAAGngB,OA/BN,2CAAH,qDAmClB,OACE,yBACE1I,UAAU,wFACVC,MAAO,CAAEsY,UAAW9Y,OAAO8V,cAE3B,kBAAC,GAAD,CAAO3P,KAAM+iB,EAAehc,QAAS,kBAAMic,EAAiB,MAC1D,kBAAC,GAAD,CAAe9sB,KAAM6sB,KAEvB,yBAAK3oB,UAAU,gFACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,6CACb,yBAAKA,UAAU,sDACb,yBACEA,UAAU,wEACVmJ,QAAS,kBAAMmE,EAAQC,KAAK,MAC5BtN,MAAO,CAAEyM,IAAK,OAAQc,KAAM,SAE5B,kBAAC,KAAD,CAAexN,UAAU,SAL3B,gBAOA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,sBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,iCAAf,iBAIN,yBACEA,UAAU,6DACVC,MAAO,CACLsY,UAAW9Y,OAAO8V,YAAc,MAGlC,yBAAKvV,UAAU,wBACb,yBAAKA,UAAU,6CACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,kBAAf,oBAOJ,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,eAAf,SACA,yBAAKA,UAAU,UACb,2BACElE,KAAK,QACLkE,UAAU,yBACV0J,MAAOhN,EACPgU,SAAU,SAACjD,GACTA,EAAEkD,UACF2W,EAAS7Z,EAAEoD,OAAOnH,YAK1B,yBAAK1J,UAAU,uBACb,yBAAKA,UAAU,eAAf,YACA,yBAAKA,UAAU,eACb,2BACElE,KAAK,WACLkE,UAAU,yBACV0J,MAAOic,EACPjV,SAAU,SAACjD,GACTA,EAAEkD,UACF4W,EAAY9Z,EAAEoD,OAAOnH,WAI3B,yBAAK1J,UAAU,kCAAf,oEAKF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eAAf,oBACA,yBAAKA,UAAU,eACb,2BACElE,KAAK,WACLkE,UAAU,yBACV0J,MAAO2e,EACPb,UAAW,SAAC/Z,GACQ,KAAdA,EAAEga,SACJP,KAGJxW,SAAU,SAACjD,GACTA,EAAEkD,UACF2X,EAAmB7a,EAAEoD,OAAOnH,WAIlC,yBAAK1J,UAAU,kCAAf,oEAKF,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACE+oB,QjDtLK,2CiDuLLrY,SAAU,SAAChH,GACLA,GACF8e,GAAa,OAKrB,yBAAKxoB,UAAU,kBACb,yBAAKA,UAAU,iBACb,kBAAC,GAAD,CACEkJ,MAAO,UACP4U,QAAS2K,EACT/X,SAAU,SAACjD,GACTib,EAAsBjb,EAAEoD,OAAOiN,aAIrC,yBAAK9d,UAAU,OAAf,gCACgC,IAC9B,0BACEmJ,QAAS,kBACPyf,EAAiB,yBAEnB5oB,UAAU,YAJZ,wBAOQ,IATV,MAUM,IACJ,0BACEA,UAAU,WACVmJ,QAAS,kBAAMyf,EAAiB,oBAFlC,oBAQJ,yBACE3oB,MAAO,CAAEb,OAAQ,OAAQ8R,QAASxF,EAAU,EAAI,GAChD1L,UAAU,iDAET0L,GAEH,yBAAK1L,UAAU,uBACb,yBACEA,UAAU,uCACVmJ,QAAS+d,GAFX,mBAOF,yBACElnB,UAAU,yCACVC,MAAO,CAAEmJ,SAAU,SAEnB,yBAAKpJ,UAAU,iBAAf,wBACwB,IACtB,0BACEA,UAAU,0BACVmJ,QAAS,kBAAMmE,EAAQC,KAAK,YAF9B,UAOF,yBAAKvN,UAAU,oCAAf,6BCtIP8H,oBARf,SAAclM,EAAOmM,GACnB,OAAO,aACLpM,YAAaC,EAAMD,YACnBwB,aAAcvB,EAAMuB,cACjB4K,KAIQD,EA7GD,SAAC,GAAmC,IAAjC3K,EAAgC,EAAhCA,aAAcxB,EAAkB,EAAlBA,YAAkB,EACjBsK,oBAAS,GADQ,mBACxC+iB,EADwC,KAC/BC,EAD+B,OAEjBhjB,oBAAS,GAFQ,mBAExC3I,EAFwC,KAE/B4rB,EAF+B,KAgD/C,OA7CA9iB,qBAAU,WACR,IAAI+iB,EAOJ,OANKhsB,EAAaG,UAChB6rB,EAAUC,YAAW,WACnBF,GAAW,KACV,MAGE,YACA/rB,EAAaG,SAAW6rB,GAC3BE,aAAaF,MAGhB,CAAChsB,IAEJiJ,qBAAU,WACJ9I,IAAY0rB,IACdzpB,EAAM8I,SAAS,CACbvM,KAAM,sBACNqB,aAAc,CAAEG,SAAS,KAE3B4rB,GAAW,MAEZ,CAAC5rB,EAAS0rB,IAEb5iB,qBAAU,WACR,GACwB,YAAtBjJ,EAAarB,MACmB,kBAAzBqB,EAAaE,QACpB,CACA,IAAIisB,EAAoB,CACtBxtB,KAAM,UACNynB,QAAS,uBACTc,UAAWtoB,OAAOsY,OAAO1Y,GAAa6Y,QACpC,SAAChM,GAAD,MAAkB,kBAAXA,EAAE8T,QAEX2D,WAAYxhB,KAAKC,MACjBwhB,SAAUzhB,KAAKC,MACfmhB,YAAajf,KAAKC,UAAU1D,EAAaE,SAASsL,QAAQ,KAAM,IAChEqX,OAAQ,QAEVlb,GAAmBwkB,MAEpB,CAACnsB,EAAaE,UAGf,yBACEksB,YAAa,kBAAMN,GAAW,IAC9BO,aAAc,kBAAMP,GAAW,IAC/BjpB,UAAU,8CACVC,MAAO,CACLgP,SAAU,QACV2C,OAAQzU,EAAaG,QAAU,QAAU,SAG3C,yBAAK0C,UAAU,sBACZ7C,EAAarB,MACZ,yBAAKkE,UAAU,iBACU,YAAtB7C,EAAarB,KACZ,kBAAC,KAAD,CACE8Q,YAAY,MACZxD,SAAS,OACTpJ,UAAU,iBAGZ,kBAAC,KAAD,CACE4M,YAAY,MACZxD,SAAS,OACTpJ,UAAU,kBAKlB,yBAAKA,UAAU,wBAAwB7C,EAAaC,OACpD,yBACE4C,UAAU,4BACVmJ,QAAS,kBACP5J,EAAM8I,SAAS,CACbvM,KAAM,sBACNqB,aAAc,CAAEG,SAAS,OAI7B,kBAAC,KAAD,CAAK8L,SAAS,OAAOpJ,UAAU,iBAInC,yBAAKA,UAAU,iCACU,YAAtB7C,EAAarB,MACsB,kBAAzBqB,EAAaE,QAClB,gBAEFF,EAAaE,aCrBVosB,GAzEa,SAAC,GAAkD,IAAhDrtB,EAA+C,EAA/CA,KAAMuF,EAAyC,EAAzCA,QAAyC,IAAhC+nB,sBAAgC,MAAf,aAAe,IAC9CzjB,oBAAS,GADqC,mBACrE4B,EADqE,KAC5DI,EAD4D,KAEtEC,EAAW,uCAAG,gCAAAC,EAAA,0DACd/L,EAAKG,aADS,qBAEZoF,EAFY,uBAGdsG,GAAW,GAHG,SAIEhD,GAAqB7I,EAAMuF,GAJ7B,OAIVX,EAJU,OAKdiH,GAAW,GACPjH,EAAIoH,aACFxL,EADe,aACAR,EAAKQ,WAEJ,KADhB+sB,EAAa/sB,EAASiM,WAAU,SAACL,GAAD,OAAOA,EAAEM,WAAanH,OAExD/E,EAASgtB,OAAOD,GAElBpqB,EAAM8I,SAAS,CACbvM,KAAM,cACNiB,aAAciE,EAAIoH,cAEpB7I,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAM,0BACNC,QAAQ,gDACRvB,KAAM,aAGV4tB,KAEAnqB,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAASuD,KAAKC,UAAUG,EAAI0H,OAAOC,QAAQ,KAAM,IACjD7M,KAAM,aA/BE,+BAqChByD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,qBACPC,QAAS,6CACTvB,KAAM,aA1CM,4CAAH,qDA+CjB,OACE,kBAAC,GAAD,CACEyJ,MAAM,OACNF,SAAS,MACTG,QAAS,SAACwD,GAAD,OAAO,yBAAKhJ,UAAU,aAAf,oBAChByF,QAAQ,cAER,yBACEzF,UAAU,+BACVC,MAAO,CAAEgJ,cAAe,QAEvBpB,EACC,kBAAC,GAAD,CAAQxH,KAAM,GAAIwH,QAASA,EAASqB,MAAO,UAE3C,kBAAC,IAAD,CACEC,QAASjB,EACTlI,UAAU,qBC4LP8H,oBARf,SAAclM,EAAOmM,GACnB,OAAO,aACL3L,KAAMR,EAAMQ,KACZF,QAASN,EAAMM,SACZ6L,KAIQD,EAzPI,SAAC,GAOb,IANL+E,EAMI,EANJA,OACAzQ,EAKI,EALJA,KACAF,EAII,EAJJA,QAII,IAHJ2tB,gBAGI,MAHO,eAGP,MAFJC,aAEI,aADJJ,sBACI,MADa,aACb,IACoBzjB,mBAAS,GAD7B,mBACG+P,EADH,KACSC,EADT,OAGwChQ,mBAAS,IAHjD,mBAGG6G,EAHH,KAGmBC,EAHnB,OAIkC9G,oBAAS,GAJ3C,mBAIG+G,EAJH,KAIgBC,EAJhB,KAMJ,OACE,kBAAC,IAAMgD,SAAP,KACE,kBAAC,GAAD,CAAOrK,KAAMoH,EAAaL,QAAS,kBAAMM,GAAe,KACtD,kBAAC,GAAD,CACEtL,QAASmL,EACTvB,QAAS,kBAAM0B,GAAe,OAGlC,yBAAKjN,UAAU,OACZ6M,EAAOf,KAAI,SAACtD,EAAGhC,GACd,IAAIujB,EAAgB7tB,EAAQsM,EAAEM,UAC1B,CACEnK,GAAI6J,EAAEM,SACN1L,MAAOlB,EAAQsM,EAAEM,UAAUyG,YAC3B3Q,YAAa1C,EAAQsM,EAAEM,UAAUwG,aACjCtQ,OAAQ9C,EAAQsM,EAAEM,UAAU0G,cAE9B,CAAE7Q,GAAI6J,EAAEM,SAAU1L,MAAO,GAAIwB,YAAa,GAAII,OAAQ,IAC1D,OACE,yBACE+M,IAAG,iBAAYvF,GACfxG,UAAU,uDAEI,gBAAb6pB,GAA8BC,EAC7B,yBACE9pB,UAAU,6EACVC,MAAO,CACLwK,aAAc,QACdyC,OAAQ,EACR9N,OAAQ,OACR6J,cAAe,SAGjB,kBAAC,IAAMgH,SAAP,KACE,kBAAC,GAAD,CACEjI,MAAO+hB,EACP3tB,KAAMA,IAEM,aAAbytB,EACC,kBAAC,IAAM5Z,SAAP,KACE,yBAAKjQ,UAAU,SACf,kBAAC,GAAD,CACE0pB,eAAgBA,EAChBttB,KAAMA,EACNuF,QAASooB,EAAcprB,MAI3B,KAKN,GAEF,yBAAKqB,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,2DACb,yBACEmN,IAAG,oBAAe4c,EAAcprB,IAChC+I,MAAM,OACNzH,MAAO,CAAEmN,aAAc,QACvBC,IACE0c,EAAcnrB,YAAd,yCACsCmrB,EAAcnrB,aAChD,yDAGR,yBACEuK,QAAS,kBAAMmE,EAAQC,KAAR,iBAAuBwc,EAAcprB,MACpDqB,UAAU,sEACVC,MAAO,CACLuN,KAAM,EACNd,IAAK,EACLrH,SAAU,WACV6H,OAAQ,EACRE,aAAc,SAGhB,yBACEpN,UAAU,uDACVmJ,QAAS,SAACsE,GACRA,EAAEC,kBACFX,EAAkBgd,EAAcprB,IAChCsO,GAAe,KAGjB,kBAAC,KAAD,CACEhN,MAAO,CACLmJ,SAAU,OACVF,MAAO,QACPG,YAAa,cAOzB,yBAAKrJ,UAAU,iBACb,yBACEA,UAAU,mDACVmJ,QAAS,kBAAMmE,EAAQC,KAAR,iBAAuBwc,EAAcprB,OAEpD,yBAAKqB,UAAU,iBAAiB+pB,EAAc3sB,QAEhD,yBAAK4C,UAAU,kCACb,yBAAKA,UAAU,iBACZ+pB,EAAc/qB,OAAOyH,OAClBsjB,EAAc/qB,OAAO6L,KAAK,KAC1B,YAGR,yBAAK7K,UAAU,2CACb,kBAAC,GAAD,CACEK,KAAK,QACLmK,WACEpO,EAAKF,QAAQ6tB,EAAcprB,KAEvB,mBADAvC,EAAKF,QAAQ6tB,EAAcprB,IAAIqP,UAIrChG,MAAO+hB,EACP5pB,MAAM,OACNH,UAAU,YACV0J,MACExN,EAAQ6tB,EAAcprB,IAClBzC,EAAQ6tB,EAAcprB,IAAIsP,eAC1B,IAGR,kBAAC,GAAD,CACE5N,KAAK,QACLmK,WACEpO,EAAKF,QAAQ6tB,EAAcprB,KAEvB,cADAvC,EAAKF,QAAQ6tB,EAAcprB,IAAIqP,UAIrChG,MAAO+hB,EACP5pB,MAAM,QACNH,UAAU,YACV0J,MACExN,EAAQ6tB,EAAcprB,IAClBzC,EAAQ6tB,EAAcprB,IAAIuP,UAC1B,IAGR,kBAAC,GAAD,CACE7N,KAAK,QACLmK,WACEpO,EAAKF,QAAQ6tB,EAAcprB,KAEvB,YADAvC,EAAKF,QAAQ6tB,EAAcprB,IAAIqP,UAIrChG,MAAO+hB,EACP/pB,UAAU,YACVG,MAAM,sBACNuJ,MACExN,EAAQ6tB,EAAcprB,IAClBzC,EAAQ6tB,EAAcprB,IAAIwP,QAC1B,IAGR,kBAAC,GAAD,CACE9N,KAAK,QACLF,MAAM,OACNuJ,MACExN,EAAQ6tB,EAAcprB,IAClBzC,EAAQ6tB,EAAcprB,IAAIyP,SAC1B,EAEN5D,WACEpO,EAAKF,QAAQ6tB,EAAcprB,KAEvB,aADAvC,EAAKF,QAAQ6tB,EAAcprB,IAAIqP,UAIrChG,MAAO+hB,KAGX,yBAAK/pB,UAAU,mCACC,gBAAb6pB,EACC,kBAAC,IAAM5Z,SAAP,KACE,kBAAC,GAAD,CACEjI,MAAO+hB,EACP3tB,KAAMA,IAEM,aAAbytB,EACC,kBAAC,IAAM5Z,SAAP,KACE,yBAAKjQ,UAAU,SACf,kBAAC,GAAD,CACE0pB,eAAgBA,EAChBttB,KAAMA,EACNuF,QAASooB,EAAcprB,MAI3B,IAIJ,WAShB,yBAAKqB,UAAU,sCACb,yBAAKA,UAAU,YACb,kBAAC0U,GAAD,CACE9E,WAAY,CACVC,YAAa,aACbrF,SAAU,uBAEZkF,MAAO1F,KAAK2K,KAAK9H,EAAOpG,OA9NV,IA+NdkB,QAASqO,EACTrG,WAAYsG,UC1JT+T,GAjEE,SAAC,GAAgD,IAA9Cnd,EAA6C,EAA7CA,OAAQid,EAAqC,EAArCA,MAAOJ,EAA8B,EAA9BA,eAAgBxtB,EAAc,EAAdA,QAAc,EACrB+J,mBAAS,GADY,mBACxDgkB,EADwD,KACzCC,EADyC,KAEzDlrB,EAtBc,SAAC6N,EAAQ3Q,GAC7B,IAAI8C,EAAS,CAAC,OAgBd,OAfA6N,EAAOtE,SAAQ,SAACC,GACVtM,EAAQsM,EAAEM,WACZ5M,EAAQsM,EAAEM,UAAU0G,aAAajH,SAAQ,SAACwF,GACpCA,EAAE9O,KACCD,EAAO4U,SAAS7F,EAAE9O,OACrBD,EAAOuO,KAAKQ,EAAE9O,MAGXD,EAAO4U,SAAS7F,IACnB/O,EAAOuO,KAAKQ,SAMf/O,EAKQ4Y,CAAc/K,EAAQ3Q,GAErC,OACE,yBAAK8D,UAAU,eACb,yBAAKA,UAAU,yEACb,yBAAKA,UAAU,YACZhB,EAAOyH,OAAS,EACf,kBAAC,KAAD,CACExG,MAAO,CACL8O,QAAS,SACTrH,MAAO,OACPwH,UAAW,OACXC,WAAY,WAGbnQ,EAAO8M,KAAI,SAACtD,EAAGhC,GAAJ,OACV,yBACE2C,QAAS,WACP+gB,EAAiB1jB,IAEnBvG,MAAO,CAAEmP,QAAS,gBAClBrD,IAAG,kCAA6BvF,GAChCxG,UAAS,eACPiqB,IAAkBzjB,EACd,mCACA,kCAGLgC,OAKP,KAILqE,EAAOpG,OACN,kBAAC,GAAD,CACEijB,eAAgBA,EAChBI,MAAOA,EACPD,SAAS,WACThd,OAAQA,EAAO2H,QACb,SAAChM,GAAD,OACGtM,EAAQsM,EAAEM,WACT5M,EAAQsM,EAAEM,UAAU0G,aAAaoE,SAC/B5U,EAAOirB,KAEe,QAA1BjrB,EAAOirB,QAIb,yBACEjqB,UAAU,yEACVC,MAAO,CAAEb,OAAQ,UAFnB,4DCSO4qB,GA/DE,SAAC,GAAyB,IAAvBnd,EAAsB,EAAtBA,OAAQ3Q,EAAc,EAAdA,QAAc,EACE+J,mBAAS,GADX,mBACjCgkB,EADiC,KAClBC,EADkB,KAElClrB,EAtBc,SAAC6N,EAAQ3Q,GAC7B,IAAI8C,EAAS,CAAC,OAgBd,OAfA6N,EAAOtE,SAAQ,SAACC,GACVtM,EAAQsM,EAAEM,WACZ5M,EAAQsM,EAAEM,UAAU0G,aAAajH,SAAQ,SAACwF,GACpCA,EAAE9O,KACCD,EAAO4U,SAAS7F,EAAE9O,OACrBD,EAAOuO,KAAKQ,EAAE9O,MAGXD,EAAO4U,SAAS7F,IACnB/O,EAAOuO,KAAKQ,SAMf/O,EAKQ4Y,CAAc/K,EAAQ3Q,GACrC,OACE,yBAAK8D,UAAU,eACb,yBAAKA,UAAU,yEACb,yBAAKA,UAAU,YACZhB,EAAOyH,OAAS,EACf,kBAAC,KAAD,CACExG,MAAO,CACL8O,QAAS,SACTE,SAAU,OACVC,UAAW,OACXC,WAAY,WAGbnQ,EAAO8M,KAAI,SAACtD,EAAGhC,GAAJ,OACV,yBACE2C,QAAS,WACP+gB,EAAiB1jB,IAEnBvG,MAAO,CAAEmP,QAAS,gBAClBrD,IAAG,kCAA6BvF,GAChCxG,UAAS,eACPiqB,IAAkBzjB,EACd,mCACA,kCAGLgC,OAKP,KAILqE,EAAOpG,OACN,kBAAC,GAAD,CACEojB,SAAS,cACThd,OAAQA,EAAO2H,QACb,SAAChM,GAAD,OACGtM,EAAQsM,EAAEM,WACT5M,EAAQsM,EAAEM,UAAU0G,aAAaoE,SAC/B5U,EAAOirB,KAEe,QAA1BjrB,EAAOirB,QAIb,yBACEjqB,UAAU,yEACVC,MAAO,CAAEb,OAAQ,UAFnB,wGCgRO0I,oBARf,SAAclM,EAAOmM,GACnB,OAAO,aACLpM,YAAaC,EAAMD,YACnBO,QAASN,EAAMM,SACZ6L,KAIQD,EAlVC,SAAC,GAAuC,IAArCnL,EAAoC,EAApCA,QAAShB,EAA2B,EAA3BA,YAAaO,EAAc,EAAdA,QAAc,EAErB+J,mBAAS,IAFY,mBAE9C8L,EAF8C,KAEpC3B,EAFoC,OAKanK,oBAC/D,GANkD,mBAK9CkM,EAL8C,KAKnBhC,EALmB,OAU7BlK,oBAAU,GAVmB,mBAU9C+P,EAV8C,KAUxCC,EAVwC,OAWbhQ,mBAAS,GAXI,mBAW9CyM,EAX8C,KAWhCC,EAXgC,KAc/CC,EAAoBpE,iBAAO,MAKjCpI,qBAAU,WAAM,4CACd,4BAAA+B,EAAA,0DACqC,IAA/BgK,EADN,gCAEqBlQ,EAAkBkQ,GAFvC,OAEQ3R,EAFR,OAGI4P,GAAY,SAACU,GAAD,OACV/U,OAAOC,OAAO,GAAI8U,EAAlB/U,OAAA,KAAAA,CAAA,GAA2BoW,EAA4B3R,OAJ7D,4CADc,uBAAC,WAAD,wBASdwL,KACC,CAACmG,IAGJ,IAAIqE,GAAqB,IAAVR,EAAc,EAAIA,EAEjC,OACE,yBAAKhW,UAAU,6BACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,sBAAsBuH,IAAKqL,IACzCjW,EAAQ8J,OACP9J,EACGkS,MAvBY,GAwBV2H,EAAW,GAxBD,GAyBVA,EAAW,GAzBD,GA2BZ1K,KAAI,SAACtD,EAAGhC,GAAJ,OACHtK,EAAQsM,EAAEM,UACR,kBAAC,IAAMmH,SAAP,CAAgBlE,IAAG,0BAAqBvF,IACtC,yBACEuF,IAAG,iBAAYvF,GACfxG,UAAU,wDAEV,yBACEA,UAAU,4CACVC,MAAO,CAAEgP,SAAU,UAEnB,yBAAKjP,UAAU,uBACb,yBACEmN,IAAKjR,EAAQsM,EAAEM,UAAUwG,aACzBnG,QAAS,kBAAMmE,EAAQC,KAAR,iBAAuB/E,EAAE7J,MACxC+I,MAAM,OACNzH,MAAO,CAAEmN,aAAc,QACvBC,IAAG,yCACDnR,EAAQsM,EAAEM,UAAUwG,kBAK5B,yBAAKtP,UAAU,0BACb,yBAAKA,UAAU,8EACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,6BACVC,MAAO,CACLwQ,gBAAgB,sCAAD,OACbvU,EAAQsM,EAAEM,UAAUwG,aADP,SAYrB,yBAAKtP,UAAU,OACb,yBAAKA,UAAU,kCACZ9D,EAAQsM,EAAEM,UAAUyG,YADvB,KAEGrT,EACCsM,EAAEM,UACF+J,mBAAmBiB,UAAU,EAAG,GAJpC,QAaN,yBAAK9T,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAY6M,EAAEiJ,QACV9V,EAAY6M,EAAEiJ,QAAQjV,MACtB,GAHS,SAQrB,yBAAKwD,UAAU,YACb,yBAAKA,UAAU,gDACb,yBAAKA,UAAU,sBACZrE,EAAY6M,EAAEiJ,QACX9V,EAAY6M,EAAEiJ,QAAQlV,aACtB,QAMd,yBAAKyD,UAAU,YACb,yBAAKA,UAAU,6BACb,0BAAMA,UAAU,QAAhB,oBACA,0BAAMA,UAAU,cACb+T,KAAKC,OAAO,IAAIvV,KAAK+J,EAAEuL,MAAO,oBAMvC,yBAAK/T,UAAU,wEACZwI,EAAE9G,QAEL,yBAAK1B,UAAU,qCACZwI,EAAErM,OACD,yBAAK8D,MAAO,CAAEwK,aAAc,SAC1B,kBAAC,IAAD,CACEtK,MACe,mBAAbqI,EAAErM,OACE,OACa,cAAbqM,EAAErM,OACF,QACa,YAAbqM,EAAErM,OACF,sBACA,OAENiE,IAAI,WACJC,KAAM,MAIV,IAGJ,yBAAKL,UAAU,8BACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,oEACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACZwI,EAAEyL,MAAMxN,QAEX,yBAAKzG,UAAU,kBACb,kBAAC,IAAD,CACEoJ,SAAS,OACTpJ,UAAU,gBAGd,yBAAKA,UAAU,iBACZwI,EAAEuJ,SAAStL,QAEd,yBAAKzG,UAAU,iBACb,kBAAC,IAAD,CACEmJ,QAAS,WACPgH,EACEgC,IAA8B3J,EAAE+I,KAC3B,EACD/I,EAAE+I,MAGVnI,SAAS,OACTpJ,UAAU,wDAU5B,kBAACkU,GAAA,EAAD,CACEC,GAAIhC,IAA8B3J,EAAE+I,IACpCvR,UAAU,QAEV,yBAAKA,UAAU,2BAAf,aACa+R,EAASvJ,EAAE+I,KAAOQ,EAASvJ,EAAE+I,KAAK9K,OAAS,EADxD,KAGCsL,EAASvJ,EAAE+I,KACRQ,EAASvJ,EAAE+I,KACR1C,MACC6D,GAAgBA,EAAe,GAC/BA,GAAgBA,EAAe,GAhMjC,GAkMC5G,KAAI,SAAC6L,EAAGpD,GAAJ,OACH,yBACExI,IAAG,kBAAaoG,EAAb,YAA0CoC,GAC7CvU,UAAU,6DAEV,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAYgc,EAAElG,QACV9V,EAAYgc,EAAElG,QAAQjV,MACtB,GAHS,SAQrB,yBAAKwD,UAAU,OACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,mCACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAYgc,EAAElG,QACV9V,EAAYgc,EAAElG,QAAQjV,MACtB,GAHS,SAQrB,yBAAKwD,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,oCACZrE,EAAYgc,EAAElG,QACX9V,EAAYgc,EAAElG,QAAQlV,aACtB,IAEN,yBAAKyD,UAAU,4BACZ+T,KAAKC,OACJ,IAAIvV,KAAKkZ,EAAE5D,MACX,oBAOV,yBAAK/T,UAAU,6DACZ2X,EAAE3V,SAEL,yBAAKhC,UAAU,6DACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACZ2X,EAAE1D,MAAMxN,QAEX,yBAAKzG,UAAU,kBACb,kBAAC,IAAD,CACEoJ,SAAS,OACTpJ,UAAU,uCAS5B,GACJ,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,YACb,kBAAC0U,GAAD,CACEhF,MAAO1F,KAAK2K,KACV5C,EAASvJ,EAAE+I,KACPQ,EAASvJ,EAAE+I,KAAK9K,OA7QtB,EA8QM,GAENkB,QAAS+K,EACT/C,WAAYgD,EACZ/C,WAAY,CACVC,YAAa,aACbrF,SAAU,6BAQtB,MAIN,yBACExK,UAAU,8DACVC,MAAO,CAAEb,OAAQ,UAFnB,mIAQF,yBAAKY,UAAU,qEACb,yBAAKA,UAAU,iCACb,kBAAC0U,GAAD,CACE9E,WAAY,CACVC,YAAa,aACbrF,SAAU,uBAEZkF,MAAO1F,KAAK2K,KAAKhY,EAAQ8J,OA9Sd,GA+SXkB,QAAS6O,EACT7G,WAAYsG,WC5JXnO,oBARf,SAAclM,EAAOmM,GACnB,OAAO,aACLpM,YAAaC,EAAMD,YACnBO,QAASN,EAAMM,SACZ6L,KAIQD,EAxKE,SAAC,GAAwC,IAAtCiK,EAAqC,EAArCA,SAAUpW,EAA2B,EAA3BA,YAAaO,EAAc,EAAdA,QAAc,EAE/B+J,oBAAU,GAFqB,mBAEhD+P,EAFgD,KAE1CC,EAF0C,KAIjDrD,EAAoBpE,iBAAO,MAK7BgI,GAAqB,IAAVR,EAAc,EAAIA,EAEjC,OACE,yBAAKhW,UAAU,6BACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,sBAAsBuH,IAAKqL,IACzCb,EAAStL,OACRsL,EACGlD,MAXY,GAYV2H,EAAW,GAZD,GAaVA,EAAW,GAbD,GAeZ1K,KAAI,SAACtD,EAAGhC,GAAJ,OACH,yBACEuF,IAAG,kBAAavF,GAChBxG,UAAU,wDAEV,yBACEA,UAAU,4CACVC,MAAO,CAAEgP,SAAU,UAEnB,yBAAKjP,UAAU,uBACb,yBACEmN,IAAKjR,EAAQsM,EAAEM,UAAUwG,aACzBnG,QAAS,kBAAMmE,EAAQC,KAAR,iBAAuB/E,EAAE7J,MACxC+I,MAAM,OACNzH,MAAO,CAAEmN,aAAc,QACvBC,IAAG,yCACDnR,EAAQsM,EAAEM,UAAUwG,kBAK5B,yBAAKtP,UAAU,0BACb,yBAAKA,UAAU,8EACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,6BACVC,MAAO,CACLwQ,gBAAgB,sCAAD,OACbvU,EAAQsM,EAAEM,UAAUwG,aADP,SAYrB,yBAAKtP,UAAU,OACb,yBAAKA,UAAU,kCACZ9D,EAAQsM,EAAEM,UAAUyG,YADvB,KAEGrT,EAAQsM,EAAEM,UAAU+J,mBAAmBiB,UACtC,EACA,OAMV,yBAAK9T,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAY6M,EAAEiJ,QACV9V,EAAY6M,EAAEiJ,QAAQjV,MACtB,GAHS,SAQrB,yBAAKwD,UAAU,YACb,yBAAKA,UAAU,gDACb,yBAAKA,UAAU,yBACZrE,EAAY6M,EAAEiJ,QACX9V,EAAY6M,EAAEiJ,QAAQlV,aACtB,QAMd,yBAAKyD,UAAU,YACb,yBAAKA,UAAU,6BACb,0BAAMA,UAAU,QAAhB,gBACA,0BAAMA,UAAU,cACb+T,KAAKC,OAAO,IAAIvV,KAAK+J,EAAEuL,MAAO,oBAMvC,yBAAK/T,UAAU,8DACZwI,EAAExG,SAEL,yBAAKhC,UAAU,8BACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,oEACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACZwI,EAAEyL,MAAMxN,QAEX,yBAAKzG,UAAU,kBACb,kBAAC,IAAD,CACEoJ,SAAS,OACTpJ,UAAU,0BAYhC,yBACEA,UAAU,8DACVC,MAAO,CAAEb,OAAQ,UAFnB,uHAQF,yBAAKY,UAAU,qEACb,yBAAKA,UAAU,iCACb,kBAAC0U,GAAD,CACE9E,WAAY,CACVC,YAAa,aACbrF,SAAU,uBAEZkF,MAAO1F,KAAK2K,KAAK5C,EAAStL,OA/If,GAgJXkB,QAAS6O,EACT7G,WAAYsG,W,UC0GXkU,GAlQK,SAAC,GAAwD,IAAtD/tB,EAAqD,EAArDA,KAAMstB,EAA+C,EAA/CA,eAAgBU,EAA+B,EAA/BA,gBAAiBzd,EAAc,EAAdA,QAAc,EAC9C1G,mBAAS,CACnC5J,WAAY,GACZC,UAAW,GACXC,aAAc,GACdC,MAAO,GACPmpB,SAAU,GACV0E,gBAAiB,GACjB9Y,IAAK,GACL9U,MAAO,KATiE,mBACnEwG,EADmE,KAC3DqnB,EAD2D,OAY5CrkB,mBAAS,IAZmC,mBAYnEyF,EAZmE,KAY1DC,EAZ0D,KAcpE4e,EAAgB/b,iBAAO,MAE7BpI,qBAAU,WACJhK,EAAKI,OACP8tB,GAAU,SAACxZ,GAAD,OACR/U,OAAOC,OAAO,GAAI8U,EAAM,CACtBzU,WAAYD,EAAKC,WACjBC,UAAWF,EAAKE,UAChBC,aAAcH,EAAKG,aACnBG,MAAON,EAAKM,MACZF,MAAOJ,EAAKI,MACZC,MAAOL,EAAKK,aAIjB,CAACL,EAAKC,aAET,IAAMmuB,EAAgB,uCAAG,WAAO/c,GAAP,qBAAAtF,EAAA,6DACnBsiB,EAAYhd,EAAEoD,OAAO6Z,MAAM,GAC3BlG,EAAU,CACZmG,UAAW,EACXC,iBAAkB,IAClBC,cAAc,GALO,kBAQQC,aAAiBL,EAAWjG,GARpC,cAQfuG,EARe,gBASCD,KAAiBE,mBAAmBD,GATrC,OASfE,EATe,OAUrBX,GAAU,SAACxZ,GAAD,OAAU/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEtU,MAAOyuB,OAVhC,4GAAH,sDAchB1Q,EAAc,CAClB,CACEC,MAAO,UAAUpQ,KAAKnH,EAAO0iB,WAAa,KAAKvb,KAAKnH,EAAO0iB,UAC3Djd,MAAO,0CAET,CACE8R,MAAOvX,EAAO0iB,WAAa1iB,EAAOonB,gBAClC3hB,MAAO,yBAET,CACE8R,MAAOvX,EAAO0iB,SAASlf,QAAU,EACjCiC,MAAO,gDAIX,OACE,kBAAC,GAAD,CAAO9C,KAAMwkB,EAAiBzd,QAASA,GACrC,yBAAK3M,UAAU,gFACb,yBAAKA,UAAU,qCAAf,kBACA,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,yCACb,yBACEA,UAAU,iFACVC,MAAO,CAAEwQ,gBAAgB,OAAD,OAASxN,EAAOzG,MAAhB,OAExB,2BACEuU,YAAY,EACZL,SAAU8Z,EACV1uB,KAAK,OACLkE,UAAU,SACVuH,IAAKgjB,MAKX,yBACEvqB,UAAU,qCACVmJ,QAAS,kBAAMohB,EAAc5iB,QAAQgU,UAFvC,kBAQJ,yBAAK3b,UAAU,uBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,6BAAf,cACA,yBAAKA,UAAU,kBACb,2BACE+Q,YAAY,EACZjV,KAAK,OACLkE,UAAU,yBACV0J,MAAOzG,EAAO5G,WACdqU,SAAU,SAACjD,GACTA,EAAEkD,UACF2Z,GAAU,SAACxZ,GAAD,OACR/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEzU,WAAYoR,EAAEoD,OAAOnH,gBAMzD,yBAAK1J,UAAU,UACb,yBAAKA,UAAU,6BAAf,aACA,yBAAKA,UAAU,kBACb,2BACE+Q,YAAY,EACZjV,KAAK,OACLkE,UAAU,yBACV0J,MAAOzG,EAAO3G,UACdoU,SAAU,SAACjD,GACTA,EAAEkD,UACF2Z,GAAU,SAACxZ,GAAD,OACR/U,OAAOC,OAAO,GAAI8U,EAAM,CAAExU,UAAWmR,EAAEoD,OAAOnH,iBAO1D,yBAAK1J,UAAU,uBACb,yBAAKA,UAAU,qBAAf,SACA,yBAAKA,UAAU,UACb,2BACE2a,UAAQ,EACR5J,YAAY,EACZjV,KAAK,OACLkE,UAAU,mDACV0J,MAAOzG,EAAOvG,UAIpB,yBAAKsD,UAAU,uBACb,yBAAKA,UAAU,qBAAf,gBACA,yBAAKA,UAAU,UACb,2BACE+Q,YAAY,EACZjV,KAAK,OACLkE,UAAU,yBACV0J,MAAOzG,EAAO1G,aACdmU,SAAU,SAACjD,GACTA,EAAEkD,UACF2Z,GAAU,SAACxZ,GAAD,OACR/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEvU,aAAckR,EAAEoD,OAAOnH,gBAM3D,yBAAK1J,UAAU,uBACb,yBAAKA,UAAU,qBAAf,YACA,yBAAKA,UAAU,UACb,2BACElE,KAAK,WACLiV,YAAY,EACZ/Q,UAAU,yBACV0J,MAAOzG,EAAO0iB,SACdjV,SAAU,SAACjD,GACTA,EAAEkD,UACF2Z,GAAU,SAACxZ,GAAD,OACR/U,OAAOC,OAAO,GAAI8U,EAAM,CAAE6U,SAAUlY,EAAEoD,OAAOnH,gBAMvD,yBAAK1J,UAAU,uBACb,yBAAKA,UAAU,qBAAf,oBACA,yBAAKA,UAAU,UACb,2BACE+Q,YAAY,EACZjV,KAAK,WACLkE,UAAU,yBACV0J,MAAOzG,EAAOonB,gBACd3Z,SAAU,SAACjD,GACTA,EAAEkD,UACF2Z,GAAU,SAACxZ,GAAD,OACR/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEuZ,gBAAiB5c,EAAEoD,OAAOnH,gBAM9D,yBACE1J,UAAU,oEACVC,MAAO,CAAEb,OAAQ,OAAQ8R,QAASxF,EAAU,EAAI,IAE/CA,GAEH,yBAAK1L,UAAU,kBACb,yBACEA,UAAU,4EACVmJ,QAASwD,GAFX,UAMA,yBACE3M,UAAU,6DACVmJ,QAAO,sBAAE,gCAAAhB,EAAA,2DACH0gB,EAAWtO,EAAY/F,QAAO,SAAChM,GAAD,OAAQA,EAAEgS,UAC/B/T,SAAUxD,EAAO0iB,SAFvB,gBAGLha,EAAWkd,EAAS,GAAGngB,OAHlB,8BAKDwiB,EAAc,GAClBnvB,OAAOyc,KAAKvV,GAAQsF,SAAQ,SAACC,GACvBvF,EAAOuF,KACT0iB,EAAY1iB,GAAKvF,EAAOuF,OARvB,SAWWxF,EAASkoB,GAXpB,QAWDlqB,EAXC,QAYI0H,MAuBPnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS2D,EAAI0H,MACb5M,KAAM,cA3BVyD,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,kBACPC,QAAS,wCACTvB,KAAM,aAGVyD,EAAM8I,SAAS,CACbvM,KAAM,qBACNqvB,UAAWnqB,EAAIoqB,oBAGjB7rB,EAAM8I,SAAS,CACbvM,KAAM,cACNiB,aAAciE,EAAIoH,cAGpBshB,IACA/c,IACAya,aAAY,kBAAwBpmB,EAAIqqB,UAjCrC,6CAFX,YC6DKvjB,oBATf,SAAclM,EAAOmM,GACnB,OAAO,aACL3L,KAAMR,EAAMQ,KACZF,QAASN,EAAMM,QACfP,YAAaC,EAAMD,aAChBoM,KAIQD,EA7PC,SAACR,GACf,IAAMlL,EAAOkL,EAAMlL,KACbuG,EAAS2E,EAAMsP,MAAMjM,OAAOhI,OAC5BhH,EAAc2L,EAAM3L,YACpBO,EAAUoL,EAAMpL,QAChBovB,EAAehkB,EAAMsP,MAAMjM,OAAOkP,QALf,EAOa5T,mBAAS,CAC7CrJ,SAAU,GACVmV,SAAU,GACVlV,YAAa,GACbF,QAAS,GACTN,WAAY,GACZC,UAAW,KAbY,mBAOlBivB,EAPkB,KAOLC,EAPK,OAgBKvlB,mBAAS,IAhBd,mBAgBlBtJ,EAhBkB,KAgBTqV,EAhBS,OAiBO/L,mBAAS,IAjBhB,mBAiBlB8L,EAjBkB,KAiBR3B,EAjBQ,KAmBnBqb,EAAiBjd,kBAAO,GACxBkd,EAAkBld,kBAAO,GApBN,EAsBKvI,mBAAS,GAtBd,mBAsBlB4T,EAtBkB,KAsBTC,EAtBS,OAuBqB7T,oBAAS,GAvB9B,mBAuBlBmkB,EAvBkB,KAuBDuB,EAvBC,OAyBmB1lB,oBAAS,GAzB5B,mBAyBlByjB,EAzBkB,KAyBFkC,EAzBE,KAoEzB,OAzCAxlB,qBAAU,WAAM,4CACd,4BAAA+B,EAAA,0DACMxF,EADN,gCAEoBD,EAAQC,GAF5B,QAEQ3B,EAFR,QAGa0H,OACP8iB,EAAexqB,GAJrB,4CADc,uBAAC,WAAD,wBASdgL,KACC,CAACrJ,EAAQ+mB,EAAgBttB,EAAKQ,SAAS6J,SAE1CL,qBAAU,gBACaP,IAAjBylB,GACFxR,GAAYwR,KAEb,CAACA,IAEJllB,qBAAU,WAAM,4CACd,8BAAA+B,EAAA,yDAEgB,IAAZ0R,GACC4R,EAAe9jB,UAChB4jB,EAAY5uB,QAAQ8J,OAJxB,uBAMIglB,EAAe9jB,SAAU,EAN7B,SAOoB/E,EAAe2oB,EAAY5uB,SAP/C,QAOQqE,EAPR,QAQa0H,OACPsJ,EAAWhR,EAAIsV,WATrB,0BAWyB,IAAZuD,GAAkB6R,EAAgB/jB,QAX/C,wBAYI+jB,EAAgB/jB,SAAU,EAZ9B,UAaoB7E,EAAgByoB,EAAYxZ,UAbhD,SAaQ/Q,EAbR,QAca0H,OACP0H,EAAYpP,EAAIsV,WAftB,6CADc,uBAAC,WAAD,wBAoBdtK,KACC,CAAC6N,EAAS0R,EAAY5uB,QAAQ8J,SAG/B,yBAAKzG,UAAU,iBAAiBC,MAAO,CAAEsY,UAAW,UAClD,kBAAC,GAAD,CACEmR,eAAgB,kBAAMkC,GAAmBlC,IACzCU,gBAAiBA,EACjBhuB,KAAMA,EACNuQ,QAAS,kBAAMgf,GAAmB,MAEpC,yBAAK3rB,UAAU,+CACb,yBAAKA,UAAU,4HACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,kEACb,yBACEA,UAAU,sDACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAYgH,GAAUhH,EAAYgH,GAAQnG,MAAQ,GADrC,QAKnB,yBAAKwD,UAAU,sBACZurB,EAAYlvB,YAAckvB,EAAYjvB,UACrC,yBAAK0D,UAAU,gFACb,yBAAKA,UAAU,iBACZurB,EAAYlvB,WAAakvB,EAAYlvB,WAAa,IAErD,yBAAK2D,UAAU,YACZurB,EAAYjvB,UAAYivB,EAAYjvB,UAAY,KAIrD,yBAAK0D,UAAU,qEAAf,sBAKF,yBAAKA,UAAU,qFAAf,IACIrE,EAAYgH,GAAUhH,EAAYgH,GAAQpG,aAAe,IAE7D,yBAAKyD,UAAU,kEACb,yBACEA,UAAU,mDACVmJ,QAAS,kBAAMwiB,GAAmB,KAFpC,oBAUR,yBAAK3rB,UAAU,sBACb,yBAAKA,UAAU,kEACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,2CAAf,YAGA,yBAAKA,UAAU,gDACZurB,EAAY3uB,SAAS6J,SAG1B,yBAAKzG,UAAU,gCACb,yBAAKA,UAAU,2CAAf,WAGA,yBAAKA,UAAU,gDACZurB,EAAY1uB,YAAY4J,SAG7B,yBAAKzG,UAAU,gCACb,yBAAKA,UAAU,2CAAf,WAGA,yBAAKA,UAAU,oEACZurB,EAAY5uB,QAAQ8J,SAGzB,yBAAKzG,UAAU,mBACb,yBAAKA,UAAU,2CAAf,YAGA,yBAAKA,UAAU,gDACZurB,EAAYxZ,SAAStL,YAOhC,yBAAKzG,UAAU,wFACb,yBAAKA,UAAU,UACb,kBAAC,KAAD,CACEC,MAAO,CACLgP,SAAU,OACVC,UAAW,OACXC,WAAY,WAGd,yBACEnP,UAAU,oFACVC,MAAO,CACL4rB,UAAW,wBACXC,aACc,IAAZjS,EACI,4BACA,yBAER1Q,QAAS,kBAAM2Q,EAAW,KAT5B,YAaA,yBACE7Z,MAAO,CACL4rB,UAAW,wBACXC,aACc,IAAZjS,EACI,4BACA,yBAER7Z,UAAU,oFACVmJ,QAAS,kBAAM2Q,EAAW,KAT5B,WAaA,yBACE7Z,MAAO,CACL4rB,UAAW,wBACXC,aACc,IAAZjS,EACI,4BACA,yBAER7Z,UAAU,oFACVmJ,QAAS,kBAAM2Q,EAAW,KAT5B,WAaA,yBACE7Z,MAAO,CACL4rB,UAAW,wBACXC,aACc,IAAZjS,EACI,4BACA,yBAER7Z,UAAU,oFACVmJ,QAAS,kBAAM2Q,EAAW,KAT5B,eAgBO,IAAZD,EACC,kBAAC,GAAD,CACE3d,QAASA,EACTwtB,eAAgB,kBAAMkC,GAAmBlC,IACzC7c,OAAQ0e,EAAY3uB,SACpBktB,MAAO1tB,EAAKmV,MAAQga,EAAYha,MAEpB,IAAZsI,EACF,kBAACkS,GAAD,CACE7vB,QAASA,EACT2Q,OAAQ0e,EAAY1uB,cAER,IAAZgd,EACF,kBAAC,GAAD,CAAS3d,QAASA,EAASS,QAASA,IACtB,IAAZkd,EACF,kBAAC,GAAD,CAAU3d,QAASA,EAAS6V,SAAUA,IAEtC,QCvLKia,GA/DM,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,WAAqBnmB,GAAW,EAApB3J,KAAoB,mDAC3D+vB,EAAcpmB,EAAKqmB,cAAchhB,IAD0B,EAEjCnF,mBAAS,CAAEomB,OAAO,EAAO7R,OAAO,IAFC,mBAE1D8R,EAF0D,KAEhDC,EAFgD,KA6CjE,OAzCAnmB,qBAAU,WAAM,4CACd,8BAAA+B,EAAA,yDAEgB,QADV1L,EAAQ2qB,aAAaoF,QAAQ,uBACV/vB,EAAMgK,OAF/B,gBAGI8lB,GAAY,SAACzb,GAAD,OAAU/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEub,OAAO,OAH3D,sCAKqBhrB,EAAe,CAC9B5E,UANN,QAKQ+D,EALR,QAQckI,OAiBR4E,EAAQC,KAAK,KACbhO,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,yBACPC,QAAS,2CACTvB,KAAM,cAtBQ,kBAAd0E,EAAK8b,KACPiQ,GAAY,SAACzb,GAAD,OACV/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEub,OAAO,EAAM7R,OAAO,QAGhDjb,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,yBACPC,QAAS,oDACTvB,KAAM,aAGVwR,EAAQC,KAAK,MAtBrB,4CADc,uBAAC,WAAD,wBAsCdvB,KACC,IAEIsgB,EAASD,MACd,kBAAC,IAAD,iBACMtmB,EADN,CAEE0mB,OAAQ,SAACnlB,GACP,OAAOglB,EAAS9R,MACd,kBAACyR,EAAc3kB,GAEf,kBAAC,IAAD,CACEolB,GAAI,CAAEC,SAAUT,EAAYtwB,MAAO,CAAEuwB,YAAaA,UAM1D,+B,UCuBWS,GApFM,WAAO,IAAD,EACiB3mB,mBAAS,IAD1B,mBAClBwZ,EADkB,KACHC,EADG,KAGrBmN,GAAwB,EAExBC,EAAsB1F,aAAaoF,QAAQ,+BAG7CM,EADEA,EACoBlsB,KAAKmsB,MAAMD,GAEX,GAVC,qBAaXrN,GAbW,IAazB,2BAA6B,CAAC,IAArBjX,EAAoB,QAC3B,IAAKskB,EAAoBlZ,SAASpL,EAAEqX,aAAc,CAChDgN,EAAwBrkB,EACxB,QAhBqB,oCAoBGvC,oBAAS,GApBZ,mBAoBlB+mB,EApBkB,KAoBVC,EApBU,KAmCzB,OAbA7mB,qBAAU,WAAM,4CACd,4BAAA+B,EAAA,sEACmB3D,KADnB,QACMhE,EADN,QAEYkI,OACJlI,EAAKiG,QACPiZ,EAAiBlf,GAJvB,4CADc,uBAAC,WAAD,wBAUdwL,KACC,IAEI6gB,GACLA,EAAsBhN,cACrBmN,EACD,yBACEhtB,UAAS,sEACwB,YAA/B6sB,EAAsB/wB,KAClB,aAC+B,gBAA/B+wB,EAAsB/wB,KACtB,aAC+B,UAA/B+wB,EAAsB/wB,KACtB,YACA,KAGN,yBACEqN,QAAS,WACP8jB,GAAU,GACVH,EAAoBvf,KAAKsf,EAAsBhN,aAE/CuH,aAAaC,QACX,8BACAzmB,KAAKC,UAAUisB,KAGnB9sB,UAAU,yGACVC,MAAO,CAAEuV,MAAO,OAAQ9I,IAAK,EAAGkF,OAAQ,EAAGC,OAAQ,OAAQ3E,OAAQ,IAEnE,kBAAC,KAAD,CAAKlN,UAAU,eAEjB,yBAAKA,UAAU,uCACb,yBAAKA,UAAU,yCACb,yBACEA,UAAU,kCACVC,MAAO,CAAEyH,MAAO,UAElB,yBAAK1H,UAAU,yBACb,yBAAKA,UAAU,yCACZ6sB,EAAsBhN,cAG3B,yBAAK7f,UAAU,WAAWC,MAAO,CAAEyH,MAAO,aAKhD,ICvDWsb,OA3Bf,SAAuB1b,GACrB,OACE,uBAAKtH,UAAU,8CACb,uBACEA,UAAU,+BACVC,MAAO,CAAEyM,IAAK,MAAO8I,MAAO,MAAOpM,SAAU,SAE5C9B,EAAMoI,MAAQpI,EAAMoI,MAAQ,GAE/B,qCAAKiJ,QAAQ,gBAAgBjR,MAAM,QAAWJ,GAC5C,wBACE6R,EAAE,+JACFT,KAAK,YAEP,wBACES,EAAE,6YACFT,KAAK,YAEP,wBACES,EAAE,4JACFT,KAAK,e,UCyDA5Q,oBARf,SAAclM,EAAOmM,GACnB,OAAO,aACL3L,KAAMR,EAAMQ,KACZF,QAASN,EAAMM,SACZ6L,KAIQD,EA1EY,SAAC,GAAyB,IAAvB+E,EAAsB,EAAtBA,OAAQ1D,EAAc,EAAdA,QACpC,OACE,yBAAKnJ,UAAU,OACZ6M,EAAOf,KAAI,SAACtD,EAAGhC,GAAJ,OACV,yBACEuF,IAAG,iBAAYvF,GACfxG,UAAU,0BACVC,MAAO,CAAEitB,UAAW,QAASC,SAAU,GACvChkB,QAAS,WACPmE,EAAQC,KAAR,WAAiB/E,EAAEvJ,KAAO,SAAW,QAArC,YAAgDuJ,EAAE7J,KAClDwK,MAGF,yBAAKnJ,UAAU,kBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,yCACb,yBACEA,UAAU,6BACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACbjI,EAAE5J,YAAF,yCACsC4J,EAAE5J,aACpC,uDAHS,UASvB,yBAAKoB,UAAU,OACb,yBACEA,UAAU,qCACVmJ,QAAS,kBAAMmE,EAAQC,KAAR,iBAAuB/E,EAAE7J,OAExC,yBAAKqB,UAAU,iBACZwI,EAAEpL,MAAQoL,EAAEpL,MAAQoL,EAAEvJ,OAG3B,yBAAKe,UAAU,kCACb,yBAAKA,UAAU,gBAAgBC,MAAO,CAAEgP,SAAU,SAC/CzG,EAAEmF,UAAUlH,OACT+B,EAAEmF,UACC7B,KAAI,SAAC8B,GACJ,IAAIwf,EAAaxtB,EAAqBkO,MACpC,SAACC,GAAD,OAAOA,EAAEpP,KAAOiP,KAEdyf,EAAcxtB,EAAqBiO,MACrC,SAACC,GAAD,OAAOA,EAAEpP,KAAOiP,KAElB,OAAOwf,EACHA,EAAWnuB,KACXouB,EACAA,EAAYpuB,KACZ,aAEL4L,KAAK,KACR,sBCiHP/C,oBARf,SAAclM,EAAOmM,GACnB,OAAO,aACLpM,YAAaC,EAAMD,YACnBO,QAASN,EAAMM,SACZ6L,KAIQD,EAtKa,SAAC,GAAuC,IAArCnL,EAAoC,EAApCA,QAAShB,EAA2B,EAA3BA,YAAaO,EAAc,EAAdA,QAAc,EACC+J,oBAC/D,GAF8D,mBAC1DkM,EAD0D,KAC/BhC,EAD+B,KASjE,OAAOxT,EACJkS,MACC,EACA,GAED/C,KAAI,SAACtD,EAAGhC,GAAJ,OACH,yBACE2C,QAAS,kBAAMmE,EAAQC,KAAR,iBAAuB/E,EAAEM,YACxCiD,IAAG,iBAAYvF,GACfxG,UAAU,+EAEV,yBACEA,UAAU,4CACVC,MAAO,CAAEgP,SAAU,UAEnB,yBAAKjP,UAAU,uBACb,yBACEmN,IAAKjR,EAAQsM,EAAEM,UAAUwG,aACzB5H,MAAM,OACNzH,MAAO,CAAEmN,aAAc,OAAQyG,OAAQ,WACvCxG,IAAG,yCACDnR,EAAQsM,EAAEM,UAAUwG,kBAK5B,yBAAKtP,UAAU,0BACb,yBAAKA,UAAU,8EACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,6BACVC,MAAO,CACLwQ,gBAAgB,sCAAD,OACbvU,EAAQsM,EAAEM,UAAUwG,aADP,SAMrB,yBAAKtP,UAAU,OACb,yBAAKA,UAAU,0BACZ9D,EAAQsM,EAAEM,UAAUyG,YADvB,KAEGrT,EAAQsM,EAAEM,UAAU+J,mBAAmBiB,UAAU,EAAG,IAEvD,yBAAK9T,UAAU,6BACb,yBAAKA,UAAU,iBAAiBwI,EAAEgH,kBAK1C,yBAAKxP,UAAU,UACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,oCACVC,MAAO,CACLwQ,gBAAgB,OAAD,OACb9U,EAAY6M,EAAEiJ,QACV9V,EAAY6M,EAAEiJ,QAAQjV,MACtB,GAHS,SAQrB,yBAAKwD,UAAU,YACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,sBACZrE,EAAY6M,EAAEiJ,QACX9V,EAAY6M,EAAEiJ,QAAQlV,aACtB,QAMd,yBAAKyD,UAAU,YACb,yBAAKA,UAAU,kBACb,0BAAMA,UAAU,QAAhB,oBACA,0BAAMA,UAAU,cACb+T,KAAKC,OAAO,IAAIvV,KAAK+J,EAAEuL,MAAO,sBAO3C,yBAAK/T,UAAU,gDACZwI,EAAE9G,QAEL,yBAAK1B,UAAU,iDACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,6DACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACZwI,EAAErM,OACD,yBAAK8D,MAAO,CAAEwK,aAAc,SAC1B,kBAAC,IAAD,CACEtK,MACe,mBAAbqI,EAAErM,OACE,OACa,cAAbqM,EAAErM,OACF,QACa,YAAbqM,EAAErM,OACF,sBACA,OAENiE,IAAI,WACJC,KAAM,MAIV,KAIN,yBAAKL,UAAU,iBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,iBAAiBwI,EAAEyL,MAAMxN,QACxC,yBAAKzG,UAAU,kBACb,kBAAC,IAAD,CACEoJ,SAAS,OACTpJ,UAAU,gBAGd,yBAAKA,UAAU,iBAAiBwI,EAAEuJ,SAAStL,QAC3C,yBAAKzG,UAAU,YACb,kBAAC,IAAD,CACEmJ,QAAS,WACPgH,EACEgC,IAA8B3J,EAAE+I,KAAO,EAAI/I,EAAE+I,MAGjDnI,SAAS,OACTpJ,UAAU,8DCkDnB8H,oBATf,SAAclM,EAAOmM,GACnB,OAAO,aACL3L,KAAMR,EAAMQ,KACZY,OAAQpB,EAAMoB,OACdO,SAAU3B,EAAM2B,UACbwK,KAIQD,EA/LG,SAACR,GACjB,IAAMgmB,EAAa,CAAC,MAAO,SAAU,SAAU,WACzCpwB,EAAWoK,EAAMtK,OAAOE,SACxBK,EAAW+J,EAAM/J,SAHI,EAID0I,mBAAS,IAJR,mBAIpBhJ,EAJoB,KAIbswB,EAJa,OAKGtnB,mBAAS,IALZ,mBAKpBtJ,EALoB,KAKXqV,EALW,OAMC/L,mBAAS,IANV,mBAMpB4G,EANoB,KAMZ+B,EANY,OAOC3I,mBAAS,IAPV,mBAOpB6R,EAPoB,KAOZC,EAPY,OAQW9R,oBAAS,GARpB,mBAQpBunB,EARoB,KAQPC,EARO,KASrBC,EAAelf,kBAAO,GAEtB4J,EAAS,WACb7Y,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,QACPC,QAAS,uDACTvB,KAAM,cAwDZ,OApDAsK,qBAAU,WAAM,4CACd,gCAAA+B,EAAA,0DACMlL,EADN,oBAEIwwB,GAAe,GACfC,EAAa/lB,SAAU,EACN,YAAbzK,GAAuC,QAAbA,EAJlC,iCAK0BoG,EAAcrG,GALxC,QAKUN,EALV,QAMmB+L,OACNglB,EAAa/lB,SAChBqK,EAAWrV,EAAQkS,MAAM,EAAG,IARtC,wBAYMmD,EAAW,IAZjB,WAeqB,WAAb9U,GAAsC,QAAbA,EAfjC,kCAgByBiO,GAAalO,EAAOM,EAASC,gBAhBtD,SAgBUqP,EAhBV,QAkBiBhB,QACJ6hB,EAAa/lB,SAChBiH,EAAU/B,EAAOhB,QAAQgD,MAAM,EAAG,KAGpCuJ,IAvBR,wBA0BMxJ,EAAU,IA1BhB,WA4BqB,WAAb1R,GAAsC,QAAbA,EA5BjC,kCA6ByBmO,GAAapO,EAAOM,EAASC,gBA7BtD,SA6BUsa,EA7BV,QA8BiBjM,QACJ6hB,EAAa/lB,SAChBoQ,EAAUD,EAAOjM,QAAQgD,MAAM,EAAG,KAGpCuJ,IAnCR,wBAsCML,EAAU,IAtChB,gCAyCI2V,EAAa/lB,SAAU,EACvB8lB,GAAe,GACf7e,EAAU,IACVmJ,EAAU,IACV/F,EAAW,IA7Cf,6CADc,uBAAC,WAAD,wBAiDdhG,KACC,CAAC/O,EAAOC,IAGT,yBAAK8C,UAAU,wBACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEmb,aAAa,WACbH,MAAOsS,EACPlS,SAAU,SAACsC,GAAD,OACRne,EAAM8I,SAAS,CACbvM,KAAM,gBACNkB,OAAQ,CAAEE,SAAUowB,EAAW5P,OAGnC1X,aAAc,QACdhG,UAAU,gCACVib,QAAS/d,IAEX,yBAAK8C,UAAU,yBACb,2BACE2tB,OAAM,sBAAE,sBAAAxlB,EAAA,sEACA,IAAIylB,SAAQ,SAACC,GAAD,OAAazE,WAAWyE,EAAS,QAD7C,OAENJ,GAAe,GAFT,2CAIRK,QAAO,sBAAE,sBAAA3lB,EAAA,+EAAYslB,GAAe,IAA3B,2CACT/jB,MAAOzM,EACP8wB,QAAS,SAACtgB,GACU,KAAdA,EAAEga,UACJ8F,EAAS,IACThuB,EAAM8I,SAAS,CACbvM,KAAM,gBACNkB,OAAQ,CAAEC,WAEZqQ,EAAQC,KAAK,aAGjBmD,SAAU,SAACjD,GACTA,EAAEkD,UACF4c,EAAS9f,EAAEoD,OAAOnH,QAEpB5N,KAAK,OACLiV,YAAY,EACZ/Q,UAAS,gBAEX,kBAAC,KAAD,CACEmJ,QAAS,kBAAMmE,EAAQC,KAAK,YAC5BnE,SAAS,OACTpJ,UAAU,8CACVC,MAAO,CAAEyM,IAAK,EAAGkF,OAAQ,EAAG4D,MAAO,OAAQ3D,OAAQ,YAIzD,yBACE7R,UAAU,qEACVC,MAAO,CAAEyM,IAAI,OAASc,KAAM,EAAGgO,UAAW,UAE1C,yBAAKxb,UAAU,UACZwtB,EACC,kBAAC,IAAMvd,SAAP,KACGpD,EAAOpG,OACN,kBAAC,IAAMwJ,SAAP,KACE,yBAAKjQ,UAAU,6CAAf,WACW6M,EAAOpG,OADlB,KAGA,kBAAC,GAAD,CACE0C,QAAS,kBAAMokB,EAAS,KACxB1gB,OAAQA,KAIZ,GAEDiL,EAAOrR,OACN,kBAAC,IAAMwJ,SAAP,KACE,yBAAKjQ,UAAU,6CAAf,WACW8X,EAAOrR,OADlB,KAGA,kBAAC,GAAD,CACEoG,OAAQiL,EACR3O,QAAS,kBAAMokB,EAAS,QAI5B,GAED5wB,EAAQ8J,OACP,kBAAC,IAAMwJ,SAAP,KACE,yBAAKjQ,UAAU,6CAAf,YACYrD,EAAQ8J,OADpB,KAGA,kBAAC,GAAD,CACE9J,QAASA,EACTwM,QAAS,kBAAMokB,EAAS,QAI5B,IAIJ,IAGJ,yBAAKvtB,UAAU,iBCuMVguB,oBAAmBlmB,aATlC,SAAclM,EAAOmM,GACnB,OAAO,aACL3L,KAAMR,EAAMQ,KACZY,OAAQpB,EAAMoB,OACdqC,oBAAqBzD,EAAMyD,qBACxB0I,KAI2BD,EA9WnB,SAACR,GACd,IAAMlL,EAAOkL,EAAMlL,KACbiD,EAAsBiI,EAAMjI,oBAC5BD,EAASkI,EAAMlI,OAHG,EAKmB6G,oBAAS,GAL5B,mBAKjBgoB,EALiB,KAKFC,EALE,KAMlBC,EAAa3f,iBAAO,KANF,EAOUvI,mBAAS,MAPnB,mBAOjBmoB,EAPiB,KAONC,EAPM,OAQkBpoB,mBAAS,IAR3B,mBAQjBnJ,EARiB,KAQFsmB,EARE,KASlBkL,EAAiB9f,iBAAO,MAExB+f,EAAWC,cA4CjB,OA1CApoB,qBAAU,WACR,SAASqoB,IACP,IAAIC,EAAUjvB,OAAOivB,QACjBP,EAAWxmB,QAAU+mB,EACvBL,EAAa,QAEbA,EAAa,MAEfF,EAAWxmB,QAAU+mB,EAEnBR,EADc,IAAZQ,GAQN,OAFAjvB,OAAOkvB,iBAAiB,SAAUF,GAE3B,WACLhvB,OAAOmvB,oBAAoB,SAAUH,MAEtC,IAEHroB,qBAAU,WAAM,4CACd,4BAAA+B,EAAA,0DACM/L,EAAKU,cADX,gCAEqB8H,GAAqBxI,EAAKU,eAF/C,QAEQ0D,EAFR,QAGckI,OACR0a,EACE5iB,EAAKsL,KAAI,SAACtD,GAAD,OAAOzM,OAAOC,OAAO,GAAIwM,EAAG,CAAEqmB,MAAM,QALrD,4CADc,uBAAC,WAAD,wBAWd7iB,KACC,CAAC5P,IAEJgK,qBAAU,WACJhH,GACFG,EAAM8I,SAAS,CAAEvM,KAAM,aAAcsD,aAEtC,CAACA,IAEyB,WAAtBmvB,EAAS5B,UAA+C,YAAtB4B,EAAS5B,SAChD,yBACE3sB,UAAU,cACVC,MAAO,CACLoF,SAAU,SACV6H,OAAQ,GACR4N,WAAY,WACZpO,IAAmB,OAAd0hB,EAAqB,MAArB,WAAiChvB,EAAjC,MACLoO,KAAM,EACNgI,MAAO,IAGT,kBAAC,GAAD,MACA,yBACExV,UAAS,6DACNiuB,EAA6B,GAAb,aAGnB,yBACEjuB,UAAS,gBACe,WAAtBuuB,EAAS5B,SAAwB,qBAAuB,KAG1D,yBAAK3sB,UAAU,mFACb,yBAAKA,UAAU,mEACb,yBACEA,UAAU,gDACVmJ,QAAS,kBAAMmE,EAAQC,KAAK,OAE5B,yBAAKvN,UAAU,kBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,YACb,yBAAKA,UAAU,0BAAf,cACA,yBACEA,UAAU,gDACVC,MAAO,CAAEmJ,SAAU,OAAQkM,UAAW,UAFxC,gBASN,yBACEtV,UAAU,mCACVmJ,QAAS,kBAAMmE,EAAQC,KAAK,OAE5B,yBAAKvN,UAAU,qBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,0BAAf,cACA,yBACEA,UAAU,gDACVC,MAAO,CAAEmJ,SAAU,OAAQkM,UAAW,UAFxC,eAQJ,yBAAKtV,UAAU,8BACb,kBAAC,GAAD,CAAWb,aAAcC,KAE3B,yBAAKY,UAAU,YACb,yBAAKA,UAAU,kBACZ5D,EAAKG,aACJ,yBAAKyD,UAAU,YACb,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEwF,QAAS,SAACwD,GAAD,OACP,yBACEhJ,UAAU,+BACVC,MAAO,CAAEgP,SAAU,QAASvH,MAAO,SAElC5K,EAAc2J,OACb3J,EAAcgP,KAAI,SAACtD,EAAGhC,GAAJ,OAChB,yBACEuF,IAAG,uBAAkBvF,GACrBxG,UAAS,4BACPwG,IAAM1J,EAAc2J,OAAS,EACzB,iBACA,KAGN,yBAAKzG,UAAU,0CACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,YACZwI,EAAE+a,SAEL,yBAAKvjB,UAAU,0CACb,+BACG+T,KAAKC,OACJ,IAAIvV,KAAK+J,EAAEyX,YACX,oBAMV,yBAAKjgB,UAAU,iCACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,YACZwI,EAAEqX,aAEL,yBAAK7f,UAAU,YACb,kBAAC,KAAD,CACEmJ,QAAO,sBAAE,8BAAAhB,EAAA,sElEiCZxJ,EkE/BO6J,EAAE+I,IlE+BL5O,EkE9BGvG,EAAKmV,IlE+B1CjR,EAAgB,6BAA8B,CAAE3B,KAAIgE,WkElCV,cAKE+F,QACHomB,EAAoBvvB,EAAM+mB,WAC3BlqB,KAAKU,eAIU,KAHdiyB,EAAWD,EAAkBjmB,WAC/B,SAACmmB,GAAD,OAAOA,IAAMxmB,EAAE+I,SAGfud,EAAkBlF,OAChBmF,EACA,GAGJxvB,EAAM8I,SAAS,CACbvM,KAAM,cACNiB,aAAc,CACZD,cAAegyB,MApBd,iClEiCb,IAACnwB,EAAIgE,IkEjCQ,OAyBTyG,SAAS,OACTpJ,UAAU,kDAQtB,yBAAKA,UAAU,kCAAf,6CAON,yBAAKA,UAAU,YACb,kBAAC,GAAD,CACE0P,MAAO5S,EAAc2J,aAO/B,GAEF,yBAAKzG,UAAU,uBACZ5D,EAAKG,aACJ,yBAAKyD,UAAU,qCACb,kBAAC,GAAD,CACEwF,QAAS,SAACwD,GAAD,OACP,yBACE/I,MAAO,CACLmN,aAAc,MACdX,SAAU,SACVkR,SAAS,GAAD,OAAK3U,EAAL,QAGK,kBAAd5M,EAAKkgB,KACJ,yBACEtc,UAAU,6BACVmJ,QAAS,WACPmlB,EAAe3mB,QAAQgU,QACvBrO,EAAQC,KAAR,YAJJ,kBAUA,GAEF,yBACEvN,UAAU,6BACVmJ,QAAS,WACPmlB,EAAe3mB,QAAQgU,QACvBrO,EAAQC,KAAR,mBAAyBnR,EAAKmV,QAJlC,cASA,yBACEvR,UAAU,6BACVmJ,QAAS,WACPmlB,EAAe3mB,QAAQgU,QACvBrO,EAAQC,KAAR,mBAAyBnR,EAAKmV,IAA9B,SAJJ,cASA,yBACEvR,UAAU,6BACVmJ,QAAS,WACPmlB,EAAe3mB,QAAQgU,QACvBrO,EAAQC,KAAR,mBAAyBnR,EAAKmV,IAA9B,SAJJ,eASA,yBACEvR,UAAU,eACVmJ,QAAS,WACPmlB,EAAe3mB,QAAQgU,QACvByL,aAAa6H,WAAW,qBACxB1vB,EAAM8I,SAAS,CACbvM,KAAM,WACNM,KAAM,CACJC,WAAY,GACZC,UAAW,GACXC,aAAc,GACdC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPR,QAAS,GACTS,QAAS,GACTC,SAAU,GACVC,YAAa,GACbC,cAAe,MAGnBwQ,EAAQC,KAAK,OArBjB,aA6BJ,yBAAKvN,UAAU,SAASuH,IAAK+mB,GAC3B,yBAAKtuB,UAAU,oDACb,yBACEA,UAAU,kDACVC,MAAO,CACLwQ,gBAAgB,OAAD,OAASrU,EAAKI,MAAd,KACfmnB,OAAQ,qBAGZ,yBAAK3jB,UAAU,mCACZ5D,EAAKG,cAER,yBAAKyD,UAAU,6BACb,kBAAC,KAAD,CAAeoJ,SAAS,cAOlC,yBAAKpJ,UAAU,kDACb,yBACEA,UAAU,iCACVmJ,QAAS,WACPmE,EAAQC,KAAK,YAHjB,SAQA,yBACEvN,UAAU,iCACVmJ,QAAS,kBAAMmE,EAAQC,KAAK,aAF9B,YASiB,WAAtBghB,EAAS5B,SACR,kBAAC,IAAD,CACE3sB,UAAU,uDACVoJ,SAAS,OACTD,QAAS,kBACP5J,EAAM8I,SAAS,CACbvM,KAAM,4BACNwD,UAAWD,OAKjB,SASd,kCCnPWyI,oBARf,SAAclM,EAAOmM,GACnB,OAAO,aACL3L,KAAMR,EAAMQ,KACZmB,SAAU3B,EAAM2B,UACbwK,KAIQD,EAtHA,SAAC,GAAwB,IAAtB1L,EAAqB,EAArBA,KAAMmB,EAAe,EAAfA,SAChB6b,EAAY,CAChB,CAAEna,KAAM,OAAQsB,KAAM,IAAK2uB,WAAW,GACtC,CACEjwB,KAAM,cACNiwB,UAAW9yB,EAAKG,aAChBgE,KAAMnE,EAAKmV,IAAL,mBAAuBnV,EAAKmV,IAA5B,MAAsC,UAE9C,CACE2d,UAAW9yB,EAAKG,aAChB0C,KAAM,aACNsB,KAAMnE,EAAKmV,IAAL,mBAAuBnV,EAAKmV,IAA5B,MAAsC,UAE9C,CAAEtS,KAAM,WAAYsB,KAAM,IAAK2uB,WAAW,GAC1C,CAAEjwB,KAAM,UAAWsB,KAAM,IAAK2uB,WAAW,IAGrChV,EAAc,CAClB,CAAEb,KAAMc,KAAa5Z,KAAMhD,EAASY,cACpC,CAAEkb,KAAMe,KAAa7Z,KAAMhD,EAASa,eACpC,CAAEib,KAAMgB,KAAc9Z,KAAMhD,EAASe,cACrC,CAAE+a,KAAMiB,KAAW/Z,KAAMhD,EAASc,cAG9B8wB,EAAgB,CACpB,CAAElwB,KAAM,iBAAkBsB,KAAM,mBAChC,CAAEtB,KAAM,iBAAkBsB,KAAM,mBAChC,CAAEtB,KAAM,uBAAwBsB,KAAM,0BAGlCguB,EAAWC,cAEjB,MAA6B,WAAtBD,EAAS5B,UAA+C,YAAtB4B,EAAS5B,SAChD,yBAAK3sB,UAAU,iEACb,yBACEA,UAAS,kCACe,WAAtBuuB,EAAS5B,SAAwB,qBAAuB,KAG1D,yBAAK3sB,UAAU,6DACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,kBACZoZ,EACE5E,QAAO,SAAChM,GAAD,OAAOA,EAAE0mB,aAChBpjB,KAAI,SAACtD,EAAGhC,GAAJ,OACH,yBACEuF,IAAG,sBAAiBvF,GACpBxG,UAAU,4CACVmJ,QAAS,kBAAMmE,EAAQC,KAAK/E,EAAEjI,QAE7BiI,EAAEvJ,WAKb,yBAAKe,UAAU,gCACb,yBAAKA,UAAU,kEACZka,EAAYpO,KAAI,SAACtD,EAAGhC,GAAJ,OACf,yBACEuF,IAAG,sBAAiBvF,GACpBxG,UAAS,sDACPwG,IAAM0T,EAAYzT,OAAS,EAAI,IAAM,MAGvC,yBACEzG,UAAU,uDACVmJ,QAAS,WACP1J,OAAOmG,KAAK4C,EAAEjI,QAGhB,kBAACiI,EAAE6Q,KAAH,CAAQjQ,SAAS,OAAOpJ,UAAU,sBAO9C,yBAAKA,UAAU,oEACb,yBAAKA,UAAU,iBAAf,6BACA,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,kBACZmvB,EAAcrjB,KAAI,SAACtD,EAAGhC,GAAJ,OACjB,kBAAC,IAAMyJ,SAAP,CAAgBlE,IAAG,sBAAiBvF,IAClC,yBACExG,UAAU,0CACVmJ,QAAS,kBAAMmE,EAAQC,KAAK/E,EAAEjI,QAE7BiI,EAAEvJ,MAEL,yBACEe,UAAU,0CACVmJ,QAAS,kBAAMmE,EAAQC,KAAK/E,EAAEjI,QAE7BiI,EAAEvJ,KAAK2W,MAAM,KAAK,IAEpBpP,IAAM2oB,EAAc1oB,OAAS,GAC5B,yBAAKzG,UAAU,QAAf,cAUhB,MCmNW8H,oBATf,SAAclM,EAAOmM,GACnB,OAAO,aACL3L,KAAMR,EAAMQ,KACZF,QAASN,EAAMM,QACfqB,SAAU3B,EAAM2B,UACbwK,KAIQD,EAvTD,SAACR,GACb,IAAM3F,EAAU2F,EAAMsP,MAAMjM,OAAOhJ,QAC7BzF,EAAUoL,EAAMpL,QAChB0F,EAAS0F,EAAM/J,SAASC,eAExBpB,EAAOkL,EAAMlL,KALI,EAOyB6J,oBAAU,GAPnC,mBAOhB4P,EAPgB,KAOEgB,EAPF,OASG5Q,mBAAS,CACjCrH,YAAa,GACbI,OAAQ,GACR5B,MAAO,GACP2B,SAAU,GACV+X,SAAU,GACVC,KAAM,GACN7X,QAAS,EACTJ,aAAc,GACdH,GAAI,KAlBiB,mBAShBqJ,EATgB,KASTgP,EATS,OAsBe/Q,oBAAS,GAtBxB,mBAsBhB+G,EAtBgB,KAsBHC,EAtBG,KA+DvB,OAvCA7G,qBAAU,WAEJ4B,EAAM5K,OACRgF,EAAe4F,KAEhB,CAACA,EAAM5K,QAEVgJ,qBAAU,WAAM,4CAEd,oCAAA+B,EAAA,0DACMxG,IAAWC,EADjB,iCAEqBoJ,GAAUrJ,EAASC,GAFxC,cAEQpB,EAFR,OAGIwW,GAAS,SAAClG,GAAD,OACP/U,OAAOC,OACL,GACA8U,EACA/U,OAAOC,OAAO,GAAIwE,EAAM,CACtBpD,MAAOoD,EAAKvB,KACZH,aAAc0B,EAAK4uB,qBAT7B,SAawBlkB,GAAWvJ,EAASC,GAb5C,OAaQqV,EAbR,OAcQC,EAAcD,EAAQE,KACtBF,EAAQE,KAAKrJ,MAAK,SAACtF,GAAD,MAAiB,aAAVA,EAAE4O,OAC3B,KACAN,EAAWI,EAAcA,EAAYjY,KAAO,UAC5C8X,EAAOE,EAAQF,KAAOE,EAAQF,KAAKjL,KAAI,SAACtD,GAAD,OAAOA,EAAEvJ,QAAQ,GAC5DuB,EAAKsW,SAAWA,EAChBtW,EAAKuW,KAAOA,EACZC,GAAS,SAAClG,GAAD,OAAU/U,OAAOC,OAAO,GAAI8U,EAAM,CAAEgG,WAAUC,YArB3D,6CAFc,sBACdtX,OAAO4X,SAAS,EAAG,GADL,mCA2BdrL,KACC,CAACrK,EAASC,IAKX,yBAAK5B,UAAU,8EACb,yBACEA,UAAU,4CACVC,MAAO,CACLyM,IAAK,EACLc,KAAM,IAGR,yBACExN,UAAU,oBACVC,MAAO,CAAEb,OAAQK,OAAO8V,YAAa9I,SAAU,WAE/C,yBAAKzM,UAAU,qBACb,yBACEmN,IAAKnF,EAAMpJ,YACX8I,MAAM,OACN2F,IAAG,0CAAqCrF,EAAMpJ,eAEhD,yBACEoB,UAAU,gCACVC,MAAO,CACL+O,WAAY,iDACZtC,IAAK,EACLc,KAAM,MAIZ,yBACExN,UAAU,gCACVC,MAAO,CACL+O,WAAY,2CACZtC,IAAK,EACLc,KAAM,OAKd,kBAAC,GAAD,CAAO5H,KAAMoH,EAAaL,QAAS,kBAAMM,GAAe,KACtD,kBAAC,GAAD,CACEtL,QAASA,EACT4J,QAAS,kBAAM0B,GAAe,OAGlC,yBAAKjN,UAAU,yDACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,2BACb,yBACEmN,IAAKnF,EAAMpJ,YACXqB,MAAO,CAAEmN,aAAc,QACvB1F,MAAM,QACN2F,IAAG,0CAAqCrF,EAAMpJ,eAEhD,yBACEuK,QAAS,kBAAMmE,EAAQC,KAAR,iBAAuBvF,EAAMrJ,MAC5CqB,UAAU,sEACVC,MAAO,CACLuN,KAAM,EACNd,IAAK,EACLrH,SAAU,WACV6H,OAAQ,EACRE,aAAc,SAGhB,yBACEpN,UAAU,uDACVmJ,QAAS,SAACsE,GACRA,EAAEC,kBACFT,GAAe,KAGjB,kBAAC,KAAD,CACEhN,MAAO,CACLmJ,SAAU,OACVF,MAAO,QACPG,YAAa,cAOzB,yBAAKrJ,UAAU,yBACb,yBACEA,UAAU,mCACVC,MAAO,CAAEiN,OAAQ,IAEjB,yBAAKlN,UAAU,UACb,yBAAKA,UAAU,qBACZgI,EAAM5K,MADT,KACkB4K,EAAMlJ,aAAagV,UAAU,EAAG,GADlD,KAGA,yBAAK9T,UAAU,wCACb,yBAAKA,UAAU,iBACZgI,EAAMhJ,OAAO8M,KAAI,SAACtD,GAAD,OAAOA,EAAEvJ,QAAM4L,KAAK,OAG1C,yBAAK7K,UAAU,uBACb,yBAAKA,UAAU,iCAAf,aACA,yBAAKA,UAAU,6BACZ6J,GAAe7B,EAAM9I,WAG1B,yBAAKc,UAAU,kCACZgI,EAAMjJ,UAET,yBAAKiB,UAAU,uBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iBAAf,aACA,yBAAKA,UAAU,kCACZgI,EAAM8O,SAAW9O,EAAM8O,SAAW,aAIzC,yBAAK9W,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iBAAf,SACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,kBACb,yBACEA,UAAU,+CACVmJ,QAAS,SAACsE,GAENA,EAAE6J,cAAcC,UAAUC,SACxB,gBAGF/J,EAAE6J,cAAcC,UAAUE,OACxB,gBAGFhK,EAAE6J,cAAcC,UAAUG,IAAI,kBAIjC1P,EAAM+O,KAAKlM,KAAK,cAO7B,yBAAK7K,UAAU,uBACb,kBAAC,GAAD,CACEwK,WACEpO,EAAKF,QAAQ8L,EAAMrJ,KACsB,mBAArCvC,EAAKF,QAAQ8L,EAAMrJ,IAAIqP,UAG7BhG,MAAOA,EACP7H,MAAM,OACNH,UAAU,YACV0J,MACExN,EAAQ8L,EAAMrJ,IAAMzC,EAAQ8L,EAAMrJ,IAAIsP,eAAiB,IAG3D,kBAAC,GAAD,CACEzD,WACEpO,EAAKF,QAAQ8L,EAAMrJ,KACsB,cAArCvC,EAAKF,QAAQ8L,EAAMrJ,IAAIqP,UAG7BhG,MAAOA,EACP7H,MAAM,QACNH,UAAU,YACV0J,MAAOxN,EAAQ8L,EAAMrJ,IAAMzC,EAAQ8L,EAAMrJ,IAAIuP,UAAY,IAE3D,kBAAC,GAAD,CACE1D,WACEpO,EAAKF,QAAQ8L,EAAMrJ,KACsB,YAArCvC,EAAKF,QAAQ8L,EAAMrJ,IAAIqP,UAG7BhG,MAAOA,EACPhI,UAAU,YACVG,MAAM,sBACNuJ,MAAOxN,EAAQ8L,EAAMrJ,IAAMzC,EAAQ8L,EAAMrJ,IAAIwP,QAAU,IAEzD,kBAAC,GAAD,CACEhO,MAAM,OACNuJ,MAAOxN,EAAQ8L,EAAMrJ,IAAMzC,EAAQ8L,EAAMrJ,IAAIyP,SAAW,EACxD5D,WACEpO,EAAKF,QAAQ8L,EAAMrJ,KACsB,aAArCvC,EAAKF,QAAQ8L,EAAMrJ,IAAIqP,UAG7BhG,MAAOA,KAGX,yBAAKhI,UAAU,uBACb,yBAAKA,UAAU,iBAAf,iBACA,yBAAKA,UAAU,6BACZ+T,KAAKC,OAAO,IAAIvV,KAAKuJ,EAAMlJ,cAAe,mBAG/C,yBAAKkB,UAAU,kEACb,yBACEA,UAAU,wDACVmJ,QAAS,WACF/M,EAAKK,MAURoa,EAAoBhB,EAAmB,GATvCtW,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,iBACPC,QAAS,qCACTvB,KAAM,eAThB,aAkBE,kBAAC,KAAD,CACEsN,SAAS,OACTpJ,UAAU,UAGd,kBAAC,GAAD,CAAgBgI,MAAOA,EAAO5L,KAAMA,SAM9C,kBAAC,GAAD,CACE4L,MAAOA,EACP5L,KAAMA,EACNyZ,iBAAkBA,KAGtB,yBAAK7V,UAAU,UACb,kBAAC,GAAD,WClSOqvB,GAnBO,WAKpB,OAJAjpB,qBAAU,WACR3G,OAAO4X,SAAS,EAAG,KAClB,IAGD,yBAAKrX,UAAU,sBAAsBC,MAAO,CAAEsY,UAAW,UACvD,yBAAKvY,UAAU,yBACb,kBAAC,KAAD,CACE2nB,SAAU,OACVC,SAAU0H,KACVtH,eAAgB,kBAAM,+BACtBC,QAAS,kBAAMC,QAAQC,IAAI,mBCOtBJ,GAnBY,WAKzB,OAJA3hB,qBAAU,WACR3G,OAAO4X,SAAS,EAAG,KAClB,IAGD,yBAAKrX,UAAU,sBAAsBC,MAAO,CAAEsY,UAAW,UACvD,yBAAKvY,UAAU,yBACb,kBAAC,KAAD,CACE2nB,SAAU,OACVC,SAAU0H,KACVtH,eAAgB,kBAAM,+BACtBC,QAAS,kBAAMC,QAAQC,IAAI,mBCMtBN,GAlBO,WAIpB,OAHAzhB,qBAAU,WACR3G,OAAO4X,SAAS,EAAG,KAClB,IAED,yBAAKrX,UAAU,sBAAsBC,MAAO,CAAEsY,UAAW,UACvD,yBAAKvY,UAAU,yBACb,kBAAC,KAAD,CACE2nB,SAAU,OACVC,SAAU0H,KACVtH,eAAgB,kBAAM,+BACtBC,QAAS,kBAAMC,QAAQC,IAAI,mBC+HtBoH,OAnHf,WAyDE,OAxDAnpB,qBAAU,WAAM,4CACd,8BAAA+B,EAAA,yDACE3E,GAAY,SAACjG,GACNA,EAASmL,MAeZnJ,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,kBACPC,QACE,uGACFvB,KAAM,aApBLyB,EAASkJ,OAWZlH,EAAM8I,SAAS,CAAEvM,KAAM,kBAAmByB,SAAUA,EAAS,KAV7DgC,EAAM8I,SAAS,CACbvM,KAAM,mBACNqB,aAAc,CACZC,MAAO,kBACPC,QACE,uGACFvB,KAAM,gBAmBhBwF,GAAc,SAACgH,GACb,IAAIpM,EAAU,GACdoM,EAAWC,SAAQ,SAACC,GAClBtM,EAAQsM,EAAEC,SAAWD,KAEvBjJ,EAAM8I,SAAS,CAAEvM,KAAM,cAAeI,eAGxCsF,GAAkB,SAACguB,GACjB,IAAI7zB,EAAc,GAClB6zB,EAAejnB,SAAQ,SAACC,GACtB7M,EAAY6M,EAAEwd,SAAWxd,KAE3BjJ,EAAM8I,SAAS,CAAEvM,KAAM,kBAAmBH,mBAI1B,QADd8zB,EAAYrI,aAAaoF,QAAQ,wBACXiD,EAAUhpB,OA9CtC,gCA+CoBpF,EAAe,CAAE5E,MAAOgzB,IA/C5C,QA+CQzuB,EA/CR,QAgDa0H,OACPnJ,EAAM8I,SAAS,CAAEvM,KAAM,WAAYM,KAAM4E,IAjD/C,4CADc,uBAAC,WAAD,wBAsDdgL,KACC,IAED,kBAAC,IAAD,CAAUzM,MAAOA,GACf,kBAAC,IAAD,CAAQ+N,QAASA,GACf,yBAAKtN,UAAU,wBACb,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE0vB,OAAK,EACLnvB,KAAK,wBACL+f,UAAWyH,KAEb,kBAAC,IAAD,CACE2H,OAAK,EACLnvB,KAAK,kBACL+f,UAAW+O,KAEb,kBAAC,IAAD,CACEK,OAAK,EACLnvB,KAAK,kBACL+f,UAAWuH,KAEb,kBAAC,IAAD,CAAO6H,OAAK,EAACnvB,KAAK,IAAI+f,UAAWqP,KACjC,kBAAC,IAAD,CACED,OAAK,EACLnvB,KAAK,uCACL+f,UAAWsP,KAEb,kBAAC,IAAD,CACEF,OAAK,EACLnvB,KAAK,4BACL+f,UAAWsP,KAEb,kBAAC,IAAD,CAAOF,OAAK,EAACnvB,KAAK,kBAAkB+f,UAAWsP,KAC/C,kBAAC,IAAD,CAAOF,OAAK,EAACnvB,KAAK,mBAAmB+f,UAAWuP,KAChD,kBAAC,IAAD,CAAOH,OAAK,EAACnvB,KAAK,UAAU+f,UAAWwP,KACvC,kBAAC,GAAD,CACEJ,OAAK,EACLnvB,KAAK,SACL2rB,WAAW,SACXD,UAAW8D,KAEb,kBAAC,IAAD,CAAOL,OAAK,EAACnvB,KAAK,SAAS+f,UAAWnf,KACtC,kBAAC,IAAD,CAAOuuB,OAAK,EAACnvB,KAAK,UAAU+f,UAAW8H,KACvC,kBAAC,IAAD,CACEsH,OAAK,EACLnvB,KAAK,4BACL+f,UAAW0P,KAEb,kBAAC,IAAD,CAAON,OAAK,EAACnvB,KAAK,mBAAmB+f,UAAW0P,MAElD,kBAAC,GAAD,MACA,kBAAC,GAAD,UClIVC,IAASxD,OACP,kBAAC,IAAMyD,WAAP,KACE,kBAAC,GAAD,OAEF5pB,SAAS6pB,eAAe,W","file":"static/js/main.37793f4c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TermsAndConditions.ab5b934e.docx\";","module.exports = __webpack_public_path__ + \"static/media/PrivacyPolicy.f98adba2.docx\";","module.exports = __webpack_public_path__ + \"static/media/CookiesPolicy.b364bd24.docx\";","import { createStore, combineReducers } from \"redux\";\r\n\r\nfunction userReducer(\r\n  state = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    display_name: \"\",\r\n    photo: \"\",\r\n    token: \"\",\r\n    email: \"\",\r\n    ratings: {},\r\n    reviews: [],\r\n    wishlist: [],\r\n    watchedlist: [],\r\n    notifications: [],\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return action.user;\r\n    case \"UPDATE_USER\":\r\n      return Object.assign({}, state, action.userProperty);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction publicUsersReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case \"SET_PUBLICUSERS\":\r\n      return action.publicUsers;\r\n    case \"UPDATE_PUBLICUSERS\":\r\n      return Object.assign({}, state, action.publicUser);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction ratingsReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case \"SET_RATINGS\":\r\n      return action.ratings;\r\n    case \"UPDATE_RATINGS\":\r\n      return Object.assign({}, state, action.rating);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction notificationReducer(\r\n  state = { title: \"\", message: \"\", expired: true },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case \"SET_NOTIFICATION\":\r\n      return action.notification;\r\n    case \"UPDATE_NOTIFICATION\":\r\n      return Object.assign({}, state, action.notification);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction searchReducer(state = { query: \"\", category: \"All\" }, action) {\r\n  switch (action.type) {\r\n    case \"SET_SEARCH\":\r\n      return action.search;\r\n    case \"UPDATE_SEARCH\":\r\n      return Object.assign({}, state, action.search);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction navbarHeightReducer(state = 0, action) {\r\n  switch (action.type) {\r\n    case \"SET_HEIGHT\":\r\n      return action.height;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction dashboardMenuReducer(state = false, action) {\r\n  switch (action.type) {\r\n    case \"SET_DASHBOARD_MENU_OPENED\":\r\n      return action.isOpened;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction settingsReducer(\r\n  state = {\r\n    movies_api_key: \"\",\r\n    movie_data_api: \"\",\r\n    latest_movies_api: \"\",\r\n    no_popular_reviews: 5,\r\n    no_popular_movies: 5,\r\n    no_allowed_reviews: 5,\r\n    no_comment_characters: 400,\r\n    no_review_words: 80,\r\n    bg_image_refresh_time_days: 1,\r\n    bg_image_refresh_time_hours: 0,\r\n    bg_image_refresh_time_minutes: 0,\r\n    FacebookLink: \"\",\r\n    InstagramLink: \"\",\r\n    TwitterLink: \"\",\r\n    LinkedinLink: \"\",\r\n    current_bg_movie: {\r\n      date_set: Date.now(),\r\n      id: \"300671\",\r\n      poster_path: \"/4qnEeVPM8Yn5dIVC4k4yyjrUXeR.jpg\",\r\n      backdrop_path: \"/ayDMYGUNVvXS76wQgFwTiUIDNb5.jpg\",\r\n      release_date: \"2016-01-13\",\r\n      overview:\r\n        \"An American Ambassador is killed during an attack at a U.S. compound in Libya as a security team struggles to make sense out of the chaos.\",\r\n      title: \"13 Hours: The Secret Soldiers of Benghazi\",\r\n      genres: [\r\n        { id: 28, name: \"Action\" },\r\n        { id: 36, name: \"History\" },\r\n        { id: 53, name: \"Thriller\" },\r\n      ],\r\n      runtime: 144,\r\n    },\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case \"SET_SETTINGS\":\r\n      return action.settings;\r\n    case \"UPDATE_SETTINGS\":\r\n      return Object.assign({}, state, action.settings);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  publicUsers: publicUsersReducer,\r\n  ratings: ratingsReducer,\r\n  user: userReducer,\r\n  search: searchReducer,\r\n  notification: notificationReducer,\r\n  settings: settingsReducer,\r\n  navbarHeight: navbarHeightReducer,\r\n  dashboardMenuOpened: dashboardMenuReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import React from \"react\";\r\nimport { Emoji } from \"emoji-mart\";\r\n\r\nexport const OfficialMoviesGenres = [\r\n  { id: 28, name: \"Action\" },\r\n  { id: 12, name: \"Adventure\" },\r\n  { id: 16, name: \"Animation\" },\r\n  { id: 35, name: \"Comedy\" },\r\n  { id: 80, name: \"Crime\" },\r\n  { id: 99, name: \"Documentary\" },\r\n  { id: 18, name: \"Drama\" },\r\n  { id: 10751, name: \"Family\" },\r\n  { id: 14, name: \"Fantasy\" },\r\n  { id: 36, name: \"History\" },\r\n  { id: 27, name: \"Horror\" },\r\n  { id: 10402, name: \"Music\" },\r\n  { id: 9648, name: \"Mystery\" },\r\n  { id: 10749, name: \"Romance\" },\r\n  { id: 878, name: \"Science Fiction\" },\r\n  { id: 10770, name: \"TV Movie\" },\r\n  { id: 53, name: \"Thriller\" },\r\n  { id: 10752, name: \"War\" },\r\n  { id: 37, name: \"Western\" },\r\n];\r\nexport const MoviesGenresMap = {\r\n  28: \"Action\",\r\n  12: \"Adventure\",\r\n  16: \"Animation\",\r\n  35: \"Comedy\",\r\n  80: \"Crime\",\r\n  99: \"Documentary\",\r\n  18: \"Drama\",\r\n  10751: \"Family\",\r\n  14: \"Fantasy\",\r\n  36: \"History\",\r\n  27: \"Horror\",\r\n  10402: \"Music\",\r\n  9648: \"Mystery\",\r\n  10749: \"Romance\",\r\n  878: \"Science Fiction\",\r\n  10770: \"TV Movie\",\r\n  53: \"Thriller\",\r\n  10752: \"War\",\r\n  37: \"Western\",\r\n};\r\n\r\nexport const OfficialSeriesGenres = [\r\n  {\r\n    id: 10759,\r\n    name: \"Action & Adventure\",\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"Animation\",\r\n  },\r\n  {\r\n    id: 35,\r\n    name: \"Comedy\",\r\n  },\r\n  {\r\n    id: 80,\r\n    name: \"Crime\",\r\n  },\r\n  {\r\n    id: 99,\r\n    name: \"Documentary\",\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"Drama\",\r\n  },\r\n  {\r\n    id: 10751,\r\n    name: \"Family\",\r\n  },\r\n  {\r\n    id: 10762,\r\n    name: \"Kids\",\r\n  },\r\n  {\r\n    id: 9648,\r\n    name: \"Mystery\",\r\n  },\r\n  {\r\n    id: 10763,\r\n    name: \"News\",\r\n  },\r\n  {\r\n    id: 10764,\r\n    name: \"Reality\",\r\n  },\r\n  {\r\n    id: 10765,\r\n    name: \"Sci-Fi & Fantasy\",\r\n  },\r\n  {\r\n    id: 10766,\r\n    name: \"Soap\",\r\n  },\r\n  {\r\n    id: 10767,\r\n    name: \"Talk\",\r\n  },\r\n  {\r\n    id: 10768,\r\n    name: \"War & Politics\",\r\n  },\r\n  {\r\n    id: 37,\r\n    name: \"Western\",\r\n  },\r\n];\r\n\r\nexport const SeriesGenresMap = {\r\n  10759: \"Action & Adventure\",\r\n  16: \"Animation\",\r\n  35: \"Comedy\",\r\n  80: \"Crime\",\r\n  99: \"Documentary\",\r\n  18: \"Drama\",\r\n  10751: \"Family\",\r\n  10762: \"Kids\",\r\n  9648: \"Mystery\",\r\n  10763: \"News\",\r\n  10764: \"Reality\",\r\n  10765: \"Sci-Fi & Fantasy\",\r\n  10766: \"Soap\",\r\n  10767: \"Talk\",\r\n  10768: \"War & Politics\",\r\n  37: \"Western\",\r\n};\r\n\r\nexport const Ratings = [\r\n  {\r\n    name: \"excellent_rate\",\r\n    element: (\r\n      <div className=\"text-center py-3\" style={{ lineHeight: \"100%\" }}>\r\n        <Emoji emoji=\"fire\" set=\"facebook\" size={24} />\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    name: \"good_rate\",\r\n    element: (\r\n      <div className=\"text-center py-3\" style={{ lineHeight: \"100%\" }}>\r\n        <Emoji emoji=\"heart\" set=\"facebook\" size={24} />\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    name: \"ok_rate\",\r\n    element: (\r\n      <div className=\"text-center py-3\" style={{ lineHeight: \"100%\" }}>\r\n        <Emoji emoji=\"heavy_division_sign\" set=\"facebook\" size={24} />\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    name: \"bad_rate\",\r\n    element: (\r\n      <div className=\"text-center py-3\" style={{ lineHeight: \"100%\" }}>\r\n        <Emoji emoji=\"shit\" set=\"facebook\" size={24} />\r\n      </div>\r\n    ),\r\n  },\r\n];\r\n","import { ServerUrl } from \"../Settings\";\r\n\r\nconst origin = ServerUrl;\r\n\r\nconst SendPostRequest = (path, data) => {\r\n  return fetch(`${origin}${path}`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nconst SendGetRequest = (path) => {\r\n  return fetch(`${origin}${path}`).then((res) => res.json());\r\n};\r\n\r\nexport const FindOrCreateMovie = (movie) => {\r\n  return SendPostRequest(\"/movie/findOrCreate\", movie);\r\n};\r\n\r\nexport const Signup = (user) => {\r\n  return SendPostRequest(\"/user/signup\", user);\r\n};\r\n\r\nexport const Login = (credentials) => {\r\n  return SendPostRequest(\"/user/login\", credentials);\r\n};\r\n\r\nexport const LoginWithToken = (token) => {\r\n  return SendPostRequest(\"/user/loginWithToken\", token);\r\n};\r\n\r\nexport const GetAllRatings = (callback) => {\r\n  SendGetRequest(\"/ratings/get/all\").then((res) => callback(res));\r\n};\r\n\r\nexport const GetAllPublicUsers = (callback) => {\r\n  return SendGetRequest(\"/publicUsers/get/all\").then((res) => callback(res));\r\n};\r\n\r\nexport const RateMovie = (rate, movieId, user, apiKey) => {\r\n  return SendPostRequest(\"/ratings/update\", { rate, movieId, user, apiKey });\r\n};\r\n\r\nexport const WriteReview = (review, movieId, user, apiKey) => {\r\n  return SendPostRequest(\"/reviews/update\", { review, movieId, user, apiKey });\r\n};\r\n\r\nexport const GetMovieReviews = (movieId) => {\r\n  return SendPostRequest(\"/reviews/get/movie\", { movieId });\r\n};\r\n\r\nexport const GetMoviePromotedReviews = (movieId) => {\r\n  return SendPostRequest(\"/reviews/getPromoted/movie\", { movieId });\r\n};\r\n\r\nexport const WriteComment = (comment, user) => {\r\n  return SendPostRequest(\"/comments/update\", { user, comment });\r\n};\r\n\r\nexport const GetReviewComments = (reviewId) => {\r\n  return SendPostRequest(\"/comments/get/review\", { reviewId });\r\n};\r\n\r\nexport const AddToWishList = (user, movieId, apiKey) => {\r\n  return SendPostRequest(\"/movie/addToWishlist\", { user, movieId, apiKey });\r\n};\r\n\r\nexport const RemoveFromWishList = (user, movieId) => {\r\n  return SendPostRequest(\"/movie/removeFromWishlist\", { user, movieId });\r\n};\r\n\r\nexport const AddViewToMovie = (movieId, apiKey) => {\r\n  return SendPostRequest(\"/movie/views/add\", { movieId, apiKey });\r\n};\r\n\r\nexport const LikeReview = (user, reviewId) => {\r\n  return SendPostRequest(\"/reviews/like\", { user, reviewId });\r\n};\r\n\r\nexport const LikeComment = (user, commentId) => {\r\n  return SendPostRequest(\"/comments/like\", { user, commentId });\r\n};\r\n\r\nexport const ReportReview = (user, reviewId) => {\r\n  return SendPostRequest(\"/reviews/report\", { user, reviewId });\r\n};\r\n\r\nexport const ReportComment = (user, commentId) => {\r\n  return SendPostRequest(\"/comments/report\", { user, commentId });\r\n};\r\n\r\nexport const GetUser = (userId) => {\r\n  return SendPostRequest(\"/users/get\", { userId });\r\n};\r\n\r\nexport const GetUserReviews = (reviewIds) => {\r\n  return SendPostRequest(\"/reviews/get/user\", { reviewIds });\r\n};\r\n\r\nexport const GetUserComments = (commentIds) => {\r\n  return SendPostRequest(\"/comments/get/user\", { commentIds });\r\n};\r\n\r\nexport const EditUser = (update) => {\r\n  return SendPostRequest(\"/users/edit\", { update });\r\n};\r\n\r\nexport const GetPopularReviews = (limit) => {\r\n  return SendPostRequest(\"/reviews/get/popular\", { limit });\r\n};\r\n\r\nexport const GetRecentReviews = (limit) => {\r\n  return SendPostRequest(\"/reviews/get/recent\", { limit });\r\n};\r\n\r\nexport const GetRecommendations = (limit) => {\r\n  return SendPostRequest(\"/movies/get/recommended\", { limit });\r\n};\r\n\r\nexport const SearchReviews = (query) => {\r\n  return SendPostRequest(\"/reviews/search\", { query });\r\n};\r\n\r\nexport const UpdateOrCreateSettings = (settings) => {\r\n  return SendPostRequest(\"/settings/updateOrCreate\", settings);\r\n};\r\n\r\nexport const GetSettings = (callback) => {\r\n  SendGetRequest(\"/settings/get\").then((res) => callback(res));\r\n};\r\n\r\nexport const GetUsers = () => {\r\n  return SendGetRequest(\"/admin/users/get\");\r\n};\r\n\r\nexport const EditUserForAdmin = (update) => {\r\n  return SendPostRequest(\"/admin/users/edit\", update);\r\n};\r\n\r\nexport const CreateUserForAdmin = (user) => {\r\n  return SendPostRequest(\"/admin/users/create\", user);\r\n};\r\n\r\nexport const GetReviews = () => {\r\n  return SendGetRequest(\"/admin/reviews/get\");\r\n};\r\n\r\nexport const GetComments = () => {\r\n  return SendGetRequest(\"/admin/comments/get\");\r\n};\r\n\r\nexport const EditReviewForAdmin = (review, user) => {\r\n  return SendPostRequest(\"/admin/reviews/edit\", { review, user });\r\n};\r\nexport const EditCommentForAdmin = (comment, user) => {\r\n  return SendPostRequest(\"/admin/comments/edit\", { comment, user });\r\n};\r\n\r\nexport const DeleteMultipleReviews = (ids) => {\r\n  return SendPostRequest(\"/admin/reviews/delete\", ids);\r\n};\r\n\r\nexport const DeleteMultipleComments = (ids) => {\r\n  return SendPostRequest(\"/admin/comments/delete\", ids);\r\n};\r\n\r\nexport const EditMultipleUsers = (ids, pids, update) => {\r\n  return SendPostRequest(\"/admin/users/editMultiple\", { ids, pids, update });\r\n};\r\n\r\nexport const GetAnnouncements = () => {\r\n  return SendGetRequest(\"/admin/announcements/get\");\r\n};\r\n\r\nexport const CreateAnnouncement = (announcement) => {\r\n  return SendPostRequest(\"/admin/announcements/create\", announcement);\r\n};\r\n\r\nexport const DeleteMultipleAnnouncements = (ids) => {\r\n  return SendPostRequest(\"/admin/announcements/delete\", ids);\r\n};\r\n\r\nexport const EditAnnouncement = (announcement) => {\r\n  return SendPostRequest(\"/admin/announcements/edit\", announcement);\r\n};\r\n\r\nexport const GetActiveAnnouncements = () => {\r\n  return SendGetRequest(\"/announcements/getActive\");\r\n};\r\n\r\nexport const GetPromotions = () => {\r\n  return SendGetRequest(\"/admin/promotions/get\");\r\n};\r\n\r\nexport const CreatePromotions = (promotions) => {\r\n  return SendPostRequest(\"/admin/promotions/create\", promotions);\r\n};\r\n\r\nexport const EditPromotion = (promotion) => {\r\n  return SendPostRequest(\"/admin/promotions/edit\", promotion);\r\n};\r\n\r\nexport const DeleteMultiplePromotions = (ids, update) => {\r\n  return SendPostRequest(\"/admin/promotions/delete\", { ids, update });\r\n};\r\n\r\nexport const GetUserNotifications = (ids) => {\r\n  return SendPostRequest(\"/user/notifications/get/\", { ids });\r\n};\r\n\r\nexport const DeleteUserNotification = (id, userId) => {\r\n  return SendPostRequest(\"/user/notifications/delete\", { id, userId });\r\n};\r\n\r\nexport const GetNotifications = () => {\r\n  return SendGetRequest(\"/admin/notifications/get\");\r\n};\r\n\r\nexport const CreateNotification = (notification) => {\r\n  return SendPostRequest(\"/admin/notifications/create\", notification);\r\n};\r\n\r\nexport const EditNotification = (notification) => {\r\n  return SendPostRequest(\"/admin/notifications/edit\", notification);\r\n};\r\n\r\nexport const DeleteMultipleNotifications = (ids, update) => {\r\n  return SendPostRequest(\"/admin/notifications/delete\", { ids, update });\r\n};\r\n\r\nexport const MoveMovieToWatchList = (user, movieId) => {\r\n  return SendPostRequest(\"/movie/moveToWatchedList\", { user, movieId });\r\n};\r\n\r\nexport const GetReview = (reviewId) => {\r\n  return SendPostRequest(\"/reviews/getOne\", { reviewId });\r\n};\r\n\r\nexport const ChangeBackgroundMovie = (apiKey) => {\r\n  return SendPostRequest(\"/changeBackgroundMovie\", { apiKey });\r\n};\r\n\r\nexport const DeleteMultipleUsers = (ids, pids) => {\r\n  return SendPostRequest(\"/admin/users/deleteMultiple\", { ids, pids });\r\n};\r\n\r\nexport const GetPromotedReviews = () => {\r\n  return SendGetRequest(\"/reviews/getPromoted\");\r\n};\r\n","export const ServerUrl =\r\n  process.env.NODE_ENV === \"development\" ? \"http://localhost:5000\" : \"\";\r\n\r\nexport const CaptchaApiKey = \"6Lc_87cZAAAAAHRx49G1d-mM3gxWM_RKLAA41T3U\";\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"react-tippy/dist/tippy.css\";\r\nimport { Tooltip } from \"react-tippy\";\r\n\r\nconst Popover = ({\r\n  className,\r\n  onOpen = () => {},\r\n  position = \"bottom\",\r\n  arrow = true,\r\n  theme = \"light\",\r\n  content = () => {},\r\n  trigger = \"click\",\r\n  delay = 0,\r\n  animation = \"scale\",\r\n  open = undefined,\r\n  onHide = () => {},\r\n  popoverWidth = \"auto\",\r\n  ...rest\r\n}) => {\r\n  const [contentWidth, setContentWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    return function cleanUp() {\r\n      let popovers = document.getElementsByClassName(\"tippy-popper\");\r\n      for (let i = 0; i < popovers.length; i++) {\r\n        popovers[i].parentNode.removeChild(popovers[i]);\r\n      }\r\n    };\r\n  }, []);\r\n  const [wasShowed, setWasShowed] = useState(false);\r\n  return (\r\n    <Tooltip\r\n      onShow={() => {\r\n        if (!wasShowed) {\r\n          setWasShowed(true);\r\n          onOpen();\r\n        }\r\n      }}\r\n      onHide={onHide}\r\n      delay={delay}\r\n      hideDelay={0}\r\n      html={content(contentWidth)}\r\n      position={position}\r\n      trigger={trigger}\r\n      theme={theme}\r\n      arrow={arrow}\r\n      interactive={true}\r\n      animation={animation}\r\n      open={open}\r\n      unmountHTMLWhenHide={true}\r\n      className={className}\r\n    >\r\n      {React.cloneElement(\r\n        rest.children,\r\n        Object.assign({}, rest.children.props, {\r\n          ref: (el) => {\r\n            if (el) {\r\n              if (contentWidth === 0) {\r\n                setContentWidth(el.getBoundingClientRect().width);\r\n              }\r\n              if (rest.children) {\r\n                const { ref } = rest.children;\r\n                if (ref && \"current\" in ref) {\r\n                  ref.current = el;\r\n                }\r\n                if (typeof ref === \"function\") {\r\n                  ref(el);\r\n                }\r\n              }\r\n            }\r\n          },\r\n        })\r\n      )}\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Popover;\r\n","import React from \"react\";\r\n\r\nconst Loader = ({ loading, size = 50, theme = \"light\" }) => {\r\n  return (\r\n    loading && (\r\n      <div className=\"w-100 h-100 d-flex flex-center\">\r\n        <div\r\n          className={`loader-${theme}`}\r\n          style={{ width: `${size}px`, height: `${size}px` }}\r\n        ></div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState } from \"react\";\r\nimport { MdPlaylistAdd, MdDelete } from \"react-icons/md\";\r\nimport store from \"../../store/store\";\r\nimport { AddToWishList, GetAllRatings } from \"../../server/DatabaseApi\";\r\nimport Popover from \"../utility/Popover\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst WishlistButton = ({ user, movie, apiKey }) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleClick = async (message) => {\r\n    if (user.display_name) {\r\n      if (movie.id) {\r\n        setLoading(true);\r\n        let res = await AddToWishList(user, movie.id, apiKey);\r\n        setLoading(false);\r\n        if (res.updatedUser) {\r\n          store.dispatch({\r\n            type: \"UPDATE_USER\",\r\n            userProperty: res.updatedUser,\r\n          });\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: `Movie ${message} wishlist`,\r\n              message: `Movie successfully ${message} your wishlist`,\r\n              type: \"success\",\r\n            },\r\n          });\r\n          GetAllRatings((ratingsArr) => {\r\n            let ratings = {};\r\n            ratingsArr.forEach((x) => {\r\n              ratings[x.tmdb_id] = x;\r\n            });\r\n            store.dispatch({ type: \"SET_RATINGS\", ratings });\r\n          });\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Error\",\r\n              message: JSON.stringify(res.error).replace(/\"/g, \"\"),\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      store.dispatch({\r\n        type: \"SET_NOTIFICATION\",\r\n        notification: {\r\n          title: \"Action not allowed\",\r\n          message: \"You need to login to add movie to wishlist\",\r\n          type: \"failure\",\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const currentlyAdded =\r\n    user.wishlist.findIndex((x) => x.movie_id === movie.id.toString()) !== -1;\r\n  const isInWatchlist =\r\n    user.watchedlist.findIndex((x) => x.movie_id === movie.id.toString()) !==\r\n    -1;\r\n\r\n  return !isInWatchlist ? (\r\n    <Popover\r\n      theme=\"dark\"\r\n      position=\"top\"\r\n      content={(w) => (\r\n        <div className=\"px-3 py-2\">\r\n          {currentlyAdded ? \"Remove from wishlist\" : \"Add to wishlist\"}\r\n        </div>\r\n      )}\r\n      trigger=\"mouseenter\"\r\n    >\r\n      <div\r\n        style={{ pointerEvents: \"all\" }}\r\n        className={`btn-custom ${\r\n          currentlyAdded ? \"btn-custom-danger\" : \"btn-custom-iconic\"\r\n        }`}\r\n      >\r\n        {loading ? (\r\n          <Loader size={30} loading={loading} color={\"white\"}></Loader>\r\n        ) : currentlyAdded ? (\r\n          <MdDelete\r\n            onClick={() => handleClick(\"removed from\")}\r\n            fontSize=\"24px\"\r\n          ></MdDelete>\r\n        ) : (\r\n          <MdPlaylistAdd\r\n            onClick={() => handleClick(\"added to\")}\r\n            className=\"text-title-xl\"\r\n            style={{ marginRight: \"-5px\" }}\r\n          ></MdPlaylistAdd>\r\n        )}\r\n      </div>\r\n    </Popover>\r\n  ) : (\r\n    \"\"\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    apiKey: state.settings.movies_api_key,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(WishlistButton);\r\n","export const nFormatter = (num, digits) => {\r\n  var si = [\r\n    { value: 1, symbol: \"\" },\r\n    { value: 1e3, symbol: \"K\" },\r\n    { value: 1e6, symbol: \"M\" },\r\n    { value: 1e9, symbol: \"G\" },\r\n    { value: 1e12, symbol: \"T\" },\r\n    { value: 1e15, symbol: \"P\" },\r\n    { value: 1e18, symbol: \"E\" },\r\n  ];\r\n  var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n  var i;\r\n  for (i = si.length - 1; i > 0; i--) {\r\n    if (num >= si[i].value) {\r\n      break;\r\n    }\r\n  }\r\n  return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\r\n};\r\n\r\nexport const FormatDuration = (minutes) => {\r\n  let h = Math.floor(minutes / 60);\r\n  let m = minutes - h * 60;\r\n  return `${h}h ${m}m`;\r\n};\r\nexport const validateEmail = (email) => {\r\n  // eslint-disable-next-line\r\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n};\r\n","import React from \"react\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport { nFormatter } from \"../../utilities/Functions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ReactionButton = ({\r\n  emoji,\r\n  onClick,\r\n  size = \"normal\",\r\n  allowRate = false,\r\n  selected,\r\n  className,\r\n  value,\r\n}) => {\r\n  return (\r\n    <div\r\n      onClick={async () => {\r\n        if (allowRate) {\r\n          if (onClick) {\r\n            onClick();\r\n          }\r\n        }\r\n      }}\r\n      className={`col-auto btn-reaction-${size} ${\r\n        allowRate ? \"btn-reaction\" : \"\"\r\n      }${selected ? \" btn-reaction-selected\" : \"\"}${\r\n        className ? ` ${className}` : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"row no-gutters align-items-center h-100 justify-content-center\">\r\n        {value !== undefined && value !== null ? (\r\n          <div className={`col mr-${size !== \"small\" ? \"2\" : \"1\"}`}>\r\n            {nFormatter(value, 1)}\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"col-auto\">\r\n          <div style={{ marginBottom: size === \"normal\" ? \"-6px\" : \"-2px\" }}>\r\n            <Emoji\r\n              emoji={emoji}\r\n              set=\"facebook\"\r\n              size={size === \"small\" ? 14 : size === \"normal\" ? 16 : 28}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(ReactionButton);\r\n","// const apikey = \"3a194d2f01cf050ac9ff97073d4a009c\";\r\nconst origin = \"https://api.themoviedb.org/3\";\r\n\r\nconst FormatRequestUrl = (path, params = [], apiKey) => {\r\n  return `${origin}${path}?api_key=${apiKey}&${[\"language=en-US\"]\r\n    .concat(params)\r\n    .join(\"&\")}`;\r\n};\r\n\r\nexport const GetTrendingMovies = () => {\r\n  return fetch(\r\n    FormatRequestUrl(\r\n      \"/trending/movie/week\",\r\n      [],\r\n      \"3a194d2f01cf050ac9ff97073d4a009c\"\r\n    )\r\n  ).then((res) => res.json());\r\n};\r\n\r\nexport const GetPopularMoviesByGenre = (genres, apiKey) => {\r\n  return fetch(\r\n    FormatRequestUrl(\r\n      \"/discover/movie\",\r\n      [\"sort_by=popularity.desc\", `with_genres=${genres.join(\",\")}`],\r\n      apiKey\r\n    )\r\n  ).then((res) => res.json());\r\n};\r\n\r\nexport const GetTrailers = (movieId, apiKey) => {\r\n  return fetch(\r\n    FormatRequestUrl(`/movie/${movieId}/videos`, [], apiKey)\r\n  ).then((res) => res.json());\r\n};\r\n\r\nexport const GetOfficialMoviesGenres = () => {\r\n  return fetch(FormatRequestUrl(\"/genre/movie/list\")).then((res) => res.json());\r\n};\r\n\r\nexport const GetTvShow = (movieId, apiKey) => {\r\n  return fetch(FormatRequestUrl(`/tv/${movieId}`, [], apiKey)).then((res) =>\r\n    res.json()\r\n  );\r\n};\r\n\r\nexport const GetMovie = (movieId, apiKey) => {\r\n  return fetch(FormatRequestUrl(`/movie/${movieId}`, [], apiKey)).then((res) =>\r\n    res.json()\r\n  );\r\n};\r\n\r\nexport const GetCredits = (movieId, apiKey) => {\r\n  return fetch(\r\n    FormatRequestUrl(`/movie/${movieId}/credits`, [], apiKey)\r\n  ).then((res) => res.json());\r\n};\r\n\r\nexport const SearchMovies = (query, apiKey) => {\r\n  let url = FormatRequestUrl(\"/search/movie\", [`query=${query}`], apiKey);\r\n  return fetch(url).then((res) => res.json());\r\n};\r\n\r\nexport const SearchSeries = (query, apiKey) => {\r\n  let url = FormatRequestUrl(\r\n    \"/search/tv\",\r\n    [`query=${encodeURI(query)}`],\r\n    apiKey\r\n  );\r\n  return fetch(url).then((res) => res.json());\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport \"simplebar/dist/simplebar.min.css\";\r\nimport { GetTrailers } from \"../../server/MoviesApi\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst TrailerPlayer = ({ movieId, settings, onEnded }) => {\r\n  const [videoIds, setVideoIds] = useState([]);\r\n  const [problem, setProblem] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (movieId && settings.movies_api_key) {\r\n        let trailers = await GetTrailers(movieId, settings.movies_api_key);\r\n        if (!trailers.results || !trailers.results.length) {\r\n          setProblem(\"We couldn't find trailer for this movie\");\r\n        } else {\r\n          setVideoIds(trailers.results.map((x) => x.key));\r\n        }\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, [movieId, settings.movies_api_key]);\r\n\r\n  return (\r\n    <div className=\"col-xl-33 col-lg-36 col-md-39 col-sm-42 col-60\">\r\n      <div className=\"row no-gutters\">\r\n        {videoIds.length ? (\r\n          <div className=\"col-60\">\r\n            <div className=\"trailer-player-wrapper\">\r\n              <ReactPlayer\r\n                onEnded={onEnded}\r\n                config={{\r\n                  youtube: {\r\n                    playerVars: { showinfo: 0, iv_load_policy: 3 },\r\n                  },\r\n                }}\r\n                playing\r\n                className=\"trailer-player\"\r\n                controls\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                url={`https://www.youtube.com/watch?v=${videoIds[0]}`}\r\n              />\r\n            </div>\r\n          </div>\r\n        ) : problem ? (\r\n          <div className=\"text-white h4 m-auto\">{problem}</div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    settings: state.settings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(TrailerPlayer);\r\n","import React, { useEffect } from \"react\";\r\nimport { BsX } from \"react-icons/bs\";\r\n\r\nconst Modal = (props) => {\r\n  useEffect(() => {\r\n    if (props.open) {\r\n      document.body.style.overflow = \"hidden\";\r\n    } else {\r\n      document.body.style.overflow = \"visible\";\r\n    }\r\n  }, [props.open]);\r\n\r\n  return props.open ? (\r\n    <div className=\"container-fluid w-100 h-100 modal-container px-0 text-white overflow-auto\">\r\n      <div\r\n        className=\"row no-gutters justify-content-end\"\r\n        style={{ position: \"sticky\", top: 0 }}\r\n      >\r\n        <div onClick={props.onClose} className=\"modal-closer\">\r\n          <BsX fontSize=\"24px\" strokeWidth=\"2px\"></BsX>\r\n        </div>\r\n      </div>\r\n      <div className=\"row no-gutters h-100 align-items-center justify-content-center\">\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport { OfficialMoviesGenres, OfficialSeriesGenres } from \"../../Data\";\r\nimport history from \"../../History\";\r\nimport WishlistButton from \"./WishlistButton\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactionButton from \"./ReactionButton\";\r\nimport TrailerPlayer from \"./TrailerPlayer\";\r\nimport Modal from \"../utility/Modal\";\r\nimport { BsPlayFill } from \"react-icons/bs\";\r\n\r\nconst MoviesList = ({ movies, user, ratings }) => {\r\n  const [trailerMovieId, setTrailerMovieId] = useState(\"\");\r\n  const [openTrailer, setOpenTrailer] = useState(false);\r\n  return (\r\n    <div className=\"row justify-content-end\">\r\n      <Modal open={openTrailer} onClose={() => setOpenTrailer(false)}>\r\n        <TrailerPlayer\r\n          movieId={trailerMovieId}\r\n          onEnded={() => setOpenTrailer(false)}\r\n        ></TrailerPlayer>\r\n      </Modal>\r\n      {movies.map((x, i) => (\r\n        <div\r\n          key={`result-${i}`}\r\n          className=\"col-lg-12 col-md-15 col-sm-20 col-60 p-3 text-white\"\r\n        >\r\n          <div\r\n            className=\"row no-gutters justify-content-end position-relative px-2 d-none d-sm-flex\"\r\n            style={{\r\n              marginBottom: \"-51px\",\r\n              zIndex: 5,\r\n              height: \"44px\",\r\n              pointerEvents: \"none\",\r\n            }}\r\n          >\r\n            <WishlistButton movie={x} user={user}></WishlistButton>\r\n          </div>\r\n          <div className=\"row no-gutters\">\r\n            <div className=\"col-sm-60 col-auto mr-3 mr-sm-0\">\r\n              <div className=\"row no-gutters mb-2 position-relative movies-list-image\">\r\n                <img\r\n                  alt={x.poster_path}\r\n                  width=\"100%\"\r\n                  style={{ borderRadius: \"13px\" }}\r\n                  className=\"img-clickable\"\r\n                  src={\r\n                    x.poster_path\r\n                      ? `https://image.tmdb.org/t/p/w342${x.poster_path}`\r\n                      : \"https://critics.io/img/movies/poster-placeholder.png\"\r\n                  }\r\n                ></img>\r\n                <div\r\n                  onClick={() =>\r\n                    history.push(`/${x.name ? \"series\" : \"movie\"}/${x.id}`)\r\n                  }\r\n                  className=\"col-60 h-100 text-white d-flex flex-center img-cover cursor-pointer\"\r\n                  style={{\r\n                    left: 0,\r\n                    top: 0,\r\n                    position: \"absolute\",\r\n                    zIndex: 4,\r\n                    borderRadius: \"13px\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"square-50 rounded-circle d-flex flex-center play-btn\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      setTrailerMovieId(x.id);\r\n                      setOpenTrailer(true);\r\n                    }}\r\n                  >\r\n                    <BsPlayFill\r\n                      style={{\r\n                        fontSize: \"30px\",\r\n                        color: \"white\",\r\n                        marginRight: \"-5px\",\r\n                      }}\r\n                    ></BsPlayFill>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-60 col\">\r\n              <div\r\n                className=\"row no-gutters text-title-md mb-0 cursor-pointer\"\r\n                onClick={() => history.push(`/movie/${x.id}`)}\r\n              >\r\n                <div className=\"text-truncate\">\r\n                  {x.title ? x.title : x.name}\r\n                </div>\r\n              </div>\r\n              <div className=\"row no-gutters text-muted mb-2\">\r\n                <div className=\"text-truncate\">\r\n                  {x.genre_ids.length\r\n                    ? x.genre_ids\r\n                        .map((gid) => {\r\n                          let genre = x.title // movies have title, series - name\r\n                            ? OfficialMoviesGenres.find((g) => g.id === gid)\r\n                            : OfficialSeriesGenres.find((g) => g.id === gid);\r\n\r\n                          return genre ? genre.name : \"unknown\";\r\n                        })\r\n                        .join(\"/\")\r\n                    : \"unknown\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"row no-gutters justify-content-sm-end mb-2\">\r\n                <ReactionButton\r\n                  selected={\r\n                    user.ratings[x.id]\r\n                      ? user.ratings[x.id].rate_type === \"excellent_rate\"\r\n                      : false\r\n                  }\r\n                  movie={x}\r\n                  emoji=\"fire\"\r\n                  className=\"mr-1 mb-2\"\r\n                  size=\"small\"\r\n                  value={ratings[x.id] ? ratings[x.id].excellent_rate : 0}\r\n                ></ReactionButton>\r\n                <ReactionButton\r\n                  size=\"small\"\r\n                  selected={\r\n                    user.ratings[x.id]\r\n                      ? user.ratings[x.id].rate_type === \"good_rate\"\r\n                      : false\r\n                  }\r\n                  movie={x}\r\n                  emoji=\"heart\"\r\n                  className=\"mr-1 mb-2\"\r\n                  value={ratings[x.id] ? ratings[x.id].good_rate : 0}\r\n                ></ReactionButton>\r\n                <ReactionButton\r\n                  size=\"small\"\r\n                  selected={\r\n                    user.ratings[x.id]\r\n                      ? user.ratings[x.id].rate_type === \"ok_rate\"\r\n                      : false\r\n                  }\r\n                  movie={x}\r\n                  className=\"mr-1 mb-2\"\r\n                  emoji=\"heavy_division_sign\"\r\n                  value={ratings[x.id] ? ratings[x.id].ok_rate : 0}\r\n                ></ReactionButton>\r\n                <ReactionButton\r\n                  size=\"small\"\r\n                  emoji=\"shit\"\r\n                  value={ratings[x.id] ? ratings[x.id].bad_rate : 0}\r\n                  selected={\r\n                    user.ratings[x.id]\r\n                      ? user.ratings[x.id].rate_type === \"bad_rate\"\r\n                      : false\r\n                  }\r\n                  movie={x}\r\n                ></ReactionButton>\r\n              </div>\r\n              <div className=\"row no-gutters d-flex d-sm-none\">\r\n                <WishlistButton movie={x} user={user}></WishlistButton>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(MoviesList);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport MoviesList from \"./MoviesList\";\r\nimport { GetPopularMoviesByGenre } from \"../../server/MoviesApi\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport \"simplebar/dist/simplebar.min.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst genresPairs = [\r\n  { name: \"All\", genresIds: [] },\r\n  { name: \"Suspense & Thriller\", genresIds: [27, 53] },\r\n  { name: \"Action & Adventure\", genresIds: [28, 12] },\r\n  { name: \"Romance\", genresIds: [10749] },\r\n  { name: \"Crime & Drama\", genresIds: [80, 18] },\r\n  { name: \"Sci-Fi\", genresIds: [878] },\r\n  { name: \"History & Documentary\", genresIds: [36, 99] },\r\n];\r\n\r\nconst PopularMovies = ({ apiKey, settings }) => {\r\n  const horizontalMenu = useRef();\r\n\r\n  const [genresIds, setGenresIds] = useState([]);\r\n  const [genreName, setGenreName] = useState(\"All\");\r\n  const [movies, setMovies] = useState([]);\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (apiKey && settings.no_popular_movies) {\r\n        let data = await GetPopularMoviesByGenre(genresIds, apiKey);\r\n        setMovies(data.results.slice(0, settings.no_popular_movies));\r\n      }\r\n    }\r\n    getData();\r\n  }, [genresIds, apiKey, settings]);\r\n\r\n  useEffect(() => {\r\n    horizontalMenu.current.recalculate();\r\n  }, [movies]);\r\n\r\n  return (\r\n    <div className=\"row no-gutters justify-content-center text-white\">\r\n      <div className=\"col-60 py-3 px-md-5 px-4 content-container\">\r\n        <div className=\"row no-gutters h5\">\r\n          <div\r\n            className=\"col-auto\"\r\n            style={{\r\n              padding: \"6px 30px 6px 0px\",\r\n              background: \"linear-gradient(to left, #ff0037, transparent)\",\r\n              borderRadius: \"0 4px 4px 0\",\r\n            }}\r\n          >\r\n            Popular Movies\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters text-light\">\r\n          Most watched movies in last 30 days\r\n        </div>\r\n        <div className=\"row no-gutters justify-content-end text-light align-items-center mb-4\">\r\n          <div className=\"col-auto\">\r\n            <SimpleBar\r\n              ref={horizontalMenu}\r\n              style={{\r\n                padding: \"14px 0\",\r\n                maxWidth: \"100%\",\r\n                overflowX: \"auto\",\r\n                whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              {genresPairs.map((x, i) => (\r\n                <div\r\n                  onClick={() => {\r\n                    setGenreName(x.name);\r\n                    setGenresIds(x.genresIds);\r\n                  }}\r\n                  style={{ display: \"inline-block\" }}\r\n                  key={`genre-for-popular-movie-${i}`}\r\n                  className={`px-4 ${\r\n                    genreName === x.name\r\n                      ? \"btn-tertiary-selected text-white\"\r\n                      : \"btn-tertiary text-light-white\"\r\n                  }`}\r\n                >\r\n                  {x.name}\r\n                </div>\r\n              ))}\r\n            </SimpleBar>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <MoviesList movies={movies}></MoviesList>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    settings: state.settings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(PopularMovies);\r\n","import React from \"react\";\r\nimport history from \"../../History\";\r\n\r\nconst Recommendations = ({ movies }) => {\r\n  return (\r\n    <div className=\"row no-gutters\">\r\n      {movies.map((x, i) => (\r\n        <div\r\n          className=\"col-sm-15 col-md-12 col-lg-15 col-60 pr-2 pb-2 text-white position-relative\"\r\n          key={`recommended-today-movie-${i}`}\r\n        >\r\n          <div className=\"row no-gutters\">\r\n            <div className=\"col-sm-60 col-auto mr-3 mr-sm-0\">\r\n              <img\r\n                alt={x.movie_poster}\r\n                className=\"img-clickable movies-list-image\"\r\n                onClick={() => history.push(`/movie/${x.movie_id}`)}\r\n                width=\"100%\"\r\n                style={{\r\n                  borderRadius: \"13px\",\r\n                }}\r\n                src={`https://image.tmdb.org/t/p/w154${x.movie_poster}`}\r\n              ></img>\r\n            </div>\r\n            <div className=\"col-sm-60 col d-block d-sm-none\">\r\n              <div\r\n                className=\"row no-gutters cursor-pointer\"\r\n                onClick={() => history.push(`/movie/${x.movie_id}`)}\r\n              >\r\n                {x.movie_title}\r\n              </div>\r\n              <div className=\"row no-gutters text-muted\">\r\n                <small className=\"text-truncate\">{x.movie_genres}</small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recommendations;\r\n","import React, { useEffect } from \"react\";\r\nimport { BsChevronRight, BsChevronLeft } from \"react-icons/bs\";\r\n\r\nconst Pagination = ({\r\n  count,\r\n  current,\r\n  setCurrent,\r\n  classNames = { selected: \"input-light-selected\", notSelected: \"input-light\" },\r\n}) => {\r\n  let first =\r\n    current === count ? current - 2 : current - 1 >= 1 ? current - 1 : current;\r\n  let second = first + 1;\r\n  let third = second + 1;\r\n\r\n  useEffect(() => {\r\n    if (count === 1) {\r\n      setCurrent(1);\r\n    }\r\n  }, [count]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return count > 1 ? (\r\n    <React.Fragment>\r\n      <div className=\"row no-gutters d-flex d-lg-none user-select-none\">\r\n        <div\r\n          className={`col-auto ${classNames[\"notSelected\"]} px-3 mr-1 cursor-pointer`}\r\n          onClick={() => setCurrent(current - 1 >= 1 ? current - 1 : current)}\r\n        >\r\n          <BsChevronLeft fontSize=\"16px\"></BsChevronLeft>\r\n        </div>\r\n        <div\r\n          className={`${classNames[\"selected\"]} col-auto text-center mr-1`}\r\n          style={{ width: \"50px\" }}\r\n        >\r\n          {current}\r\n        </div>\r\n        <div\r\n          className={`col-auto ${classNames[\"notSelected\"]} px-3 cursor-pointer`}\r\n          onClick={() =>\r\n            setCurrent(current + 1 <= count ? current + 1 : current)\r\n          }\r\n        >\r\n          <BsChevronRight fontSize=\"16px\"></BsChevronRight>\r\n        </div>\r\n      </div>\r\n      <div className=\"row no-gutters user-select-none d-none d-lg-flex\">\r\n        <div\r\n          className={`col-auto ${classNames[\"notSelected\"]} px-3 mr-1 cursor-pointer`}\r\n          onClick={() => setCurrent(current - 1 >= 1 ? current - 1 : current)}\r\n        >\r\n          Previous\r\n        </div>\r\n        {first - 1 >= 1 && (\r\n          <div\r\n            className={`col-auto ${classNames[\"notSelected\"]} text-center mr-1 cursor-pointer`}\r\n            style={{ width: \"50px\" }}\r\n            onClick={() => setCurrent(first - 1 >= 1 ? first - 1 : first)}\r\n          >\r\n            ...\r\n          </div>\r\n        )}\r\n        {first >= 1 && (\r\n          <div\r\n            style={{ width: \"50px\" }}\r\n            className={`px-0 col-auto ${\r\n              current === first\r\n                ? classNames[\"selected\"]\r\n                : classNames[\"notSelected\"]\r\n            } text-center mr-1 cursor-pointer`}\r\n            onClick={() => setCurrent(first)}\r\n          >\r\n            {first}\r\n          </div>\r\n        )}\r\n\r\n        {second <= count && second >= 1 && (\r\n          <div\r\n            style={{ width: \"50px\" }}\r\n            className={`px-0 col-auto ${\r\n              current === second\r\n                ? classNames[\"selected\"]\r\n                : classNames[\"notSelected\"]\r\n            } text-center mr-1 cursor-pointer`}\r\n            onClick={() => setCurrent(second)}\r\n          >\r\n            {second}\r\n          </div>\r\n        )}\r\n        {third <= count && third >= 1 && (\r\n          <div\r\n            className={`px-0 col-auto ${\r\n              current === third\r\n                ? classNames[\"selected\"]\r\n                : classNames[\"notSelected\"]\r\n            } text-center mr-1 cursor-pointer`}\r\n            style={{ width: \"50px\" }}\r\n            onClick={() => setCurrent(third)}\r\n          >\r\n            {third}\r\n          </div>\r\n        )}\r\n\r\n        {third + 1 <= count && (\r\n          <div\r\n            onClick={() => setCurrent(third + 1 <= count ? third + 1 : current)}\r\n            className={`col-auto ${classNames[\"notSelected\"]} text-center mr-1 cursor-pointer`}\r\n            style={{ width: \"50px\" }}\r\n          >\r\n            ...\r\n          </div>\r\n        )}\r\n        <div\r\n          className={`col-auto ${classNames[\"notSelected\"]} px-3 cursor-pointer`}\r\n          onClick={() =>\r\n            setCurrent(current + 1 <= count ? current + 1 : current)\r\n          }\r\n        >\r\n          Next\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  ) : (\r\n    \"\"\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"../utility/Modal\";\r\nimport { WriteComment } from \"../../server/DatabaseApi\";\r\nimport Loader from \"../utility/Loader\";\r\nimport store from \"../../store/store\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ReplyToReview = ({\r\n  open,\r\n  onClose,\r\n  user,\r\n  review,\r\n  movie,\r\n  reviewAuthor,\r\n  setComments,\r\n  setReviewIdOfVisibleComments,\r\n  refreshComments,\r\n  refreshReviews,\r\n  settings,\r\n}) => {\r\n  const [newComment, setNewComment] = useState({ comment: \"\" });\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  return (\r\n    <Modal open={open} onClose={onClose}>\r\n      <div className=\"col-xl-42 p-4 bg-over-root-lighter rounded mx-4\">\r\n        <div className=\"row no-gutters h5 mb-4\">\r\n          Reply to {reviewAuthor.display_name}\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-auto pr-3 d-none d-md-block\">\r\n            <div\r\n              className=\"square-70 rounded-circle bg-image\"\r\n              style={{ backgroundImage: `url(${user.photo})` }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"row no-gutters d-flex d-md-none justify-content-between mb-3\">\r\n              <div className=\"col-auto pr-3\">\r\n                <div\r\n                  className=\"square-70 rounded-circle bg-image\"\r\n                  style={{ backgroundImage: `url(${user.photo})` }}\r\n                ></div>\r\n              </div>\r\n              <div\r\n                className={`col-auto d-flex align-items-end ${\r\n                  newComment.comment.length <=\r\n                  settings.no_comment_characters - 1\r\n                    ? \"text-muted\"\r\n                    : \"text-danger\"\r\n                }`}\r\n              >\r\n                {newComment.comment\r\n                  ? settings.no_comment_characters - newComment.comment.length\r\n                  : settings.no_comment_characters}{\" \"}\r\n                characters left\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters mb-2\" style={{ height: \"150px\" }}>\r\n              <textarea\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  let text = e.target.value;\r\n                  if (text.length <= settings.no_comment_characters) {\r\n                    setNewComment((prev) =>\r\n                      Object.assign({}, prev, { comment: text })\r\n                    );\r\n                  }\r\n                }}\r\n                value={newComment.comment}\r\n                spellCheck={false}\r\n                placeholder=\"Add your comment...\"\r\n                style={{ resize: \"none\" }}\r\n                className=\"w-100 h-100 textarea\"\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-md-end justify-content-center\">\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters justify-content-end\">\r\n                  <div\r\n                    className={`col-auto d-none d-md-block ${\r\n                      newComment.comment.length <=\r\n                      settings.no_comment_characters - 1\r\n                        ? \"text-muted\"\r\n                        : \"text-danger\"\r\n                    }`}\r\n                  >\r\n                    {newComment.comment\r\n                      ? settings.no_comment_characters -\r\n                        newComment.comment.length\r\n                      : settings.no_comment_characters}{\" \"}\r\n                    characters left\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div\r\n                  className=\"row no-gutters align-items-center text-danger justify-content-end\"\r\n                  style={{ height: \"30px\", opacity: problem ? 1 : 0 }}\r\n                >\r\n                  {problem}\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"btn-custom btn-custom-primary btn-small\"\r\n                onClick={async () => {\r\n                  if (!newComment.comment) {\r\n                    setProblem(\"Type comment\");\r\n                  } else {\r\n                    if (user.token) {\r\n                      setLoading(true);\r\n                      let finalComment = Object.assign({}, newComment, {\r\n                        author_name: user.display_name,\r\n                        movie_id: movie.id,\r\n                        comment_id: review.comment_id,\r\n                        review_id: review._id,\r\n                        review: review.review,\r\n                        review_author: review.author,\r\n                        notificationReceivers: review.notificationReceivers,\r\n                      });\r\n                      let finalUser = { ...user };\r\n                      delete finalUser[\"photo\"];\r\n                      setNewComment({ comment: \"\" });\r\n                      let res = await WriteComment(\r\n                        finalComment,\r\n                        finalUser,\r\n                        movie\r\n                      );\r\n                      setLoading(false);\r\n                      if (res.error) {\r\n                        store.dispatch({\r\n                          type: \"SET_NOTIFICATION\",\r\n                          notification: {\r\n                            title: \"Couldn't add your comment\",\r\n                            type: \"failure\",\r\n                            message: JSON.stringify(res.error).replace(\r\n                              /\"/g,\r\n                              \"\"\r\n                            ),\r\n                          },\r\n                        });\r\n                      } else {\r\n                        store.dispatch({\r\n                          type: \"SET_NOTIFICATION\",\r\n                          notification: {\r\n                            title: \"You successfully writed comment\",\r\n                            type: \"success\",\r\n                            message: \"Your comment successfully added\",\r\n                          },\r\n                        });\r\n                        onClose();\r\n                        setReviewIdOfVisibleComments(review._id);\r\n                        refreshComments();\r\n                        refreshReviews();\r\n                      }\r\n                    } else {\r\n                      setProblem(\"You need to login to write comment\");\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <Loader\r\n                  color={\"white\"}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    left: \"10px\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    margin: \"auto\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                  loading={loading}\r\n                  size={20}\r\n                ></Loader>\r\n                Send\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    settings: state.settings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(ReplyToReview);\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport date from \"date-and-time\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport { MdThumbUp, MdChatBubble, MdFlag } from \"react-icons/md\";\r\nimport {\r\n  GetReviewComments,\r\n  GetPopularReviews,\r\n  GetPromotedReviews,\r\n  LikeReview,\r\n  LikeComment,\r\n  ReportComment,\r\n} from \"../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport Paigination from \"../utility/Paigination\";\r\nimport history from \"../../History\";\r\nimport ReplyToReview from \"./ReplyToReview\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport Popover from \"../utility/Popover\";\r\n\r\nconst PopularReviews = ({ publicUsers, settings, user, ratings }) => {\r\n  //comments object.Its property will be review id.\r\n  const [comments, setComments] = useState({});\r\n\r\n  const [reviews, setReviews] = useState([]);\r\n  const [promotedReviews, setPromotedReviews] = useState([]);\r\n\r\n  const [reviewIdOfVisibleComments, setReviewIdOfVisibleComments] = useState(\r\n    -1\r\n  );\r\n\r\n  const [loadingComment, setLoadingComment] = useState(-1);\r\n  const [loadingReview, setLoadingReview] = useState(-1);\r\n  const [loadingReport, setLoadingReport] = useState(-1);\r\n\r\n  const page = 1;\r\n  const [commentsPage, setCommentsPage] = useState(1);\r\n\r\n  // reference to top of the reviews block to scroll into view after changing the page\r\n  const topOfReviewsBlock = useRef(null);\r\n\r\n  const [review, setReview] = useState({\r\n    movie_title: \"\",\r\n    movie_id: \"\",\r\n    movie_genres: \"\",\r\n    movie_release_date: \"\",\r\n    movie_poster: \"\",\r\n  });\r\n\r\n  const [addReplyOpen, setAddReplyOpen] = useState(false);\r\n\r\n  //state to refresh comments after writing it\r\n  const [refreshComments, setRefreshComments] = useState(false);\r\n\r\n  //state to refresh reviews after writing it\r\n  const [refreshReviews, setRefreshReviews] = useState(false);\r\n\r\n  const commentsPerPage = 5;\r\n  const reviewsPerPage = 8;\r\n\r\n  const [promotedContents, setPromotedContents] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (reviewIdOfVisibleComments !== -1) {\r\n        let data = await GetReviewComments(reviewIdOfVisibleComments);\r\n\r\n        let commentsObj = {};\r\n        data.forEach((x) => {\r\n          commentsObj[x._id] = x;\r\n        });\r\n        setComments((prev) =>\r\n          Object.assign({}, prev, { [reviewIdOfVisibleComments]: commentsObj })\r\n        );\r\n      }\r\n    }\r\n    getData();\r\n  }, [reviewIdOfVisibleComments, refreshComments]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (settings.no_popular_reviews) {\r\n        let promoted = await GetPromotedReviews();\r\n        let promotedContentIds = [];\r\n        let promoContents = {};\r\n        if (!promoted.error) {\r\n          promoted.forEach((x) => {\r\n            promotedContentIds.push(x.content_id);\r\n            promoContents[x.content_id] = x;\r\n          });\r\n        }\r\n        setPromotedContents(promoContents);\r\n\r\n        let data = await GetPopularReviews(settings.no_popular_reviews);\r\n        if (!data.error) {\r\n          let promReviews = [],\r\n            notPromotedReviews = [];\r\n          data.forEach((x) => {\r\n            if (promotedContentIds.includes(x._id)) {\r\n              x.promoted = true;\r\n              promReviews.push(x);\r\n            } else {\r\n              notPromotedReviews.push(x);\r\n            }\r\n          });\r\n          setPromotedReviews(promReviews);\r\n          setReviews(notPromotedReviews);\r\n        }\r\n      }\r\n    }\r\n    getData();\r\n  }, [settings, refreshReviews]);\r\n\r\n  const renderComments = (ids, review) => {\r\n    return ids.map((x, ind) => {\r\n      return comments[review._id][x] ? (\r\n        <React.Fragment>\r\n          <div\r\n            style={{\r\n              marginLeft: `${\r\n                comments[review._id][x].notificationReceivers.length * 60 - 30\r\n              }px`,\r\n            }}\r\n            key={`comment-${reviewIdOfVisibleComments}-${ind}`}\r\n            className={`row no-gutters p-4 bg-over-root-lighter rounded mb-2 indented-comment`}\r\n          >\r\n            <div className=\"col-auto pr-4 d-none d-md-block\">\r\n              <div\r\n                className=\"bg-image rounded-circle square-70\"\r\n                style={{\r\n                  backgroundImage: `url(${\r\n                    publicUsers[comments[review._id][x].author]\r\n                      ? publicUsers[comments[review._id][x].author].photo\r\n                      : \"\"\r\n                  })`,\r\n                }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"row no-gutters justify-content-between align-items-center mb-2\">\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters\">\r\n                    <div className=\"col-auto pr-2 d-block d-md-none\">\r\n                      <div\r\n                        className=\"bg-image rounded-circle square-40\"\r\n                        style={{\r\n                          backgroundImage: `url(${\r\n                            publicUsers[comments[review._id][x].author]\r\n                              ? publicUsers[comments[review._id][x].author]\r\n                                  .photo\r\n                              : \"\"\r\n                          })`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"col-auto mr-3 text-title-md mb-0\">\r\n                      {publicUsers[comments[review._id][x].author]\r\n                        ? publicUsers[comments[review._id][x].author]\r\n                            .display_name\r\n                        : \"\"}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters align-items-center\">\r\n                    <div className=\"col-auto\">\r\n                      <div className=\"row no-gutters align-items-center\">\r\n                        <div className=\"col-auto mr-2\">Commented on</div>\r\n                        <div className=\"col-auto mr-3 text-muted\">\r\n                          {date.format(\r\n                            new Date(comments[review._id][x].date),\r\n                            \"MMM DD, YYYY\"\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <Popover\r\n                      arrow={false}\r\n                      position=\"top\"\r\n                      trigger=\"mouseenter\"\r\n                      theme=\"dark\"\r\n                      content={(w) => (\r\n                        <div className=\"py-2 px-3 rounded bg-over-root\">\r\n                          Report Abuse\r\n                        </div>\r\n                      )}\r\n                    >\r\n                      <div\r\n                        className=\"col-auto text-muted btn-tertiary-small d-flex flex-center\"\r\n                        onClick={async () => {\r\n                          if (user.token) {\r\n                            setLoadingReport(x);\r\n                            let res = await ReportComment(user, x);\r\n                            setLoadingReport(-1);\r\n                            if (res.error) {\r\n                              store.dispatch({\r\n                                type: \"SET_NOTIFICATION\",\r\n                                notification: {\r\n                                  title: \"Error\",\r\n                                  message: res.error,\r\n                                  type: \"failure\",\r\n                                },\r\n                              });\r\n                            } else {\r\n                              store.dispatch({\r\n                                type: \"SET_NOTIFICATION\",\r\n                                notification: {\r\n                                  title: \"Comment reported\",\r\n                                  message:\r\n                                    \"Comment was successfully reported. We will review it soon.\",\r\n                                  type: \"success\",\r\n                                },\r\n                              });\r\n                            }\r\n                          } else {\r\n                            store.dispatch({\r\n                              type: \"SET_NOTIFICATION\",\r\n                              notification: {\r\n                                title: \"Login required\",\r\n                                message: \"You need to login to report comment\",\r\n                                type: \"failure\",\r\n                              },\r\n                            });\r\n                          }\r\n                        }}\r\n                      >\r\n                        {loadingReport === x ? (\r\n                          <div className=\"square-20\">\r\n                            <Loader\r\n                              color={\"white\"}\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                left: \"10px\",\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                margin: \"auto\",\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                              }}\r\n                              loading={true}\r\n                              size={20}\r\n                            ></Loader>\r\n                          </div>\r\n                        ) : (\r\n                          <MdFlag fontSize=\"24px\"></MdFlag>\r\n                        )}\r\n                      </div>\r\n                    </Popover>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row no-gutters text-light mb-3 font-weight-300 text-break\">\r\n                {comments[review._id][x].comment}\r\n              </div>\r\n              <div className=\"row no-gutters justify-content-end align-items-center\">\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters align-items-center\">\r\n                    <div className=\"col-auto mr-2\">\r\n                      {comments[review._id][x].likes.length}\r\n                    </div>\r\n                    <div className=\"col-auto mr-2 \">\r\n                      {loadingComment === ind ? (\r\n                        <div className=\"square-20\">\r\n                          <Loader\r\n                            color={\"white\"}\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              left: \"10px\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                            loading={loadingComment === ind}\r\n                            size={20}\r\n                          ></Loader>\r\n                        </div>\r\n                      ) : (\r\n                        <MdThumbUp\r\n                          onClick={async () => {\r\n                            if (user.token) {\r\n                              if (user._id !== comments[review._id][x].author) {\r\n                                setLoadingComment(ind);\r\n                                let res = await LikeComment(user, x);\r\n                                setLoadingComment(-1);\r\n                                if (res.error) {\r\n                                  store.dispatch({\r\n                                    type: \"SET_NOTIFICATION\",\r\n                                    notification: {\r\n                                      title: \"Error\",\r\n                                      message: res.error,\r\n                                      type: \"failure\",\r\n                                    },\r\n                                  });\r\n                                } else {\r\n                                  setRefreshComments(!refreshComments);\r\n                                }\r\n                              } else {\r\n                                store.dispatch({\r\n                                  type: \"SET_NOTIFICATION\",\r\n                                  notification: {\r\n                                    title: \"Action not allowed\",\r\n                                    message:\r\n                                      \"You can not like your own comment\",\r\n                                    type: \"failure\",\r\n                                  },\r\n                                });\r\n                              }\r\n                            } else {\r\n                              store.dispatch({\r\n                                type: \"SET_NOTIFICATION\",\r\n                                notification: {\r\n                                  title: \"Login required\",\r\n                                  message: \"You need to login to like review\",\r\n                                  type: \"failure\",\r\n                                },\r\n                              });\r\n                            }\r\n                          }}\r\n                          fontSize=\"24px\"\r\n                          className=\"text-green scale-transition cursor-pointer\"\r\n                        ></MdThumbUp>\r\n                      )}\r\n                    </div>\r\n                    <div\r\n                      className=\"col-auto text-orange btn-tertiary\"\r\n                      onClick={() => {\r\n                        if (!user.token) {\r\n                          store.dispatch({\r\n                            type: \"SET_NOTIFICATION\",\r\n                            notification: {\r\n                              title: \"Login required\",\r\n                              message: \"You need to login to write review.\",\r\n                              type: \"failure\",\r\n                            },\r\n                          });\r\n                        } else {\r\n                          setReview(\r\n                            Object.assign({}, review, {\r\n                              comment_id: x,\r\n                              notificationReceivers: comments[review._id][\r\n                                x\r\n                              ].notificationReceivers.concat([\r\n                                publicUsers[comments[review._id][x].author],\r\n                              ]),\r\n                            })\r\n                          );\r\n                          setAddReplyOpen(true);\r\n                        }\r\n                      }}\r\n                    >\r\n                      Reply\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {renderComments(comments[review._id][x].comments, review)}\r\n        </React.Fragment>\r\n      ) : (\r\n        \"\"\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"row no-gutters justify-content-center text-white\">\r\n      <div className=\"col-60 content-container py-3 px-md-5 px-4\">\r\n        <div className=\"row no-gutters h5\">\r\n          <div\r\n            className=\"col-auto\"\r\n            style={{\r\n              padding: \"6px 30px 6px 0px\",\r\n              background: \"linear-gradient(to left, #ff0037, transparent)\",\r\n              borderRadius: \"0 4px 4px 0\",\r\n            }}\r\n          >\r\n            Popular Reviews\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters text-light mb-3\">\r\n          Most commented reviews in last 30 days\r\n        </div>\r\n        <div className=\"row no-gutters mb-2\" ref={topOfReviewsBlock}></div>\r\n        {promotedReviews\r\n          .concat(reviews)\r\n          .slice(\r\n            (page - 1) * reviewsPerPage,\r\n            (page - 1) * reviewsPerPage + reviewsPerPage\r\n          )\r\n          .map((x, i) => {\r\n            let rating = promotedContents[x._id]\r\n              ? promotedContents[x._id].content.rating\r\n              : x.rating;\r\n            let review = promotedContents[x._id]\r\n              ? promotedContents[x._id].content.review\r\n              : x.review;\r\n            return (\r\n              <React.Fragment key={`fragment-review-${i}`}>\r\n                <div\r\n                  key={`review-${i}`}\r\n                  className=\"row no-gutters p-4 bg-over-root-lighter rounded mb-2\"\r\n                >\r\n                  <div\r\n                    className=\"col-sm-auto col-20 pr-4 d-none d-sm-block\"\r\n                    style={{ maxWidth: \"150px\" }}\r\n                  >\r\n                    <div className=\"row no-gutters mb-1\">\r\n                      <img\r\n                        alt={`poster-of-${x.movie_id}`}\r\n                        onClick={() => history.push(`/movie/${x.movie_id}`)}\r\n                        width=\"100%\"\r\n                        style={{ borderRadius: \"13px\", cursor: \"pointer\" }}\r\n                        src={`https://image.tmdb.org/t/p/w154${\r\n                          ratings[x.movie_id]\r\n                            ? ratings[x.movie_id].movie_poster\r\n                            : \"https://critics.io/img/movies/poster-placeholder.png\"\r\n                        }`}\r\n                      ></img>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col d-flex flex-column\">\r\n                    <div className=\"row no-gutters justify-content-between align-items-center mb-2 flex-grow-0\">\r\n                      <div className=\"col-60 d-block d-sm-none mb-3\">\r\n                        <div className=\"row no-gutters mb-1\">\r\n                          <div className=\"col-auto pr-3\">\r\n                            <div\r\n                              className=\"square-70 rounded bg-image\"\r\n                              style={{\r\n                                backgroundImage: `url(https://image.tmdb.org/t/p/w154${\r\n                                  ratings[x.movie_id]\r\n                                    ? ratings[x.movie_id].movie_poster\r\n                                    : \"https://critics.io/img/movies/poster-placeholder.png\"\r\n                                })`,\r\n                              }}\r\n                            ></div>\r\n                          </div>\r\n                          <div className=\"col\">\r\n                            <div className=\"row no-gutters text-white mb-0\">\r\n                              {ratings[x.movie_id]\r\n                                ? ratings[x.movie_id].movie_title\r\n                                : \"\"}{\" \"}\r\n                              (\r\n                              {ratings[x.movie_id]\r\n                                ? ratings[\r\n                                    x.movie_id\r\n                                  ].movie_release_date.substring(0, 4)\r\n                                : \"\"}\r\n                              )\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-60\">\r\n                        <div className=\"row no-gutters justify-content-between\">\r\n                          <div className=\"col-auto mb-2\">\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                              <div className=\"col-auto pr-2\">\r\n                                <div\r\n                                  className=\"bg-image rounded-circle square-40\"\r\n                                  style={{\r\n                                    backgroundImage: `url(${\r\n                                      publicUsers[x.author]\r\n                                        ? publicUsers[x.author].photo\r\n                                        : \"\"\r\n                                    })`,\r\n                                  }}\r\n                                ></div>\r\n                              </div>\r\n                              <div className=\"col-auto\">\r\n                                <div className=\"row no-gutters align-items-center text-white\">\r\n                                  <div className=\"col-auto mr-3 mb-0\">\r\n                                    {publicUsers[x.author]\r\n                                      ? publicUsers[x.author].display_name\r\n                                      : \"\"}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-auto\">\r\n                            <div className=\"row no-gutters text-white\">\r\n                              <span className=\"mr-2\">Posted on</span>\r\n                              <span className=\"text-muted\">\r\n                                {date.format(new Date(x.date), \"MMM DD, YYYY\")}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row no-gutters text-light mb-3 font-size-14 flex-grow-0 font-weight-300 text-break\">\r\n                      {review}\r\n                    </div>\r\n\r\n                    <div className=\"row no-gutters flex-grow-1 align-items-bottom\">\r\n                      <div className=\"col-60 d-flex flex-column justify-content-end\">\r\n                        <div className=\"row no-gutters justify-content-between align-items-center text-white\">\r\n                          <div className=\"col-auto\">\r\n                            <div className=\"row no-gutters\">\r\n                              <div style={{ marginBottom: \"-6px\" }}>\r\n                                <Emoji\r\n                                  emoji={\r\n                                    rating === \"excellent_rate\"\r\n                                      ? \"fire\"\r\n                                      : rating === \"good_rate\"\r\n                                      ? \"heart\"\r\n                                      : rating === \"ok_rate\"\r\n                                      ? \"heavy-division-sign\"\r\n                                      : \"shit\"\r\n                                  }\r\n                                  set=\"facebook\"\r\n                                  size={24}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-auto px-0\">\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                              <div className=\"col-auto mr-2\">\r\n                                {x.likes.length}\r\n                              </div>\r\n                              <div className=\"col-auto mr-2 \">\r\n                                {loadingReview === i ? (\r\n                                  <div className=\"square-20\">\r\n                                    <Loader\r\n                                      color={\"white\"}\r\n                                      style={{\r\n                                        position: \"absolute\",\r\n                                        left: \"10px\",\r\n                                        top: 0,\r\n                                        bottom: 0,\r\n                                        margin: \"auto\",\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                      }}\r\n                                      loading={loadingReview === i}\r\n                                      size={20}\r\n                                    ></Loader>\r\n                                  </div>\r\n                                ) : (\r\n                                  <MdThumbUp\r\n                                    onClick={async () => {\r\n                                      if (user.token) {\r\n                                        if (user._id !== x.author) {\r\n                                          setLoadingReview(i);\r\n                                          let res = await LikeReview(\r\n                                            user,\r\n                                            x._id\r\n                                          );\r\n                                          setLoadingReview(-1);\r\n                                          if (res.error) {\r\n                                            store.dispatch({\r\n                                              type: \"SET_NOTIFICATION\",\r\n                                              notification: {\r\n                                                title: \"Error\",\r\n                                                message: res.error,\r\n                                                type: \"failure\",\r\n                                              },\r\n                                            });\r\n                                          } else {\r\n                                            setRefreshReviews(!refreshReviews);\r\n                                          }\r\n                                        } else {\r\n                                          store.dispatch({\r\n                                            type: \"SET_NOTIFICATION\",\r\n                                            notification: {\r\n                                              title: \"Action not allowed\",\r\n                                              message:\r\n                                                \"You can not like your own review\",\r\n                                              type: \"failure\",\r\n                                            },\r\n                                          });\r\n                                        }\r\n                                      } else {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Login required\",\r\n                                            message:\r\n                                              \"You need to login to like review\",\r\n                                            type: \"failure\",\r\n                                          },\r\n                                        });\r\n                                      }\r\n                                    }}\r\n                                    fontSize=\"24px\"\r\n                                    className=\"text-green scale-transition cursor-pointer\"\r\n                                  ></MdThumbUp>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"col-auto mr-2\">\r\n                                {x.comments.length}\r\n                              </div>\r\n                              <div className=\"col-auto mr-2\">\r\n                                <MdChatBubble\r\n                                  onClick={() => {\r\n                                    setReviewIdOfVisibleComments(\r\n                                      reviewIdOfVisibleComments === x._id\r\n                                        ? -1\r\n                                        : x._id\r\n                                    );\r\n                                  }}\r\n                                  fontSize=\"24px\"\r\n                                  className=\"text-orange scale-transition cursor-pointer\"\r\n                                ></MdChatBubble>\r\n                              </div>\r\n                              <div\r\n                                className=\"col-auto text-orange btn-tertiary\"\r\n                                onClick={() => {\r\n                                  if (!user.token) {\r\n                                    store.dispatch({\r\n                                      type: \"SET_NOTIFICATION\",\r\n                                      notification: {\r\n                                        title: \"Login required\",\r\n                                        message:\r\n                                          \"You need to login to write review.\",\r\n                                        type: \"failure\",\r\n                                      },\r\n                                    });\r\n                                  } else {\r\n                                    setReview(\r\n                                      Object.assign({}, x, {\r\n                                        notificationReceivers: [\r\n                                          publicUsers[x.author],\r\n                                        ],\r\n                                      })\r\n                                    );\r\n                                    setAddReplyOpen(true);\r\n                                  }\r\n                                }}\r\n                              >\r\n                                Reply\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <Collapse\r\n                  in={reviewIdOfVisibleComments === x._id}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <div\r\n                    className=\"h5 py-2 text-white\"\r\n                    style={{ marginLeft: \"30px\" }}\r\n                  >\r\n                    Comments (\r\n                    {comments[x._id]\r\n                      ? Object.values(comments[x._id]).length\r\n                      : 0}\r\n                    )\r\n                  </div>\r\n                  {comments[x._id]\r\n                    ? renderComments(\r\n                        Object.values(comments[x._id])\r\n                          .filter((a) => a.notificationReceivers.length === 1)\r\n                          .map((b) => b._id),\r\n                        x\r\n                      )\r\n                    : \"\"}\r\n                  <div className=\"row no-gutters justify-content-end mt-2\">\r\n                    <div className=\"col-auto ml-4\">\r\n                      <Paigination\r\n                        count={Math.ceil(\r\n                          comments[x._id]\r\n                            ? comments[x._id].length / commentsPerPage\r\n                            : 1\r\n                        )}\r\n                        current={commentsPage}\r\n                        setCurrent={setCommentsPage}\r\n                        classNames={{\r\n                          notSelected: \"input-dark\",\r\n                          selected: \"input-dark-selected\",\r\n                        }}\r\n                      ></Paigination>\r\n                    </div>\r\n                  </div>\r\n                </Collapse>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        <ReplyToReview\r\n          refreshReviews={() => setRefreshReviews(!refreshReviews)}\r\n          setReviewIdOfVisibleComments={setReviewIdOfVisibleComments}\r\n          refreshComments={() => setRefreshComments(!refreshComments)}\r\n          setComments={setComments}\r\n          movie={{\r\n            id: review.movie_id,\r\n          }}\r\n          reviewAuthor={\r\n            publicUsers[review.author]\r\n              ? publicUsers[review.author]\r\n              : { display_name: \"\" }\r\n          }\r\n          review={review}\r\n          open={addReplyOpen}\r\n          onClose={() => setAddReplyOpen(false)}\r\n          user={user}\r\n        ></ReplyToReview>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    settings: state.settings,\r\n    ratings: state.ratings,\r\n    user: state.user,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(PopularReviews);\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport date from \"date-and-time\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport { MdThumbUp, MdChatBubble, MdFlag } from \"react-icons/md\";\r\nimport {\r\n  GetReviewComments,\r\n  GetRecentReviews,\r\n  LikeReview,\r\n  LikeComment,\r\n  ReportComment,\r\n} from \"../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport Paigination from \"../utility/Paigination\";\r\nimport history from \"../../History\";\r\nimport ReplyToReview from \"./ReplyToReview\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport Popover from \"../utility/Popover\";\r\n\r\nconst RecentReviews = ({ publicUsers, user, ratings }) => {\r\n  //comments object.Its property will be review id.\r\n  const [comments, setComments] = useState({});\r\n\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  const [reviewIdOfVisibleComments, setReviewIdOfVisibleComments] = useState(\r\n    -1\r\n  );\r\n\r\n  const [loadingComment, setLoadingComment] = useState(-1);\r\n  const [loadingReview, setLoadingReview] = useState(-1);\r\n  const [loadingReport, setLoadingReport] = useState(-1);\r\n\r\n  const page = 1;\r\n  const [commentsPage, setCommentsPage] = useState(1);\r\n\r\n  // reference to top of the reviews block to scroll into view after changing the page\r\n  const topOfReviewsBlock = useRef(null);\r\n\r\n  // boolean variable to display \"add review\" modal or not\r\n  const [addReplyOpen, setAddReplyOpen] = useState(false);\r\n\r\n  const [review, setReview] = useState({\r\n    movie_title: \"\",\r\n    movie_id: \"\",\r\n    movie_genres: \"\",\r\n    movie_release_date: \"\",\r\n    movie_poster: \"\",\r\n  });\r\n\r\n  //state to refresh comments after writing it\r\n  const [refreshComments, setRefreshComments] = useState(false);\r\n\r\n  //state to refresh reviews after writing it\r\n  const [refreshReviews, setRefreshReviews] = useState(false);\r\n\r\n  const commentsPerPage = 5;\r\n  const reviewsPerPage = 8;\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (reviewIdOfVisibleComments !== -1) {\r\n        let data = await GetReviewComments(reviewIdOfVisibleComments);\r\n        let commentsObj = {};\r\n        data.forEach((x) => {\r\n          commentsObj[x._id] = x;\r\n        });\r\n        setComments((prev) =>\r\n          Object.assign({}, prev, { [reviewIdOfVisibleComments]: commentsObj })\r\n        );\r\n      }\r\n    }\r\n    getData();\r\n  }, [reviewIdOfVisibleComments, refreshComments]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let res = await GetRecentReviews(10);\r\n      if (!res.error) {\r\n        setReviews(res);\r\n      }\r\n    }\r\n    getData();\r\n  }, [refreshReviews]);\r\n\r\n  const renderComments = (ids, review) => {\r\n    return ids.map((x, ind) => {\r\n      return comments[review._id][x] ? (\r\n        <React.Fragment>\r\n          <div\r\n            style={{\r\n              marginLeft: `${\r\n                comments[review._id][x].notificationReceivers.length * 60 - 30\r\n              }px`,\r\n            }}\r\n            key={`comment-${reviewIdOfVisibleComments}-${ind}`}\r\n            className={`row no-gutters p-4 bg-over-root-lighter rounded mb-2 indented-comment`}\r\n          >\r\n            <div className=\"col-auto pr-4 d-none d-md-block\">\r\n              <div\r\n                className=\"bg-image rounded-circle square-70\"\r\n                style={{\r\n                  backgroundImage: `url(${\r\n                    publicUsers[comments[review._id][x].author]\r\n                      ? publicUsers[comments[review._id][x].author].photo\r\n                      : \"\"\r\n                  })`,\r\n                }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"row no-gutters justify-content-between align-items-center mb-2\">\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters\">\r\n                    <div className=\"col-auto pr-2 d-block d-md-none\">\r\n                      <div\r\n                        className=\"bg-image rounded-circle square-40\"\r\n                        style={{\r\n                          backgroundImage: `url(${\r\n                            publicUsers[comments[review._id][x].author]\r\n                              ? publicUsers[comments[review._id][x].author]\r\n                                  .photo\r\n                              : \"\"\r\n                          })`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"col-auto mr-3 text-title-md mb-0\">\r\n                      {publicUsers[comments[review._id][x].author]\r\n                        ? publicUsers[comments[review._id][x].author]\r\n                            .display_name\r\n                        : \"\"}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters align-items-center\">\r\n                    <div className=\"col-auto\">\r\n                      <div className=\"row no-gutters align-items-center\">\r\n                        <div className=\"col-auto mr-2\">Commented on</div>\r\n                        <div className=\"col-auto mr-3 text-muted\">\r\n                          {date.format(\r\n                            new Date(comments[review._id][x].date),\r\n                            \"MMM DD, YYYY\"\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <Popover\r\n                      arrow={false}\r\n                      position=\"top\"\r\n                      trigger=\"mouseenter\"\r\n                      theme=\"dark\"\r\n                      content={(w) => (\r\n                        <div className=\"py-2 px-3 rounded bg-over-root\">\r\n                          Report Abuse\r\n                        </div>\r\n                      )}\r\n                    >\r\n                      <div\r\n                        className=\"col-auto text-muted btn-tertiary-small d-flex flex-center\"\r\n                        onClick={async () => {\r\n                          if (user.token) {\r\n                            setLoadingReport(x);\r\n                            let res = await ReportComment(user, x);\r\n                            setLoadingReport(-1);\r\n                            if (res.error) {\r\n                              store.dispatch({\r\n                                type: \"SET_NOTIFICATION\",\r\n                                notification: {\r\n                                  title: \"Error\",\r\n                                  message: res.error,\r\n                                  type: \"failure\",\r\n                                },\r\n                              });\r\n                            } else {\r\n                              store.dispatch({\r\n                                type: \"SET_NOTIFICATION\",\r\n                                notification: {\r\n                                  title: \"Comment reported\",\r\n                                  message:\r\n                                    \"Comment was successfully reported. We will review it soon.\",\r\n                                  type: \"success\",\r\n                                },\r\n                              });\r\n                            }\r\n                          } else {\r\n                            store.dispatch({\r\n                              type: \"SET_NOTIFICATION\",\r\n                              notification: {\r\n                                title: \"Login required\",\r\n                                message: \"You need to login to report comment\",\r\n                                type: \"failure\",\r\n                              },\r\n                            });\r\n                          }\r\n                        }}\r\n                      >\r\n                        {loadingReport === x ? (\r\n                          <div className=\"square-20\">\r\n                            <Loader\r\n                              color={\"white\"}\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                left: \"10px\",\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                margin: \"auto\",\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                              }}\r\n                              loading={true}\r\n                              size={20}\r\n                            ></Loader>\r\n                          </div>\r\n                        ) : (\r\n                          <MdFlag fontSize=\"24px\"></MdFlag>\r\n                        )}\r\n                      </div>\r\n                    </Popover>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row no-gutters text-light mb-3 font-weight-300 text-break\">\r\n                {comments[review._id][x].comment}\r\n              </div>\r\n              <div className=\"row no-gutters justify-content-end align-items-center\">\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters align-items-center\">\r\n                    <div className=\"col-auto mr-2\">\r\n                      {comments[review._id][x].likes.length}\r\n                    </div>\r\n                    <div className=\"col-auto mr-2 \">\r\n                      {loadingComment === ind ? (\r\n                        <div className=\"square-20\">\r\n                          <Loader\r\n                            color={\"white\"}\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              left: \"10px\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                            loading={loadingComment === ind}\r\n                            size={20}\r\n                          ></Loader>\r\n                        </div>\r\n                      ) : (\r\n                        <MdThumbUp\r\n                          onClick={async () => {\r\n                            if (user.token) {\r\n                              if (user._id !== comments[review._id][x].author) {\r\n                                setLoadingComment(ind);\r\n                                let res = await LikeComment(user, x);\r\n                                setLoadingComment(-1);\r\n                                if (res.error) {\r\n                                  store.dispatch({\r\n                                    type: \"SET_NOTIFICATION\",\r\n                                    notification: {\r\n                                      title: \"Error\",\r\n                                      message: res.error,\r\n                                      type: \"failure\",\r\n                                    },\r\n                                  });\r\n                                } else {\r\n                                  setRefreshComments(!refreshComments);\r\n                                }\r\n                              } else {\r\n                                store.dispatch({\r\n                                  type: \"SET_NOTIFICATION\",\r\n                                  notification: {\r\n                                    title: \"Action not allowed\",\r\n                                    message:\r\n                                      \"You can not like your own comment\",\r\n                                    type: \"failure\",\r\n                                  },\r\n                                });\r\n                              }\r\n                            } else {\r\n                              store.dispatch({\r\n                                type: \"SET_NOTIFICATION\",\r\n                                notification: {\r\n                                  title: \"Login required\",\r\n                                  message: \"You need to login to like review\",\r\n                                  type: \"failure\",\r\n                                },\r\n                              });\r\n                            }\r\n                          }}\r\n                          fontSize=\"24px\"\r\n                          className=\"text-green scale-transition cursor-pointer\"\r\n                        ></MdThumbUp>\r\n                      )}\r\n                    </div>\r\n                    <div\r\n                      className=\"col-auto text-orange btn-tertiary\"\r\n                      onClick={() => {\r\n                        if (!user.token) {\r\n                          store.dispatch({\r\n                            type: \"SET_NOTIFICATION\",\r\n                            notification: {\r\n                              title: \"Login required\",\r\n                              message: \"You need to login to write review.\",\r\n                              type: \"failure\",\r\n                            },\r\n                          });\r\n                        } else {\r\n                          setReview(\r\n                            Object.assign({}, review, {\r\n                              comment_id: x,\r\n                              notificationReceivers: comments[review._id][\r\n                                x\r\n                              ].notificationReceivers.concat([\r\n                                publicUsers[comments[review._id][x].author],\r\n                              ]),\r\n                            })\r\n                          );\r\n                          setAddReplyOpen(true);\r\n                        }\r\n                      }}\r\n                    >\r\n                      Reply\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {renderComments(comments[review._id][x].comments, review)}\r\n        </React.Fragment>\r\n      ) : (\r\n        \"\"\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"row no-gutters justify-content-center text-white\">\r\n      <div className=\"col-60 content-container py-3 px-md-5 px-4\">\r\n        <div className=\"row no-gutters h5\">\r\n          <div\r\n            className=\"col-auto\"\r\n            style={{\r\n              padding: \"6px 30px 6px 0px\",\r\n              background: \"linear-gradient(to left, #ff0037, transparent)\",\r\n              borderRadius: \"0 4px 4px 0\",\r\n            }}\r\n          >\r\n            Recent Reviews\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters text-light mb-3\">\r\n          Most recent reviews in days\r\n        </div>\r\n        <div className=\"row no-gutters mb-2\" ref={topOfReviewsBlock}></div>\r\n        {reviews\r\n          .slice(\r\n            (page - 1) * reviewsPerPage,\r\n            (page - 1) * reviewsPerPage + reviewsPerPage\r\n          )\r\n          .map((x, i) => (\r\n            <React.Fragment key={`fragment-review-${i}`}>\r\n              <div\r\n                key={`review-${i}`}\r\n                className=\"row no-gutters p-4 bg-over-root-lighter rounded mb-2\"\r\n              >\r\n                <div\r\n                  className=\"col-sm-auto col-20 pr-4 d-none d-sm-block\"\r\n                  style={{ maxWidth: \"150px\" }}\r\n                >\r\n                  <div className=\"row no-gutters mb-1\">\r\n                    <img\r\n                      alt={`poster-of-${x.movie_id}`}\r\n                      onClick={() => history.push(`/movie/${x.movie_id}`)}\r\n                      width=\"100%\"\r\n                      style={{ borderRadius: \"13px\", cursor: \"pointer\" }}\r\n                      src={`https://image.tmdb.org/t/p/w154${\r\n                        ratings[x.movie_id]\r\n                          ? ratings[x.movie_id].movie_poster\r\n                          : \"https://critics.io/img/movies/poster-placeholder.png\"\r\n                      }`}\r\n                    ></img>\r\n                  </div>\r\n                  {/* <div className=\"row no-gutters text-white h6 mb-0\">\r\n                    {x.movie_title} ({x.movie_release_date.substring(0, 4)})\r\n                  </div>\r\n                  <div className=\"row no-gutters text-muted\">\r\n                    <div className=\"text-truncate\">{x.movie_genres}</div>\r\n                  </div> */}\r\n                </div>\r\n                <div className=\"col d-flex flex-column\">\r\n                  <div className=\"row no-gutters justify-content-between align-items-center mb-2 flex-grow-0\">\r\n                    <div className=\"col-60 d-block d-sm-none mb-3\">\r\n                      <div className=\"row no-gutters mb-1\">\r\n                        <div className=\"col-auto pr-3\">\r\n                          <div\r\n                            className=\"square-70 rounded bg-image\"\r\n                            style={{\r\n                              backgroundImage: `url(https://image.tmdb.org/t/p/w154${\r\n                                ratings[x.movie_id]\r\n                                  ? ratings[x.movie_id].movie_poster\r\n                                  : \"https://critics.io/img/movies/poster-placeholder.png\"\r\n                              })`,\r\n                            }}\r\n                          ></div>\r\n                          {/* <img\r\n                            onClick={() => history.push(`/movie/${x.id}`)}\r\n                            width=\"100%\"\r\n                            style={{ borderRadius: \"13px\" }}\r\n                            src={`https://image.tmdb.org/t/p/w154${x.movie_poster}`}\r\n                          ></img> */}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                          <div className=\"row no-gutters text-white mb-0\">\r\n                            {ratings[x.movie_id]\r\n                              ? ratings[x.movie_id].movie_title\r\n                              : \"\"}{\" \"}\r\n                            (\r\n                            {ratings[x.movie_id]\r\n                              ? ratings[\r\n                                  x.movie_id\r\n                                ].movie_release_date.substring(0, 4)\r\n                              : \"\"}\r\n                            )\r\n                          </div>\r\n                          {/* <div className=\"row no-gutters text-muted\">\r\n                            <div className=\"text-truncate\">\r\n                              {x.movie_genres}\r\n                            </div>\r\n                          </div> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-60\">\r\n                      <div className=\"row no-gutters justify-content-between\">\r\n                        <div className=\"col-auto mb-2\">\r\n                          <div className=\"row no-gutters align-items-center\">\r\n                            <div className=\"col-auto pr-2\">\r\n                              <div\r\n                                className=\"bg-image rounded-circle square-40\"\r\n                                style={{\r\n                                  backgroundImage: `url(${\r\n                                    publicUsers[x.author]\r\n                                      ? publicUsers[x.author].photo\r\n                                      : \"\"\r\n                                  })`,\r\n                                }}\r\n                              ></div>\r\n                            </div>\r\n                            <div className=\"col-auto\">\r\n                              <div className=\"row no-gutters align-items-center text-white\">\r\n                                <div className=\"col-auto mr-3 mb-0\">\r\n                                  {publicUsers[x.author]\r\n                                    ? publicUsers[x.author].display_name\r\n                                    : \"\"}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                          <div className=\"row no-gutters text-white\">\r\n                            <span className=\"mr-2\">Posted on</span>\r\n                            <span className=\"text-muted\">\r\n                              {date.format(new Date(x.date), \"MMM DD, YYYY\")}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row no-gutters text-light mb-3 font-size-14 flex-grow-0 font-weight-300 text-break\">\r\n                    {x.review}\r\n                  </div>\r\n\r\n                  <div className=\"row no-gutters flex-grow-1 align-items-bottom\">\r\n                    <div className=\"col-60 d-flex flex-column justify-content-end\">\r\n                      <div className=\"row no-gutters justify-content-between align-items-center text-white\">\r\n                        <div className=\"col-auto\">\r\n                          <div className=\"row no-gutters\">\r\n                            {x.rating ? (\r\n                              <div style={{ marginBottom: \"-6px\" }}>\r\n                                <Emoji\r\n                                  emoji={\r\n                                    x.rating === \"excellent_rate\"\r\n                                      ? \"fire\"\r\n                                      : x.rating === \"good_rate\"\r\n                                      ? \"heart\"\r\n                                      : x.rating === \"ok_rate\"\r\n                                      ? \"heavy-division-sign\"\r\n                                      : \"shit\"\r\n                                  }\r\n                                  set=\"facebook\"\r\n                                  size={24}\r\n                                />\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-auto px-0\">\r\n                          <div className=\"row no-gutters align-items-center\">\r\n                            <div className=\"col-auto mr-2\">\r\n                              {x.likes.length}\r\n                            </div>\r\n                            <div className=\"col-auto mr-2 \">\r\n                              {loadingReview === i ? (\r\n                                <div className=\"square-20\">\r\n                                  <Loader\r\n                                    color={\"white\"}\r\n                                    style={{\r\n                                      position: \"absolute\",\r\n                                      left: \"10px\",\r\n                                      top: 0,\r\n                                      bottom: 0,\r\n                                      margin: \"auto\",\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                    loading={loadingReview === i}\r\n                                    size={20}\r\n                                  ></Loader>\r\n                                </div>\r\n                              ) : (\r\n                                <MdThumbUp\r\n                                  onClick={async () => {\r\n                                    if (user.token) {\r\n                                      if (user._id !== x.author) {\r\n                                        setLoadingReview(i);\r\n                                        let res = await LikeReview(user, x._id);\r\n                                        setLoadingReview(-1);\r\n                                        if (res.error) {\r\n                                          store.dispatch({\r\n                                            type: \"SET_NOTIFICATION\",\r\n                                            notification: {\r\n                                              title: \"Error\",\r\n                                              message: res.error,\r\n                                              type: \"failure\",\r\n                                            },\r\n                                          });\r\n                                        } else {\r\n                                          setRefreshReviews(!refreshReviews);\r\n                                        }\r\n                                      } else {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Action not allowed\",\r\n                                            message:\r\n                                              \"You can not like your own review\",\r\n                                            type: \"failure\",\r\n                                          },\r\n                                        });\r\n                                      }\r\n                                    } else {\r\n                                      store.dispatch({\r\n                                        type: \"SET_NOTIFICATION\",\r\n                                        notification: {\r\n                                          title: \"Login required\",\r\n                                          message:\r\n                                            \"You need to login to like review\",\r\n                                          type: \"failure\",\r\n                                        },\r\n                                      });\r\n                                    }\r\n                                  }}\r\n                                  fontSize=\"24px\"\r\n                                  className=\"text-green scale-transition cursor-pointer\"\r\n                                ></MdThumbUp>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"col-auto mr-2\">\r\n                              {x.comments.length}\r\n                            </div>\r\n                            <div className=\"col-auto mr-2\">\r\n                              <MdChatBubble\r\n                                onClick={() => {\r\n                                  setReviewIdOfVisibleComments(\r\n                                    reviewIdOfVisibleComments === x._id\r\n                                      ? -1\r\n                                      : x._id\r\n                                  );\r\n                                }}\r\n                                fontSize=\"24px\"\r\n                                className=\"text-orange scale-transition cursor-pointer\"\r\n                              ></MdChatBubble>\r\n                            </div>\r\n                            <div\r\n                              className=\"col-auto text-orange btn-tertiary\"\r\n                              onClick={() => {\r\n                                if (!user.token) {\r\n                                  store.dispatch({\r\n                                    type: \"SET_NOTIFICATION\",\r\n                                    notification: {\r\n                                      title: \"Login required\",\r\n                                      message:\r\n                                        \"You need to login to write review.\",\r\n                                      type: \"failure\",\r\n                                    },\r\n                                  });\r\n                                } else {\r\n                                  setReview(\r\n                                    Object.assign({}, x, {\r\n                                      notificationReceivers: [\r\n                                        publicUsers[x.author],\r\n                                      ],\r\n                                    })\r\n                                  );\r\n                                  setAddReplyOpen(true);\r\n                                }\r\n                              }}\r\n                            >\r\n                              Reply\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Collapse\r\n                in={reviewIdOfVisibleComments === x._id}\r\n                className=\"mb-3\"\r\n              >\r\n                <div\r\n                  className=\"h5 py-2 text-white\"\r\n                  style={{ marginLeft: \"30px\" }}\r\n                >\r\n                  Comments (\r\n                  {comments[x._id] ? Object.values(comments[x._id]).length : 0})\r\n                </div>\r\n                {comments[x._id]\r\n                  ? renderComments(\r\n                      Object.values(comments[x._id])\r\n                        .filter((a) => a.notificationReceivers.length === 1)\r\n                        .map((b) => b._id),\r\n                      x\r\n                    )\r\n                  : \"\"}\r\n                <div className=\"row no-gutters mt-2 justify-content-end\">\r\n                  <div className=\"col-auto ml-4\">\r\n                    <Paigination\r\n                      count={Math.ceil(\r\n                        comments[x._id]\r\n                          ? comments[x._id].length / commentsPerPage\r\n                          : 1\r\n                      )}\r\n                      current={commentsPage}\r\n                      setCurrent={setCommentsPage}\r\n                      classNames={{\r\n                        notSelected: \"input-dark\",\r\n                        selected: \"input-dark-selected\",\r\n                      }}\r\n                    ></Paigination>\r\n                  </div>\r\n                </div>\r\n              </Collapse>\r\n            </React.Fragment>\r\n          ))}\r\n        <ReplyToReview\r\n          refreshReviews={() => setRefreshReviews(!refreshReviews)}\r\n          setReviewIdOfVisibleComments={setReviewIdOfVisibleComments}\r\n          refreshComments={() => setRefreshComments(!refreshComments)}\r\n          setComments={setComments}\r\n          movie={{\r\n            id: review.movie_id,\r\n          }}\r\n          reviewAuthor={\r\n            publicUsers[review.author]\r\n              ? publicUsers[review.author]\r\n              : { display_name: \"\" }\r\n          }\r\n          review={review}\r\n          open={addReplyOpen}\r\n          onClose={() => setAddReplyOpen(false)}\r\n          user={user}\r\n        ></ReplyToReview>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    user: state.user,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(RecentReviews);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PopularMovies from \"./PopularMovies\";\r\nimport TrailerPlayer from \"./TrailerPlayer\";\r\nimport Modal from \"../utility/Modal\";\r\nimport ReactionButton from \"./ReactionButton\";\r\nimport { FormatDuration } from \"../../utilities/Functions\";\r\nimport { connect } from \"react-redux\";\r\nimport WishlistButton from \"./WishlistButton\";\r\nimport Recommendations from \"./Recommendations\";\r\nimport PopularReviews from \"./PopularReviews\";\r\nimport RecentReviews from \"./RecentReviews\";\r\nimport { GetRecommendations } from \"../../server/DatabaseApi\";\r\n\r\nconst GetClosestValidWidth = () => {\r\n  let backdropSizes = [300, 780, 1280];\r\n  let closestSize = 1280;\r\n  let minDifference = 1280;\r\n  backdropSizes.forEach((x) => {\r\n    let diff = Math.abs(window.innerWidth - x);\r\n    if (diff < minDifference) {\r\n      minDifference = diff;\r\n      closestSize = x;\r\n    }\r\n  });\r\n  return closestSize;\r\n};\r\n\r\nconst Home = ({ publicUsers, ratings, user, settings, navbarHeight }) => {\r\n  const [recommendedMovies, setRecommendedMovies] = useState([]);\r\n  const [openTrailer, setOpenTrailer] = useState(false);\r\n  const [backgroundMovie, setBackgroundMovie] = useState({\r\n    backdrop_path: \"\",\r\n    poster_path: \"\",\r\n    runtime: 0,\r\n    title: \"\",\r\n    overview: \"\",\r\n    id: \"\",\r\n    release_date: \"\",\r\n    genres: [],\r\n  });\r\n  useEffect(() => {\r\n    async function getData() {\r\n      setBackgroundMovie(settings.current_bg_movie);\r\n      if (settings.movies_api_key) {\r\n        let res = await GetRecommendations(8);\r\n        if (!res.error) {\r\n          setRecommendedMovies(res);\r\n        }\r\n      }\r\n    }\r\n    getData();\r\n  }, [settings]);\r\n\r\n  return (\r\n    <div className=\"row no-gutters\" style={{ marginTop: `-${navbarHeight}px` }}>\r\n      <div className=\"col-60\">\r\n        <div\r\n          className=\"row no-gutters align-items-end position-relative overflow-hidden\"\r\n          style={{ height: window.innerHeight }}\r\n        >\r\n          <div\r\n            className=\"position-absolute w-100 h-100\"\r\n            style={{\r\n              top: 0,\r\n              left: 0,\r\n              zIndex: 2,\r\n              background: `linear-gradient(180deg, rgba(0, 0, 0, 0.3) 72%, black)`,\r\n            }}\r\n          ></div>\r\n          <Modal open={openTrailer} onClose={() => setOpenTrailer(false)}>\r\n            <TrailerPlayer\r\n              movieId={backgroundMovie.id}\r\n              onEnded={() => setOpenTrailer(false)}\r\n            ></TrailerPlayer>\r\n          </Modal>\r\n          <div\r\n            className=\"col-60 position-absolute\"\r\n            style={{\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              maxWidth: \"1200px\",\r\n              margin: \"auto\",\r\n            }}\r\n          >\r\n            <div className=\"position-relative\">\r\n              <img\r\n                alt={backgroundMovie.poster_path}\r\n                className=\"d-block d-lg-none\"\r\n                width=\"100%\"\r\n                src={`https://image.tmdb.org/t/p/w500${backgroundMovie.poster_path}`}\r\n              ></img>\r\n              <img\r\n                alt={backgroundMovie.poster_path}\r\n                className=\"d-none d-lg-block\"\r\n                width=\"100%\"\r\n                src={`https://image.tmdb.org/t/p/w${GetClosestValidWidth(\r\n                  \"backdrop\"\r\n                )}${backgroundMovie.backdrop_path}`}\r\n              ></img>\r\n              <div\r\n                className=\"position-absolute w-100 h-100\"\r\n                style={{\r\n                  background:\r\n                    \"linear-gradient(rgba(0, 0, 0, 0.3) 90%, black), linear-gradient(to right, black, transparent, black)\",\r\n                  top: 0,\r\n                  left: 0,\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"col-60 px-md-5 px-4 py-4 position-relative mx-auto content-container\"\r\n            style={{\r\n              zIndex: 5,\r\n            }}\r\n          >\r\n            <div className=\"row no-gutters justify-content-between position-relative\">\r\n              <div className=\"col-60 col-sm-40 col-lg-30 d-flex flex-column justify-content-end text-white\">\r\n                <div\r\n                  className=\"row no-gutters mb-4 text-title-lg\"\r\n                  style={{\r\n                    fontWeight: \"700\",\r\n                  }}\r\n                >\r\n                  {backgroundMovie.title}\r\n                </div>\r\n                <div className=\"row no-gutters text-light mb-4 font-weight-300\">\r\n                  {backgroundMovie.overview}\r\n                </div>\r\n                <div className=\"row no-gutters mb-5\">\r\n                  <div className=\"col-auto mr-2\">\r\n                    {backgroundMovie.release_date.substring(0, 4)}\r\n                    <strong className=\"px-3\">•</strong>\r\n                    {backgroundMovie.genres.map((x) => x.name).join(\"/\")}\r\n                    <strong className=\"px-3\">•</strong>\r\n                    {FormatDuration(backgroundMovie.runtime)}\r\n                  </div>\r\n                  <div className=\"col-auto mr-2\"></div>\r\n                  <div className=\"col-auto mr-2\"></div>\r\n                </div>\r\n                <div className=\"row no-gutters mb-4\">\r\n                  <div\r\n                    className=\"col-auto mr-3 btn-custom btn-custom-primary btn-small\"\r\n                    onClick={() => setOpenTrailer(true)}\r\n                  >\r\n                    Play Trailer\r\n                  </div>\r\n                  <WishlistButton\r\n                    movie={backgroundMovie}\r\n                    user={user}\r\n                  ></WishlistButton>\r\n                </div>\r\n                <div className=\"row no-gutters\">\r\n                  <ReactionButton\r\n                    selected={\r\n                      user.ratings[backgroundMovie.id]\r\n                        ? user.ratings[backgroundMovie.id].rate_type ===\r\n                          \"excellent_rate\"\r\n                        : false\r\n                    }\r\n                    movie={backgroundMovie}\r\n                    emoji=\"fire\"\r\n                    className=\"mr-2 mb-2\"\r\n                    value={\r\n                      ratings[backgroundMovie.id]\r\n                        ? ratings[backgroundMovie.id].excellent_rate\r\n                        : 0\r\n                    }\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    selected={\r\n                      user.ratings[backgroundMovie.id]\r\n                        ? user.ratings[backgroundMovie.id].rate_type ===\r\n                          \"good_rate\"\r\n                        : false\r\n                    }\r\n                    movie={backgroundMovie}\r\n                    emoji=\"heart\"\r\n                    className=\"mr-2 mb-2\"\r\n                    value={\r\n                      ratings[backgroundMovie.id]\r\n                        ? ratings[backgroundMovie.id].good_rate\r\n                        : 0\r\n                    }\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    selected={\r\n                      user.ratings[backgroundMovie.id]\r\n                        ? user.ratings[backgroundMovie.id].rate_type ===\r\n                          \"ok_rate\"\r\n                        : false\r\n                    }\r\n                    movie={backgroundMovie}\r\n                    className=\"mr-2 mb-2\"\r\n                    emoji=\"heavy_division_sign\"\r\n                    value={\r\n                      ratings[backgroundMovie.id]\r\n                        ? ratings[backgroundMovie.id].ok_rate\r\n                        : 0\r\n                    }\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    selected={\r\n                      user.ratings[backgroundMovie.id]\r\n                        ? user.ratings[backgroundMovie.id].rate_type ===\r\n                          \"bad_rate\"\r\n                        : false\r\n                    }\r\n                    movie={backgroundMovie}\r\n                    emoji=\"shit\"\r\n                    value={\r\n                      ratings[backgroundMovie.id]\r\n                        ? ratings[backgroundMovie.id].bad_rate\r\n                        : 0\r\n                    }\r\n                  ></ReactionButton>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-23 d-none d-lg-block\">\r\n                <div\r\n                  className=\"row no-gutters h5 text-white\"\r\n                  style={{\r\n                    padding: \"6px 10px\",\r\n                    background:\r\n                      \"linear-gradient(to right, #ff0037, transparent)\",\r\n                    borderRadius: \"4px 0 0 4px\",\r\n                    // marginLeft: \"10px\",\r\n                    marginBottom: \"11px\",\r\n                  }}\r\n                >\r\n                  Today's Recommendation\r\n                </div>\r\n                <Recommendations\r\n                  movies={recommendedMovies}\r\n                  user={user}\r\n                  ratings={ratings}\r\n                ></Recommendations>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters d-flex d-lg-none\">\r\n          <div className=\" col-60 py-4 px-md-5 px-4 content-container\">\r\n            <div className=\"row no-gutters justify-content-end\">\r\n              <div className=\"col-60\">\r\n                <div\r\n                  className=\"row no-gutters h5 text-white\"\r\n                  style={{\r\n                    padding: \"6px 10px\",\r\n                    background:\r\n                      \"linear-gradient(to right, #ff0037, transparent)\",\r\n                    borderRadius: \"4px 0 0 4px\",\r\n                    // marginLeft: \"10px\",\r\n                    marginBottom: \"18px\",\r\n                  }}\r\n                >\r\n                  Todays's Recommendation\r\n                </div>\r\n                <Recommendations\r\n                  movies={recommendedMovies}\r\n                  user={user}\r\n                  ratings={ratings}\r\n                ></Recommendations>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <PopularMovies apiKey={settings.movies_api_key}></PopularMovies>\r\n        <PopularReviews></PopularReviews>\r\n        <RecentReviews></RecentReviews>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUser: state.publicUsers,\r\n    ratings: state.ratings,\r\n    settings: state.settings,\r\n    user: state.user,\r\n    navbarHeight: state.navbarHeight,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Home);\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"../utility/Modal\";\r\nimport ReactionButton from \"./ReactionButton\";\r\nimport { WriteReview } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AddReview = ({\r\n  open,\r\n  onClose,\r\n  movie,\r\n  user,\r\n  refreshReviews,\r\n  settings,\r\n  ratings,\r\n}) => {\r\n  const [newReview, setNewReview] = useState({\r\n    review: \"\",\r\n    rating: \"\",\r\n  });\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  return (\r\n    <Modal open={open} onClose={onClose}>\r\n      <div className=\"col-xl-42 p-4 bg-over-root-lighter rounded mx-4\">\r\n        <div className=\"row no-gutters h5 mb-4\">\r\n          Add Review - {movie.title} ({movie.release_date.substring(0, 4)})\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-auto pr-3 d-none d-md-block\">\r\n            <div\r\n              className=\"square-70 rounded-circle bg-image\"\r\n              style={{ backgroundImage: `url(${user.photo})` }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"row no-gutters d-flex d-md-none mb-3 justify-content-between\">\r\n              <div className=\"col-auto pr-3\">\r\n                <div\r\n                  className=\"square-70 rounded-circle bg-image\"\r\n                  style={{ backgroundImage: `url(${user.photo})` }}\r\n                ></div>\r\n              </div>\r\n              <div\r\n                className={`d-flex align-items-end col-auto ${\r\n                  newReview.review.split(\" \").length <=\r\n                  settings.no_review_words - 1\r\n                    ? \"text-muted\"\r\n                    : \"text-danger\"\r\n                }`}\r\n              >\r\n                {newReview.review\r\n                  ? settings.no_review_words -\r\n                    newReview.review.split(\" \").length\r\n                  : settings.no_review_words}{\" \"}\r\n                words left\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters mb-2\" style={{ height: \"150px\" }}>\r\n              <textarea\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  let text = e.target.value;\r\n                  if (text.split(\" \").length <= settings.no_review_words) {\r\n                    setNewReview((prev) =>\r\n                      Object.assign({}, prev, { review: text })\r\n                    );\r\n                  }\r\n                }}\r\n                value={newReview.review}\r\n                spellCheck={false}\r\n                placeholder=\"Add your review...\"\r\n                style={{ resize: \"none\" }}\r\n                className=\"w-100 h-100 textarea\"\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-between mb-2\">\r\n              <div className=\"col-auto\">\r\n                <div className=\"row no-gutters\">\r\n                  <ReactionButton\r\n                    allowRate={true}\r\n                    size={\"big\"}\r\n                    onClick={() =>\r\n                      setNewReview((prev) =>\r\n                        Object.assign({}, prev, { rating: \"excellent_rate\" })\r\n                      )\r\n                    }\r\n                    selected={newReview.rating === \"excellent_rate\"}\r\n                    emoji=\"fire\"\r\n                    className={`mr-2 mb-2`}\r\n                    value={\r\n                      ratings[movie.id] ? ratings[movie.id].excellent_rate : 0\r\n                    }\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    allowRate={true}\r\n                    size={\"big\"}\r\n                    onClick={() =>\r\n                      setNewReview((prev) =>\r\n                        Object.assign({}, prev, { rating: \"good_rate\" })\r\n                      )\r\n                    }\r\n                    selected={newReview.rating === \"good_rate\"}\r\n                    emoji=\"heart\"\r\n                    className={`mr-2 mb-2`}\r\n                    value={ratings[movie.id] ? ratings[movie.id].good_rate : 0}\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    allowRate={true}\r\n                    size={\"big\"}\r\n                    onClick={() =>\r\n                      setNewReview((prev) =>\r\n                        Object.assign({}, prev, { rating: \"ok_rate\" })\r\n                      )\r\n                    }\r\n                    selected={newReview.rating === \"ok_rate\"}\r\n                    emoji=\"heavy_division_sign\"\r\n                    className={`mr-2 mb-2`}\r\n                    value={ratings[movie.id] ? ratings[movie.id].ok_rate : 0}\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    allowRate={true}\r\n                    size={\"big\"}\r\n                    onClick={() =>\r\n                      setNewReview((prev) =>\r\n                        Object.assign({}, prev, { rating: \"bad_rate\" })\r\n                      )\r\n                    }\r\n                    emoji=\"shit\"\r\n                    selected={newReview.rating === \"bad_rate\"}\r\n                    className={`mr-2`}\r\n                    value={ratings[movie.id] ? ratings[movie.id].bad_rate : 0}\r\n                  ></ReactionButton>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className={`d-none d-md-block col-auto ${\r\n                  newReview.review.split(\" \").length <=\r\n                  settings.no_review_words - 1\r\n                    ? \"text-muted\"\r\n                    : \"text-danger\"\r\n                }`}\r\n              >\r\n                {newReview.review\r\n                  ? settings.no_review_words -\r\n                    newReview.review.split(\" \").length\r\n                  : settings.no_review_words}{\" \"}\r\n                words left\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"row no-gutters align-items-center text-danger justify-content-end\"\r\n              style={{ height: \"30px\", opacity: problem ? 1 : 0 }}\r\n            >\r\n              {problem}\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-md-end justify-content-center\">\r\n              <div\r\n                className=\"btn-custom btn-custom-primary btn-small position-relative\"\r\n                onClick={async () => {\r\n                  if (!newReview.rating) {\r\n                    setProblem(\"Select rating\");\r\n                  } else if (!newReview.review) {\r\n                    setProblem(\"Review is empty\");\r\n                  } else {\r\n                    setLoading(true);\r\n                    let res = await WriteReview(\r\n                      newReview,\r\n                      movie.id,\r\n                      user,\r\n                      settings.movies_api_key\r\n                    );\r\n                    setLoading(false);\r\n                    setNewReview({ review: \"\", rating: \"\" });\r\n                    if (res.error) {\r\n                      store.dispatch({\r\n                        type: \"SET_NOTIFICATION\",\r\n                        notification: {\r\n                          title: \"Couldn't add your review\",\r\n                          type: \"failure\",\r\n                          message: JSON.stringify(res.error).replace(/\"/g, \"\"),\r\n                        },\r\n                      });\r\n                    } else {\r\n                      store.dispatch({\r\n                        type: \"SET_NOTIFICATION\",\r\n                        notification: {\r\n                          title: \"You successfully writed review\",\r\n                          type: \"success\",\r\n                          message: \"Your review successfully added\",\r\n                        },\r\n                      });\r\n                      let watchedlist = [...user.watchedlist];\r\n                      watchedlist.push({ movie_id: movie.id.toString() });\r\n                      store.dispatch({\r\n                        type: \"UPDATE_USER\",\r\n                        userProperty: { watchedlist },\r\n                      });\r\n                      onClose();\r\n                      refreshReviews();\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <Loader\r\n                  color={\"white\"}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    left: \"10px\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    margin: \"auto\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                  loading={loading}\r\n                  size={20}\r\n                ></Loader>\r\n                Submit\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    settings: state.settings,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(AddReview);\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport date from \"date-and-time\";\r\nimport { nFormatter } from \"../../utilities/Functions\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport { MdThumbUp, MdChatBubble, MdFlag } from \"react-icons/md\";\r\nimport ReplyToReview from \"./ReplyToReview\";\r\nimport AddReview from \"./AddReview\";\r\nimport {\r\n  GetMovieReviews,\r\n  GetMoviePromotedReviews,\r\n  GetReviewComments,\r\n  LikeReview,\r\n  LikeComment,\r\n  ReportReview,\r\n  ReportComment,\r\n} from \"../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport Paigination from \"../utility/Paigination\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport Popover from \"../utility/Popover\";\r\n\r\nconst MovieReviews = ({\r\n  movie,\r\n  user,\r\n  publicUsers,\r\n  addReviewTrigger,\r\n  seekReviewId,\r\n  seekCommentId,\r\n}) => {\r\n  // local reviews object in order to be able to update it quickly instead of waiting for real changes in database\r\n  const [reviews, setReviews] = useState([]);\r\n  const [promotedReviews, setPromotedReviews] = useState([]);\r\n\r\n  const [loadingComment, setLoadingComment] = useState(-1);\r\n  const [loadingReview, setLoadingReview] = useState(-1);\r\n  const [loadingReport, setLoadingReport] = useState(-1);\r\n\r\n  //admin can edit review and rating in promotions section. So promotions have edited content.\r\n  const [promotedContents, setPromotedContents] = useState({});\r\n\r\n  //comments object.Its property will be review id.\r\n  const [comments, setComments] = useState({});\r\n\r\n  //\r\n  const [reviewIdOfVisibleComments, setReviewIdOfVisibleComments] = useState(\r\n    seekCommentId ? seekReviewId : -1\r\n  );\r\n\r\n  // partitioning reviews into pages (8 reviews per page)\r\n  const [page, setPage] = useState(-1);\r\n  const [commentsPage, setCommentsPage] = useState(1);\r\n\r\n  // reference to top of the reviews block to scroll into view after changing the page\r\n  const topOfReviewsBlock = useRef(null);\r\n\r\n  // boolean variable to display \"add review\" modal or not\r\n  const [addReviewOpen, setAddReviewOpen] = useState(false);\r\n\r\n  // boolean variable to display \"add review\" modal or not\r\n  const [review, setReview] = useState(\"\");\r\n\r\n  //state to refresh comments after writing it\r\n  const [refreshComments, setRefreshComments] = useState(false);\r\n\r\n  //state to refresh reviews after writing it\r\n  const [refreshReviews, setRefreshReviews] = useState(false);\r\n\r\n  const commentsPerPage = 5;\r\n  const reviewsPerPage = 8;\r\n\r\n  const [scrolledOnce, setScrolledOnce] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (addReviewTrigger >= 0) {\r\n      setAddReviewOpen(true);\r\n    }\r\n  }, [addReviewTrigger]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (reviewIdOfVisibleComments !== -1) {\r\n        let data = await GetReviewComments(reviewIdOfVisibleComments);\r\n        let commentsObj = {};\r\n        data.forEach((x) => {\r\n          commentsObj[x._id] = x;\r\n        });\r\n        setComments((prev) =>\r\n          Object.assign({}, prev, { [reviewIdOfVisibleComments]: commentsObj })\r\n        );\r\n      }\r\n    }\r\n    getData();\r\n  }, [reviewIdOfVisibleComments, refreshComments]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (movie.id) {\r\n        let promoted = await GetMoviePromotedReviews(movie.id);\r\n        let promotedContentIds = [];\r\n        let promoContents = {};\r\n        if (!promoted.error) {\r\n          promoted.forEach((x) => {\r\n            promotedContentIds.push(x.content_id);\r\n            promoContents[x.content_id] = x;\r\n          });\r\n        }\r\n        setPromotedContents(promoContents);\r\n        let data = await GetMovieReviews(movie.id);\r\n        if (!data.error) {\r\n          let promReviews = [],\r\n            notPromotedReviews = [];\r\n          data.reverse().forEach((x) => {\r\n            if (x._id === seekReviewId) {\r\n              promReviews.unshift(x);\r\n            } else if (promotedContentIds.includes(x._id)) {\r\n              x.promoted = true;\r\n              promReviews.push(x);\r\n            } else {\r\n              notPromotedReviews.push(x);\r\n            }\r\n          });\r\n          setPromotedReviews(promReviews);\r\n          setReviews(notPromotedReviews);\r\n        }\r\n      }\r\n    }\r\n    getData();\r\n  }, [movie, refreshReviews]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const renderComments = (ids, review) => {\r\n    return ids.map((x, ind) => {\r\n      return comments[review._id][x] ? (\r\n        <React.Fragment\r\n          key={`comment-fragment-${reviewIdOfVisibleComments}-${ind}`}\r\n        >\r\n          <div\r\n            ref={(el) => {\r\n              if (x === seekCommentId && el && !scrolledOnce) {\r\n                setScrolledOnce(true);\r\n                el.scrollIntoView({ behavior: \"smooth\" });\r\n                // reviewToSeek.current = el;\r\n              }\r\n            }}\r\n            style={{\r\n              marginLeft: `${\r\n                comments[review._id][x].notificationReceivers.length * 60 - 30\r\n              }px`,\r\n            }}\r\n            key={`comment-${reviewIdOfVisibleComments}-${ind}`}\r\n            className={`indented-comment row no-gutters p-4 bg-over-root-lighter rounded mb-2${\r\n              x === seekCommentId ? \" fading-shadow\" : \"\"\r\n            }`}\r\n          >\r\n            <div className=\"col-auto pr-4 d-none d-md-block\">\r\n              <div\r\n                className=\"bg-image rounded-circle square-70\"\r\n                style={{\r\n                  backgroundImage: `url(${\r\n                    publicUsers[comments[review._id][x].author]\r\n                      ? publicUsers[comments[review._id][x].author].photo\r\n                      : \"\"\r\n                  })`,\r\n                }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"row no-gutters justify-content-between align-items-center mb-2\">\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters\">\r\n                    <div className=\"col-auto pr-2 d-block d-md-none\">\r\n                      <div\r\n                        className=\"bg-image rounded-circle square-40\"\r\n                        style={{\r\n                          backgroundImage: `url(${\r\n                            publicUsers[comments[review._id][x].author]\r\n                              ? publicUsers[comments[review._id][x].author]\r\n                                  .photo\r\n                              : \"\"\r\n                          })`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                      <div className=\"row no-gutters align-items-center\">\r\n                        <div className=\"col-auto mr-3 text-title-md mb-0\">\r\n                          {publicUsers[comments[review._id][x].author]\r\n                            ? publicUsers[comments[review._id][x].author]\r\n                                .display_name\r\n                            : \"\"}\r\n                        </div>\r\n                        <div className=\"col-auto mr-3 text-muted\">\r\n                          {date.format(\r\n                            new Date(comments[review._id][x].date),\r\n                            \"MMM DD, YYYY\"\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <Popover\r\n                  arrow={false}\r\n                  position=\"top\"\r\n                  trigger=\"mouseenter\"\r\n                  theme=\"dark\"\r\n                  content={(w) => (\r\n                    <div className=\"py-2 px-3 rounded bg-root\">\r\n                      Report Abuse\r\n                    </div>\r\n                  )}\r\n                >\r\n                  <div\r\n                    className=\"col-auto text-muted btn-tertiary-small d-flex flex-center\"\r\n                    onClick={async () => {\r\n                      if (user.token) {\r\n                        setLoadingReport(x);\r\n                        let res = await ReportComment(user, x);\r\n                        setLoadingReport(-1);\r\n                        if (res.error) {\r\n                          store.dispatch({\r\n                            type: \"SET_NOTIFICATION\",\r\n                            notification: {\r\n                              title: \"Error\",\r\n                              message: res.error,\r\n                              type: \"failure\",\r\n                            },\r\n                          });\r\n                        } else {\r\n                          store.dispatch({\r\n                            type: \"SET_NOTIFICATION\",\r\n                            notification: {\r\n                              title: \"Comment reported\",\r\n                              message:\r\n                                \"Comment was successfully reported. We will review it soon.\",\r\n                              type: \"success\",\r\n                            },\r\n                          });\r\n                        }\r\n                      } else {\r\n                        store.dispatch({\r\n                          type: \"SET_NOTIFICATION\",\r\n                          notification: {\r\n                            title: \"Login required\",\r\n                            message: \"You need to login to report comment\",\r\n                            type: \"failure\",\r\n                          },\r\n                        });\r\n                      }\r\n                    }}\r\n                  >\r\n                    {loadingReport === x ? (\r\n                      <div className=\"square-20\">\r\n                        <Loader\r\n                          color={\"white\"}\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            left: \"10px\",\r\n                            top: 0,\r\n                            bottom: 0,\r\n                            margin: \"auto\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                          loading={true}\r\n                          size={20}\r\n                        ></Loader>\r\n                      </div>\r\n                    ) : (\r\n                      <MdFlag fontSize=\"24px\"></MdFlag>\r\n                    )}\r\n                  </div>\r\n                </Popover>\r\n              </div>\r\n\r\n              <div className=\"row no-gutters text-light mb-3 font-weight-300 text-break\">\r\n                {comments[review._id][x].comment}\r\n              </div>\r\n              <div className=\"row no-gutters justify-content-end align-items-center\">\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters align-items-center\">\r\n                    <div className=\"col-auto mr-2\">\r\n                      {comments[review._id][x].likes.length}\r\n                    </div>\r\n                    <div className=\"col-auto mr-2 \">\r\n                      {loadingComment === ind ? (\r\n                        <div className=\"square-20\">\r\n                          <Loader\r\n                            color={\"white\"}\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              left: \"10px\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                            loading={loadingComment === ind}\r\n                            size={20}\r\n                          ></Loader>\r\n                        </div>\r\n                      ) : (\r\n                        <MdThumbUp\r\n                          onClick={async () => {\r\n                            if (user.token) {\r\n                              if (user._id !== comments[review._id][x].author) {\r\n                                setLoadingComment(ind);\r\n                                let res = await LikeComment(user, x);\r\n                                setLoadingComment(-1);\r\n                                if (res.error) {\r\n                                  store.dispatch({\r\n                                    type: \"SET_NOTIFICATION\",\r\n                                    notification: {\r\n                                      title: \"Error\",\r\n                                      message: res.error,\r\n                                      type: \"failure\",\r\n                                    },\r\n                                  });\r\n                                } else {\r\n                                  setRefreshComments(!refreshComments);\r\n                                }\r\n                              } else {\r\n                                store.dispatch({\r\n                                  type: \"SET_NOTIFICATION\",\r\n                                  notification: {\r\n                                    title: \"Action not allowed\",\r\n                                    message:\r\n                                      \"You can not like your own comment\",\r\n                                    type: \"failure\",\r\n                                  },\r\n                                });\r\n                              }\r\n                            } else {\r\n                              store.dispatch({\r\n                                type: \"SET_NOTIFICATION\",\r\n                                notification: {\r\n                                  title: \"Login required\",\r\n                                  message: \"You need to login to like review\",\r\n                                  type: \"failure\",\r\n                                },\r\n                              });\r\n                            }\r\n                          }}\r\n                          fontSize=\"24px\"\r\n                          className=\"text-green scale-transition cursor-pointer\"\r\n                        ></MdThumbUp>\r\n                      )}\r\n                    </div>\r\n                    <div\r\n                      className=\"col-auto text-orange btn-tertiary\"\r\n                      onClick={() => {\r\n                        if (!user.token) {\r\n                          store.dispatch({\r\n                            type: \"SET_NOTIFICATION\",\r\n                            notification: {\r\n                              title: \"Login required\",\r\n                              message: \"You need to login to write review.\",\r\n                              type: \"failure\",\r\n                            },\r\n                          });\r\n                        } else {\r\n                          setReview(\r\n                            Object.assign({}, review, {\r\n                              comment_id: x,\r\n                              notificationReceivers: comments[review._id][\r\n                                x\r\n                              ].notificationReceivers.concat([\r\n                                publicUsers[comments[review._id][x].author],\r\n                              ]),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                    >\r\n                      Reply\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {renderComments(comments[review._id][x].comments, review)}\r\n        </React.Fragment>\r\n      ) : (\r\n        \"\"\r\n      );\r\n    });\r\n  };\r\n\r\n  //avoid scrolling on first render into view\r\n  const realPage = page === -1 ? 1 : page;\r\n\r\n  return (\r\n    <div className=\"row no-gutters\">\r\n      {reviews.length ? (\r\n        <div className=\"col-60 h5 mb-3\">\r\n          Reviews ({nFormatter(reviews.length, 1)})\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters mb-2\" ref={topOfReviewsBlock}></div>\r\n        {promotedReviews\r\n          .concat(reviews)\r\n          .slice(\r\n            (realPage - 1) * reviewsPerPage,\r\n            (realPage - 1) * reviewsPerPage + reviewsPerPage\r\n          )\r\n          .map((x, i) => {\r\n            let rating = promotedContents[x._id]\r\n              ? promotedContents[x._id].content.rating\r\n              : x.rating;\r\n            let review = promotedContents[x._id]\r\n              ? promotedContents[x._id].content.review\r\n              : x.review;\r\n            return (\r\n              <React.Fragment key={`review-fragment-${i}`}>\r\n                <div\r\n                  ref={(el) => {\r\n                    if (!seekCommentId) {\r\n                      if (x._id === seekReviewId && el && !scrolledOnce) {\r\n                        setScrolledOnce(true);\r\n                        el.scrollIntoView({ behavior: \"smooth\" });\r\n                        // reviewToSeek.current = el;\r\n                      }\r\n                    }\r\n                  }}\r\n                  key={`review-${i}`}\r\n                  className={`row no-gutters p-4 bg-over-root-lighter rounded mb-2${\r\n                    x._id === seekReviewId && !seekCommentId\r\n                      ? \" fading-shadow\"\r\n                      : \"\"\r\n                  }`}\r\n                >\r\n                  <div className=\"col-auto pr-4 d-none d-md-block\">\r\n                    <div\r\n                      className=\"bg-image rounded-circle square-70\"\r\n                      style={{\r\n                        backgroundImage: `url(${\r\n                          publicUsers[x.author ? x.author : x.content_author]\r\n                            ? publicUsers[\r\n                                x.author ? x.author : x.content_author\r\n                              ].photo\r\n                            : \"\"\r\n                        })`,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <div className=\"row no-gutters justify-content-between align-items-center mb-1\">\r\n                      <div className=\"col-auto\">\r\n                        <div className=\"row no-gutters align-items-center\">\r\n                          <div className=\"col-auto pr-2 d-block d-md-none\">\r\n                            <div\r\n                              className=\"bg-image rounded-circle square-40\"\r\n                              style={{\r\n                                backgroundImage: `url(${\r\n                                  publicUsers[x.author]\r\n                                    ? publicUsers[x.author].photo\r\n                                    : \"\"\r\n                                })`,\r\n                              }}\r\n                            ></div>\r\n                          </div>\r\n                          <div className=\"col-auto\">\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                              <div className=\"col-auto mr-3 text-title-md mb-0\">\r\n                                {publicUsers[x.author]\r\n                                  ? publicUsers[x.author].display_name\r\n                                  : \"\"}\r\n                              </div>\r\n                              <div className=\"col-auto mr-3 text-muted\">\r\n                                {date.format(new Date(x.date), \"MMM DD, YYYY\")}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <Popover\r\n                        arrow={false}\r\n                        position=\"top\"\r\n                        trigger=\"mouseenter\"\r\n                        theme=\"dark\"\r\n                        content={(w) => (\r\n                          <div className=\"py-2 px-3 rounded bg-root\">\r\n                            Report Abuse\r\n                          </div>\r\n                        )}\r\n                      >\r\n                        <div\r\n                          className=\"col-auto text-muted btn-tertiary-small d-flex flex-center\"\r\n                          onClick={async () => {\r\n                            if (user.token) {\r\n                              setLoadingReport(x._id);\r\n                              let res = await ReportReview(user, x._id);\r\n                              setLoadingReport(-1);\r\n                              if (res.error) {\r\n                                store.dispatch({\r\n                                  type: \"SET_NOTIFICATION\",\r\n                                  notification: {\r\n                                    title: \"Error\",\r\n                                    message: res.error,\r\n                                    type: \"failure\",\r\n                                  },\r\n                                });\r\n                              } else {\r\n                                store.dispatch({\r\n                                  type: \"SET_NOTIFICATION\",\r\n                                  notification: {\r\n                                    title: \"Review reported\",\r\n                                    message:\r\n                                      \"Review was successfully reported. We will review it soon.\",\r\n                                    type: \"success\",\r\n                                  },\r\n                                });\r\n                              }\r\n                            } else {\r\n                              store.dispatch({\r\n                                type: \"SET_NOTIFICATION\",\r\n                                notification: {\r\n                                  title: \"Login required\",\r\n                                  message: \"You need to login to report review\",\r\n                                  type: \"failure\",\r\n                                },\r\n                              });\r\n                            }\r\n                          }}\r\n                        >\r\n                          {loadingReport === x._id ? (\r\n                            <div className=\"square-20\">\r\n                              <Loader\r\n                                color={\"white\"}\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  left: \"10px\",\r\n                                  top: 0,\r\n                                  bottom: 0,\r\n                                  margin: \"auto\",\r\n                                  display: \"flex\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                                loading={true}\r\n                                size={20}\r\n                              ></Loader>\r\n                            </div>\r\n                          ) : (\r\n                            <MdFlag fontSize=\"24px\"></MdFlag>\r\n                          )}\r\n                        </div>\r\n                      </Popover>\r\n                    </div>\r\n\r\n                    <div className=\"row no-gutters text-light mb-3 font-weight-300 text-break\">\r\n                      <div className=\"text-break\">{review}</div>\r\n                    </div>\r\n                    <div className=\"row no-gutters justify-content-between align-items-center\">\r\n                      <div className=\"col-auto\">\r\n                        <Emoji\r\n                          emoji={\r\n                            rating === \"excellent_rate\"\r\n                              ? \"fire\"\r\n                              : rating === \"good_rate\"\r\n                              ? \"heart\"\r\n                              : rating === \"ok_rate\"\r\n                              ? \"heavy_division_sign\"\r\n                              : \"shit\"\r\n                          }\r\n                          set=\"facebook\"\r\n                          size={24}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-auto\">\r\n                        <div className=\"row no-gutters align-items-center\">\r\n                          <div className=\"col-auto mr-2\">{x.likes.length}</div>\r\n                          <div className=\"col-auto mr-2 \">\r\n                            {loadingReview === i ? (\r\n                              <div className=\"square-20\">\r\n                                <Loader\r\n                                  color={\"white\"}\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    left: \"10px\",\r\n                                    top: 0,\r\n                                    bottom: 0,\r\n                                    margin: \"auto\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                  }}\r\n                                  loading={loadingReview === i}\r\n                                  size={20}\r\n                                ></Loader>\r\n                              </div>\r\n                            ) : (\r\n                              <MdThumbUp\r\n                                onClick={async () => {\r\n                                  if (user.token) {\r\n                                    if (user._id !== x.author) {\r\n                                      setLoadingReview(i);\r\n                                      let res = await LikeReview(user, x._id);\r\n                                      setLoadingReview(-1);\r\n                                      if (res.error) {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Error\",\r\n                                            message: res.error,\r\n                                            type: \"failure\",\r\n                                          },\r\n                                        });\r\n                                      } else {\r\n                                        setRefreshReviews(!refreshReviews);\r\n                                      }\r\n                                    } else {\r\n                                      store.dispatch({\r\n                                        type: \"SET_NOTIFICATION\",\r\n                                        notification: {\r\n                                          title: \"Action not allowed\",\r\n                                          message:\r\n                                            \"You can not like you own review\",\r\n                                          type: \"failure\",\r\n                                        },\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    store.dispatch({\r\n                                      type: \"SET_NOTIFICATION\",\r\n                                      notification: {\r\n                                        title: \"Login required\",\r\n                                        message:\r\n                                          \"You need to login to like review\",\r\n                                        type: \"failure\",\r\n                                      },\r\n                                    });\r\n                                  }\r\n                                }}\r\n                                fontSize=\"24px\"\r\n                                className=\"text-green scale-transition cursor-pointer\"\r\n                              ></MdThumbUp>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"col-auto mr-2\">\r\n                            {x.comments.length}\r\n                          </div>\r\n                          <div className=\"col-auto mr-2\">\r\n                            <MdChatBubble\r\n                              onClick={() => {\r\n                                setReviewIdOfVisibleComments(\r\n                                  reviewIdOfVisibleComments === x._id\r\n                                    ? -1\r\n                                    : x._id\r\n                                );\r\n                              }}\r\n                              fontSize=\"24px\"\r\n                              className=\"text-orange scale-transition cursor-pointer\"\r\n                            ></MdChatBubble>\r\n                          </div>\r\n                          <div\r\n                            className=\"col-auto text-orange btn-tertiary\"\r\n                            onClick={() =>\r\n                              setReview(\r\n                                Object.assign({}, x, {\r\n                                  notificationReceivers: [\r\n                                    publicUsers[x.author],\r\n                                  ],\r\n                                })\r\n                              )\r\n                            }\r\n                          >\r\n                            Reply\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <Collapse\r\n                  in={reviewIdOfVisibleComments === x._id}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <div style={{ marginLeft: \"30px\" }} className=\"h5 py-2\">\r\n                    Comments (\r\n                    {comments[x._id]\r\n                      ? Object.values(comments[x._id]).length\r\n                      : 0}\r\n                    )\r\n                  </div>\r\n                  {comments[x._id]\r\n                    ? renderComments(\r\n                        Object.values(comments[x._id])\r\n                          .filter((a) => a.notificationReceivers.length === 1)\r\n                          .map((b) => b._id),\r\n                        x\r\n                      )\r\n                    : \"\"}\r\n                  <div className=\"row no-gutters justify-content-end\">\r\n                    <div className=\"col-auto\">\r\n                      <Paigination\r\n                        count={Math.ceil(\r\n                          comments[x._id]\r\n                            ? comments[x._id].length / commentsPerPage\r\n                            : 1\r\n                        )}\r\n                        current={commentsPage}\r\n                        setCurrent={setCommentsPage}\r\n                        classNames={{\r\n                          notSelected: \"input-dark\",\r\n                          selected: \"input-dark-selected\",\r\n                        }}\r\n                      ></Paigination>\r\n                    </div>\r\n                  </div>\r\n                </Collapse>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        <div className=\"row no-gutters justify-content-end pt-2\">\r\n          <div className=\"col-auto\">\r\n            <Paigination\r\n              classNames={{\r\n                notSelected: \"input-dark\",\r\n                selected: \"input-dark-selected\",\r\n              }}\r\n              count={Math.ceil(reviews.length / reviewsPerPage)}\r\n              current={realPage}\r\n              setCurrent={setPage}\r\n            ></Paigination>\r\n          </div>\r\n          <AddReview\r\n            open={addReviewOpen}\r\n            onClose={() => setAddReviewOpen(false)}\r\n            movie={movie}\r\n            user={user}\r\n            refreshReviews={() => setRefreshReviews(!refreshReviews)}\r\n          ></AddReview>\r\n          <ReplyToReview\r\n            refreshReviews={() => setRefreshReviews(!refreshReviews)}\r\n            setReviewIdOfVisibleComments={setReviewIdOfVisibleComments}\r\n            refreshComments={() => setRefreshComments(!refreshComments)}\r\n            setComments={setComments}\r\n            movie={movie}\r\n            reviewAuthor={\r\n              publicUsers[review.author]\r\n                ? publicUsers[review.author]\r\n                : { display_name: \"\" }\r\n            }\r\n            review={review}\r\n            open={review}\r\n            onClose={() => setReview(\"\")}\r\n            user={user}\r\n          ></ReplyToReview>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(MovieReviews);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { GetMovie, GetCredits } from \"../../server/MoviesApi\";\r\nimport ReactionButton from \"./ReactionButton\";\r\nimport date from \"date-and-time\";\r\nimport Modal from \"../utility/Modal\";\r\nimport TrailerPlayer from \"./TrailerPlayer\";\r\nimport MovieReviews from \"./MovieReviews\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormatDuration } from \"../../utilities/Functions\";\r\nimport store from \"../../store/store\";\r\nimport { AddViewToMovie } from \"../../server/DatabaseApi\";\r\nimport WishlistButton from \"./WishlistButton\";\r\nimport { FaRegPaperPlane } from \"react-icons/fa\";\r\nimport history from \"../../History\";\r\nimport { BsPlayFill } from \"react-icons/bs\";\r\n\r\nconst Movie = (props) => {\r\n  const movieId = props.match.params.movieId;\r\n  const ratings = props.ratings;\r\n  const apiKey = props.settings.movies_api_key;\r\n  const seekReviewId = props.match.params.reviewId;\r\n  const seekCommentId = props.match.params.commentId;\r\n  //user will be needed to write comments on reviews and to add reviews\r\n  const user = props.user;\r\n\r\n  const [addReviewTrigger, setAddReviewTrigger] = useState(-1);\r\n\r\n  const [movie, setMovie] = useState({\r\n    poster_path: \"\",\r\n    genres: [],\r\n    title: \"\",\r\n    overview: \"\",\r\n    director: \"\",\r\n    cast: [],\r\n    runtime: 0,\r\n    release_date: \"\",\r\n    id: \"\",\r\n  });\r\n\r\n  //boolean variable to display trailer modal or not.\r\n  const [openTrailer, setOpenTrailer] = useState(false);\r\n\r\n  useEffect(() => {\r\n    //check if movie fetched from api\r\n    if (movie.title) {\r\n      AddViewToMovie(movie.id, apiKey);\r\n      if (!(movie.id in ratings)) {\r\n        store.dispatch({\r\n          type: \"UPDATE_RATINGS\",\r\n          rating: {\r\n            [movie.id]: {\r\n              excellent_rate: 0,\r\n              ok_rate: 0,\r\n              bad_rate: 0,\r\n              good_rate: 0,\r\n              movie_poster: movie.poster_path,\r\n              movie_title: movie.title,\r\n              movie_genres: movie.genres.map((x) => x.name),\r\n              movie_release_date: movie.release_date,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n  }, [movie.title]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    async function getData() {\r\n      if (movieId && apiKey) {\r\n        let data = await GetMovie(movieId, apiKey);\r\n        setMovie((prev) => Object.assign({}, prev, data));\r\n        let credits = await GetCredits(movieId, apiKey);\r\n        let directorObj = credits.crew\r\n          ? credits.crew.find((x) => x.job === \"Director\")\r\n          : null;\r\n        let director = directorObj ? directorObj.name : \"unknown\";\r\n        let cast = credits.cast ? credits.cast.map((x) => x.name) : [];\r\n        data.director = director;\r\n        data.cast = cast;\r\n        setMovie((prev) => Object.assign({}, prev, { director, cast }));\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, [movieId, apiKey]);\r\n\r\n  // const director = movie.credits.crew.find((x) => x.job === \"Director\");\r\n\r\n  return (\r\n    <div className=\"row no-gutters justify-content-center bg-movie-over-root position-relative\">\r\n      <div\r\n        className=\"position-absolute w-100 d-block d-lg-none\"\r\n        style={{\r\n          top: 0,\r\n          left: 0,\r\n        }}\r\n      >\r\n        <div\r\n          className=\"position-relative\"\r\n          style={{ height: window.innerHeight, overflow: \"hidden\" }}\r\n        >\r\n          <div className=\"position-relative\">\r\n            <img\r\n              alt={movie.poster_path}\r\n              width=\"100%\"\r\n              src={`https://image.tmdb.org/t/p/w342/${movie.poster_path}`}\r\n            ></img>\r\n            <div\r\n              className=\"position-absolute w-100 h-100\"\r\n              style={{\r\n                background: \"linear-gradient(rgba(0, 0, 0, 0.3) 90%, black)\",\r\n                top: 0,\r\n                left: 0,\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <div\r\n            className=\"position-absolute w-100 h-100\"\r\n            style={{\r\n              background: \"linear-gradient(rgb(0 0 0 / 30%), black)\",\r\n              top: 0,\r\n              left: 0,\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <Modal open={openTrailer} onClose={() => setOpenTrailer(false)}>\r\n        <TrailerPlayer\r\n          movieId={movieId}\r\n          onEnded={() => setOpenTrailer(false)}\r\n        ></TrailerPlayer>\r\n      </Modal>\r\n      <div className=\"col-60 text-white px-md-5 py-5 px-4 content-container\">\r\n        <div className=\"row no-gutters mb-5\">\r\n          <div className=\"col-auto mr-5 d-none d-lg-block\">\r\n            <div className=\"w-100 position-relative\">\r\n              <img\r\n                alt={movie.poster_path}\r\n                style={{ borderRadius: \"25px\" }}\r\n                width=\"300px\"\r\n                src={`https://image.tmdb.org/t/p/w342/${movie.poster_path}`}\r\n              ></img>\r\n              <div\r\n                onClick={() => history.push(`/movie/${movie.id}`)}\r\n                className=\"col-60 h-100 text-white d-flex flex-center img-cover cursor-pointer\"\r\n                style={{\r\n                  left: 0,\r\n                  top: 0,\r\n                  position: \"absolute\",\r\n                  zIndex: 4,\r\n                  borderRadius: \"13px\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"square-60 rounded-circle d-flex flex-center play-btn\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    setOpenTrailer(true);\r\n                  }}\r\n                >\r\n                  <BsPlayFill\r\n                    style={{\r\n                      fontSize: \"35px\",\r\n                      color: \"white\",\r\n                      marginRight: \"-5px\",\r\n                    }}\r\n                  ></BsPlayFill>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col position-relative\">\r\n            <div\r\n              className=\"row no-gutters position-relative\"\r\n              style={{ zIndex: 5 }}\r\n            >\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters h5\">\r\n                  {movie.title} ({movie.release_date.substring(0, 4)})\r\n                </div>\r\n                <div className=\"row no-gutters text-movie-muted mb-2\">\r\n                  <div className=\"text-truncate\">\r\n                    {movie.genres.map((x) => x.name).join(\"/\")}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters mb-4\">\r\n                  <div className=\"col-auto font-weight-500 mr-2\">Duration:</div>\r\n                  <div className=\"col-auto text-movie-muted\">\r\n                    {FormatDuration(movie.runtime)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters mb-4 text-light\">\r\n                  {movie.overview}\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters\">\r\n                      <div className=\"col-auto mr-2\">Director:</div>\r\n                      <div className=\"col-auto mr-5 text-movie-muted\">\r\n                        {movie.director ? movie.director : \"unknown\"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters\">\r\n                      <div className=\"col-auto mr-2\">Cast:</div>\r\n                      <div className=\"col\">\r\n                        <div className=\"row no-gutters\">\r\n                          <div\r\n                            className=\"text-clamp-2 text-muted-light cursor-pointer\"\r\n                            onClick={(e) => {\r\n                              if (\r\n                                e.currentTarget.classList.contains(\r\n                                  \"text-clamp-2\"\r\n                                )\r\n                              ) {\r\n                                e.currentTarget.classList.remove(\r\n                                  \"text-clamp-2\"\r\n                                );\r\n                              } else {\r\n                                e.currentTarget.classList.add(\"text-clamp-2\");\r\n                              }\r\n                            }}\r\n                          >\r\n                            {movie.cast.join(\"    \")}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <ReactionButton\r\n                    selected={\r\n                      user.ratings[movie.id]\r\n                        ? user.ratings[movie.id].rate_type === \"excellent_rate\"\r\n                        : false\r\n                    }\r\n                    movie={movie}\r\n                    emoji=\"fire\"\r\n                    className=\"mr-2 mb-2\"\r\n                    value={\r\n                      ratings[movie.id] ? ratings[movie.id].excellent_rate : 0\r\n                    }\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    selected={\r\n                      user.ratings[movie.id]\r\n                        ? user.ratings[movie.id].rate_type === \"good_rate\"\r\n                        : false\r\n                    }\r\n                    movie={movie}\r\n                    emoji=\"heart\"\r\n                    className=\"mr-2 mb-2\"\r\n                    value={ratings[movie.id] ? ratings[movie.id].good_rate : 0}\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    selected={\r\n                      user.ratings[movie.id]\r\n                        ? user.ratings[movie.id].rate_type === \"ok_rate\"\r\n                        : false\r\n                    }\r\n                    movie={movie}\r\n                    className=\"mr-2 mb-2\"\r\n                    emoji=\"heavy_division_sign\"\r\n                    value={ratings[movie.id] ? ratings[movie.id].ok_rate : 0}\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    emoji=\"shit\"\r\n                    value={ratings[movie.id] ? ratings[movie.id].bad_rate : 0}\r\n                    selected={\r\n                      user.ratings[movie.id]\r\n                        ? user.ratings[movie.id].rate_type === \"bad_rate\"\r\n                        : false\r\n                    }\r\n                    movie={movie}\r\n                  ></ReactionButton>\r\n                </div>\r\n                <div className=\"row no-gutters mb-5\">\r\n                  <div className=\"col-auto mr-2\">Release date:</div>\r\n                  <div className=\"col-auto text-movie-muted\">\r\n                    {date.format(new Date(movie.release_date), \"MMMM DD, YYYY\")}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters justify-content-center justify-content-md-start\">\r\n                  <div\r\n                    className=\"col-auto mr-3 btn-custom btn-custom-primary btn-small\"\r\n                    onClick={() => {\r\n                      if (!user.token) {\r\n                        store.dispatch({\r\n                          type: \"SET_NOTIFICATION\",\r\n                          notification: {\r\n                            title: \"Login required\",\r\n                            message: \"You need to login to write review.\",\r\n                            type: \"failure\",\r\n                          },\r\n                        });\r\n                      } else {\r\n                        setAddReviewTrigger(addReviewTrigger + 1);\r\n                      }\r\n                    }}\r\n                  >\r\n                    Add Review\r\n                    <FaRegPaperPlane\r\n                      fontSize=\"20px\"\r\n                      className=\"ml-2\"\r\n                    ></FaRegPaperPlane>\r\n                  </div>\r\n                  <WishlistButton movie={movie} user={user}></WishlistButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <MovieReviews\r\n          seekCommentId={seekCommentId}\r\n          seekReviewId={seekReviewId}\r\n          movie={movie}\r\n          user={user}\r\n          addReviewTrigger={addReviewTrigger}\r\n        ></MovieReviews>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    ratings: state.ratings,\r\n    settings: state.settings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Movie);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { GetReviewComments } from \"../../server/DatabaseApi\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport Paigination from \"../utility/Paigination\";\r\nimport history from \"../../History\";\r\nimport date from \"date-and-time\";\r\nimport { MdThumbUp, MdChatBubble } from \"react-icons/md\";\r\n\r\nconst ReviewsList = ({ reviews, publicUsers, ratings }) => {\r\n  const [reviewIdOfVisibleComments, setReviewIdOfVisibleComments] = useState(\r\n    -1\r\n  );\r\n\r\n  const page = 1;\r\n  const [commentsPage, setCommentsPage] = useState(1);\r\n\r\n  const [comments, setComments] = useState({});\r\n\r\n  const commentsPerPage = 5;\r\n  const reviewsPerPage = 8;\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (reviewIdOfVisibleComments !== -1) {\r\n        let data = await GetReviewComments(reviewIdOfVisibleComments);\r\n        setComments((prev) =>\r\n          Object.assign({}, prev, { [reviewIdOfVisibleComments]: data })\r\n        );\r\n      }\r\n    }\r\n    getData();\r\n  }, [reviewIdOfVisibleComments]);\r\n\r\n  return reviews\r\n    .slice(\r\n      (page - 1) * reviewsPerPage,\r\n      (page - 1) * reviewsPerPage + reviewsPerPage\r\n    )\r\n    .map((x, i) => (\r\n      <React.Fragment key={`fragment-review-${i}`}>\r\n        <div\r\n          key={`review-${i}`}\r\n          className=\"row no-gutters p-4 bg-over-root-lighter rounded mb-2\"\r\n        >\r\n          <div\r\n            className=\"col-sm-auto col-20 pr-4 d-none d-sm-block\"\r\n            style={{ maxWidth: \"150px\" }}\r\n          >\r\n            <div className=\"row no-gutters mb-1\">\r\n              <img\r\n                alt={ratings[x.movie_id].movie_poster}\r\n                onClick={() => history.push(`/movie/${x.movie_id}`)}\r\n                width=\"100%\"\r\n                style={{ borderRadius: \"13px\", cursor: \"pointer\" }}\r\n                src={`https://image.tmdb.org/t/p/w154${\r\n                  ratings[x.movie_id].movie_poster\r\n                }`}\r\n              ></img>\r\n            </div>\r\n          </div>\r\n          <div className=\"col d-flex flex-column\">\r\n            <div className=\"row no-gutters justify-content-between align-items-center mb-2 flex-grow-0\">\r\n              <div className=\"col-60 d-block d-sm-none mb-3\">\r\n                <div className=\"row no-gutters mb-1\">\r\n                  <div className=\"col-auto pr-3\">\r\n                    <div\r\n                      className=\"square-70 rounded bg-image\"\r\n                      style={{\r\n                        backgroundImage: `url(https://image.tmdb.org/t/p/w154${\r\n                          ratings[x.movie_id].movie_poster\r\n                        })`,\r\n                      }}\r\n                    ></div>\r\n                    {/* <img\r\n                    onClick={() => history.push(`/movie/${x.id}`)}\r\n                    width=\"100%\"\r\n                    style={{ borderRadius: \"13px\" }}\r\n                    src={`https://image.tmdb.org/t/p/w154${x.movie_poster}`}\r\n                  ></img> */}\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <div className=\"row no-gutters text-white h6 mb-0\">\r\n                      {ratings[x.movie_id].movie_title} (\r\n                      {ratings[x.movie_id].movie_release_date.substring(0, 4)}\r\n                    </div>\r\n                    <div className=\"row no-gutters text-muted\">\r\n                      <div className=\"text-truncate\">{x.movie_genres}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters justify-content-between\">\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters align-items-center\">\r\n                      <div className=\"col-auto pr-2\">\r\n                        <div\r\n                          className=\"bg-image rounded-circle square-40\"\r\n                          style={{\r\n                            backgroundImage: `url(${\r\n                              publicUsers[x.author]\r\n                                ? publicUsers[x.author].photo\r\n                                : \"\"\r\n                            })`,\r\n                          }}\r\n                        ></div>\r\n                      </div>\r\n                      <div className=\"col-auto\">\r\n                        <div className=\"row no-gutters align-items-center text-white\">\r\n                          <div className=\"col-auto mr-3 mb-0\">\r\n                            {publicUsers[x.author]\r\n                              ? publicUsers[x.author].display_name\r\n                              : \"\"}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters text-white\">\r\n                      <span className=\"mr-2\">Posted review on</span>\r\n                      <span className=\"text-muted\">\r\n                        {date.format(new Date(x.date), \"MMM DD, YYYY\")}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters text-light mb-3 font-size-14 flex-grow-0 font-weight-300\">\r\n              {x.review}\r\n            </div>\r\n\r\n            <div className=\"row no-gutters flex-grow-1 align-items-bottom\">\r\n              <div className=\"col-60 d-flex flex-column justify-content-end\">\r\n                <div className=\"row no-gutters justify-content-between align-items-center text-white\">\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters\">\r\n                      {x.rating ? (\r\n                        <div style={{ marginBottom: \"-6px\" }}>\r\n                          <Emoji\r\n                            emoji={\r\n                              x.rating === \"excellent_rate\"\r\n                                ? \"fire\"\r\n                                : x.rating === \"good_rate\"\r\n                                ? \"heart\"\r\n                                : x.rating === \"ok_rate\"\r\n                                ? \"heavy-division-sign\"\r\n                                : \"shit\"\r\n                            }\r\n                            set=\"facebook\"\r\n                            size={24}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-auto px-0\">\r\n                    <div className=\"row no-gutters align-items-center\">\r\n                      <div className=\"col-auto mr-2\">{x.likes.length}</div>\r\n                      <div className=\"col-auto mr-2 \">\r\n                        <MdThumbUp\r\n                          fontSize=\"24px\"\r\n                          className=\"text-green\"\r\n                        ></MdThumbUp>\r\n                      </div>\r\n                      <div className=\"col-auto mr-2\">{x.comments.length}</div>\r\n                      <div className=\"col-auto\">\r\n                        <MdChatBubble\r\n                          onClick={() => {\r\n                            setReviewIdOfVisibleComments(\r\n                              reviewIdOfVisibleComments === x._id ? -1 : x._id\r\n                            );\r\n                          }}\r\n                          fontSize=\"24px\"\r\n                          className=\"text-orange scale-transition cursor-pointer\"\r\n                        ></MdChatBubble>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Collapse in={reviewIdOfVisibleComments === x._id} className=\"mb-3\">\r\n          <div className=\"ml-4 h5 py-2 text-white\">\r\n            Comments ({comments[x._id] ? comments[x._id].length : 0})\r\n          </div>\r\n          {comments[x._id]\r\n            ? comments[x._id]\r\n                .slice(\r\n                  commentsPage * (commentsPage - 1),\r\n                  commentsPage * (commentsPage - 1) + commentsPerPage\r\n                )\r\n                .map((y, ind) => (\r\n                  <div\r\n                    key={`comment-${reviewIdOfVisibleComments}-${ind}`}\r\n                    className=\"row no-gutters p-4 bg-over-root-lighter rounded ml-4 mb-2\"\r\n                  >\r\n                    <div className=\"col-auto pr-4 d-none d-md-block\">\r\n                      <div\r\n                        className=\"bg-image rounded-circle square-70\"\r\n                        style={{\r\n                          backgroundImage: `url(${\r\n                            publicUsers[y.author]\r\n                              ? publicUsers[y.author].photo\r\n                              : \"\"\r\n                          })`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <div className=\"row no-gutters align-items-center mb-2\">\r\n                        <div className=\"col-auto pr-2 d-block d-md-none\">\r\n                          <div\r\n                            className=\"bg-image rounded-circle square-40\"\r\n                            style={{\r\n                              backgroundImage: `url(${\r\n                                publicUsers[y.author]\r\n                                  ? publicUsers[y.author].photo\r\n                                  : \"\"\r\n                              })`,\r\n                            }}\r\n                          ></div>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                          <div className=\"row no-gutters align-items-center\">\r\n                            <div className=\"col-auto mr-3 h6 text-white mb-0\">\r\n                              {publicUsers[y.author]\r\n                                ? publicUsers[y.author].display_name\r\n                                : \"\"}\r\n                            </div>\r\n                            <div className=\"col-auto mr-3 text-muted\">\r\n                              {date.format(new Date(y.date), \"MMM DD, YYYY\")}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"row no-gutters text-light mb-3\">\r\n                        {y.comment}\r\n                      </div>\r\n                      <div className=\"row no-gutters justify-content-between align-items-center\">\r\n                        <div className=\"col-auto\">\r\n                          <div className=\"row no-gutters align-items-center\">\r\n                            <div className=\"col-auto mr-2\">\r\n                              {y.likes.length}\r\n                            </div>\r\n                            <div className=\"col-auto mr-2 \">\r\n                              <MdThumbUp\r\n                                fontSize=\"24px\"\r\n                                className=\"text-green cursor-pointer\"\r\n                              ></MdThumbUp>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n            : \"\"}\r\n          <div className=\"row no-gutters mt-2 justify-content-end\">\r\n            <div className=\"col-auto ml-4\">\r\n              <Paigination\r\n                count={Math.ceil(\r\n                  comments[x._id] ? comments[x._id].length / commentsPerPage : 1\r\n                )}\r\n                current={commentsPage}\r\n                setCurrent={setCommentsPage}\r\n                classNames={{\r\n                  notSelected: \"input-dark\",\r\n                  selected: \"input-dark-selected\",\r\n                }}\r\n              ></Paigination>\r\n            </div>\r\n          </div>\r\n        </Collapse>\r\n      </React.Fragment>\r\n    ));\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(ReviewsList);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { SearchMovies, SearchSeries } from \"../../server/MoviesApi\";\r\nimport MoviesList from \"./MoviesList\";\r\nimport { SearchReviews } from \"../../server/DatabaseApi\";\r\nimport ReviewsList from \"./ReviewsList\";\r\nimport store from \"../../store/store\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport \"simplebar/dist/simplebar.min.css\";\r\nimport { OfficialMoviesGenres, OfficialSeriesGenres } from \"../../Data\";\r\n\r\nconst extractGenres = (movies) => {\r\n  let genres = { 0: \"All\" };\r\n  movies.forEach((x) => {\r\n    x.genre_ids.forEach((gid) => {\r\n      let genre = x.title // movies have title, series - name\r\n        ? OfficialMoviesGenres.find((g) => g.id === gid)\r\n        : OfficialSeriesGenres.find((g) => g.id === gid);\r\n      if (genre && genre.name) {\r\n        if (!(gid in genres)) {\r\n          genres[gid] = genre.name;\r\n        }\r\n      } else {\r\n      }\r\n    });\r\n  });\r\n  return genres;\r\n};\r\n\r\nconst SearchResults = ({ search, settings }) => {\r\n  const [reviews, setReviews] = useState([]);\r\n  const [movies, setMovies] = useState([]);\r\n  const [series, setSeries] = useState([]);\r\n  const [selectedMovieGenre, setSelectedMovieGenre] = useState(0);\r\n  const [selectedSerieGenre, setSelectedSerieGenre] = useState(0);\r\n  const category = search.category;\r\n\r\n  const onFail = () => {\r\n    store.dispatch({\r\n      type: \"SET_NOTIFICATION\",\r\n      notification: {\r\n        title: \"Error\",\r\n        message: \"You need to provide valid api key in admin dashboard\",\r\n        type: \"failure\",\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (search.query) {\r\n        if (category === \"Reviews\" || category === \"All\") {\r\n          let reviews = await SearchReviews(search.query);\r\n          if (!reviews.error) {\r\n            setReviews(reviews);\r\n          }\r\n        } else {\r\n          setReviews([]);\r\n        }\r\n        if (category === \"Movies\" || category === \"All\") {\r\n          let movies = await SearchMovies(\r\n            search.query,\r\n            settings.movies_api_key\r\n          );\r\n          if (movies.results) {\r\n            setMovies(movies.results);\r\n          } else {\r\n            onFail();\r\n          }\r\n        } else {\r\n          setMovies([]);\r\n        }\r\n        if (category === \"Series\" || category === \"All\") {\r\n          let series = await SearchSeries(\r\n            search.query,\r\n            settings.movies_api_key\r\n          );\r\n          if (series.results) {\r\n            setSeries(series.results);\r\n          } else {\r\n            onFail();\r\n          }\r\n        } else {\r\n          setSeries([]);\r\n        }\r\n      }\r\n    }\r\n    getData();\r\n  }, [search]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const moviesGenres = extractGenres(movies);\r\n  const seriesGenres = extractGenres(series);\r\n  return (\r\n    <div\r\n      className=\"row no-gutters justify-content-center bg-over-root\"\r\n      style={{ minHeight: window.innerHeight }}\r\n    >\r\n      <div className=\"col-60 d-flex flex-column\">\r\n        <div className=\"row no-gutters flex-grow-0\"></div>\r\n        <div className=\"row no-gutters flex-grow-1\">\r\n          <div className=\"col-60 d-flex flex-column\">\r\n            <div className=\"row no-gutters flex-grow-1 justify-content-center\">\r\n              <div className=\"col-60 p-5 text-white content-container d-flex flex-column\">\r\n                <div className=\"row no-gutters flex-grow-1\">\r\n                  <div className=\"col-60 mb-4\">\r\n                    <div className=\"row no-gutters h4\">Search Results</div>\r\n                    <div className=\"row no-gutters text-muted border-bottom pb-3\">\r\n                      Showing all results\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-60\">\r\n                    {movies.length ? (\r\n                      <div className=\"row no-gutters h5 mb-2\">\r\n                        Movies ({movies.length})\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    <div className=\"row no-gutters justify-content-end text-light align-items-center mb-4\">\r\n                      <div className=\"col-auto\">\r\n                        {Object.keys(moviesGenres).length > 1 ? (\r\n                          <SimpleBar\r\n                            style={{\r\n                              padding: \"14px 0\",\r\n                              width: \"100%\",\r\n                              overflowX: \"auto\",\r\n                              whiteSpace: \"nowrap\",\r\n                            }}\r\n                          >\r\n                            {Object.keys(moviesGenres).map((x, i) => (\r\n                              <div\r\n                                onClick={() => {\r\n                                  setSelectedMovieGenre(x);\r\n                                }}\r\n                                style={{ display: \"inline-block\" }}\r\n                                key={`genre-for-popular-movie-${i}`}\r\n                                className={`px-4 ${\r\n                                  +selectedMovieGenre === +x\r\n                                    ? \"btn-tertiary-selected text-white\"\r\n                                    : \"btn-tertiary text-light-white\"\r\n                                }`}\r\n                              >\r\n                                {moviesGenres[x]}\r\n                              </div>\r\n                            ))}\r\n                          </SimpleBar>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-60\">\r\n                    {movies.length ? (\r\n                      <React.Fragment>\r\n                        <MoviesList\r\n                          movies={movies.filter((x) => {\r\n                            return (\r\n                              x.genre_ids.includes(+selectedMovieGenre) ||\r\n                              +selectedMovieGenre === 0\r\n                            );\r\n                          })}\r\n                        ></MoviesList>\r\n                      </React.Fragment>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    <div className=\"py-2 row no-gutters\"></div>\r\n                    <div className=\"row no-gutters\">\r\n                      <div className=\"col-60\">\r\n                        {series.length ? (\r\n                          <div className=\"row no-gutters h5 mb-2\">\r\n                            Series ({series.length})\r\n                          </div>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                        <div className=\"row no-gutters justify-content-end text-light align-items-center mb-4\">\r\n                          <div className=\"col-auto\">\r\n                            {Object.keys(seriesGenres).length > 1 ? (\r\n                              <SimpleBar\r\n                                style={{\r\n                                  padding: \"14px 0\",\r\n                                  width: \"100%\",\r\n                                  overflowX: \"auto\",\r\n                                  whiteSpace: \"nowrap\",\r\n                                }}\r\n                              >\r\n                                {Object.keys(seriesGenres).map((x, i) => (\r\n                                  <div\r\n                                    onClick={() => {\r\n                                      setSelectedSerieGenre(x);\r\n                                    }}\r\n                                    style={{ display: \"inline-block\" }}\r\n                                    key={`genre-for-popular-movie-${i}`}\r\n                                    className={`px-4 ${\r\n                                      +selectedSerieGenre === +x\r\n                                        ? \"btn-tertiary-selected text-white\"\r\n                                        : \"btn-tertiary text-light-white\"\r\n                                    }`}\r\n                                  >\r\n                                    {seriesGenres[x]}\r\n                                  </div>\r\n                                ))}\r\n                              </SimpleBar>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {series.length ? (\r\n                      <React.Fragment>\r\n                        <MoviesList\r\n                          movies={series.filter((x) => {\r\n                            return (\r\n                              x.genre_ids.includes(+selectedSerieGenre) ||\r\n                              +selectedSerieGenre === 0\r\n                            );\r\n                          })}\r\n                        ></MoviesList>\r\n                      </React.Fragment>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    <div className=\"py-2 row no-gutters\"></div>\r\n                    {reviews.length ? (\r\n                      <React.Fragment>\r\n                        <div className=\"row no-gutters h5 mb-2\">\r\n                          Reviews ({reviews.length})\r\n                        </div>\r\n                        <ReviewsList reviews={reviews}></ReviewsList>\r\n                      </React.Fragment>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    settings: state.settings,\r\n    search: state.search,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(SearchResults);\r\n","import * as React from \"react\";\r\n\r\nfunction Logo(props) {\r\n  return (\r\n    <svg\r\n      fill={\"transparent\"}\r\n      id=\"logo__svg8\"\r\n      viewBox=\"0 0 98.1 111.451\"\r\n      height={\"100%\"}\r\n      {...props}\r\n    >\r\n      <defs id=\"logo__defs2\">\r\n        <clipPath clipPathUnits=\"userSpaceOnUse\" id=\"logo__clipPath923\">\r\n          <rect\r\n            id=\"logo__rect925\"\r\n            width={595.99}\r\n            height={569.726}\r\n            x={359.033}\r\n            y={144.727}\r\n            ry={10.993}\r\n            fill=\"#14bf4f\"\r\n            fillOpacity={0.52}\r\n            strokeWidth={2.513}\r\n            strokeLinecap=\"square\"\r\n            paintOrder=\"markers fill stroke\"\r\n          />\r\n        </clipPath>\r\n        <clipPath id=\"logo__clipPath857\" clipPathUnits=\"userSpaceOnUse\">\r\n          <rect\r\n            ry={11.18}\r\n            y={200.285}\r\n            x={462.025}\r\n            height={421.234}\r\n            width={370.77}\r\n            id=\"logo__rect859\"\r\n            fill=\"#14bf4f\"\r\n            fillOpacity={0.52}\r\n            strokeWidth={2.443}\r\n            strokeLinecap=\"square\"\r\n            paintOrder=\"markers fill stroke\"\r\n          />\r\n        </clipPath>\r\n      </defs>\r\n      <g id=\"logo__layer1\" transform=\"translate(-52.373 -23.252)\">\r\n        <g\r\n          id=\"logo__g917\"\r\n          transform=\"matrix(.26458 0 0 .26458 -69.87 -29.74)\"\r\n          clipPath=\"url(#logo__clipPath857)\"\r\n        >\r\n          <path id=\"logo__rect870\" d=\"M2-3h1286v1026H2z\" />\r\n          <g id=\"logo__g894\">\r\n            <path\r\n              id=\"logo__path872\"\r\n              d=\"M582.17 504.56c-.49.61-1.24.71-1.88 1.03-7.21 3.59-11.41 9.32-12.53 17.34-.5 3.58-.2 7.07.57 10.55.95 4.29 3.05 7.95 6.19 11.01.33.32.68.6 1 .93.28.29.36.64.07.96-.49.54-1.03 1.03-1.51 1.57-4.22 4.78-6.45 10.36-6.11 16.73.58 10.7 7.16 18.96 16.77 21.94.86.27 1.8.3 2.58.87.28.71-.29 1.17-.55 1.69-3.92 7.96-3.6 15.77.77 23.46.31.54.78 1 .83 1.69-.24.55-.76.33-1.16.37-.45.04-.91.01-1.36.01-12.73 0-25.46 0-38.19.01-3.46 0-6.91-.03-10.37.02-8.48.12-16.11-2.48-23.04-7.22-11.1-7.6-17.68-18.06-19.61-31.41-.2-1.35-.37-2.7-.37-4.07.01-16.55-.06-33.1.02-49.65.05-10.03 3.1-19.14 9.2-27.14 5.2-6.82 11.88-11.71 19.87-14.79 5.55-2.14 10.19-5.53 14.06-10.02 2.51-2.91 4.62-6.08 6.44-9.44 3.45-6.37 5.63-13.18 7.11-20.24 1.61-7.69 2.25-15.46 2.19-23.3-.03-4.01 1-7.74 3.02-11.18 3.25-5.51 7.97-9.16 14.2-10.7 12.53-3.11 25.43 6.37 26.53 18.57.59 6.57.3 13.07-.42 19.58-.59 5.33-1.33 10.64-2.39 15.9-1.48 7.32-3.67 14.43-6.41 21.38-.46 1.16-1.19 1.99-2.05 2.82-3.72 3.57-6.06 7.88-6.98 12.98-.98 5.4-.04 10.47 2.39 15.34.38.77 1.08 1.43 1.12 2.41z\"\r\n              className=\"logo__st0\"\r\n            />\r\n            <path\r\n              id=\"logo__path874\"\r\n              d=\"M652.59 618.75c.16-1.11.69-1.64 1.07-2.24 3.91-6.12 5.54-12.8 4.79-20.02-.17-1.62-.61-3.21-.92-4.81-.1-.51.07-.89.6-1.03 1.41-.36 2.82-.7 4.23-1.06 21.37-5.42 40.31-15.44 56.69-30.21 18.45-16.63 31.25-36.94 39.23-60.38.5-1.46 1.02-2.92 1.4-4.41.5-1.9-.94-3.2-2.86-2.63-.69.2-1.35.54-2.02.82-5.52 2.33-11.09 4.56-16.8 6.41-5.55 1.8-11.23 3-17.03 3.61-3.89.41-7.79.67-11.67 1.12-2.31.27-4-.53-5.5-2.26-2-2.29-3.68-4.71-4.49-7.69-.9-3.32-.49-6.47.98-9.54.87-1.83 2.13-3.38 3.47-4.87.83-.92 1.86-1.43 3.1-1.52.82-.06 1.63-.17 2.44-.21 18.74-1.03 35.75-7.12 51-17.94 19.67-13.95 32.95-32.57 39.65-55.79 1.56-5.42 2.53-10.96 3.14-16.58 1.44-13.31-.37-26.29-3.84-39.11-3.07-11.32-7.82-21.88-14.66-31.46-8.18-11.45-18.57-20.38-30.88-27.12-8.24-4.51-16.89-8.05-26.01-10.37-.53-.13-1.06-.26-1.57-.44-.83-.28-1.14-1.31-.58-1.99.34-.42.76-.78 1.16-1.15 4.27-3.96 8.54-7.9 12.81-11.86 2.07-1.92 4.16-3.81 6.17-5.78.77-.76 1.49-.81 2.43-.44 5.08 2 10.07 4.2 14.84 6.85 29.34 16.29 49.33 40.48 60.49 72.02 3.13 8.85 4.97 18.02 5.89 27.38.72 7.26.86 14.54.29 21.79-2.11 26.66-11.41 50.53-28.29 71.35-2.06 2.54-4.26 4.98-6.51 7.35-2.94 3.09-4.53 6.72-4.99 10.94-3.71 34.36-17.62 64.25-39.98 90.31-14.67 17.09-32.59 29.96-52.98 39.44-13.08 6.08-26.69 10.52-40.91 13.05-1.05.2-2.13.3-3.38.47z\"\r\n              className=\"logo__st1\"\r\n            />\r\n            <path\r\n              id=\"logo__path876\"\r\n              d=\"M478.72 519.92c-.5-.47-.63-1.11-.86-1.69-4.42-11.29-7.62-22.91-9.37-34.92-.58-3.95-1.23-7.9-1.91-11.84-.56-3.25-.51-6.52-.46-9.79.05-3.73.12-7.45.13-11.18.01-2.91.14-5.79.65-8.68 1.37-7.69 2.45-15.43 4.34-23.02 6.18-24.86 17.44-47.13 34.09-66.6 20.87-24.41 46.77-41.16 77.51-50.44 5.83-1.76 11.74-3.22 17.76-4.17 1.82-.29 3.12-1.07 4.32-2.47 7.94-9.33 17.04-17.38 27.25-24.18.3-.2.6-.4.91-.6 1.15-.71 1.24-.74 2.09.13 1.53 1.55 3.02 3.15 4.55 4.71.69.71.94 1.53.78 2.49-.07.45-.12.9-.21 1.35-1.42 7.12-2.87 14.24-4.27 21.37-.24 1.22-.76 2.17-1.72 2.98a51.582 51.582 0 00-3.59 3.34c-9.65 9.94-21.33 16.11-34.77 19.32-19.29 4.6-36.74 13.15-52.2 25.58-21.51 17.28-36.31 39.19-44.61 65.49-2.91 9.21-4.75 18.64-5.63 28.27-.67 7.36-.68 14.71-.26 22.07.27 4.8.84 9.6 1.83 14.32.29 1.4 0 2.36-.95 3.42-7.06 7.89-11.63 17.07-13.84 27.42-.38 1.77-.58 3.58-.88 5.38-.11.69.01 1.46-.68 1.94z\"\r\n              className=\"logo__st1\"\r\n            />\r\n            <path\r\n              id=\"logo__path878\"\r\n              d=\"M684.32 203.33c.82.51.98 1.37 1.31 2.09 4.75 10.31 9.53 20.6 14.15 30.97.95 2.14 2.04 3.58 4.52 3.47 11.54 2 23.09 4.01 34.63 6.01.27.05.55.1.77.24.24.14.39.42.15.66-.57.58-1.17 1.14-1.78 1.69-8.21 7.59-16.44 15.16-24.64 22.77-2.32 2.15-2.39 1.45-1.86 5.14.8 5.57 1.64 11.14 2.45 16.72.89 6.11 1.76 12.23 2.63 18.34.05.35.01.72.01 1.09-.93.13-1.52-.54-2.19-.92-9.75-5.46-19.47-10.96-29.2-16.45-.32-.18-.67-.31-.95-.54-1.57-1.25-3.05-.99-4.77-.13-10.07 5.05-20.18 10-30.28 14.97-.87.43-1.77.79-2.66 1.19-.37-.88-.09-1.58.05-2.28 2.25-11.22 4.52-22.43 6.77-33.65.6-2.98.59-2.98-1.59-5.22-7.78-8.03-15.57-16.06-23.35-24.09-.62-.64-1.22-1.3-1.98-2.11.99-.54 1.88-.57 2.73-.67 8.48-.99 16.97-1.96 25.46-2.94 3.07-.35 6.13-.77 9.21-1.04 1.45-.13 2.24-.8 2.9-2.06 4.1-7.9 8.27-15.76 12.42-23.63 1.7-3.2 3.39-6.4 5.09-9.62z\"\r\n              className=\"logo__st0\"\r\n            />\r\n            <path\r\n              id=\"logo__path880\"\r\n              d=\"M623.34 542.48h-36.81c-1.18 0-2.35 0-3.52-.28-4.03-.99-6.84-4.24-6.95-8.36-.1-4.09-.01-8.18-.03-12.27-.02-3.59 2.82-7.96 7.69-8.57.9-.11 1.81-.16 2.71-.16 24.72-.01 49.44-.01 74.16 0 .99 0 2 .05 2.98.22 4.14.73 7.22 4.1 7.36 8.28.14 4.18.14 8.36.01 12.54-.15 4.68-3.82 8.25-8.62 8.59-.81.06-1.64.02-2.45.02-12.17-.01-24.35-.01-36.53-.01z\"\r\n              className=\"logo__st0\"\r\n            />\r\n            <path\r\n              id=\"logo__path882\"\r\n              d=\"M623.37 578.52h-36.8c-1.27 0-2.53 0-3.79-.34-3.89-1.04-6.62-4.26-6.72-8.27-.1-4.18-.11-8.36.01-12.54.12-4.17 3.25-7.6 7.35-8.28.98-.16 1.99-.22 2.98-.22 24.72-.01 49.43-.01 74.15 0 .91 0 1.82.04 2.71.17 4.27.62 7.51 4 7.67 8.29.15 4.17.14 8.36.01 12.54-.15 4.7-3.82 8.28-8.59 8.62-.81.06-1.64.02-2.45.02-12.17.01-24.35.01-36.53.01z\"\r\n              className=\"logo__st0\"\r\n            />\r\n            <path\r\n              id=\"logo__path884\"\r\n              d=\"M620.62 505.62c-6.18 0-12.37-.02-18.55.01-3.5.02-6.64-.99-9.33-3.22-4.56-3.78-6.17-8.75-5.07-14.42 1.09-5.62 4.67-9.32 10.13-11.1 1.57-.51 3.21-.62 4.85-.62 11.91 0 23.82 0 35.74.01 5.36.01 9.69 2.09 12.85 6.47 5.14 7.13 2.02 19.96-8.82 22.6-1.13.28-2.35.25-3.52.26-6.1.02-12.19.01-18.28.01z\"\r\n              className=\"logo__st0\"\r\n            />\r\n            <path\r\n              id=\"logo__path886\"\r\n              d=\"M619.47 614.55c-5.82 0-11.63-.01-17.45 0-2.46 0-4.65-.7-6.49-2.38-1.84-1.67-2.9-3.78-2.96-6.23-.1-4.09-.17-8.19.01-12.27.16-3.75 2.06-6.5 5.57-8.05 1.11-.49 2.28-.6 3.46-.61 1.91-.02 3.82-.01 5.73-.01h28.36c.82 0 1.64.01 2.45.03 4.74.12 8.34 4.48 8.33 8.5-.01 4 .06 8-.01 12-.08 5.04-3.7 8.74-8.74 9-1.36.07-2.73.02-4.09.02h-14.17z\"\r\n              className=\"logo__st0\"\r\n            />\r\n            <path\r\n              id=\"logo__path888\"\r\n              d=\"M733.06 336.76c7.64-.27 16.28 5.85 16.29 16.22.01 10.03-8.33 16.74-16.61 16.68a16.298 16.298 0 01-16.24-16.62c.17-10.3 8.58-16.54 16.56-16.28z\"\r\n              className=\"logo__st1\"\r\n            />\r\n            <path\r\n              id=\"logo__path890\"\r\n              d=\"M706.71 419.78c-5.31.04-11.12-4.33-11.9-9.26-.56-3.55.49-6.65 2.66-9.37 1.19-1.5 2.79-2.58 4.58-3.33 2.17-.9 4.39-1.15 6.63-.36 4.18 1.46 7.2 4.09 8.35 8.54.42 1.63.38 3.24-.12 4.82-1.38 4.33-4.03 7.44-8.55 8.69-.7.19-1.43.23-1.65.27z\"\r\n              className=\"logo__st1\"\r\n            />\r\n            <path\r\n              id=\"logo__path892\"\r\n              d=\"M662.89 381.33c.18 4.2-3.56 9.55-8.04 10.98-1.69.54-3.44.61-5.12.19-3.8-.95-6.71-3.14-8.53-6.66-.82-1.59-.95-3.31-.8-5.05.58-6.87 6.71-11.24 12.19-10.68 5.47.56 10.36 5.78 10.3 11.22z\"\r\n              className=\"logo__st1\"\r\n            />\r\n          </g>\r\n        </g>\r\n      </g>\r\n      <style id=\"style868\" type=\"text/css\">\r\n        {\".logo__st0{fill:#fbfbfb}.logo__st1{fill:#fd0040}\"}\r\n      </style>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { MdSettings, MdGroup, MdRateReview, MdMenu } from \"react-icons/md\";\r\nimport { FaBullhorn } from \"react-icons/fa\";\r\nimport { BsBellFill, BsFillTagFill } from \"react-icons/bs\";\r\nimport store from \"../../store/store\";\r\nimport Logo from \"../../images/Logo\";\r\n\r\nconst menuItems = [\r\n  { name: \"Settings\", icon: MdSettings },\r\n  { name: \"User Management\", icon: MdGroup },\r\n  { name: \"Reviews & Comments\", icon: MdRateReview },\r\n  { name: \"Announcements\", icon: FaBullhorn },\r\n  { name: \"Promotions\", icon: BsFillTagFill },\r\n  { name: \"Notifications\", icon: BsBellFill },\r\n];\r\n\r\nconst LeftSideMenu = ({\r\n  section,\r\n  setSection,\r\n  isMenuOpened,\r\n  mobile = false,\r\n}) => {\r\n  return (\r\n    <div className=\"row no-gutters bg-over-root-lighter text-white h-100 admin-menu\">\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters justify-content-between align-items-center d-flex d-lg-none px-5 mb-4\">\r\n          <div className=\"col-auto h3\">\r\n            <div className=\"row no-gutters align-items-center\">\r\n              <div className=\"square-50 mr-2\">\r\n                <Logo></Logo>\r\n              </div>\r\n              <div className=\"col-auto logo text-title-lg\">CozyPotato</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-auto\">\r\n            <MdMenu\r\n              className=\"cursor-pointer\"\r\n              fontSize=\"34px\"\r\n              onClick={() => {\r\n                store.dispatch({\r\n                  type: \"SET_DASHBOARD_MENU_OPENED\",\r\n                  isOpened: !isMenuOpened,\r\n                });\r\n              }}\r\n            ></MdMenu>\r\n          </div>\r\n        </div>\r\n        {menuItems.map((x, i) => (\r\n          <div\r\n            key={`left-menu-item-${i}`}\r\n            className=\"row no-gutters px-4 mb-2\"\r\n            style={{\r\n              borderLeft:\r\n                section === i\r\n                  ? \"4px solid rgb(255, 0, 64)\"\r\n                  : \"4px solid transparent\",\r\n            }}\r\n          >\r\n            <div className=\"col-60\">\r\n              <div\r\n                onClick={() => {\r\n                  setSection(i);\r\n                  if (mobile) {\r\n                    store.dispatch({\r\n                      type: \"SET_DASHBOARD_MENU_OPENED\",\r\n                      isOpened: !isMenuOpened,\r\n                    });\r\n                  }\r\n                }}\r\n                key={`menu-item-${i}`}\r\n                className={`align-items-center px-3 btn-custom text-left row no-gutters${\r\n                  section === i ? \" bg-custom-primary\" : \"\"\r\n                }`}\r\n              >\r\n                <x.icon className=\"col-auto mr-2\" fontSize=\"24px\"></x.icon>\r\n                <div className=\"col-auto\">{x.name}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftSideMenu;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  UpdateOrCreateSettings,\r\n  ChangeBackgroundMovie,\r\n  GetSettings,\r\n} from \"../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport date from \"date-and-time\";\r\nimport {\r\n  FaFacebookF,\r\n  FaInstagram,\r\n  FaLinkedinIn,\r\n  FaTwitter,\r\n} from \"react-icons/fa\";\r\nimport Loader from \"../utility/Loader\";\r\n\r\nconst socialIcons = [\r\n  { icon: FaFacebookF, name: \"Facebook\" },\r\n  { icon: FaInstagram, name: \"Instagram\" },\r\n  { icon: FaLinkedinIn, name: \"Linkedin\" },\r\n  { icon: FaTwitter, name: \"Twitter\" },\r\n];\r\n\r\nconst Settings = ({ settings }) => {\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const validations = [\r\n    {\r\n      valid:\r\n        (/^http/.test(settings.FacebookLink) || settings.FacebookLink === \"\") &&\r\n        (/^http/.test(settings.TwitterLink) || settings.TwitterLink === \"\") &&\r\n        (/^http/.test(settings.LinkedinLinks) ||\r\n          settings.LinkedinLink === \"\") &&\r\n        (/^http/.test(settings.InstagramLink) || settings.InstagramLink === \"\"),\r\n\r\n      error: \"Social link must start with http:// or https://\",\r\n    },\r\n  ];\r\n  return (\r\n    <div className={`row no-gutters admin-screen`}>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters border-bottom pb-3 mb-5\">\r\n          <div className=\"col-60 admin-screen-title\">Settings</div>\r\n          <div className=\"col-60\">Configuration settings for admin panel</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-sm-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters mb-1\">\r\n                  Configure API for popular movies (main for now)\r\n                </div>\r\n                <div className=\"row no-gutters\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter API key\"\r\n                    value={settings.movies_api_key}\r\n                    onChange={(e) => {\r\n                      e.persist();\r\n                      store.dispatch({\r\n                        type: \"UPDATE_SETTINGS\",\r\n                        settings: { movies_api_key: e.target.value },\r\n                      });\r\n                    }}\r\n                    className=\"px-3 input-light w-100\"\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters mb-1\">\r\n                  Configure API for movie data\r\n                </div>\r\n                <div className=\"row no-gutters\">\r\n                  <input\r\n                    value={settings.movie_data_api}\r\n                    onChange={(e) => {\r\n                      e.persist();\r\n                      store.dispatch({\r\n                        type: \"UPDATE_SETTINGS\",\r\n                        settings: { movie_data_api: e.target.value },\r\n                      });\r\n                    }}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter API key\"\r\n                    className=\"px-3 input-light w-100\"\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters mb-1\">\r\n                  Configure API for latest movies\r\n                </div>\r\n                <div className=\"row no-gutters\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter API key\"\r\n                    value={settings.latest_movies_api}\r\n                    onChange={(e) => {\r\n                      e.persist();\r\n                      store.dispatch({\r\n                        type: \"UPDATE_SETTINGS\",\r\n                        settings: { latest_movies_api: e.target.value },\r\n                      });\r\n                    }}\r\n                    className=\"px-3 input-light w-100\"\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-30 col-60 mb-4\">\r\n                    <div className=\"row no-gutters mb-1\">\r\n                      Number of popular reviews to show\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.no_popular_reviews}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { no_popular_reviews: e.target.value },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-30 col-60 mb-4\">\r\n                    <div className=\"row no-gutters mb-1\">\r\n                      Number of popular movies to show\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.no_popular_movies}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { no_popular_movies: e.target.value },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-30 col-60 mb-4\">\r\n                    <div className=\"row no-gutters mb-1\">\r\n                      Number of Reviews allowed per day per user\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.no_allowed_reviews}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { no_allowed_reviews: e.target.value },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-30 col-60 mb-4\">\r\n                    <div className=\"row no-gutters mb-1\">\r\n                      Number of characters allowed in comments\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.no_comment_characters}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { no_comment_characters: e.target.value },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-30 col-60 mb-4\">\r\n                    <div className=\"row no-gutters mb-1\">\r\n                      Number of words allowed in review\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.no_review_words}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { no_review_words: e.target.value },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-40 col-60 mb-4\">\r\n                <div className=\"row no-gutters mb-1\">\r\n                  Background image refresh time (days, hours, minutes)\r\n                </div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-20 pr-3\">\r\n                    <div className=\"row no-gutters text-muted\">days</div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.bg_image_refresh_time_days}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: {\r\n                              bg_image_refresh_time_days: e.target.value,\r\n                            },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-20 pr-3\">\r\n                    <div className=\"row no-gutters text-muted\">hours</div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.bg_image_refresh_time_hours}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: {\r\n                              bg_image_refresh_time_hours: e.target.value,\r\n                            },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-20 \">\r\n                    <div className=\"row no-gutters text-muted\">minutes</div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        value={settings.bg_image_refresh_time_minutes}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: {\r\n                              bg_image_refresh_time_minutes: e.target.value,\r\n                            },\r\n                          });\r\n                        }}\r\n                        min={0}\r\n                        type=\"number\"\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters mb-1\">\r\n                  Current background movie\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <img\r\n                    alt={settings.current_bg_movie.backdrop_path}\r\n                    style={{ maxWidth: \"500px\" }}\r\n                    width=\"100%\"\r\n                    src={`https://image.tmdb.org/t/p/w500${settings.current_bg_movie.backdrop_path}`}\r\n                  ></img>\r\n                </div>\r\n                <div className=\"row no-gutters mb-1\">Title</div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <input\r\n                    disabled\r\n                    className=\"input-light-disabled w-100 px-3\"\r\n                    value={settings.current_bg_movie.title}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <div className=\"col-auto mr-4\">\r\n                    <div className=\"row no-gutters mb-1\">Set Date</div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        disabled\r\n                        className=\"input-light-disabled px-3\"\r\n                        value={date.format(\r\n                          new Date(settings.current_bg_movie.date_set),\r\n                          \"YYYY-MM-DD @ hh:mm A\"\r\n                        )}\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters mb-1\">Refresh Date</div>\r\n                    <div className=\"row no-gutters\">\r\n                      <input\r\n                        disabled\r\n                        className=\"input-light-disabled px-3\"\r\n                        value={date.format(\r\n                          new Date(\r\n                            settings.current_bg_movie.date_set +\r\n                              settings.bg_image_refresh_time_minutes * 60000 +\r\n                              settings.bg_image_refresh_time_hours * 3600000 +\r\n                              settings.bg_image_refresh_time_days * 86400000\r\n                          ),\r\n                          \"YYYY-MM-DD @ hh:mm A\"\r\n                        )}\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row no-gutters\">\r\n                  <div\r\n                    className=\"col-auto btn-custom btn-custom-primary btn-small\"\r\n                    onClick={async () => {\r\n                      if (settings.movies_api_key) {\r\n                        setLoading(true);\r\n                        let res = await ChangeBackgroundMovie(\r\n                          settings.movies_api_key\r\n                        );\r\n                        setLoading(false);\r\n                        if (!res.error) {\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { current_bg_movie: res },\r\n                          });\r\n                        } else {\r\n                          store.dispatch({\r\n                            type: \"SET_NOTIFICATION\",\r\n                            notification: {\r\n                              title: \"Action not allowed\",\r\n                              message: res.error,\r\n                              type: \"failure\",\r\n                            },\r\n                          });\r\n                        }\r\n                      } else {\r\n                        store.dispatch({\r\n                          type: \"SET_NOTIFICATION\",\r\n                          notification: {\r\n                            title: \"Action not allowed\",\r\n                            message:\r\n                              \"You need to set movies api key to change background movie\",\r\n                            type: \"failure\",\r\n                          },\r\n                        });\r\n                      }\r\n                    }}\r\n                  >\r\n                    {loading ? (\r\n                      <Loader\r\n                        color={\"white\"}\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          left: \"10px\",\r\n                          top: 0,\r\n                          bottom: 0,\r\n                          margin: \"auto\",\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                        loading={loading}\r\n                        size={20}\r\n                      ></Loader>\r\n                    ) : (\r\n                      \"Refresh\"\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters mb-1\">Set social links</div>\r\n                {socialIcons.map((x, i) => (\r\n                  <div\r\n                    className=\"row no-gutters mb-2\"\r\n                    key={`social-icons-settings-${i}`}\r\n                  >\r\n                    <div className=\"col-auto mr-2\">\r\n                      <div className=\"square-40 rounded-circle bg-white d-flex flex-center\">\r\n                        <x.icon fontSize=\"24px\" className=\"text-dark\"></x.icon>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <input\r\n                        spellCheck={false}\r\n                        type=\"text\"\r\n                        placeholder={`Paste ${x.name} link`}\r\n                        value={settings[`${x.name}Link`]}\r\n                        onChange={(e) => {\r\n                          e.persist();\r\n                          store.dispatch({\r\n                            type: \"UPDATE_SETTINGS\",\r\n                            settings: { [`${x.name}Link`]: e.target.value },\r\n                          });\r\n                        }}\r\n                        className=\"px-3 input-light w-100\"\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"col-60 mt-3\">\r\n                <div\r\n                  style={{ height: \"30px\", opacity: problem ? 1 : 0 }}\r\n                  className=\"row no-gutters align-items-center text-danger\"\r\n                >\r\n                  {problem}\r\n                </div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\">\r\n                    Cancel\r\n                  </div>\r\n                  <div\r\n                    className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n                    onClick={async () => {\r\n                      let invalid = validations.filter((x) => !x.valid);\r\n                      if (invalid.length) {\r\n                        setProblem(invalid[0].error);\r\n                      } else {\r\n                        setProblem(\"\");\r\n                        let res = await UpdateOrCreateSettings(settings);\r\n                        if (res.error) {\r\n                          store.dispatch({\r\n                            type: \"SET_NOTIFICATION\",\r\n                            notification: {\r\n                              title: \"Error\",\r\n                              message: \"Settings were not updated\",\r\n                              type: \"failure\",\r\n                            },\r\n                          });\r\n                        } else {\r\n                          store.dispatch({\r\n                            type: \"SET_NOTIFICATION\",\r\n                            notification: {\r\n                              title: \"Settings updated!\",\r\n                              message: \"Settings were successfully updated\",\r\n                              type: \"success\",\r\n                            },\r\n                          });\r\n                          GetSettings((settings) => {\r\n                            if (!settings.error) {\r\n                              if (settings.length) {\r\n                                store.dispatch({\r\n                                  type: \"UPDATE_SETTINGS\",\r\n                                  settings: settings[0],\r\n                                });\r\n                              }\r\n                            }\r\n                          });\r\n                        }\r\n                      }\r\n                    }}\r\n                  >\r\n                    Save\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    settings: state.settings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Settings);\r\n","import React from \"react\";\r\nimport LeftSideMenu from \"./LeftSideMenu\";\r\n\r\nconst RightSideMenuFloating = ({ isMenuOpened, setSection, section }) => {\r\n  return (\r\n    <div\r\n      className={`d-block d-lg-none col-60 col-sm-40 col-md-30 col-lg-20 col-xl-15 vh-100 zindex-99 ${\r\n        !isMenuOpened ? \"zindex-0-1\" : \"\"\r\n      }`}\r\n      style={{\r\n        position: \"fixed\",\r\n        right: 0,\r\n        top: 0,\r\n      }}\r\n    >\r\n      <div className=\"w-100 h-100 position-relative\">\r\n        <div\r\n          className=\"container-fluid px-0\"\r\n          style={{\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            right: isMenuOpened ? 0 : \"-100%\",\r\n            transition: \"right 0.3s\",\r\n            position: \"absolute\",\r\n            zIndex: 10,\r\n            background: \"white\",\r\n          }}\r\n        >\r\n          <LeftSideMenu\r\n            mobile={true}\r\n            className=\"text-white bg-internly-90 col-12\"\r\n            section={section}\r\n            isMenuOpened={isMenuOpened}\r\n            setSection={setSection}\r\n          ></LeftSideMenu>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RightSideMenuFloating;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Popover from \"./Popover\";\r\nimport { MdArrowDropDown } from \"react-icons/md\";\r\nimport uniqid from \"uniqid\";\r\n\r\nconst Select = ({\r\n  items,\r\n  btnName,\r\n  className = \"\",\r\n  multipleSelect = false,\r\n  popoverClass = \"\",\r\n  popoverWidth = \"auto\",\r\n  onSelect = () => {},\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const opener = useRef(null);\r\n  return (\r\n    <Popover\r\n      className={popoverClass}\r\n      arrow={false}\r\n      onOpen={() => setIsOpen(true)}\r\n      onHide={() => setIsOpen(false)}\r\n      content={(w) => (\r\n        <div\r\n          className=\"bg-white\"\r\n          style={{ maxHeight: \"400px\", overflowY: \"auto\", width: w }}\r\n        >\r\n          {items.map((x, i) => (\r\n            <div\r\n              key={uniqid()}\r\n              className=\"popover-item w-100\"\r\n              onClick={() => {\r\n                onSelect(i);\r\n                if (!multipleSelect) {\r\n                  opener.current.click();\r\n                }\r\n              }}\r\n            >\r\n              <div>{x.item ? x.item : x}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    >\r\n      <div\r\n        ref={opener}\r\n        className={\r\n          \"cursor-pointer user-select-none d-flex justify-content-between align-items-center \" +\r\n          className\r\n        }\r\n      >\r\n        <div className=\"mr-2\">{btnName}</div>\r\n        <MdArrowDropDown\r\n          fontSize=\"16px\"\r\n          strokeWidth=\"1.5px\"\r\n          className=\"text-internly\"\r\n          style={{\r\n            transform: `rotate(${isOpen ? \"180deg\" : \"0deg\"})`,\r\n            transition: \"transform 0.3s\",\r\n          }}\r\n        ></MdArrowDropDown>\r\n      </div>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { Checkbox as MuiCheckbox } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"rgb(255, 0, 64)\",\r\n    },\r\n    secondary: {\r\n      main: \"#202020\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Checkbox = (props) => {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <MuiCheckbox {...props}></MuiCheckbox>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport date from \"date-and-time\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport { GetReviews, DeleteMultipleReviews } from \"../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport history from \"../../History\";\r\n\r\nconst Reviews = ({\r\n  setEditReviewSection,\r\n  setEditReview,\r\n  publicUsers,\r\n  ratings,\r\n}) => {\r\n  const [action, setAction] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"User\");\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [roleFilter, setRoleFilter] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [mainFilter, setMainFilter] = useState({ key: \"\", value: \"\" });\r\n  const [reviews, setReviews] = useState([]);\r\n  const [filteredReviews, setFilteredReviews] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let res = await GetReviews();\r\n      if (!res.error) {\r\n        setReviews(\r\n          res.reverse().map((x) => Object.assign({}, x, { selected: false }))\r\n        );\r\n      }\r\n    }\r\n    getData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    let arr = [...reviews];\r\n    if (reviews.length) {\r\n      if (search) {\r\n        if (searchKey === \"User\") {\r\n          arr = arr.filter((x) =>\r\n            publicUsers[x.author].display_name\r\n              .toLowerCase()\r\n              .includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Review\") {\r\n          arr = arr.filter((x) =>\r\n            x.review.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Movie\") {\r\n          arr = arr.filter(\r\n            (x) =>\r\n              ratings[x.movie_id] &&\r\n              ratings[x.movie_id].movie_title\r\n                .toLowerCase()\r\n                .includes(search.toLowerCase())\r\n          );\r\n        }\r\n      }\r\n\r\n      if (roleFilter) {\r\n        arr = arr.filter((x) => publicUsers[x.author].role === roleFilter);\r\n      }\r\n      if (mainFilter.key === \"role\" && mainFilter.value) {\r\n        arr = arr.filter(\r\n          (x) => publicUsers[x.author][mainFilter.key] === mainFilter.value\r\n        );\r\n      }\r\n\r\n      if (mainFilter.key === \"deleted\" && mainFilter.value) {\r\n        arr = arr.filter((x) => x[\"deleted\"] === mainFilter.value);\r\n      } else {\r\n        arr = arr.filter((x) => !x[\"deleted\"]);\r\n      }\r\n\r\n      setFilteredReviews(arr);\r\n    }\r\n  }, [search, roleFilter, reviews, mainFilter]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //boundaries for slicing reviews array. (pagination)\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= filteredReviews.length) {\r\n    boundaries[1] = boundaries[1] - (boundaries[1] - filteredReviews.length);\r\n  }\r\n\r\n  const handleApply = async (all = false) => {\r\n    if (all) {\r\n      setRoleFilter(role === \"All\" ? \"\" : role);\r\n    }\r\n    if (action === \"Edit\") {\r\n      let selected = filteredReviews.filter((x) => x.selected);\r\n      if (selected.length) {\r\n        setEditReview(selected[0]);\r\n        setEditReviewSection();\r\n      }\r\n    } else if (action === \"Delete\") {\r\n      let selected = filteredReviews.filter((x) => x.selected);\r\n      if (selected.length) {\r\n        let res = await DeleteMultipleReviews(selected.map((x) => x._id));\r\n        if (res.error) {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Error\",\r\n              message: res.error,\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Reviews were deleted\",\r\n              message: \"Reviews were successfully deleted\",\r\n              type: \"success\",\r\n            },\r\n          });\r\n        }\r\n        setRefresh(!refresh);\r\n      }\r\n    }\r\n  };\r\n\r\n  const columns = [\"Title\", \"Review\", \"Rating\", \"Posted on\", \"Reported\"];\r\n\r\n  return (\r\n    <div className=\"row no-gutters\">\r\n      <div className=\"col-60 py-5\">\r\n        <div className=\"row no-gutters h6 mb-3\">\r\n          <div\r\n            className={`col-auto cursor-pointer ${\r\n              !mainFilter.key && !roleFilter ? \"text-primary\" : \"text-dark\"\r\n            }`}\r\n            onClick={() => {\r\n              setMainFilter({ key: \"\", value: \"\" });\r\n              setRoleFilter(\"\");\r\n            }}\r\n          >\r\n            All ({reviews.filter((x) => !x.deleted).length})\r\n          </div>\r\n          <div className=\"col-auto px-2 text-muted\">|</div>\r\n          <div\r\n            onClick={() =>\r\n              setMainFilter((prev) =>\r\n                Object.assign({}, prev, { key: \"role\", value: \"Administrator\" })\r\n              )\r\n            }\r\n            className={`cursor-pointer col-auto ${\r\n              mainFilter.key === \"role\" && mainFilter.value === \"Administrator\"\r\n                ? \"text-primary\"\r\n                : \"text-dark\"\r\n            }`}\r\n          >\r\n            By Administrators (\r\n            {Object.values(publicUsers).length\r\n              ? reviews.filter(\r\n                  (x) =>\r\n                    publicUsers[x.author] &&\r\n                    publicUsers[x.author].role === \"Administrator\" &&\r\n                    !x.deleted\r\n                ).length\r\n              : \"\"}\r\n            )\r\n          </div>\r\n          <div className=\"col-auto px-2 text-muted\">|</div>\r\n          <div\r\n            onClick={() =>\r\n              setMainFilter((prev) =>\r\n                Object.assign({}, prev, { key: \"deleted\", value: true })\r\n              )\r\n            }\r\n            className={`cursor-pointer col-auto ${\r\n              mainFilter.key === \"deleted\" && mainFilter.value === true\r\n                ? \"text-primary\"\r\n                : \"text-dark\"\r\n            }`}\r\n          >\r\n            Deleted ({reviews.filter((x) => x.deleted).length})\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters justify-content-between\">\r\n          <div className=\"col-sm-auto col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    popoverClass=\"col-60 col-sm-auto\"\r\n                    onSelect={(index) => setAction([\"Delete\"][index])}\r\n                    items={[\"Delete\"]}\r\n                    btnName={action ? action : \"Select Action\"}\r\n                    className=\"input-light px-3 col-auto \"\r\n                  ></Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    popoverClass=\"col-60 col-sm-auto\"\r\n                    onSelect={(index) =>\r\n                      setRole([\"All\", \"Administrator\", \"User\"][index])\r\n                    }\r\n                    items={[\"All\", \"Administrator\", \"User\"]}\r\n                    btnName={role ? role : \"Select Role\"}\r\n                    className=\"input-light px-3 col-auto\"\r\n                  ></Select>\r\n                </div>\r\n              </div>\r\n              <div\r\n                onClick={() => handleApply(true)}\r\n                className=\"btn-custom btn-custom-primary col-60 col-sm-auto mb-3 mr-3 btn-xsmall\"\r\n              >\r\n                Apply\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-60 d-block d-sm-none\">\r\n            <div className=\"row no-gutters mb-3\">\r\n              <Select\r\n                popoverClass=\"w-100\"\r\n                onSelect={(index) =>\r\n                  setSearchKey([\"User\", \"Review\", \"Movie\"][index])\r\n                }\r\n                className=\"input-light col-60\"\r\n                items={[\"User\", \"Review\", \"Movie\"]}\r\n                btnName={`Search by ${searchKey}`}\r\n              ></Select>\r\n            </div>\r\n            <div className=\"row no-gutters mb-3\">\r\n              <div className=\"col-60 position-relative\">\r\n                <BsSearch\r\n                  fontSize=\"20px\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    margin: \"auto\",\r\n                    right: \"18px\",\r\n                  }}\r\n                ></BsSearch>\r\n                <input\r\n                  className=\"input-light w-100 pr-5 pl-3\"\r\n                  value={search}\r\n                  onChange={(e) => {\r\n                    e.persist();\r\n                    setSearch(e.target.value);\r\n                  }}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-auto mb-3 d-none d-sm-block\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                onSelect={(index) =>\r\n                  setSearchKey([\"User\", \"Review\", \"Movie\"][index])\r\n                }\r\n                className=\"table-input-prepend-select col-auto\"\r\n                items={[\"User\", \"Review\", \"Movie\"]}\r\n                btnName={`Search by ${searchKey}`}\r\n              ></Select>\r\n              <div className=\"col position-relative\">\r\n                <BsSearch\r\n                  fontSize=\"20px\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    margin: \"auto\",\r\n                    right: \"18px\",\r\n                  }}\r\n                ></BsSearch>\r\n                <input\r\n                  value={search}\r\n                  onChange={(e) => {\r\n                    e.persist();\r\n                    setSearch(e.target.value);\r\n                  }}\r\n                  className=\"table-input pr-5 pl-3\"\r\n                  style={{ minWidth: \"300px\" }}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <Swipeable\r\n            style={{ minWidth: \"100%\" }}\r\n            onSwipedLeft={() => {\r\n              setLastVisibleColumn(\r\n                lastVisibleColumn + 1 < 4\r\n                  ? lastVisibleColumn + 1\r\n                  : lastVisibleColumn\r\n              );\r\n            }}\r\n            onSwipedRight={() => {\r\n              setLastVisibleColumn(\r\n                lastVisibleColumn - 1 >= 0\r\n                  ? lastVisibleColumn - 1\r\n                  : lastVisibleColumn\r\n              );\r\n            }}\r\n          >\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table bg-white border\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">\r\n                      <Checkbox\r\n                        color={\"primary\"}\r\n                        checked={\r\n                          reviews\r\n                            .slice(boundaries[0], boundaries[1])\r\n                            .filter((x) => x.selected).length ===\r\n                          boundaries[1] - boundaries[0]\r\n                        }\r\n                        onChange={(e) => {\r\n                          setFilteredReviews((prev) => {\r\n                            let arr = [...prev];\r\n                            for (\r\n                              let i = boundaries[0];\r\n                              i < boundaries[1];\r\n                              i++\r\n                            ) {\r\n                              arr[i].selected = e.target.checked;\r\n                            }\r\n                            return arr;\r\n                          });\r\n                        }}\r\n                      ></Checkbox>\r\n                    </th>\r\n                    <th className=\"table-header text-truncate text-left\">\r\n                      <div className=\"d-none d-lg-block\">Posted By</div>\r\n                      <div className=\"d-block d-lg-none\">By</div>\r\n                    </th>\r\n                    <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                      {columns[lastVisibleColumn]}\r\n                    </th>\r\n                    {columns.map((x, i) => (\r\n                      <th\r\n                        key={`header-col-${i}`}\r\n                        className=\"d-none d-xl-table-cell table-header text-truncate\"\r\n                      >\r\n                        <div>{x}</div>\r\n                      </th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {filteredReviews.length ? (\r\n                    filteredReviews\r\n                      .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                      .map((x, i) => (\r\n                        <tr\r\n                          className=\"font-weight-600 bg-light\"\r\n                          key={`shortlist-item-${i}`}\r\n                        >\r\n                          <td className=\"text-center\">\r\n                            <Checkbox\r\n                              color={\"primary\"}\r\n                              checked={x.selected}\r\n                              onChange={(e) => {\r\n                                setFilteredReviews((prev) => {\r\n                                  let arr = [...prev];\r\n                                  arr[(page - 1) * 5 + i].selected =\r\n                                    e.target.checked;\r\n                                  return arr;\r\n                                });\r\n                              }}\r\n                            ></Checkbox>\r\n                          </td>\r\n                          <td>\r\n                            {publicUsers[x.author] ? (\r\n                              <div>\r\n                                <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                  <div className=\"d-inline-block mr-2\">\r\n                                    <div\r\n                                      className=\"square-50 rounded-circle bg-image\"\r\n                                      style={{\r\n                                        backgroundImage: `url(${\r\n                                          publicUsers[x.author].photo\r\n                                        })`,\r\n                                      }}\r\n                                    ></div>\r\n                                  </div>\r\n                                  <div className=\"d-none d-md-inline-block align-top\">\r\n                                    <div className=\"h6 text-primary\">\r\n                                      {publicUsers[x.author].display_name}\r\n                                    </div>\r\n                                    <div className=\"mb-2\">\r\n                                      {publicUsers[x.author].email}\r\n                                    </div>\r\n                                    <div className=\"d-flex\">\r\n                                      <div\r\n                                        className=\"text-primary underline-link\"\r\n                                        onClick={() => {\r\n                                          setEditReview(x);\r\n                                          setEditReviewSection();\r\n                                        }}\r\n                                      >\r\n                                        Edit\r\n                                      </div>\r\n                                      <div className=\"px-2\">|</div>\r\n                                      <div\r\n                                        className=\"text-danger underline-link\"\r\n                                        onClick={async () => {\r\n                                          let res = await DeleteMultipleReviews(\r\n                                            [x._id]\r\n                                          );\r\n                                          if (res.error) {\r\n                                            store.dispatch({\r\n                                              type: \"SET_NOTIFICATION\",\r\n                                              notification: {\r\n                                                title: \"Error\",\r\n                                                message: res.error,\r\n                                                type: \"failure\",\r\n                                              },\r\n                                            });\r\n                                          } else {\r\n                                            store.dispatch({\r\n                                              type: \"SET_NOTIFICATION\",\r\n                                              notification: {\r\n                                                title: \"Review was deleted\",\r\n                                                message:\r\n                                                  \"Review was successfully deleted\",\r\n                                                type: \"success\",\r\n                                              },\r\n                                            });\r\n                                          }\r\n                                          setRefresh(!refresh);\r\n                                        }}\r\n                                      >\r\n                                        Delete\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 0\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div style={{ maxWidth: \"150px\" }}>\r\n                              {ratings[x.movie_id]\r\n                                ? ratings[x.movie_id].movie_title\r\n                                : \"\"}\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 1\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div>\r\n                              <div\r\n                                style={{ minWidth: \"200px\" }}\r\n                                className=\"cursor-pointer user-select-none btn-link text-clamp-4\"\r\n                                onClick={(e) => {\r\n                                  history.push(`/movie/${x.movie_id}/${x._id}`);\r\n                                }}\r\n                              >\r\n                                {x.review}\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 2\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div style={{ marginBottom: \"-6px\" }}>\r\n                              <Emoji\r\n                                emoji={\r\n                                  x.rating === \"excellent_rate\"\r\n                                    ? \"fire\"\r\n                                    : x.rating === \"good_rate\"\r\n                                    ? \"heart\"\r\n                                    : x.rating === \"ok_rate\"\r\n                                    ? \"heavy_division_sign\"\r\n                                    : \"shit\"\r\n                                }\r\n                                set=\"facebook\"\r\n                                size={24}\r\n                              />\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 3\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div style={{ whiteSpace: \"nowrap\" }}>\r\n                              {date.format(\r\n                                new Date(x.date),\r\n                                \"DD/MM/YYYY @ hh:mm A\"\r\n                              )}\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 4\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            {x.reported ? (\r\n                              <div className=\"text-danger\">Abused</div>\r\n                            ) : (\r\n                              <div className=\"text-success\">No</div>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan={7} className=\" text-center py-5\">\r\n                        0 results found\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n                {/* <tfoot>\r\n                  <tr>\r\n                    <th className=\"text-center\">\r\n                      <Checkbox\r\n                        color={\"primary\"}\r\n                        checked={\r\n                          filteredReviews\r\n                            .slice(boundaries[0], boundaries[1])\r\n                            .filter((x) => x.selected).length ===\r\n                          boundaries[1] - boundaries[0]\r\n                        }\r\n                        onChange={(e) => {\r\n                          setFilteredReviews((prev) => {\r\n                            let arr = [...prev];\r\n                            for (\r\n                              let i = boundaries[0];\r\n                              i < boundaries[1];\r\n                              i++\r\n                            ) {\r\n                              arr[i].selected = e.target.checked;\r\n                            }\r\n                            return arr;\r\n                          });\r\n                        }}\r\n                      ></Checkbox>\r\n                    </th>\r\n                    <th className=\"table-footer text-truncate text-left\">\r\n                      <div className=\"d-none d-lg-block\">Posted By</div>\r\n                      <div className=\"d-block d-lg-none\">By</div>\r\n                    </th>\r\n                    <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                      {columns[lastVisibleColumn]}\r\n                    </th>\r\n                    {columns.map((x, i) => (\r\n                      <th\r\n                        key={`footer-col-${i}`}\r\n                        className=\"d-none d-xl-table-cell table-header text-truncate\"\r\n                      >\r\n                        <div>{x}</div>\r\n                      </th>\r\n                    ))}\r\n                  </tr>\r\n                </tfoot> */}\r\n              </table>\r\n            </div>\r\n          </Swipeable>\r\n        </div>\r\n        <div className=\"row no-gutters justify-content-center justify-content-sm-end\">\r\n          <div className=\"col-auto\">\r\n            <Pagination\r\n              count={Math.ceil(filteredReviews.length / 5)}\r\n              current={page}\r\n              setCurrent={setPage}\r\n            ></Pagination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Reviews);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport date from \"date-and-time\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport { GetComments, DeleteMultipleComments } from \"../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport history from \"../../History\";\r\n\r\nconst Comments = ({\r\n  setEditCommentSection,\r\n  setEditComment,\r\n  publicUsers,\r\n  ratings,\r\n}) => {\r\n  const [action, setAction] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"User\");\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [roleFilter, setRoleFilter] = useState(\"\");\r\n  const [mainFilter, setMainFilter] = useState({ key: \"\", value: \"\" });\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [comments, setComments] = useState([]);\r\n  const [commentsObj, setCommentsObj] = useState({});\r\n\r\n  const [filteredComments, setFilteredComments] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let res = await GetComments();\r\n      if (!res.error) {\r\n        setComments(\r\n          res.reverse().map((x) => Object.assign({}, x, { selected: false }))\r\n        );\r\n        let obj = {};\r\n        res.forEach((x) => {\r\n          obj[x._id] = x;\r\n        });\r\n        setCommentsObj(obj);\r\n      }\r\n    }\r\n    getData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    let arr = [...comments];\r\n    if (comments.length) {\r\n      if (search) {\r\n        if (searchKey === \"User\") {\r\n          arr = arr.filter((x) =>\r\n            publicUsers[x.author].display_name\r\n              .toLowerCase()\r\n              .includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Comment\") {\r\n          arr = arr.filter((x) =>\r\n            x.comment.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        }\r\n      }\r\n\r\n      if (roleFilter) {\r\n        arr = arr.filter((x) => publicUsers[x.author].role === roleFilter);\r\n      }\r\n\r\n      if (mainFilter.key === \"role\" && mainFilter.value) {\r\n        arr = arr.filter(\r\n          (x) => publicUsers[x.author][mainFilter.key] === mainFilter.value\r\n        );\r\n      }\r\n\r\n      if (mainFilter.key === \"deleted\" && mainFilter.value) {\r\n        arr = arr.filter((x) => x[\"deleted\"] === mainFilter.value);\r\n      } else {\r\n        arr = arr.filter((x) => !x[\"deleted\"]);\r\n      }\r\n\r\n      setFilteredComments(arr);\r\n    }\r\n  }, [search, roleFilter, comments, mainFilter]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //boundaries for slicing comments array. (pagination)\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= filteredComments.length) {\r\n    boundaries[1] = boundaries[1] - (boundaries[1] - filteredComments.length);\r\n  }\r\n\r\n  const handleApply = async (all = false) => {\r\n    if (all) {\r\n      setRoleFilter(role === \"All\" ? \"\" : role);\r\n    }\r\n    let selected = filteredComments.filter((x) => x.selected);\r\n    if (selected.length) {\r\n      if (action === \"Edit\") {\r\n        setEditComment(selected[0]);\r\n        setEditCommentSection();\r\n      } else {\r\n        let ids = selected.map((x) => x._id);\r\n        let allIds = [...ids];\r\n\r\n        const fetchIds = (idsArr) => {\r\n          allIds = allIds.concat(idsArr);\r\n          idsArr.forEach((x) => fetchIds(commentsObj[x].comments));\r\n        };\r\n\r\n        fetchIds(ids);\r\n\r\n        let res = await DeleteMultipleComments(allIds);\r\n        if (res.error) {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Error\",\r\n              message: res.error,\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Comments were deleted\",\r\n              message: \"Comments were successfully deleted\",\r\n              type: \"success\",\r\n            },\r\n          });\r\n          setRefresh(!refresh);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row no-gutters\">\r\n      <div className=\"col-60 py-5\">\r\n        <div className=\"row no-gutters h6 mb-3\">\r\n          <div\r\n            className={`col-auto cursor-pointer ${\r\n              !mainFilter.key && !roleFilter ? \"text-primary\" : \"text-dark\"\r\n            }`}\r\n            onClick={() => {\r\n              setMainFilter({ key: \"\", value: \"\" });\r\n              setRoleFilter(\"\");\r\n            }}\r\n          >\r\n            All ({comments.filter((x) => !x.deleted).length})\r\n          </div>\r\n          <div className=\"col-auto px-2 text-muted\">|</div>\r\n          <div\r\n            onClick={() =>\r\n              setMainFilter((prev) =>\r\n                Object.assign({}, prev, { key: \"role\", value: \"Administrator\" })\r\n              )\r\n            }\r\n            className={`cursor-pointer col-auto ${\r\n              mainFilter.key === \"role\" && mainFilter.value === \"Administrator\"\r\n                ? \"text-primary\"\r\n                : \"text-dark\"\r\n            }`}\r\n          >\r\n            By Administrators (\r\n            {Object.values(publicUsers).length\r\n              ? comments.filter(\r\n                  (x) =>\r\n                    publicUsers[x.author].role === \"Administrator\" && !x.deleted\r\n                ).length\r\n              : \"\"}\r\n            )\r\n          </div>\r\n          <div className=\"col-auto px-2 text-muted\">|</div>\r\n          <div\r\n            onClick={() =>\r\n              setMainFilter((prev) =>\r\n                Object.assign({}, prev, { key: \"deleted\", value: true })\r\n              )\r\n            }\r\n            className={`cursor-pointer col-auto ${\r\n              mainFilter.key === \"deleted\" && mainFilter.value === true\r\n                ? \"text-primary\"\r\n                : \"text-dark\"\r\n            }`}\r\n          >\r\n            Deleted ({comments.filter((x) => x.deleted).length})\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters justify-content-between\">\r\n          <div className=\"col-sm-auto col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    popoverClass=\"col-60 col-sm-auto\"\r\n                    onSelect={(index) => setAction([\"Delete\"][index])}\r\n                    items={[\"Delete\"]}\r\n                    btnName={action ? action : \"Select Action\"}\r\n                    className=\"input-light px-3 col-auto\"\r\n                  ></Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    popoverClass=\"col-60 col-sm-auto\"\r\n                    onSelect={(index) =>\r\n                      setRole([\"All\", \"Administrator\", \"User\"][index])\r\n                    }\r\n                    items={[\"All\", \"Administrator\", \"User\"]}\r\n                    btnName={role ? role : \"Select Role\"}\r\n                    className=\"input-light px-3 col-auto\"\r\n                  ></Select>\r\n                </div>\r\n              </div>\r\n              <div\r\n                onClick={() => handleApply(true)}\r\n                className=\"btn-custom btn-custom-primary col-60 col-sm-auto mb-3 mr-3 btn-xsmall\"\r\n              >\r\n                Apply\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-60 d-block d-sm-none\">\r\n            <div className=\"row no-gutters mb-3\">\r\n              <Select\r\n                popoverClass=\"w-100\"\r\n                onSelect={(index) => setSearchKey([\"User\", \"Comment\"][index])}\r\n                className=\"input-light col-60\"\r\n                items={[\"User\", \"Comment\"]}\r\n                btnName={`Search by ${searchKey}`}\r\n              ></Select>\r\n            </div>\r\n            <div className=\"row no-gutters mb-3\">\r\n              <div className=\"col-60 position-relative\">\r\n                <BsSearch\r\n                  fontSize=\"20px\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    margin: \"auto\",\r\n                    right: \"18px\",\r\n                  }}\r\n                ></BsSearch>\r\n                <input\r\n                  className=\"input-light w-100 pr-5 pl-3\"\r\n                  value={search}\r\n                  onChange={(e) => {\r\n                    e.persist();\r\n                    setSearch(e.target.value);\r\n                  }}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-auto mb-3 d-none d-sm-block\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                onSelect={(index) => setSearchKey([\"User\", \"Comment\"][index])}\r\n                className=\"table-input-prepend-select col-auto\"\r\n                items={[\"User\", \"Comment\"]}\r\n                btnName={`Search by ${searchKey}`}\r\n              ></Select>\r\n              <div className=\"col position-relative\">\r\n                <BsSearch\r\n                  fontSize=\"20px\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    margin: \"auto\",\r\n                    right: \"18px\",\r\n                  }}\r\n                ></BsSearch>\r\n                <input\r\n                  value={search}\r\n                  onChange={(e) => {\r\n                    e.persist();\r\n                    setSearch(e.target.value);\r\n                  }}\r\n                  className=\"table-input pr-5 pl-3\"\r\n                  style={{ minWidth: \"300px\" }}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <Swipeable\r\n            style={{ minWidth: \"100%\" }}\r\n            onSwipedLeft={() => {\r\n              setLastVisibleColumn(\r\n                lastVisibleColumn + 1 < 4\r\n                  ? lastVisibleColumn + 1\r\n                  : lastVisibleColumn\r\n              );\r\n            }}\r\n            onSwipedRight={() => {\r\n              setLastVisibleColumn(\r\n                lastVisibleColumn - 1 >= 0\r\n                  ? lastVisibleColumn - 1\r\n                  : lastVisibleColumn\r\n              );\r\n            }}\r\n          >\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table bg-white border\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">\r\n                      <Checkbox\r\n                        color={\"primary\"}\r\n                        checked={\r\n                          filteredComments\r\n                            .slice(boundaries[0], boundaries[1])\r\n                            .filter((x) => x.selected).length ===\r\n                          boundaries[1] - boundaries[0]\r\n                        }\r\n                        onChange={(e) => {\r\n                          setFilteredComments((prev) => {\r\n                            let arr = [...prev];\r\n                            for (\r\n                              let i = boundaries[0];\r\n                              i < boundaries[1];\r\n                              i++\r\n                            ) {\r\n                              arr[i].selected = e.target.checked;\r\n                            }\r\n                            return arr;\r\n                          });\r\n                        }}\r\n                      ></Checkbox>\r\n                    </th>\r\n                    <th className=\"table-header text-truncate text-left\">\r\n                      <div className=\"d-none d-lg-block\">Posted By</div>\r\n                      <div className=\"d-block d-lg-none\">By</div>\r\n                    </th>\r\n                    <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                      {\r\n                        [\"Comment\", \"In Repsonse To\", \"Posted On\", \"Reported\"][\r\n                          lastVisibleColumn\r\n                        ]\r\n                      }\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                      <div>Comment</div>\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                      <div>In Response To</div>\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                      <div>Posted On</div>\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                      <div>Reported</div>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {filteredComments.length ? (\r\n                    filteredComments\r\n                      .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                      .map((x, i) => (\r\n                        <tr\r\n                          className=\"font-weight-600 bg-light\"\r\n                          key={`shortlist-item-${i}`}\r\n                        >\r\n                          <td className=\"text-center\">\r\n                            <Checkbox\r\n                              color={\"primary\"}\r\n                              checked={x.selected}\r\n                              onChange={(e) => {\r\n                                setFilteredComments((prev) => {\r\n                                  let arr = [...prev];\r\n                                  arr[(page - 1) * 5 + i].selected =\r\n                                    e.target.checked;\r\n                                  return arr;\r\n                                });\r\n                              }}\r\n                            ></Checkbox>\r\n                          </td>\r\n                          <td>\r\n                            <div>\r\n                              {publicUsers[x.author] ? (\r\n                                <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                  <div className=\"d-inline-block mr-2\">\r\n                                    <div\r\n                                      className=\"square-50 rounded-circle bg-image\"\r\n                                      style={{\r\n                                        backgroundImage: `url(${\r\n                                          publicUsers[x.author].photo\r\n                                        })`,\r\n                                      }}\r\n                                    ></div>\r\n                                  </div>\r\n                                  <div className=\"d-none d-md-inline-block align-top\">\r\n                                    <div className=\"text-primary\">\r\n                                      {publicUsers[x.author].display_name}\r\n                                    </div>\r\n                                    <div className=\"mb-2\">\r\n                                      {publicUsers[x.author].email}\r\n                                    </div>\r\n                                    <div className=\"d-flex\">\r\n                                      <div\r\n                                        className=\"text-primary underline-link\"\r\n                                        onClick={() => {\r\n                                          setEditComment(x);\r\n                                          setEditCommentSection();\r\n                                        }}\r\n                                      >\r\n                                        Edit\r\n                                      </div>\r\n                                      <div className=\"px-2\">|</div>\r\n                                      <div\r\n                                        className=\"text-danger underline-link\"\r\n                                        onClick={async () => {\r\n                                          let allIds = [x._id];\r\n\r\n                                          const fetchIds = (idsArr) => {\r\n                                            allIds = allIds.concat(idsArr);\r\n                                            idsArr.forEach((id) =>\r\n                                              fetchIds(commentsObj[id].comments)\r\n                                            );\r\n                                          };\r\n\r\n                                          fetchIds(allIds);\r\n\r\n                                          let res = await DeleteMultipleComments(\r\n                                            allIds\r\n                                          );\r\n                                          if (res.error) {\r\n                                            store.dispatch({\r\n                                              type: \"SET_NOTIFICATION\",\r\n                                              notification: {\r\n                                                title: \"Error\",\r\n                                                message: res.error,\r\n                                                type: \"failure\",\r\n                                              },\r\n                                            });\r\n                                          } else {\r\n                                            store.dispatch({\r\n                                              type: \"SET_NOTIFICATION\",\r\n                                              notification: {\r\n                                                title: \"Comment was deleted\",\r\n                                                message:\r\n                                                  \"Comment was successfully deleted\",\r\n                                                type: \"success\",\r\n                                              },\r\n                                            });\r\n                                          }\r\n                                          setRefresh(!refresh);\r\n                                        }}\r\n                                      >\r\n                                        Delete\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 0\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div>\r\n                              <div\r\n                                style={{ minWidth: \"200px\" }}\r\n                                className=\"cursor-pointer user-select-none btn-link text-clamp-4\"\r\n                                onClick={(e) => {\r\n                                  history.push(\r\n                                    `/movie/${x.movie_id}/${x.review_id}/${x._id}`\r\n                                  );\r\n                                }}\r\n                              >\r\n                                {x.comment}\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 1\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div>\r\n                              Movie:{\" \"}\r\n                              {ratings[x.movie_id]\r\n                                ? ratings[x.movie_id].movie_title\r\n                                : \"\"}\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                              <div\r\n                                onClick={async () => {\r\n                                  history.push(\r\n                                    `/movie/${x.movie_id}/${x.review_id}`\r\n                                  );\r\n                                }}\r\n                                className=\"text-primary cursor-pointer\"\r\n                                style={{ whiteSpace: \"nowrap\" }}\r\n                              >\r\n                                View Review\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 2\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div style={{ whiteSpace: \"nowrap\" }}>\r\n                              {date.format(\r\n                                new Date(x.date),\r\n                                \"DD/MM/YYYY @ hh:mm A\"\r\n                              )}\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 3\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            {x.reported ? (\r\n                              <div className=\"text-danger\">Abused</div>\r\n                            ) : (\r\n                              <div className=\"text-success\">No</div>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan={6} className=\"text-center py-5\">\r\n                        0 results found\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n                {/* <tfoot>\r\n                  <tr>\r\n                    <th className=\"text-center\">\r\n                      <Checkbox\r\n                        color={\"primary\"}\r\n                        checked={\r\n                          comments\r\n                            .slice(boundaries[0], boundaries[1])\r\n                            .filter((x) => x.selected).length ===\r\n                          boundaries[1] - boundaries[0]\r\n                        }\r\n                        onChange={(e) => {\r\n                          setFilteredComments((prev) => {\r\n                            let arr = [...prev];\r\n                            for (\r\n                              let i = boundaries[0];\r\n                              i < boundaries[1];\r\n                              i++\r\n                            ) {\r\n                              arr[i].seleCted = e.target.checked;\r\n                            }\r\n                            return arr;\r\n                          });\r\n                        }}\r\n                      ></Checkbox>\r\n                    </th>\r\n                    <th className=\"table-footer text-truncate text-left\">\r\n                      <div className=\"d-none d-lg-block\">Posted By</div>\r\n                      <div className=\"d-block d-lg-none\">By</div>\r\n                    </th>\r\n                    <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                      {\r\n                        [\r\n                          \"Posted By\",\r\n                          \"Review\",\r\n                          \"Reported\",\r\n                          \"Movie Name\",\r\n                          \"Posted On\",\r\n                        ][lastVisibleColumn]\r\n                      }\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                      <div>Comment</div>\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                      <div>Reported</div>\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                      <div>In Response To</div>\r\n                    </th>\r\n                    <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                      <div>Posted On</div>\r\n                    </th>\r\n                  </tr>\r\n                </tfoot> */}\r\n              </table>\r\n            </div>\r\n          </Swipeable>\r\n        </div>\r\n        <div className=\"row no-gutters justify-content-center justify-content-sm-end\">\r\n          <div className=\"col-auto\">\r\n            <Pagination\r\n              count={Math.ceil(filteredComments.length / 5)}\r\n              current={page}\r\n              setCurrent={setPage}\r\n            ></Pagination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Comments);\r\n","import React, { useState } from \"react\";\r\nimport Reviews from \"./Reviews\";\r\nimport Comments from \"./Comments\";\r\n\r\nconst ReviewsAndComments = ({\r\n  setEditReview,\r\n  setEditReviewSection,\r\n  setEditCommentSection,\r\n  setEditComment,\r\n  containerSpacing,\r\n}) => {\r\n  const [tab, setTab] = useState(0);\r\n\r\n  return (\r\n    <div className={`row no-gutters admin-screen`}>\r\n      <div className=\"col-60 border-bottom\">\r\n        <div className=\"row no-gutters justify-content-between\">\r\n          <div className=\"col-auto pb-3\">\r\n            <div className=\"row no-gutters admin-screen-title\">\r\n              Reviews & Comments\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              Add, edit or delete reviews and comments\r\n            </div>\r\n          </div>\r\n          <div className=\"col-auto py-3\">\r\n            <div className=\"row no-gutters cursor-pointer\">\r\n              <div\r\n                style={{ width: \"150px\" }}\r\n                onClick={() => setTab(0)}\r\n                className={`rounded-left col table-btn${\r\n                  tab === 0 ? \" table-btn-selected\" : \"\"\r\n                }`}\r\n              >\r\n                Reviews\r\n              </div>\r\n              <div\r\n                style={{ width: \"150px\" }}\r\n                onClick={() => setTab(1)}\r\n                className={`rounded-right col table-btn${\r\n                  tab === 1 ? \" table-btn-selected\" : \"\"\r\n                }`}\r\n              >\r\n                Comments\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        {tab === 0 ? (\r\n          <Reviews\r\n            setEditReviewSection={setEditReviewSection}\r\n            setEditReview={setEditReview}\r\n          ></Reviews>\r\n        ) : (\r\n          <Comments\r\n            setEditComment={setEditComment}\r\n            setEditCommentSection={setEditCommentSection}\r\n          ></Comments>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewsAndComments;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport { Ratings } from \"../../Data\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport { EditReviewForAdmin } from \"../../server/DatabaseApi\";\r\nimport Loader from \"../utility/Loader\";\r\n\r\nconst EditReview = ({ currentReview, publicUsers, getBack, ratings }) => {\r\n  const [review, setReview] = useState({});\r\n  const [user, setUser] = useState({ display_name: \"\", email: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    if (currentReview) {\r\n      setReview(currentReview);\r\n      setUser(publicUsers[currentReview.author]);\r\n    }\r\n  }, [currentReview]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const movies = Object.values(ratings).map((x) => x.movie_title);\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\" style={{ maxWidth: \"800px\" }}>\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">\r\n          Reviews & Comments\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          Add, edit and delete reviews and comments\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Display name</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"input-light w-100 px-3\"\r\n              value={user.display_name}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setUser((prev) =>\r\n                  Object.assign({}, prev, { display_name: e.target.value })\r\n                );\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Message</div>\r\n          <div className=\"col-60\">\r\n            <textarea\r\n              value={review.review ? review.review : \"\"}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setReview((prev) =>\r\n                  Object.assign({}, prev, { review: e.target.value })\r\n                );\r\n              }}\r\n              className=\"textarea-light w-100\"\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mb-4\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"60 mb-1\">Rating</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <Select\r\n            popoverClass=\"col-md-30 col-60\"\r\n            className=\"input-light px-3\"\r\n            btnName={\r\n              review.rating\r\n                ? Ratings.find((x) => x.name === review.rating).element\r\n                : \"Select\"\r\n            }\r\n            onSelect={(index) => {\r\n              setReview((prev) =>\r\n                Object.assign({}, prev, { rating: Ratings[index].name })\r\n              );\r\n            }}\r\n            items={Ratings.map((x) => x.element)}\r\n          ></Select>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mb-4\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"60 mb-1\">Report status</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <Select\r\n            popoverClass=\"col-md-30 col-60\"\r\n            className=\"input-light px-3\"\r\n            btnName={review.reported ? \"Reported\" : \"Not Reported\"}\r\n            onSelect={(index) => {\r\n              setReview((prev) =>\r\n                Object.assign({}, prev, {\r\n                  reported: index === 0 ? true : false,\r\n                })\r\n              );\r\n            }}\r\n            items={[\"Reported\", \"Not Reported\"]}\r\n          ></Select>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mb-4\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"60 mb-1\">Movie name</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <Select\r\n            popoverClass=\"col-md-30 col-60\"\r\n            className=\"input-light px-3\"\r\n            btnName={review.movie_title ? review.movie_title : \"Select\"}\r\n            onSelect={(index) => {\r\n              setReview((prev) =>\r\n                Object.assign({}, prev, {\r\n                  movie_title: movies[index],\r\n                })\r\n              );\r\n            }}\r\n            items={movies}\r\n          ></Select>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mt-5\">\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n            onClick={() => getBack()}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n            onClick={async () => {\r\n              setLoading(true);\r\n              let res = await EditReviewForAdmin(review, user);\r\n              setLoading(false);\r\n              if (res.error) {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Error\",\r\n                    message: res.error,\r\n                    type: \"failure\",\r\n                  },\r\n                });\r\n              } else {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Review updated\",\r\n                    message: \"Review was successfully updated\",\r\n                    type: \"success\",\r\n                  },\r\n                });\r\n                getBack();\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(EditReview);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport { EditCommentForAdmin } from \"../../server/DatabaseApi\";\r\nimport Loader from \"../utility/Loader\";\r\n\r\nconst EditComment = ({ currentComment, publicUsers, getBack }) => {\r\n  const [comment, setComment] = useState({});\r\n  const [user, setUser] = useState({ display_name: \"\", email: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentComment) {\r\n      setComment(currentComment);\r\n      setUser(publicUsers[currentComment.author]);\r\n    }\r\n  }, [currentComment]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\" style={{ maxWidth: \"800px\" }}>\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">\r\n          Reviews & Comments\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          Add, edit and delete reviews and comments\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Display name</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"input-light w-100 px-3\"\r\n              value={user.display_name}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setUser((prev) =>\r\n                  Object.assign({}, prev, { display_name: e.target.value })\r\n                );\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Comment</div>\r\n          <div className=\"col-60\">\r\n            <textarea\r\n              value={comment.comment}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setComment((prev) =>\r\n                  Object.assign({}, prev, { comment: e.target.value })\r\n                );\r\n              }}\r\n              className=\"textarea-light w-100\"\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mb-4\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"60 mb-1\">Report status</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <Select\r\n            popoverClass=\"col-md-30 col-60\"\r\n            className=\"input-light px-3\"\r\n            btnName={comment.reported ? \"Reported\" : \"Not Reported\"}\r\n            onSelect={(index) => {\r\n              setComment((prev) =>\r\n                Object.assign({}, prev, {\r\n                  reported: index === 0 ? true : false,\r\n                })\r\n              );\r\n            }}\r\n            items={[\"Reported\", \"Not Reported\"]}\r\n          ></Select>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mt-5\">\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n            onClick={() => getBack()}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n            onClick={async () => {\r\n              setLoading(true);\r\n              let res = await EditCommentForAdmin(comment, user);\r\n              setLoading(false);\r\n              if (res.error) {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Error\",\r\n                    message: res.error,\r\n                    type: \"failure\",\r\n                  },\r\n                });\r\n              } else {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Review updated\",\r\n                    message: \"Review was successfully updated\",\r\n                    type: \"success\",\r\n                  },\r\n                });\r\n                getBack();\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(EditComment);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport date from \"date-and-time\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetAnnouncements,\r\n  DeleteMultipleAnnouncements,\r\n} from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\n\r\nconst Announcements = ({\r\n  setEditAnnouncement,\r\n  setEditAnnouncementSection,\r\n  setAddNewAnouncementSection,\r\n  publicUsers,\r\n}) => {\r\n  const [action, setAction] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"User\");\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [typeFilter, setTypeFilter] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [mainFilter, setMainFilter] = useState({ key: \"\", value: \"\" });\r\n\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [announcements, setAnnouncements] = useState([]);\r\n  const [filteredAnnouncements, setFilteredAnnouncements] = useState([]);\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let res = await GetAnnouncements();\r\n      if (!res.error) {\r\n        setAnnouncements(\r\n          res.map((x) => Object.assign({}, x, { selected: false }))\r\n        );\r\n      }\r\n    }\r\n    getData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    let arr = [...announcements];\r\n    if (announcements.length) {\r\n      if (search) {\r\n        if (searchKey === \"User\") {\r\n          arr = arr.filter((x) =>\r\n            publicUsers[x.author].display_name\r\n              .toLowerCase()\r\n              .includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Description\") {\r\n          arr = arr.filter((x) =>\r\n            x.description.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        }\r\n      }\r\n\r\n      if (typeFilter) {\r\n        arr = arr.filter((x) => x.type === typeFilter);\r\n      }\r\n\r\n      if (mainFilter.key) {\r\n        arr = arr.filter((x) => x[mainFilter.key] === mainFilter.value);\r\n      }\r\n\r\n      setFilteredAnnouncements(arr);\r\n    }\r\n  }, [search, typeFilter, announcements, mainFilter]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //boundaries for slicing reviews array. (pagination)\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= filteredAnnouncements.length) {\r\n    boundaries[1] =\r\n      boundaries[1] - (boundaries[1] - filteredAnnouncements.length);\r\n  }\r\n\r\n  const statuses = [\"Published\", \"Drafted\", \"Expired\"];\r\n  const actions = [\"Delete\"];\r\n\r\n  const handleApply = async (all = false) => {\r\n    if (all) {\r\n      setTypeFilter(type);\r\n    }\r\n    if (action === \"Edit\") {\r\n      let selected = filteredAnnouncements.filter((x) => x.selected);\r\n      if (selected.length) {\r\n        setEditAnnouncement(selected[0]);\r\n        setEditAnnouncementSection();\r\n      }\r\n    } else if (action === \"Delete\") {\r\n      let selected = filteredAnnouncements.filter((x) => x.selected);\r\n      if (selected.length) {\r\n        let res = await DeleteMultipleAnnouncements(selected.map((x) => x._id));\r\n        if (res.error) {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Error\",\r\n              message: res.error,\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Announcements were deleted\",\r\n              message: \"Announcements were successfully deleted\",\r\n              type: \"success\",\r\n            },\r\n          });\r\n        }\r\n        setRefresh(!refresh);\r\n      }\r\n    }\r\n  };\r\n\r\n  const types = [\"Information\", \"Error\", \"Warning\"];\r\n\r\n  return (\r\n    <div className=\"row no-gutters admin-screen\">\r\n      <div className=\"col-60 border-bottom\">\r\n        <div className=\"row no-gutters justify-content-between pb-3 align-items-end\">\r\n          <div className=\"col-auto\">\r\n            <div className=\"row no-gutters admin-screen-title\">\r\n              Announcements\r\n            </div>\r\n            <div className=\"row no-gutters\">Create and post announcements</div>\r\n          </div>\r\n          <div\r\n            className=\"col-auto btn-custom btn-custom-primary btn-natural\"\r\n            onClick={() => setAddNewAnouncementSection()}\r\n          >\r\n            Add New\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-60 py-5\">\r\n            <div className=\"row no-gutters h6 mb-3\">\r\n              <div\r\n                onClick={() => {\r\n                  setMainFilter({ key: \"\", value: \"\" });\r\n                  setType(\"\");\r\n                  setTypeFilter(\"\");\r\n                }}\r\n                className={`cursor-pointer col-auto ${\r\n                  !typeFilter && !mainFilter.key ? \"text-primary\" : \"text-dark\"\r\n                }`}\r\n              >\r\n                All ({announcements.length})\r\n              </div>\r\n              {statuses.map((x, i) => (\r\n                <React.Fragment key={`status-${i}`}>\r\n                  <div className=\"col-auto px-2 text-muted\">|</div>\r\n                  <div\r\n                    onClick={() =>\r\n                      setMainFilter((prev) =>\r\n                        Object.assign({}, prev, {\r\n                          key: \"status\",\r\n                          value: x,\r\n                        })\r\n                      )\r\n                    }\r\n                    className={`cursor-pointer col-auto ${\r\n                      mainFilter.key === \"status\" && mainFilter.value === x\r\n                        ? \"text-primary\"\r\n                        : \"text-dark\"\r\n                    }`}\r\n                  >\r\n                    {x} ({announcements.filter((y) => y.status === x).length})\r\n                  </div>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-between\">\r\n              <div className=\"col-sm-auto col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) => setAction(actions[index])}\r\n                        items={actions}\r\n                        btnName={action ? action : \"Select Action\"}\r\n                        className=\"input-light px-3 col-auto \"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) => setType(types[index])}\r\n                        items={types}\r\n                        btnName={type ? type : \"Select Type\"}\r\n                        className=\"input-light px-3 col-auto \"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    onClick={() => handleApply(true)}\r\n                    className=\"btn-custom btn-custom-primary col-60 col-sm-auto mb-3 mr-3 btn-xsmall\"\r\n                  >\r\n                    Apply\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 d-block d-sm-none\">\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <Select\r\n                    popoverClass=\"w-100\"\r\n                    onSelect={(index) =>\r\n                      setSearchKey([\"User\", \"Description\"][index])\r\n                    }\r\n                    className=\"input-light col-60\"\r\n                    items={[\"User\", \"Description\"]}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <div className=\"col-60 position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      className=\"input-light w-100 pr-5 pl-3\"\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-auto mb-3 d-none d-sm-block\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    onSelect={(index) =>\r\n                      setSearchKey([\"User\", \"Description\"][index])\r\n                    }\r\n                    className=\"table-input-prepend-select col-auto\"\r\n                    items={[\"User\", \"Description\"]}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                  <div className=\"col position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                      className=\"table-input pr-5 pl-3\"\r\n                      style={{ minWidth: \"300px\" }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <Swipeable\r\n                style={{ minWidth: \"100%\" }}\r\n                onSwipedLeft={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn + 1 < 4\r\n                      ? lastVisibleColumn + 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n                onSwipedRight={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn - 1 >= 0\r\n                      ? lastVisibleColumn - 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n              >\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table bg-white border\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"text-center\">\r\n                          <Checkbox\r\n                            color={\"primary\"}\r\n                            checked={\r\n                              filteredAnnouncements\r\n                                .slice(boundaries[0], boundaries[1])\r\n                                .filter((x) => x.selected).length ===\r\n                              boundaries[1] - boundaries[0]\r\n                            }\r\n                            onChange={(e) => {\r\n                              setFilteredAnnouncements((prev) => {\r\n                                let arr = [...prev];\r\n                                for (\r\n                                  let i = boundaries[0];\r\n                                  i < boundaries[1];\r\n                                  i++\r\n                                ) {\r\n                                  arr[i].selected = e.target.checked;\r\n                                }\r\n                                return arr;\r\n                              });\r\n                            }}\r\n                          ></Checkbox>\r\n                        </th>\r\n                        <th className=\"table-header text-truncate text-left\">\r\n                          <div className=\"d-none d-lg-block\">Posted By</div>\r\n                          <div className=\"d-block d-lg-none\">By</div>\r\n                        </th>\r\n                        <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                          {\r\n                            [\"Type\", \"Description\", \"Duration\", \"Status\"][\r\n                              lastVisibleColumn\r\n                            ]\r\n                          }\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Type</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Description</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Duration</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Status</div>\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filteredAnnouncements.length ? (\r\n                        filteredAnnouncements\r\n                          .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                          .map((x, i) => (\r\n                            <tr\r\n                              className=\"font-weight-600 bg-light\"\r\n                              key={`shortlist-item-${i}`}\r\n                            >\r\n                              <td className=\"text-center\">\r\n                                <Checkbox\r\n                                  color={\"primary\"}\r\n                                  checked={x.selected}\r\n                                  onChange={(e) => {\r\n                                    setFilteredAnnouncements((prev) => {\r\n                                      let arr = [...prev];\r\n                                      arr[(page - 1) * 5 + i].selected =\r\n                                        e.target.checked;\r\n                                      return arr;\r\n                                    });\r\n                                  }}\r\n                                ></Checkbox>\r\n                              </td>\r\n                              <td>\r\n                                {Object.values(publicUsers).length ? (\r\n                                  <React.Fragment>\r\n                                    <div>\r\n                                      <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                        <div className=\"d-inline-block mr-2\">\r\n                                          <div\r\n                                            className=\"square-50 rounded-circle bg-image\"\r\n                                            style={{\r\n                                              backgroundImage: `url(${\r\n                                                publicUsers[x.author].photo\r\n                                              })`,\r\n                                            }}\r\n                                          ></div>\r\n                                        </div>\r\n                                        <div className=\"d-none d-md-inline-block align-top\">\r\n                                          <div className=\"text-primary\">\r\n                                            {publicUsers[x.author].display_name}\r\n                                          </div>\r\n                                          <div className=\"mb-3\">\r\n                                            {publicUsers[x.author].email}\r\n                                          </div>\r\n                                          <div className=\"d-flex\">\r\n                                            <div\r\n                                              className=\"text-primary underline-link\"\r\n                                              onClick={() => {\r\n                                                setEditAnnouncement(x);\r\n                                                setEditAnnouncementSection();\r\n                                              }}\r\n                                            >\r\n                                              Edit\r\n                                            </div>\r\n                                            <div className=\"px-2\">|</div>\r\n                                            <div\r\n                                              className=\"text-danger underline-link\"\r\n                                              onClick={async () => {\r\n                                                let res = await DeleteMultipleAnnouncements(\r\n                                                  [x._id]\r\n                                                );\r\n                                                if (res.error) {\r\n                                                  store.dispatch({\r\n                                                    type: \"SET_NOTIFICATION\",\r\n                                                    notification: {\r\n                                                      title: \"Error\",\r\n                                                      message: res.error,\r\n                                                      type: \"failure\",\r\n                                                    },\r\n                                                  });\r\n                                                } else {\r\n                                                  store.dispatch({\r\n                                                    type: \"SET_NOTIFICATION\",\r\n                                                    notification: {\r\n                                                      title:\r\n                                                        \"Announcement was deleted\",\r\n                                                      message:\r\n                                                        \"Announcement was successfully deleted\",\r\n                                                      type: \"success\",\r\n                                                    },\r\n                                                  });\r\n                                                }\r\n                                                setRefresh(!refresh);\r\n                                              }}\r\n                                            >\r\n                                              Delete\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </React.Fragment>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  x.type === \"Warning\"\r\n                                    ? \"text-warning\"\r\n                                    : x.type === \"Information\"\r\n                                    ? \"text-primary\"\r\n                                    : x.type === \"Error\"\r\n                                    ? \"text-danger\"\r\n                                    : \"\"\r\n                                }${\r\n                                  lastVisibleColumn === 0\r\n                                    ? \" d-table-cell\"\r\n                                    : \" d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div>{x.type}</div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 1\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div\r\n                                  style={{ minWidth: \"150px\" }}\r\n                                  className=\"text-clamp-4 cursor-pointer user-select-none\"\r\n                                  onClick={(e) => {\r\n                                    let target = e.currentTarget;\r\n                                    if (\r\n                                      target.classList.contains(\"text-clamp-4\")\r\n                                    ) {\r\n                                      target.classList.remove(\"text-clamp-4\");\r\n                                    } else {\r\n                                      target.classList.add(\"text-clamp-4\");\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  {x.description}\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 2\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                  <div className=\"d-inline-block mr-2\">\r\n                                    <div>From: </div>\r\n                                    <div>To: </div>\r\n                                  </div>\r\n                                  <div className=\"d-inline-block\">\r\n                                    <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                      {date.format(\r\n                                        new Date(x.start_date),\r\n                                        \"DD/MM/YYYY @ hh:mm A\"\r\n                                      )}\r\n                                      <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                        {date.format(\r\n                                          new Date(x.end_date),\r\n                                          \"DD/MM/YYYY @ hh:mm A\"\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 3\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.status}\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan={6} className=\" text-center py-5\">\r\n                            0 results found\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                    {/* <tfoot>\r\n                      <tr>\r\n                        <th className=\"text-center\">\r\n                          <Checkbox\r\n                            color={\"primary\"}\r\n                            checked={\r\n                              filteredAnnouncements\r\n                                .slice(boundaries[0], boundaries[1])\r\n                                .filter((x) => x.selected).length ===\r\n                              boundaries[1] - boundaries[0]\r\n                            }\r\n                            onChange={(e) => {\r\n                              setFilteredAnnouncements((prev) => {\r\n                                let arr = [...prev];\r\n                                for (\r\n                                  let i = boundaries[0];\r\n                                  i < boundaries[1];\r\n                                  i++\r\n                                ) {\r\n                                  arr[i].selected = e.target.checked;\r\n                                }\r\n                                return arr;\r\n                              });\r\n                            }}\r\n                          ></Checkbox>\r\n                        </th>\r\n                        <th className=\"table-footer text-truncate text-left\">\r\n                          <div className=\"d-none d-lg-block\">Posted By</div>\r\n                          <div className=\"d-block d-lg-none\">By</div>\r\n                        </th>\r\n                        <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                          {\r\n                            [\"Type\", \"Description\", \"Duration\", \"Status\"][\r\n                              lastVisibleColumn\r\n                            ]\r\n                          }\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                          <div>Type</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                          <div>Description</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                          <div>Duration</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                          <div>Status</div>\r\n                        </th>\r\n                      </tr>\r\n                    </tfoot> */}\r\n                  </table>\r\n                </div>\r\n              </Swipeable>\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-center justify-content-sm-end\">\r\n              <div className=\"col-auto\">\r\n                <Pagination\r\n                  count={Math.ceil(filteredAnnouncements.length / 5)}\r\n                  current={page}\r\n                  setCurrent={setPage}\r\n                ></Pagination>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Announcements);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BsCalendar, BsClock } from \"react-icons/bs\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport date from \"date-and-time\";\r\nimport Loader from \"../utility/Loader\";\r\nimport store from \"../../store/store\";\r\nimport { EditAnnouncement as Edit } from \"../../server/DatabaseApi\";\r\n\r\nconst EditAnnouncement = ({ currentAnnouncement, getBack }) => {\r\n  const [announcement, setAnnouncement] = useState({\r\n    description: \"\",\r\n    type: \"\",\r\n    start_date: Date.now(),\r\n    end_date: Date.now(),\r\n    status: \"\",\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentAnnouncement) {\r\n      setAnnouncement(currentAnnouncement);\r\n    }\r\n  }, [currentAnnouncement]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const types = [\"Information\", \"Warning\", \"Error\"];\r\n  const statuses = [\"Published\", \"Drafted\", \"Expired\"];\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\">\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">Announcements</div>\r\n        <div className=\"row no-gutters\">Edit existing announcement</div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Type</div>\r\n          <div className=\"col-xl-40 col-md-50 col-60 pr-sm-3\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                popoverClass=\"col-sm-30 col-60\"\r\n                onSelect={(index) =>\r\n                  setAnnouncement((prev) =>\r\n                    Object.assign({}, prev, { type: types[index] })\r\n                  )\r\n                }\r\n                className=\"w-100 input-light px-3\"\r\n                items={types}\r\n                btnName={announcement.type ? announcement.type : \"Select\"}\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Description</div>\r\n          <div className=\"col-60\">\r\n            <textarea\r\n              value={announcement.description ? announcement.description : \"\"}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setAnnouncement((prev) =>\r\n                  Object.assign({}, prev, { description: e.target.value })\r\n                );\r\n              }}\r\n              className=\"textarea-light w-100\"\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div\r\n            className={`col-60 ${\r\n              announcement.description.split(\" \").length <= 499\r\n                ? \"text-muted\"\r\n                : \"text-danger\"\r\n            }`}\r\n          >\r\n            {announcement.description\r\n              ? 500 - announcement.description.split(\" \").length\r\n              : 500}{\" \"}\r\n            words left\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 pr-sm-3 mb-4\">\r\n                <div className=\"row no-gutters\">Start Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(announcement.start_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(announcement.start_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, { start_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(announcement.start_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              start_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(announcement.start_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters\">End Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(announcement.end_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(announcement.end_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, { end_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(announcement.end_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              end_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(announcement.end_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Type</div>\r\n          <div className=\"col-xl-40 col-md-50 col-60 pr-sm-3\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                popoverClass=\"col-sm-30 col-60\"\r\n                onSelect={(index) =>\r\n                  setAnnouncement((prev) =>\r\n                    Object.assign({}, prev, { status: statuses[index] })\r\n                  )\r\n                }\r\n                className=\"w-100 input-light px-3\"\r\n                items={statuses}\r\n                btnName={announcement.status ? announcement.status : \"Select\"}\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-60 mt-5\">\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n            onClick={() => getBack()}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n            onClick={async () => {\r\n              setLoading(true);\r\n              let res = await Edit(announcement);\r\n              setLoading(false);\r\n              if (res.error) {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Error\",\r\n                    message: res.error,\r\n                    type: \"failure\",\r\n                  },\r\n                });\r\n              } else {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Announcement updated\",\r\n                    message: \"Announcement was successfully updated\",\r\n                    type: \"success\",\r\n                  },\r\n                });\r\n                getBack();\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditAnnouncement;\r\n","import React, { useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BsCalendar, BsClock } from \"react-icons/bs\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport date from \"date-and-time\";\r\nimport { CreateAnnouncement } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../utility/Loader\";\r\n\r\nconst AddNewAnnouncement = ({ user, getBack }) => {\r\n  const [announcement, setAnnouncement] = useState({\r\n    description: \"\",\r\n    type: \"\",\r\n    start_date: Date.now(),\r\n    end_date: Date.now(),\r\n    status: \"Published\",\r\n  });\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const types = [\"Information\", \"Warning\", \"Error\"];\r\n  const statuses = [\"Published\", \"Drafted\", \"Deleted\"];\r\n\r\n  const validations = [\r\n    { valid: announcement.description, error: \"Description is required\" },\r\n    { valid: announcement.type, error: \"Type is required\" },\r\n    {\r\n      valid: announcement.start_date < announcement.end_date,\r\n      error: \"Start date must be before end date\",\r\n    },\r\n    {\r\n      valid: announcement.start_date !== announcement.end_date,\r\n      error: \"Announcement duration is 0\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\">\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">Announcements</div>\r\n        <div className=\"row no-gutters\">\r\n          Creat a brand new announcement and add to this site\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Type</div>\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                popoverClass=\"col-sm-30 col-60\"\r\n                onSelect={(index) =>\r\n                  setAnnouncement((prev) =>\r\n                    Object.assign({}, prev, { type: types[index] })\r\n                  )\r\n                }\r\n                className=\"w-100 input-light px-3\"\r\n                items={types}\r\n                btnName={announcement.type ? announcement.type : \"Select\"}\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Description</div>\r\n          <div className=\"col-60\">\r\n            <textarea\r\n              value={announcement.description ? announcement.description : \"\"}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setAnnouncement((prev) =>\r\n                  Object.assign({}, prev, { description: e.target.value })\r\n                );\r\n              }}\r\n              className=\"textarea-light w-100\"\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div\r\n            className={`col-60 ${\r\n              announcement.description.split(\" \").length <= 499\r\n                ? \"text-muted\"\r\n                : \"text-danger\"\r\n            }`}\r\n          >\r\n            {announcement.description\r\n              ? 500 - announcement.description.split(\" \").length\r\n              : 500}{\" \"}\r\n            words left\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 pr-sm-3 mb-4\">\r\n                <div className=\"row no-gutters\">Start Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(announcement.start_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(announcement.start_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, { start_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(announcement.start_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              start_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(announcement.start_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters\">End Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(announcement.end_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(announcement.end_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, { end_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(announcement.end_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setAnnouncement((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              end_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(announcement.end_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Status</div>\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                popoverClass=\"col-sm-30 col-60\"\r\n                onSelect={(index) =>\r\n                  setAnnouncement((prev) =>\r\n                    Object.assign({}, prev, { status: statuses[index] })\r\n                  )\r\n                }\r\n                className=\"w-100 input-light px-3\"\r\n                items={statuses}\r\n                btnName={announcement.status ? announcement.status : \"Select\"}\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-60 mt-3\">\r\n        <div\r\n          style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n          className=\"row no-gutters align-items-center text-danger\"\r\n        >\r\n          {problem}\r\n        </div>\r\n        <div className=\"row no-gutters mt-2\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n            onClick={() => getBack()}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n            onClick={async () => {\r\n              if (user._id) {\r\n                let invalid = validations.filter((x) => !x.valid);\r\n                if (invalid.length) {\r\n                  setProblem(invalid[0].error);\r\n                } else {\r\n                  setLoading(true);\r\n                  let res = await CreateAnnouncement(\r\n                    Object.assign({}, announcement, { author: user._id })\r\n                  );\r\n                  setLoading(false);\r\n                  if (res.error) {\r\n                    store.dispatch({\r\n                      type: \"SET_NOTIFICATION\",\r\n                      notification: {\r\n                        title: \"Error\",\r\n                        message: res.error,\r\n                        type: \"failure\",\r\n                      },\r\n                    });\r\n                  } else {\r\n                    store.dispatch({\r\n                      type: \"SET_NOTIFICATION\",\r\n                      notification: {\r\n                        title: \"Announcement created\",\r\n                        message: \"You successfully created announcement\",\r\n                        type: \"success\",\r\n                      },\r\n                    });\r\n                    getBack();\r\n                  }\r\n                }\r\n              } else {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Login required\",\r\n                    message: \"You need to login to create announcements\",\r\n                    type: \"failure\",\r\n                  },\r\n                });\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(AddNewAnnouncement);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport date from \"date-and-time\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport {\r\n  GetPromotions,\r\n  DeleteMultiplePromotions,\r\n} from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\nimport { connect } from \"react-redux\";\r\nimport history from \"../../History\";\r\n\r\nconst Promotions = ({\r\n  setEditPromotion,\r\n  setAddNewPromotionSection,\r\n  setEditPromotionSection,\r\n  ratings,\r\n}) => {\r\n  const [action, setAction] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"Description\");\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [typeFilter, setTypeFilter] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [mainFilter, setMainFilter] = useState({ key: \"\", value: \"\" });\r\n\r\n  const [promotions, setPromotions] = useState([]);\r\n  const [filteredPromotions, setFilteredPromotions] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let data = await GetPromotions();\r\n      if (!data.error) {\r\n        setPromotions(\r\n          data.map((x) => Object.assign({}, x, { selected: false }))\r\n        );\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    let arr = [...promotions];\r\n    if (promotions.length) {\r\n      if (search) {\r\n        if (searchKey === \"Description\") {\r\n          arr = arr.filter((x) =>\r\n            x.description.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Review\") {\r\n          arr = arr.filter(\r\n            (x) =>\r\n              x.content_type === \"Review\" &&\r\n              x.content.review.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        }\r\n      }\r\n\r\n      if (typeFilter) {\r\n        arr = arr.filter((x) =>\r\n          x.content_type.match(new RegExp(typeFilter, \"i\"))\r\n        );\r\n      }\r\n\r\n      if (mainFilter.key) {\r\n        arr = arr.filter((x) => x[mainFilter.key] === mainFilter.value);\r\n      }\r\n\r\n      setFilteredPromotions(arr);\r\n    }\r\n  }, [search, typeFilter, promotions, mainFilter]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //boundaries for slicing reviews array. (pagination)\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= filteredPromotions.length) {\r\n    boundaries[1] = boundaries[1] - (boundaries[1] - filteredPromotions.length);\r\n  }\r\n\r\n  const columns = [\"Review\", \"Rating\", \"Duration\", \"Status\"];\r\n  const searchOptions = [\"Description\", \"Review\"];\r\n\r\n  const publishStatuses = [\"Published\", \"Drafted\", \"Deleted\"];\r\n  return (\r\n    <div className=\"row no-gutters admin-screen\">\r\n      <div className=\"col-60 border-bottom\">\r\n        <div className=\"row no-gutters justify-content-between pb-3 align-items-end\">\r\n          <div className=\"col-auto\">\r\n            <div className=\"row no-gutters admin-screen-title\">\r\n              Promotions List\r\n            </div>\r\n            <div className=\"row no-gutters\">Edit, add and delete promtions</div>\r\n          </div>\r\n          <div\r\n            className=\"col-auto btn-custom btn-custom-primary btn-natural\"\r\n            onClick={() => setAddNewPromotionSection()}\r\n          >\r\n            Add New\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-60 py-5\">\r\n            <div className=\"row no-gutters h6 mb-3\">\r\n              <div\r\n                className={`cursor-pointer col-auto ${\r\n                  mainFilter.key === \"\" && !typeFilter\r\n                    ? \"text-primary\"\r\n                    : \"text-dark\"\r\n                }`}\r\n                onClick={() => {\r\n                  setTypeFilter(\"\");\r\n                  setType(\"\");\r\n                  setMainFilter({ key: \"\", value: \"\" });\r\n                }}\r\n              >\r\n                All ({promotions.length})\r\n              </div>\r\n              {publishStatuses.map((x, i) => (\r\n                <React.Fragment key={`status-${i}`}>\r\n                  <div className=\"col-auto px-2 text-muted\">|</div>\r\n                  <div\r\n                    onClick={() =>\r\n                      setMainFilter((prev) =>\r\n                        Object.assign({}, prev, {\r\n                          key: \"publish_status\",\r\n                          value: x,\r\n                        })\r\n                      )\r\n                    }\r\n                    className={`cursor-pointer col-auto ${\r\n                      mainFilter.key === \"publish_status\" &&\r\n                      mainFilter.value === x\r\n                        ? \"text-primary\"\r\n                        : \"text-dark\"\r\n                    }`}\r\n                  >\r\n                    {x} (\r\n                    {promotions.filter((y) => y.publish_status === x).length})\r\n                  </div>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-between\">\r\n              <div className=\"col-sm-auto col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) => setAction([\"Delete\"][index])}\r\n                        items={[\"Delete\"]}\r\n                        btnName={action ? action : \"Select Action\"}\r\n                        className=\"input-light px-3 col-auto\"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) =>\r\n                          setType([\"Review\", \"Comment\"][index])\r\n                        }\r\n                        items={[\"Review\", \"Comment\"]}\r\n                        btnName={type ? type : \"Select Type\"}\r\n                        className=\"input-light px-3 col-auto\"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    onClick={() => {\r\n                      if (action === \"Edit\") {\r\n                        let selected = filteredPromotions.filter(\r\n                          (x) => x.selected\r\n                        );\r\n                        if (selected.length) {\r\n                          setEditPromotion(selected[0]);\r\n                          setEditPromotionSection();\r\n                        }\r\n                      } else if (action === \"Delete\") {\r\n                        //delete review\r\n                      } else {\r\n                        setTypeFilter(type);\r\n                      }\r\n                    }}\r\n                    className=\"btn-custom btn-custom-primary col-60 col-sm-auto mb-3 mr-3 btn-xsmall\"\r\n                  >\r\n                    Apply\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 d-block d-sm-none\">\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <Select\r\n                    popoverClass=\"w-100\"\r\n                    onSelect={(index) => setSearchKey(searchOptions[index])}\r\n                    className=\"input-light col-60\"\r\n                    items={searchOptions}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <div className=\"col-60 position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      className=\"input-light w-100 pr-5 pl-3\"\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-auto mb-3 d-none d-sm-block\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    onSelect={(index) => setSearchKey(searchOptions[index])}\r\n                    className=\"table-input-prepend-select col-auto\"\r\n                    items={searchOptions}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                  <div className=\"col position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                      className=\"table-input pr-5 pl-3\"\r\n                      style={{ minWidth: \"300px\" }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <Swipeable\r\n                style={{ minWidth: \"100%\" }}\r\n                onSwipedLeft={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn + 1 < 4\r\n                      ? lastVisibleColumn + 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n                onSwipedRight={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn - 1 >= 0\r\n                      ? lastVisibleColumn - 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n              >\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table bg-white border\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"text-center\">\r\n                          <Checkbox\r\n                            color={\"primary\"}\r\n                            checked={\r\n                              filteredPromotions\r\n                                .slice(boundaries[0], boundaries[1])\r\n                                .filter((x) => x.selected).length ===\r\n                              boundaries[1] - boundaries[0]\r\n                            }\r\n                            onChange={(e) => {\r\n                              setFilteredPromotions((prev) => {\r\n                                let arr = [...prev];\r\n                                for (\r\n                                  let i = boundaries[0];\r\n                                  i < boundaries[1];\r\n                                  i++\r\n                                ) {\r\n                                  arr[i].selected = e.target.checked;\r\n                                }\r\n                                return arr;\r\n                              });\r\n                            }}\r\n                          ></Checkbox>\r\n                        </th>\r\n                        <th className=\"table-header text-truncate text-left\">\r\n                          Description\r\n                        </th>\r\n                        <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                          {columns[lastVisibleColumn]}\r\n                        </th>\r\n                        {columns.map((c, j) => (\r\n                          <th\r\n                            className=\"d-none d-xl-table-cell table-header text-truncate\"\r\n                            key={`column-${j}`}\r\n                          >\r\n                            <div>{c}</div>\r\n                          </th>\r\n                        ))}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filteredPromotions.length ? (\r\n                        filteredPromotions\r\n                          .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                          .map((x, i) => (\r\n                            <tr\r\n                              className=\"font-weight-600 bg-light\"\r\n                              key={`shortlist-item-${i}`}\r\n                            >\r\n                              <td className=\"text-center\">\r\n                                <Checkbox\r\n                                  color={\"primary\"}\r\n                                  checked={x.selected}\r\n                                  onChange={(e) => {\r\n                                    setFilteredPromotions((prev) => {\r\n                                      let arr = [...prev];\r\n                                      arr[(page - 1) * 5 + i].selected =\r\n                                        e.target.checked;\r\n                                      return arr;\r\n                                    });\r\n                                  }}\r\n                                ></Checkbox>\r\n                              </td>\r\n                              <td style={{ whiteSpace: \"nowrap\" }}>\r\n                                <div\r\n                                  className=\"mb-2\"\r\n                                  style={{ minWidth: \"150px\" }}\r\n                                >\r\n                                  {x.description}\r\n                                </div>\r\n                                <div className=\"d-flex\">\r\n                                  <div\r\n                                    className=\"text-primary underline-link\"\r\n                                    onClick={() => {\r\n                                      setEditPromotion(x);\r\n                                      setEditPromotionSection();\r\n                                    }}\r\n                                  >\r\n                                    Edit\r\n                                  </div>\r\n                                  <div className=\"px-2\">|</div>\r\n                                  <div\r\n                                    className=\"text-danger underline-link\"\r\n                                    onClick={async () => {\r\n                                      let res = await DeleteMultiplePromotions(\r\n                                        [x._id],\r\n                                        { status: \"Deleted\" }\r\n                                      );\r\n                                      if (res.error) {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Error\",\r\n                                            message: res.error,\r\n                                            type: \"failure\",\r\n                                          },\r\n                                        });\r\n                                      } else {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Promotion was deleted\",\r\n                                            message:\r\n                                              \"Promotion was successfully deleted\",\r\n                                            type: \"success\",\r\n                                          },\r\n                                        });\r\n                                      }\r\n                                      setRefresh(!refresh);\r\n                                    }}\r\n                                  >\r\n                                    Delete\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 0\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.content_type === \"Review\" ? (\r\n                                  <div style={{ minWidth: \"150px\" }}>\r\n                                    <div\r\n                                      className=\"cursor-pointer user-select-none btn-link\"\r\n                                      onClick={(e) => {\r\n                                        history.push(\r\n                                          `/movie/${x.movie_id}/${x.content_id}`\r\n                                        );\r\n                                      }}\r\n                                    >\r\n                                      {x.content.review}\r\n                                    </div>\r\n                                  </div>\r\n                                ) : (\r\n                                  <div\r\n                                    className=\"text-clamp-4 cursor-pointer user-select-none\"\r\n                                    onClick={(e) => {\r\n                                      let target = e.currentTarget;\r\n                                      if (\r\n                                        target.classList.contains(\r\n                                          \"text-clamp-4\"\r\n                                        )\r\n                                      ) {\r\n                                        target.classList.remove(\"text-clamp-4\");\r\n                                      } else {\r\n                                        target.classList.add(\"text-clamp-4\");\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    {x.content.comment}\r\n                                  </div>\r\n                                )}\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 1\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.content.rating ? (\r\n                                  <div style={{ marginBottom: \"-6px\" }}>\r\n                                    <Emoji\r\n                                      emoji={\r\n                                        x.content.rating === \"excellent_rate\"\r\n                                          ? \"fire\"\r\n                                          : x.content.rating === \"good_rate\"\r\n                                          ? \"heart\"\r\n                                          : x.content.rating === \"ok_rate\"\r\n                                          ? \"heavy_division_sign\"\r\n                                          : \"shit\"\r\n                                      }\r\n                                      set=\"facebook\"\r\n                                      size={24}\r\n                                    />\r\n                                  </div>\r\n                                ) : (\r\n                                  \"-\"\r\n                                )}\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 2\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                  <div className=\"d-inline-block mr-2\">\r\n                                    <div>From: </div>\r\n                                    <div>To: </div>\r\n                                  </div>\r\n                                  <div className=\"d-inline-block\">\r\n                                    <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                      {date.format(\r\n                                        new Date(x.start_date),\r\n                                        \"DD/MM/YYYY @ hh:mm A\"\r\n                                      )}\r\n                                      <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                        {date.format(\r\n                                          new Date(x.end_date),\r\n                                          \"DD/MM/YYYY @ hh:mm A\"\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  x.status === \"Published\"\r\n                                    ? \"text-green\"\r\n                                    : x.status === \"Drafted\"\r\n                                    ? \"text-orange\"\r\n                                    : \"text-danger\"\r\n                                } ${\r\n                                  lastVisibleColumn === 3\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.status === \"Published\"\r\n                                  ? \"Active\"\r\n                                  : x.status === \"Drafted\"\r\n                                  ? \"Inactive\"\r\n                                  : x.status}\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan={6} className=\" text-center py-5\">\r\n                            0 results found\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                    {/* <tfoot>\r\n                      <tr>\r\n                        <th className=\"text-center\">\r\n                          <Checkbox\r\n                            color={\"primary\"}\r\n                            checked={\r\n                              filteredPromotions\r\n                                .slice(boundaries[0], boundaries[1])\r\n                                .filter((x) => x.selected).length ===\r\n                              boundaries[1] - boundaries[0]\r\n                            }\r\n                            onChange={(e) => {\r\n                              setFilteredPromotions((prev) => {\r\n                                let arr = [...prev];\r\n                                for (\r\n                                  let i = boundaries[0];\r\n                                  i < boundaries[1];\r\n                                  i++\r\n                                ) {\r\n                                  arr[i].selected = e.target.checked;\r\n                                }\r\n                                return arr;\r\n                              });\r\n                            }}\r\n                          ></Checkbox>\r\n                        </th>\r\n                        <th className=\"table-footer text-truncate text-left\">\r\n                          Title\r\n                        </th>\r\n                        <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                          {columns[lastVisibleColumn]}\r\n                        </th>\r\n                        {columns.map((c, j) => (\r\n                          <th\r\n                            className=\"d-none d-xl-table-cell table-header text-truncate\"\r\n                            key={`footer-column-${j}`}\r\n                          >\r\n                            <div>{c}</div>\r\n                          </th>\r\n                        ))}\r\n                      </tr>\r\n                    </tfoot> */}\r\n                  </table>\r\n                </div>\r\n              </Swipeable>\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-center justify-content-sm-end\">\r\n              <div className=\"col-auto\">\r\n                <Pagination\r\n                  count={Math.ceil(filteredPromotions.length / 5)}\r\n                  current={page}\r\n                  setCurrent={setPage}\r\n                ></Pagination>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Promotions);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BsCalendar, BsClock } from \"react-icons/bs\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport date from \"date-and-time\";\r\nimport { Ratings } from \"../../Data\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { EditPromotion as Edit } from \"../../server/DatabaseApi\";\r\n\r\nconst EditPromotion = ({ currentPromotion, getBack }) => {\r\n  const [promotion, setPromotion] = useState({\r\n    review: \"\",\r\n    comment: \"\",\r\n    review_id: 1,\r\n    comment_id: 1,\r\n    content_type: \"\",\r\n    publish_status: \"\",\r\n    active_status: \"\",\r\n    start_date: Date.now(),\r\n    end_date: Date.now(),\r\n    movie_title: \"\",\r\n    movie_id: \"\",\r\n    content: {},\r\n    title: \"\",\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setPromotion((prev) => Object.assign({}, prev, currentPromotion));\r\n  }, [currentPromotion]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const publishStatuses = [\"Published\", \"Drafted\", \"Deleted\"];\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\">\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">Edit Promotions</div>\r\n        <div className=\"row no-gutters\">Edit existing promotion</div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        {/* <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Type</div>\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <Select\r\n                popoverClass=\"col-sm-30 col-60 pr-sm-3\"\r\n                onSelect={(index) =>\r\n                  setPromotion((prev) =>\r\n                    Object.assign({}, prev, { content_type: types[index] })\r\n                  )\r\n                }\r\n                className=\"w-100 input-light px-3\"\r\n                items={types}\r\n                btnName={\r\n                  promotion.content_type ? promotion.content_type : \"Select\"\r\n                }\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters mb-1\">Description</div>\r\n            <div className=\"row no-gutters\">\r\n              <textarea\r\n                value={promotion.description ? promotion.description : \"\"}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setPromotion((prev) =>\r\n                    Object.assign({}, prev, { description: e.target.value })\r\n                  );\r\n                }}\r\n                className=\"textarea-light w-100\"\r\n                style={{ height: \"150px\" }}\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-xl-40 col-md-50 col-60 mb-1\">\r\n            {promotion.content_type}\r\n          </div>\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <textarea\r\n              value={\r\n                promotion.content\r\n                  ? promotion.content_type === \"Review\"\r\n                    ? promotion.content.review\r\n                    : promotion.content.comment\r\n                  : \"\"\r\n              }\r\n              onChange={(e) => {\r\n                e.persist();\r\n                let text = e.target.value;\r\n                if (text.split(\" \").length <= 500) {\r\n                  if (promotion.content_type === \"Review\") {\r\n                    let newContent = { ...promotion.content };\r\n                    newContent.review = text;\r\n                    setPromotion((prev) =>\r\n                      Object.assign({}, prev, { content: newContent })\r\n                    );\r\n                  } else {\r\n                    let newContent = { ...promotion.content };\r\n                    newContent.comment = text;\r\n                    setPromotion((prev) =>\r\n                      Object.assign({}, prev, { content: newContent })\r\n                    );\r\n                  }\r\n                }\r\n              }}\r\n              className=\"textarea-light w-100\"\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div\r\n            className={`col-60 ${\r\n              promotion.content_type\r\n                ? promotion.content_type === \"Review\"\r\n                  ? promotion.content.review.split(\" \").length <= 499\r\n                    ? \"text-muted\"\r\n                    : \"text-danger\"\r\n                  : promotion.content.comment.split(\" \").length <= 499\r\n                  ? \"text-muted\"\r\n                  : \"text-danger\"\r\n                : \"\"\r\n            }`}\r\n          >\r\n            {promotion.content.review\r\n              ? promotion.content.review.length\r\n                ? 500 - promotion.content.review.split(\" \").length\r\n                : 500\r\n              : promotion.content.comment\r\n              ? promotion.content.comment.length\r\n                ? 500 - promotion.content.comment.split(\" \").length\r\n                : 500\r\n              : \"\"}{\" \"}\r\n            words left\r\n          </div>\r\n        </div>\r\n        {promotion.content_type === \"Review\" && (\r\n          <div className=\"col-xl-40 col-md-50 col-60 mb-4 px-0\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60\">Rating</div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-sm-30 col-60 pr-sm-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    popoverClass=\"col-60\"\r\n                    className=\"input-light px-3\"\r\n                    btnName={\r\n                      promotion.content.rating\r\n                        ? Ratings.find(\r\n                            (x) => x.name === promotion.content.rating\r\n                          ).element\r\n                        : \"Select\"\r\n                    }\r\n                    onSelect={(index) => {\r\n                      let content = { ...promotion.content };\r\n                      content.rating = Ratings[index].name;\r\n                      setPromotion((prev) =>\r\n                        Object.assign({}, prev, { content: content })\r\n                      );\r\n                    }}\r\n                    items={Ratings.map((x) => x.element)}\r\n                  ></Select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-sm-30 col-60 pr-sm-3 mb-4\">\r\n                <div className=\"row no-gutters\">Start Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <DayPickerInput\r\n                    value={date.format(\r\n                      new Date(promotion.start_date),\r\n                      \"DD/MM/YYYY\"\r\n                    )}\r\n                    component={(props) => (\r\n                      <div className=\"position-relative w-100\">\r\n                        <BsCalendar\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            bottom: 0,\r\n                            margin: \"auto\",\r\n                            left: \"18px\",\r\n                          }}\r\n                        ></BsCalendar>\r\n                        <input\r\n                          {...props}\r\n                          className=\"input-light w-100 pl-5 pr-3\"\r\n                          placeholder=\"YYYY-MM-DD\"\r\n                        ></input>\r\n                      </div>\r\n                    )}\r\n                    onDayChange={(day) => {\r\n                      if (day) {\r\n                        let d = new Date(promotion.start_date);\r\n                        let year = day.getFullYear();\r\n                        let month = day.getMonth();\r\n                        let niceDay = day.getDate();\r\n                        d.setFullYear(year);\r\n                        d.setMonth(month);\r\n                        d.setDate(niceDay);\r\n                        setPromotion((prev) =>\r\n                          Object.assign({}, prev, { start_date: d.getTime() })\r\n                        );\r\n                      }\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-30 col-60 mb-4\">\r\n                <div className=\"row no-gutters\">End Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <DayPickerInput\r\n                    value={date.format(\r\n                      new Date(promotion.end_date),\r\n                      \"DD/MM/YYYY\"\r\n                    )}\r\n                    component={(props) => (\r\n                      <div className=\"position-relative w-100\">\r\n                        <BsCalendar\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            bottom: 0,\r\n                            margin: \"auto\",\r\n                            left: \"18px\",\r\n                          }}\r\n                        ></BsCalendar>\r\n                        <input\r\n                          {...props}\r\n                          className=\"input-light w-100 pl-5 pr-3\"\r\n                          placeholder=\"YYYY-MM-DD\"\r\n                        ></input>\r\n                      </div>\r\n                    )}\r\n                    onDayChange={(day) => {\r\n                      if (day) {\r\n                        let d = new Date(promotion.end_date);\r\n                        let year = day.getFullYear();\r\n                        let month = day.getMonth();\r\n                        let niceDay = day.getDate();\r\n                        d.setFullYear(year);\r\n                        d.setMonth(month);\r\n                        d.setDate(niceDay);\r\n                        setPromotion((prev) =>\r\n                          Object.assign({}, prev, { end_date: d.getTime() })\r\n                        );\r\n                      }\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-sm-30 pr-sm-3 col-60 mb-4\">\r\n                <div className=\"row no-gutters\">Start Time</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 position-relative input-light\">\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(promotion.start_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setPromotion((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              start_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(promotion.start_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-30 col-60 mb-4\">\r\n                <div className=\"row no-gutters\">End Time</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 position-relative input-light\">\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(promotion.end_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setPromotion((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              end_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(promotion.end_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Status</div>\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-sm-30 col-60 pr-sm-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    popoverClass=\"col-60\"\r\n                    onSelect={(index) =>\r\n                      setPromotion((prev) =>\r\n                        Object.assign({}, prev, {\r\n                          status: publishStatuses[index],\r\n                        })\r\n                      )\r\n                    }\r\n                    className=\"w-100 input-light px-3\"\r\n                    items={publishStatuses}\r\n                    btnName={promotion.status ? promotion.status : \"Select\"}\r\n                  ></Select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60 mt-2\">\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n            onClick={getBack}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n            onClick={async () => {\r\n              setLoading(true);\r\n              let res = await Edit(promotion);\r\n              setLoading(false);\r\n              if (res.error) {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Error\",\r\n                    message: res.error,\r\n                    type: \"failure\",\r\n                  },\r\n                });\r\n              } else {\r\n                store.dispatch({\r\n                  type: \"SET_NOTIFICATION\",\r\n                  notification: {\r\n                    title: \"Promotion updated\",\r\n                    message: \"Promotion was successfully updated\",\r\n                    type: \"success\",\r\n                  },\r\n                });\r\n                getBack();\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPromotion;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BsCalendar, BsClock, BsSearch } from \"react-icons/bs\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport date from \"date-and-time\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport { GetReviews, CreatePromotions } from \"../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\n\r\nconst AddNewPromotion = ({ publicUsers, getBack, ratings }) => {\r\n  const [promotion, setPromotion] = useState({\r\n    description: \"\",\r\n    start_date: Date.now(),\r\n    end_date: Date.now(),\r\n    content_type: \"\",\r\n    status: \"Published\",\r\n  });\r\n  const [page, setPage] = useState(1);\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchKey, setSearchKey] = useState(\"User\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [candidates, setCandidates] = useState([]);\r\n  const searchKeys = [\"User\", \"Movie\", \"Review\"];\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let rev = await GetReviews();\r\n      if (!rev.error) {\r\n        setReviews(rev);\r\n      }\r\n\r\n      // let com = await GetComments();\r\n      // if (!com.error) {\r\n      //   setComments(com);\r\n      // }\r\n    }\r\n\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let arr = [];\r\n    if (search) {\r\n      if (searchKey === \"User\") {\r\n        if (Object.values(publicUsers).length) {\r\n          reviews.forEach((x) => {\r\n            if (\r\n              publicUsers[x.author].display_name\r\n                .toLowerCase()\r\n                .includes(search.toLowerCase())\r\n            ) {\r\n              arr.push(x);\r\n            }\r\n          });\r\n        }\r\n      } else if (searchKey === \"Movie\") {\r\n        reviews.forEach((x) => {\r\n          if (\r\n            ratings[x.movie_id] &&\r\n            ratings[x.movie_id].movie_title\r\n              .toLowerCase()\r\n              .includes(search.toLowerCase())\r\n          ) {\r\n            arr.push(x);\r\n          }\r\n        });\r\n      } else if (searchKey === \"Review\") {\r\n        reviews.forEach((x) => {\r\n          if (x.review.toLowerCase().includes(search.toLowerCase())) {\r\n            arr.push(x);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      arr = arr.concat([...reviews]);\r\n    }\r\n\r\n    setCandidates(arr.map((x) => Object.assign({}, x, { selected: false })));\r\n  }, [search, reviews]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= candidates.length) {\r\n    boundaries[1] = boundaries[1] - (boundaries[1] - candidates.length);\r\n  }\r\n\r\n  const columns = [\"Movie Name\", \"Review\", \"Rating\", \"Posted On\", \"Reported\"];\r\n\r\n  const validations = [\r\n    { valid: promotion.description, error: \"Description is required\" },\r\n    {\r\n      valid: promotion.start_date < promotion.end_date,\r\n      error: \"Start date must be before end date\",\r\n    },\r\n    {\r\n      valid: promotion.start_date !== promotion.end_date,\r\n      error: \"promotion duration is 0\",\r\n    },\r\n    {\r\n      valid: candidates.filter((x) => x.selected).length,\r\n      error: \"No content selected\",\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"row no-gutters p-sm-5 p-4\">\r\n      <div className=\"col-60 border-bottom mb-4\">\r\n        <div className=\"row no-gutters justify-content-between\">\r\n          <div className=\"col-auto py-3\">\r\n            <div className=\"row no-gutters admin-screen-title\">\r\n              Promote Content\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              Edit, add and delete promotions\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-xl-40 col-md-50 col-60\">\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters mb-1\">Description</div>\r\n            <div className=\"row no-gutters\">\r\n              <textarea\r\n                value={promotion.description ? promotion.description : \"\"}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setPromotion((prev) =>\r\n                    Object.assign({}, prev, { description: e.target.value })\r\n                  );\r\n                }}\r\n                className=\"textarea-light w-100\"\r\n                style={{ height: \"150px\" }}\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 pr-sm-3 mb-4\">\r\n                <div className=\"row no-gutters\">Start Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(promotion.start_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(promotion.start_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setPromotion((prev) =>\r\n                            Object.assign({}, prev, { start_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(promotion.start_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setPromotion((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              start_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(promotion.start_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-4\">\r\n                <div className=\"row no-gutters\">End Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(promotion.end_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(promotion.end_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setPromotion((prev) =>\r\n                            Object.assign({}, prev, { end_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(promotion.end_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setPromotion((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              end_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(promotion.end_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-3 h6 mt-4\">\r\n          Select Content To Promote\r\n        </div>\r\n        <div className=\"row no-gutters mb-3\">\r\n          <Select\r\n            onSelect={(index) => setSearchKey(searchKeys[index])}\r\n            className=\"table-input-prepend-select col-auto bg-custom-primary text-white\"\r\n            items={searchKeys}\r\n            btnName={`Search by ${searchKey}`}\r\n          ></Select>\r\n          <div className=\"col position-relative\" style={{ maxWidth: \"400px\" }}>\r\n            <BsSearch\r\n              fontSize=\"20px\"\r\n              style={{\r\n                position: \"absolute\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                right: \"18px\",\r\n              }}\r\n            ></BsSearch>\r\n            <input\r\n              value={search}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setSearch(e.target.value);\r\n              }}\r\n              className=\"table-input pr-5 pl-3 w-100\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters\">\r\n          <Swipeable\r\n            style={{ minWidth: \"100%\" }}\r\n            onSwipedLeft={() => {\r\n              setLastVisibleColumn(\r\n                lastVisibleColumn + 1 < 4\r\n                  ? lastVisibleColumn + 1\r\n                  : lastVisibleColumn\r\n              );\r\n            }}\r\n            onSwipedRight={() => {\r\n              setLastVisibleColumn(\r\n                lastVisibleColumn - 1 >= 0\r\n                  ? lastVisibleColumn - 1\r\n                  : lastVisibleColumn\r\n              );\r\n            }}\r\n          >\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table bg-white border\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">\r\n                      <Checkbox\r\n                        color={\"primary\"}\r\n                        checked={\r\n                          candidates\r\n                            .slice(boundaries[0], boundaries[1])\r\n                            .filter((x) => x.selected).length ===\r\n                          boundaries[1] - boundaries[0]\r\n                        }\r\n                        onChange={(e) => {\r\n                          setCandidates((prev) => {\r\n                            let arr = [...prev];\r\n                            for (\r\n                              let i = boundaries[0];\r\n                              i < boundaries[1];\r\n                              i++\r\n                            ) {\r\n                              arr[i].selected = e.target.checked;\r\n                            }\r\n                            return arr;\r\n                          });\r\n                        }}\r\n                      ></Checkbox>\r\n                    </th>\r\n                    <th className=\"table-header text-truncate text-left\">\r\n                      <div className=\"d-none d-lg-block\">Posted By</div>\r\n                      <div className=\"d-block d-lg-none\">By</div>\r\n                    </th>\r\n                    <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                      {columns[lastVisibleColumn]}\r\n                    </th>\r\n                    {columns.map((c) => (\r\n                      <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                        <div>{c}</div>\r\n                      </th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {candidates.length ? (\r\n                    candidates\r\n                      .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                      .map((x, i) => (\r\n                        <tr\r\n                          className=\"font-weight-600 bg-light\"\r\n                          key={`shortlist-item-${i}`}\r\n                        >\r\n                          <td className=\"text-center\">\r\n                            <Checkbox\r\n                              color={\"primary\"}\r\n                              checked={x.selected}\r\n                              onChange={(e) => {\r\n                                setCandidates((prev) => {\r\n                                  let arr = [...prev];\r\n                                  arr[(page - 1) * 5 + i].selected =\r\n                                    e.target.checked;\r\n                                  return arr;\r\n                                });\r\n                              }}\r\n                            ></Checkbox>\r\n                          </td>\r\n                          <td style={{ whiteSpace: \"nowrap\" }}>\r\n                            <div className=\"d-inline-block mr-2\">\r\n                              <div\r\n                                className=\"square-50 rounded-circle bg-image\"\r\n                                style={{\r\n                                  backgroundImage: `url(${\r\n                                    Object.values(publicUsers).length\r\n                                      ? publicUsers[x.author].photo\r\n                                      : \"\"\r\n                                  })`,\r\n                                }}\r\n                              ></div>\r\n                            </div>\r\n                            {Object.values(publicUsers).length ? (\r\n                              <div className=\"d-none d-md-inline-block align-top\">\r\n                                <div className=\"h6 text-primary\">\r\n                                  {publicUsers[x.author].display_name}\r\n                                </div>\r\n                                <div>{publicUsers[x.author].email}</div>\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 0\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            {ratings[x.movie_id]\r\n                              ? ratings[x.movie_id].movie_title\r\n                              : \"\"}\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 1\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            {!x.comment ? (\r\n                              <div style={{ minWidth: \"200px\" }}>\r\n                                <div\r\n                                  className=\"text-clamp-4 cursor-pointer user-select-none\"\r\n                                  onClick={(e) => {\r\n                                    let target = e.currentTarget;\r\n                                    if (\r\n                                      target.classList.contains(\"text-clamp-4\")\r\n                                    ) {\r\n                                      target.classList.remove(\"text-clamp-4\");\r\n                                    } else {\r\n                                      target.classList.add(\"text-clamp-4\");\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  {x.review}\r\n                                </div>\r\n                              </div>\r\n                            ) : (\r\n                              <div\r\n                                className=\"text-clamp-4 cursor-pointer user-select-none\"\r\n                                onClick={(e) => {\r\n                                  let target = e.currentTarget;\r\n                                  if (\r\n                                    target.classList.contains(\"text-clamp-4\")\r\n                                  ) {\r\n                                    target.classList.remove(\"text-clamp-4\");\r\n                                  } else {\r\n                                    target.classList.add(\"text-clamp-4\");\r\n                                  }\r\n                                }}\r\n                              >\r\n                                {x.comment}\r\n                              </div>\r\n                            )}\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              lastVisibleColumn === 2\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            {x.rating ? (\r\n                              <div style={{ marginBottom: \"-6px\" }}>\r\n                                <Emoji\r\n                                  emoji={\r\n                                    x.rating === \"excellent_rate\"\r\n                                      ? \"fire\"\r\n                                      : x.rating === \"good_rate\"\r\n                                      ? \"heart\"\r\n                                      : x.rating === \"ok_rate\"\r\n                                      ? \"heavy_division_sign\"\r\n                                      : \"shit\"\r\n                                  }\r\n                                  set=\"facebook\"\r\n                                  size={24}\r\n                                />\r\n                              </div>\r\n                            ) : (\r\n                              \"-\"\r\n                            )}\r\n                          </td>\r\n                          <td\r\n                            style={{ whiteSpace: \"nowrap\" }}\r\n                            className={`${\r\n                              lastVisibleColumn === 3\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            <div>\r\n                              {date.format(\r\n                                new Date(x.date),\r\n                                \"DD/MM/YYYY @ hh:mm A\"\r\n                              )}\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            className={`${\r\n                              !x.reported ? \"text-green\" : \"text-danger\"\r\n                            } ${\r\n                              lastVisibleColumn === 4\r\n                                ? \"d-table-cell\"\r\n                                : \"d-none d-xl-table-cell\"\r\n                            }`}\r\n                          >\r\n                            {x.reported ? \"Abused\" : \"Not Reported\"}\r\n                          </td>\r\n                        </tr>\r\n                      ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan={3} className=\" text-center py-5\">\r\n                        0 results found\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </Swipeable>\r\n        </div>\r\n        <div className=\"row no-gutters justify-content-end\">\r\n          <div className=\"col-auto\">\r\n            <Pagination\r\n              count={Math.ceil(candidates.length / 5)}\r\n              current={page}\r\n              setCurrent={setPage}\r\n            ></Pagination>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-60 mt-1 px-0\">\r\n          <div\r\n            style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n            className=\"row no-gutters align-items-center text-danger mb-2\"\r\n          >\r\n            {problem}\r\n          </div>\r\n          <div className=\"row no-gutters\">\r\n            <div\r\n              className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n              onClick={() => getBack()}\r\n            >\r\n              Cancel\r\n            </div>\r\n            <div\r\n              className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n              onClick={async () => {\r\n                let invalid = validations.filter((x) => !x.valid);\r\n                if (invalid.length) {\r\n                  setProblem(invalid[0].error);\r\n                } else {\r\n                  let promos = candidates\r\n                    .filter((x) => x.selected)\r\n                    .map((x) =>\r\n                      Object.assign({}, promotion, {\r\n                        content_type: x.comment ? \"Comment\" : \"Review\",\r\n                        content: x.comment\r\n                          ? { comment: x.comment }\r\n                          : { review: x.review, rating: x.rating },\r\n                        content_id: x._id,\r\n                        content_author: x.author,\r\n                        movie_title: x.movie_title,\r\n                        movie_genres: x.movie_genres,\r\n                        movie_poster: x.movie_poster,\r\n                        movie_release_date: x.movie_release_date,\r\n                        movie_id: x.movie_id,\r\n                      })\r\n                    );\r\n                  setLoading(true);\r\n                  let res = await CreatePromotions(promos);\r\n                  setLoading(false);\r\n                  if (res.error) {\r\n                    store.dispatch({\r\n                      type: \"SET_NOTIFICATION\",\r\n                      notification: {\r\n                        title: \"Error\",\r\n                        message: res.error,\r\n                        type: \"failure\",\r\n                      },\r\n                    });\r\n                  } else {\r\n                    store.dispatch({\r\n                      type: \"SET_NOTIFICATION\",\r\n                      notification: {\r\n                        title: \"Promotions created\",\r\n                        message: \"Promotions were successfully created\",\r\n                        type: \"success\",\r\n                      },\r\n                    });\r\n                    getBack();\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              <Loader\r\n                color={\"white\"}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  left: \"10px\",\r\n                  top: 0,\r\n                  bottom: 0,\r\n                  margin: \"auto\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                loading={loading}\r\n                size={20}\r\n              ></Loader>\r\n              Save\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(AddNewPromotion);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport date from \"date-and-time\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport {\r\n  GetNotifications,\r\n  DeleteMultipleNotifications,\r\n} from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\n\r\nconst Notifications = ({\r\n  setEditNotification,\r\n  setEditNotificationSection,\r\n  setAddNewNotificationSection,\r\n}) => {\r\n  const [action, setAction] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"Subject\");\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [typeFilter, setTypeFilter] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [mainFilter, setMainFilter] = useState({ key: \"\", value: \"\" });\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [filteredNotifications, setFilteredNotifications] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let data = await GetNotifications();\r\n      if (!data.error) {\r\n        setNotifications(\r\n          data.reverse().map((x) => Object.assign({}, x, { selected: false }))\r\n        );\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, [refresh]);\r\n\r\n  const types = [\"App\", \"Email\"];\r\n\r\n  useEffect(() => {\r\n    let arr = [...notifications];\r\n    if (notifications.length) {\r\n      if (search) {\r\n        if (searchKey === \"Subject\") {\r\n          arr = arr.filter((x) =>\r\n            x.subject.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Description\") {\r\n          arr = arr.filter((x) =>\r\n            x.description.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        }\r\n      }\r\n\r\n      if (typeFilter) {\r\n        arr = arr.filter((x) => x.type === typeFilter);\r\n      }\r\n\r\n      if (mainFilter.key) {\r\n        arr = arr.filter((x) => x[mainFilter.key] === mainFilter.value);\r\n      }\r\n\r\n      setFilteredNotifications(arr);\r\n    }\r\n  }, [search, typeFilter, notifications, mainFilter]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //boundaries for slicing reviews array. (pagination)\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= filteredNotifications.length) {\r\n    boundaries[1] =\r\n      boundaries[1] - (boundaries[1] - filteredNotifications.length);\r\n  }\r\n\r\n  const statuses = [\"Sent\", \"Drafted\", \"Deleted\"];\r\n\r\n  const handleApply = async (all = false) => {\r\n    if (all) {\r\n      setTypeFilter(type);\r\n    }\r\n    if (action === \"Edit\") {\r\n      let selected = filteredNotifications.filter((x) => x.selected);\r\n      if (selected.length) {\r\n        setEditNotification(selected[0]);\r\n        setEditNotificationSection();\r\n      }\r\n    } else if (action === \"Delete\") {\r\n      let selected = filteredNotifications.filter((x) => x.selected);\r\n      if (selected.length) {\r\n        let res = await DeleteMultipleNotifications(\r\n          selected.map((x) => x._id),\r\n          { status: \"Deleted\" }\r\n        );\r\n        if (res.error) {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Error\",\r\n              message: res.error,\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Selected notifications deleted\",\r\n              message: \"Selected notifications were successfully deleted\",\r\n              type: \"success\",\r\n            },\r\n          });\r\n          store.dispatch({\r\n            type: \"UPDATE_USER\",\r\n            userProperty: { update: Date.now() },\r\n          });\r\n        }\r\n        setRefresh(!refresh);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row no-gutters admin-screen\">\r\n      <div className=\"col-60 border-bottom\">\r\n        <div className=\"row no-gutters justify-content-between pb-3 align-items-end\">\r\n          <div className=\"col-auto\">\r\n            <div className=\"row no-gutters admin-screen-title\">\r\n              Notifications\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              Create, send and manage notifications\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"col-auto btn-custom btn-custom-primary btn-natural\"\r\n            onClick={() => setAddNewNotificationSection()}\r\n          >\r\n            Add New\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-60 py-5\">\r\n            <div className=\"row no-gutters h6 mb-3\">\r\n              <div\r\n                onClick={() => {\r\n                  setTypeFilter(\"\");\r\n                  setType(\"\");\r\n                  setMainFilter({ key: \"\", value: \"\" });\r\n                }}\r\n                className={`col-auto cursor-pointer ${\r\n                  !typeFilter && !mainFilter.key ? \"text-primary\" : \"text-dark\"\r\n                }`}\r\n              >\r\n                All ({notifications.length})\r\n              </div>\r\n              {statuses.map((x, i) => (\r\n                <React.Fragment key={`status-${i}`}>\r\n                  <div className=\"col-auto px-2 text-muted\">|</div>\r\n                  <div\r\n                    onClick={() =>\r\n                      setMainFilter((prev) =>\r\n                        Object.assign({ key: \"status\", value: x })\r\n                      )\r\n                    }\r\n                    className={`col-auto cursor-pointer ${\r\n                      mainFilter.key === \"status\" && mainFilter.value === x\r\n                        ? \"text-primary\"\r\n                        : \"text-dark\"\r\n                    }`}\r\n                  >\r\n                    {x} ({notifications.filter((y) => y.status === x).length})\r\n                  </div>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-between\">\r\n              <div className=\"col-sm-auto col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) => setAction([\"Delete\"][index])}\r\n                        items={[\"Delete\"]}\r\n                        btnName={action ? action : \"Select Action\"}\r\n                        className=\"input-light px-3 col-auto\"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) => setType(types[index])}\r\n                        items={types}\r\n                        btnName={type ? type : \"Select Type\"}\r\n                        className=\"input-light px-3 col-auto\"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    onClick={() => handleApply(true)}\r\n                    className=\"btn-custom btn-custom-primary col-60 col-sm-auto mb-3 mr-3 btn-xsmall\"\r\n                  >\r\n                    Apply\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 d-block d-sm-none\">\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <Select\r\n                    popoverClass=\"w-100\"\r\n                    onSelect={(index) =>\r\n                      setSearchKey([\"Subject\", \"Description\"][index])\r\n                    }\r\n                    className=\"input-light col-60\"\r\n                    items={[\"Subject\", \"Description\"]}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <div className=\"col-60 position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      className=\"input-light w-100 pr-5 pl-3\"\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-auto mb-3 d-none d-sm-block\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    onSelect={(index) =>\r\n                      setSearchKey([\"Subject\", \"Description\"][index])\r\n                    }\r\n                    className=\"table-input-prepend-select col-auto\"\r\n                    items={[\"Subject\", \"Description\"]}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                  <div className=\"col position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                      className=\"table-input pr-5 pl-3\"\r\n                      style={{ minWidth: \"300px\" }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <Swipeable\r\n                style={{ minWidth: \"100%\" }}\r\n                onSwipedLeft={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn + 1 < 4\r\n                      ? lastVisibleColumn + 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n                onSwipedRight={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn - 1 >= 0\r\n                      ? lastVisibleColumn - 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n              >\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table bg-white border\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"text-center\">\r\n                          <Checkbox\r\n                            color={\"primary\"}\r\n                            checked={\r\n                              filteredNotifications\r\n                                .slice(boundaries[0], boundaries[1])\r\n                                .filter((x) => x.selected).length ===\r\n                              boundaries[1] - boundaries[0]\r\n                            }\r\n                            onChange={(e) => {\r\n                              setFilteredNotifications((prev) => {\r\n                                let arr = [...prev];\r\n                                for (\r\n                                  let i = boundaries[0];\r\n                                  i < boundaries[1];\r\n                                  i++\r\n                                ) {\r\n                                  arr[i].selected = e.target.checked;\r\n                                }\r\n                                return arr;\r\n                              });\r\n                            }}\r\n                          ></Checkbox>\r\n                        </th>\r\n                        <th className=\"table-header text-truncate text-left\">\r\n                          Subject\r\n                        </th>\r\n                        <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                          {\r\n                            [\"Type\", \"Description\", \"Duration\", \"Status\"][\r\n                              lastVisibleColumn\r\n                            ]\r\n                          }\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Type</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Description</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Duration</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-header text-truncate\">\r\n                          <div>Status</div>\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filteredNotifications.length ? (\r\n                        filteredNotifications\r\n                          .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                          .map((x, i) => (\r\n                            <tr\r\n                              className=\"font-weight-600 bg-light\"\r\n                              key={`shortlist-item-${i}`}\r\n                            >\r\n                              <td className=\"text-center\">\r\n                                <Checkbox\r\n                                  color={\"primary\"}\r\n                                  checked={x.selected}\r\n                                  onChange={(e) => {\r\n                                    setFilteredNotifications((prev) => {\r\n                                      let arr = [...prev];\r\n                                      arr[(page - 1) * 5 + i].selected =\r\n                                        e.target.checked;\r\n                                      return arr;\r\n                                    });\r\n                                  }}\r\n                                ></Checkbox>\r\n                              </td>\r\n                              <td style={{ whiteSpace: \"nowrap\" }}>\r\n                                <div className=\"mb-2\">{x.subject}</div>\r\n                                <div className=\"d-flex\">\r\n                                  <div\r\n                                    className=\"text-primary underline-link\"\r\n                                    onClick={() => {\r\n                                      setEditNotification(x);\r\n                                      setEditNotificationSection();\r\n                                    }}\r\n                                  >\r\n                                    Edit\r\n                                  </div>\r\n                                  <div className=\"px-2\">|</div>\r\n                                  <div\r\n                                    className=\"text-danger underline-link\"\r\n                                    onClick={async () => {\r\n                                      let res = await DeleteMultipleNotifications(\r\n                                        [x._id],\r\n                                        { status: \"Deleted\" }\r\n                                      );\r\n                                      if (res.error) {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Error\",\r\n                                            message: res.error,\r\n                                            type: \"failure\",\r\n                                          },\r\n                                        });\r\n                                      } else {\r\n                                        store.dispatch({\r\n                                          type: \"SET_NOTIFICATION\",\r\n                                          notification: {\r\n                                            title: \"Notification was deleted\",\r\n                                            message:\r\n                                              \"Notification was successfully deleted\",\r\n                                            type: \"success\",\r\n                                          },\r\n                                        });\r\n                                        store.dispatch({\r\n                                          type: \"UPDATE_USER\",\r\n                                          userProperty: { update: Date.now() },\r\n                                        });\r\n                                      }\r\n                                      setRefresh(!refresh);\r\n                                    }}\r\n                                  >\r\n                                    Delete\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 0\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div>{x.type}</div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 1\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div\r\n                                  style={{ minWidth: \"200px\" }}\r\n                                  className=\"text-clamp-4 cursor-pointer user-select-none\"\r\n                                  onClick={(e) => {\r\n                                    let target = e.currentTarget;\r\n                                    if (\r\n                                      target.classList.contains(\"text-clamp-4\")\r\n                                    ) {\r\n                                      target.classList.remove(\"text-clamp-4\");\r\n                                    } else {\r\n                                      target.classList.add(\"text-clamp-4\");\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  {x.description}\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 2\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div className=\"d-flex mb-2\">\r\n                                  <div style={{ width: \"55px\" }}>From:</div>\r\n                                  <div>\r\n                                    <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                      {date.format(\r\n                                        new Date(x.start_date),\r\n                                        \"DD/MM/YYYY @ hh:mm A\"\r\n                                      )}\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"d-flex\">\r\n                                  <div style={{ width: \"55px\" }}>To:</div>\r\n                                  <div>\r\n                                    <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                      {date.format(\r\n                                        new Date(x.end_date),\r\n                                        \"DD/MM/YYYY @ hh:mm A\"\r\n                                      )}\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 3\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.status}\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan={6} className=\" text-center py-5\">\r\n                            0 results found\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                    {/* <tfoot>\r\n                      <tr>\r\n                        <th className=\"text-center\">\r\n                          <Checkbox\r\n                            color={\"primary\"}\r\n                            checked={\r\n                              filteredNotifications\r\n                                .slice(boundaries[0], boundaries[1])\r\n                                .filter((x) => x.selected).length ===\r\n                              boundaries[1] - boundaries[0]\r\n                            }\r\n                            onChange={(e) => {\r\n                              setFilteredNotifications((prev) => {\r\n                                let arr = [...prev];\r\n                                for (\r\n                                  let i = boundaries[0];\r\n                                  i < boundaries[1];\r\n                                  i++\r\n                                ) {\r\n                                  arr[i].selected = e.target.checked;\r\n                                }\r\n                                return arr;\r\n                              });\r\n                            }}\r\n                          ></Checkbox>\r\n                        </th>\r\n                        <th className=\"table-footer text-truncate text-left\">\r\n                          Subject\r\n                        </th>\r\n                        <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                          {\r\n                            [\"Type\", \"Description\", \"Duration\", \"Status\"][\r\n                              lastVisibleColumn\r\n                            ]\r\n                          }\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                          <div>Type</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                          <div>Description</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                          <div>Duration</div>\r\n                        </th>\r\n                        <th className=\"d-none d-xl-table-cell table-footer text-truncate\">\r\n                          <div>Status</div>\r\n                        </th>\r\n                      </tr>\r\n                    </tfoot> */}\r\n                  </table>\r\n                </div>\r\n              </Swipeable>\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-center justify-content-sm-end\">\r\n              <div className=\"col-auto\">\r\n                <Pagination\r\n                  count={Math.ceil(filteredNotifications.length / 5)}\r\n                  current={page}\r\n                  setCurrent={setPage}\r\n                ></Pagination>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import { default as MuiAutocomplete } from \"@material-ui/lab/Autocomplete\";\r\nimport React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputRoot: {\r\n    \"& .MuiOutlinedInput-notchedOutline\": {\r\n      border: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"rgb(255, 0, 64)\",\r\n    },\r\n    secondary: {\r\n      main: \"#202020\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Autocomplete = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <MuiAutocomplete\r\n        {...props}\r\n        classes={classes}\r\n        multiple\r\n        id=\"tags-outlined\"\r\n        filterSelectedOptions\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"outlined\"\r\n            placeholder={props.placeholder}\r\n          />\r\n        )}\r\n      ></MuiAutocomplete>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Autocomplete;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Autocomplete from \"../utility/Autocomplete\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BsCalendar, BsClock } from \"react-icons/bs\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport date from \"date-and-time\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { EditNotification as Edit, GetUser } from \"../../server/DatabaseApi\";\r\n\r\nconst EditNotification = ({\r\n  currentNotification,\r\n  getBack,\r\n  publicUsers,\r\n  user,\r\n}) => {\r\n  const types = [\"App\", \"Email\"];\r\n\r\n  let initialDate = Date.now();\r\n\r\n  const [notification, setNotification] = useState({\r\n    type: \"\",\r\n    subject: \"\",\r\n    start_date: initialDate,\r\n    end_date: initialDate,\r\n    receivers: [],\r\n    description: \"\",\r\n    status: \"Drafted\",\r\n  });\r\n\r\n  const statuses = [\"Sent\", \"Drafted\", \"Deleted\"];\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const validations = [\r\n    { valid: notification.subject, error: \"Subject is required\" },\r\n    { valid: notification.type, error: \"Select notification type\" },\r\n    {\r\n      valid: notification.receivers.length,\r\n      error: \"Select at least one receiver\",\r\n    },\r\n    { valid: notification.description, error: \"Description is required\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setNotification(currentNotification);\r\n  }, [currentNotification]);\r\n\r\n  const autocompleteOptions = {\r\n    All: \"All\",\r\n    \"All users\": \"User\",\r\n    \"All admins\": \"Administrator\",\r\n    \"Inactive users\": \"Inactive\",\r\n    \"Active users\": \"Active\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-sm-5 p-4\">\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">\r\n          Edit notification\r\n        </div>\r\n        <div className=\"row no-gutters\">Edit existing notification</div>\r\n      </div>\r\n      <div className=\"col-60\" style={{ maxWidth: \"800px\" }}>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Subject</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"w-100 input-light px-3\"\r\n              value={notification.subject}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNotification((prev) =>\r\n                  Object.assign({}, prev, { subject: e.target.value })\r\n                );\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Type</div>\r\n          <Select\r\n            popoverClass=\"col-sm-30 col-60\"\r\n            className=\"input-light col-60\"\r\n            btnName={notification.type ? notification.type : \"Select\"}\r\n            items={types}\r\n            onSelect={(index) =>\r\n              setNotification((prev) =>\r\n                Object.assign({}, prev, { type: types[index] })\r\n              )\r\n            }\r\n          ></Select>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Notification to</div>\r\n          <Autocomplete\r\n            value={notification.receivers}\r\n            onChange={(e, val) => {\r\n              setNotification((prev) =>\r\n                Object.assign({}, prev, { receivers: val })\r\n              );\r\n            }}\r\n            placeholder={\"Search by username\"}\r\n            color={\"primary\"}\r\n            className=\"col-md-30 col-60 input-light-resize\"\r\n            options={Object.keys(autocompleteOptions).concat(\r\n              Object.values(publicUsers).filter((x) => x.status !== \"Deleted\")\r\n            )}\r\n            getOptionLabel={(option) =>\r\n              option.display_name ? option.display_name : option\r\n            }\r\n          ></Autocomplete>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Description</div>\r\n          <div className=\"col-60\">\r\n            <textarea\r\n              value={notification.description}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                let text = e.target.value;\r\n                if (text.split(\" \").length <= 500) {\r\n                  setNotification((prev) =>\r\n                    Object.assign({}, prev, { description: text })\r\n                  );\r\n                }\r\n              }}\r\n              className=\"textarea-light w-100\"\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div\r\n            className={`col-60 ${\r\n              notification.description.split(\" \").length <= 499\r\n                ? \"text-muted\"\r\n                : \"text-danger\"\r\n            }`}\r\n          >\r\n            {notification.description\r\n              ? 500 - notification.description.split(\" \").length\r\n              : 500}\r\n            words left\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 pr-sm-3 mb-4\">\r\n                <div className=\"row no-gutters\">Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(notification.start_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(notification.start_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setNotification((prev) =>\r\n                            Object.assign({}, prev, { start_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(notification.start_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setNotification((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              start_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(notification.start_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Status</div>\r\n          <Select\r\n            popoverClass=\"col-sm-30 col-60\"\r\n            className=\"input-light col-60\"\r\n            btnName={\r\n              notification.status ? notification.status : \"Select status\"\r\n            }\r\n            items={statuses}\r\n            onSelect={(index) =>\r\n              setNotification((prev) =>\r\n                Object.assign({}, prev, { status: statuses[index] })\r\n              )\r\n            }\r\n          ></Select>\r\n        </div>\r\n        <div\r\n          style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n          className=\"row no-gutters align-items-center text-danger my-2\"\r\n        >\r\n          {problem}\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n            onClick={getBack}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n            onClick={async () => {\r\n              let invalid = validations.filter((x) => !x.valid);\r\n              if (invalid.length) {\r\n                setProblem(invalid[0].error);\r\n              } else {\r\n                setLoading(true);\r\n\r\n                let res = await Edit(notification);\r\n                setLoading(false);\r\n                if (res.error) {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Error\",\r\n                      message: res.error,\r\n                      type: \"failure\",\r\n                    },\r\n                  });\r\n                } else {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Notification edited\",\r\n                      message: \"Notification was successfully edited\",\r\n                      type: \"success\",\r\n                    },\r\n                  });\r\n                  let updatedUser = await GetUser(user._id);\r\n                  store.dispatch({\r\n                    type: \"SET_USER\",\r\n                    user: updatedUser,\r\n                  });\r\n                  getBack();\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    user: state.user,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(EditNotification);\r\n","import React, { useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Autocomplete from \"../utility/Autocomplete\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BsCalendar, BsClock } from \"react-icons/bs\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport date from \"date-and-time\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { CreateNotification, GetUser } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\n\r\nconst AddNewNotification = ({ publicUsers, getBack, user }) => {\r\n  const types = [\"App\", \"Email\"];\r\n  let initialDate = Date.now();\r\n  const [notification, setNotification] = useState({\r\n    type: \"\",\r\n    subject: \"\",\r\n    receivers: [],\r\n    start_date: initialDate,\r\n    end_date: initialDate,\r\n    description: \"\",\r\n    status: \"Sent\",\r\n  });\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const statuses = [\"Sent\", \"Drafted\", \"Deleted\"];\r\n  const validations = [\r\n    { valid: notification.subject, error: \"Subject is required\" },\r\n    { valid: notification.type, error: \"Select notification type\" },\r\n    {\r\n      valid: notification.receivers.length,\r\n      error: \"Select at least one receiver\",\r\n    },\r\n    { valid: notification.description, error: \"Description is required\" },\r\n  ];\r\n\r\n  const autocompleteOptions = {\r\n    All: \"All\",\r\n    \"All users\": \"User\",\r\n    \"All admins\": \"Administrator\",\r\n    \"Inactive users\": \"Inactive\",\r\n    \"Active users\": \"Active\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-sm-5 p-4\">\r\n      <div className=\"col-60 py-3 border-bottom mb-4\">\r\n        <div className=\"row no-gutters admin-screen-title\">\r\n          Add new notification\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          Create a brand new notification and add to this site\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\" style={{ maxWidth: \"800px\" }}>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Subject</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"w-100 input-light px-3\"\r\n              value={notification.subject}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNotification((prev) =>\r\n                  Object.assign({}, prev, { subject: e.target.value })\r\n                );\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Type</div>\r\n          <Select\r\n            popoverClass=\"col-sm-30 col-60\"\r\n            className=\"input-light col-60 w-100\"\r\n            btnName={notification.type ? notification.type : \"Select\"}\r\n            items={types}\r\n            onSelect={(index) =>\r\n              setNotification((prev) =>\r\n                Object.assign({}, prev, { type: types[index] })\r\n              )\r\n            }\r\n          ></Select>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Notification to</div>\r\n\r\n          <Autocomplete\r\n            value={notification.receivers}\r\n            onChange={(e, val) => {\r\n              setNotification((prev) =>\r\n                Object.assign({}, prev, { receivers: val })\r\n              );\r\n            }}\r\n            placeholder={\"Search by username\"}\r\n            color={\"primary\"}\r\n            className=\"col-md-30 col-60 input-light-resize\"\r\n            options={Object.keys(autocompleteOptions).concat(\r\n              Object.values(publicUsers).filter((x) => x.status !== \"Deleted\")\r\n            )}\r\n            getOptionLabel={(option) =>\r\n              option.display_name ? option.display_name : option\r\n            }\r\n          ></Autocomplete>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Description</div>\r\n          <div className=\"col-60\">\r\n            <textarea\r\n              value={notification.description}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                let text = e.target.value;\r\n                if (text.split(\" \").length <= 500) {\r\n                  setNotification((prev) =>\r\n                    Object.assign({}, prev, { description: text })\r\n                  );\r\n                }\r\n              }}\r\n              className=\"textarea-light w-100\"\r\n              style={{ height: \"150px\" }}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div\r\n            className={`col-60 ${\r\n              notification.description.split(\" \").length <= 499\r\n                ? \"text-muted\"\r\n                : \"text-danger\"\r\n            }`}\r\n          >\r\n            {notification.description\r\n              ? 500 - notification.description.split(\" \").length\r\n              : 500}\r\n            words left\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-xl-40 col-md-50 col-60\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 pr-sm-3 mb-4\">\r\n                <div className=\"row no-gutters\">Date</div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-auto mr-2\" style={{ width: \"182px\" }}>\r\n                    <DayPickerInput\r\n                      value={date.format(\r\n                        new Date(notification.start_date),\r\n                        \"DD/MM/YYYY\"\r\n                      )}\r\n                      component={(props) => (\r\n                        <div className=\"position-relative\">\r\n                          <BsCalendar\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              bottom: 0,\r\n                              margin: \"auto\",\r\n                              left: \"18px\",\r\n                            }}\r\n                          ></BsCalendar>\r\n                          <input\r\n                            {...props}\r\n                            className=\"input-light w-100 pl-5 pr-3\"\r\n                            placeholder=\"YYYY-MM-DD\"\r\n                          ></input>\r\n                        </div>\r\n                      )}\r\n                      onDayChange={(day) => {\r\n                        if (day) {\r\n                          let d = new Date(notification.start_date);\r\n                          let year = day.getFullYear();\r\n                          let month = day.getMonth();\r\n                          let niceDay = day.getDate();\r\n                          d.setFullYear(year);\r\n                          d.setMonth(month);\r\n                          d.setDate(niceDay);\r\n                          setNotification((prev) =>\r\n                            Object.assign({}, prev, { start_date: d.getTime() })\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto position-relative input-light\"\r\n                    style={{ width: \"150px\" }}\r\n                  >\r\n                    <BsClock\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        left: \"18px\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <TimePicker\r\n                      clearIcon={null}\r\n                      clockIcon={null}\r\n                      className=\"w-100 pl-5\"\r\n                      onChange={(a) => {\r\n                        if (a) {\r\n                          let [h, m] = a.split(\":\");\r\n                          let newTime = new Date(notification.start_date);\r\n                          newTime.setHours(h);\r\n                          newTime.setMinutes(m);\r\n                          setNotification((prev) =>\r\n                            Object.assign({}, prev, {\r\n                              start_date: newTime.getTime(),\r\n                            })\r\n                          );\r\n                        }\r\n                      }}\r\n                      value={new Date(notification.start_date)}\r\n                    ></TimePicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Status</div>\r\n          <Select\r\n            popoverClass=\"col-sm-30 col-60\"\r\n            className=\"input-light col-60\"\r\n            btnName={\r\n              notification.status ? notification.status : \"Select status\"\r\n            }\r\n            items={statuses}\r\n            onSelect={(index) =>\r\n              setNotification((prev) =>\r\n                Object.assign({}, prev, { status: statuses[index] })\r\n              )\r\n            }\r\n          ></Select>\r\n        </div>\r\n        <div\r\n          style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n          className=\"row no-gutters align-items-center text-danger my-2\"\r\n        >\r\n          {problem}\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 mb-3 col-60 col-sm-auto\"\r\n            onClick={getBack}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small mb-3 col-60 col-sm-auto\"\r\n            onClick={async () => {\r\n              let invalid = validations.filter((x) => !x.valid);\r\n              if (invalid.length) {\r\n                setProblem(invalid[0].error);\r\n              } else {\r\n                setLoading(true);\r\n\r\n                let res = await CreateNotification(notification);\r\n                setLoading(false);\r\n                if (res.error) {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Error\",\r\n                      message: res.error,\r\n                      type: \"failure\",\r\n                    },\r\n                  });\r\n                } else {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Notification created\",\r\n                      message: \"Notification was successfully created\",\r\n                      type: \"success\",\r\n                    },\r\n                  });\r\n                  let updatedUser = await GetUser(user._id);\r\n                  store.dispatch({\r\n                    type: \"SET_USER\",\r\n                    user: updatedUser,\r\n                  });\r\n\r\n                  getBack();\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    user: state.user,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(AddNewNotification);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport Pagination from \"../utility/Paigination\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport { Swipeable } from \"react-swipeable\";\r\nimport {\r\n  GetUsers,\r\n  EditMultipleUsers,\r\n  DeleteMultipleUsers,\r\n} from \"../../server/DatabaseApi\";\r\nimport { format as TimeAgo } from \"timeago.js\";\r\nimport store from \"../../store/store\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Users = ({\r\n  setEditUser,\r\n  setEditUserSection,\r\n  setAddNewUserSection,\r\n  publicUsers,\r\n  ratings,\r\n}) => {\r\n  const [action, setAction] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"User\");\r\n  const [lastVisibleColumn, setLastVisibleColumn] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [roleFilter, setRoleFilter] = useState(\"\");\r\n  const [statusFilter, setStatusFilter] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let data = await GetUsers();\r\n      setUsers(data.map((x) => Object.assign({}, x, { selected: false })));\r\n    }\r\n\r\n    getData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    let arr = [...users];\r\n    if (users.length) {\r\n      if (search) {\r\n        if (searchKey === \"User\") {\r\n          arr = arr.filter((x) =>\r\n            x.display_name.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        } else if (searchKey === \"Email\") {\r\n          arr = arr.filter((x) =>\r\n            x.email.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n        }\r\n      }\r\n\r\n      if (roleFilter) {\r\n        arr = arr.filter((x) => x.role === roleFilter);\r\n      }\r\n\r\n      if (statusFilter) {\r\n        arr = arr.filter((x) => x.status === statusFilter);\r\n      }\r\n    }\r\n    setFilteredUsers(arr);\r\n  }, [search, roleFilter, users, statusFilter]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //boundaries for slicing reviews array. (pagination)\r\n  let boundaries = [(page - 1) * 5, (page - 1) * 5 + 5];\r\n  if (boundaries[1] >= filteredUsers.length) {\r\n    boundaries[1] = boundaries[1] - (boundaries[1] - filteredUsers.length);\r\n  }\r\n\r\n  const handleApply = async (all = false) => {\r\n    if (all) {\r\n      setRoleFilter(role === \"All\" ? \"\" : role);\r\n    }\r\n    let selected = filteredUsers.filter((x) => x.selected);\r\n\r\n    if (selected.length) {\r\n      if (action === \"Edit\") {\r\n        setEditUser(selected[0]);\r\n        setEditUserSection();\r\n      } else {\r\n        let update = {};\r\n        if (action === \"Delete\") {\r\n          update[\"status\"] = \"Deleted\";\r\n        } else if (action === \"Inactivate\") {\r\n          update[\"status\"] = \"Inactive\";\r\n        } else if (action === \"Block\") {\r\n          update[\"status\"] = \"Blocked\";\r\n        } else if (action === \"Activate\") {\r\n          update[\"status\"] = \"Active\";\r\n        }\r\n        let res = await EditMultipleUsers(\r\n          selected.map((x) => x._id),\r\n          selected.map((x) => publicUsers[x._id]._id),\r\n          update\r\n        );\r\n\r\n        if (res.error) {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Error\",\r\n              message: res.error,\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Users updated\",\r\n              message: \"User were successfully updated\",\r\n              type: \"success\",\r\n            },\r\n          });\r\n          setRefresh(!refresh);\r\n          let newPublicUsers = { ...publicUsers };\r\n          selected.forEach((x) => {\r\n            newPublicUsers[x._id].status = update[\"status\"];\r\n          });\r\n          store.dispatch({\r\n            type: \"SET_PUBLICUSERS\",\r\n            publicUsers: newPublicUsers,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const editUsers = async (update, ids, pids) => {\r\n    let res = await EditMultipleUsers(ids, pids, update);\r\n    if (res.error) {\r\n      store.dispatch({\r\n        type: \"SET_NOTIFICATION\",\r\n        notification: {\r\n          title: \"Error\",\r\n          message: res.error,\r\n          type: \"failure\",\r\n        },\r\n      });\r\n    } else {\r\n      store.dispatch({\r\n        type: \"SET_NOTIFICATION\",\r\n        notification: {\r\n          title: \"Users updated\",\r\n          message: \"User were successfully updated\",\r\n          type: \"success\",\r\n        },\r\n      });\r\n      setRefresh(!refresh);\r\n    }\r\n  };\r\n  const actions = [\"Block\", \"Inactivate\", \"Activate\", \"Delete\"];\r\n  const statuses = [\"Active\", \"Inactive\", \"Blocked\"];\r\n  const columns = [\"Email\", \"Role\", \"Last login\", \"Activity\", \"Status\"];\r\n  return (\r\n    <div className=\"row no-gutters admin-screen\">\r\n      <div className=\"col-60 border-bottom\">\r\n        <div className=\"row no-gutters justify-content-between pb-3 align-items-end\">\r\n          <div className=\"col-auto\">\r\n            <div className=\"row no-gutters admin-screen-title\">Users</div>\r\n            <div className=\"row no-gutters\">Add, edit and delete users</div>\r\n          </div>\r\n          <div\r\n            className=\"col-auto btn-custom btn-custom-primary btn-natural\"\r\n            onClick={() => setAddNewUserSection()}\r\n          >\r\n            Add New\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-60 py-5\">\r\n            <div className=\"row no-gutters h6 mb-3\">\r\n              <div\r\n                className={`col-auto ${\r\n                  statusFilter ? \"text-dark\" : \"text-primary\"\r\n                }`}\r\n                onClick={() => setStatusFilter(\"\")}\r\n              >\r\n                All ({users.length})\r\n              </div>\r\n              {statuses.map((x, i) => (\r\n                <React.Fragment key={`status-${i}`}>\r\n                  <div className=\"col-auto px-2 text-muted\">|</div>\r\n                  <div\r\n                    className={`col-auto cursor-pointer ${\r\n                      statusFilter === x ? \"text-primary\" : \"text-dark\"\r\n                    }`}\r\n                    onClick={() => setStatusFilter(x)}\r\n                  >\r\n                    {x} ({users.filter((y) => y.status === x).length})\r\n                  </div>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-between\">\r\n              <div className=\"col-sm-auto col-60\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) => setAction(actions[index])}\r\n                        items={actions}\r\n                        btnName={action ? action : \"Select Action\"}\r\n                        className=\"input-light px-3 col-auto\"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-60 col-sm-auto pb-3 mr-sm-3\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Select\r\n                        popoverClass=\"col-60 col-sm-auto\"\r\n                        onSelect={(index) =>\r\n                          setRole([\"All\", \"Administrator\", \"User\"][index])\r\n                        }\r\n                        items={[\"All\", \"Administrator\", \"User\"]}\r\n                        btnName={role ? role : \"Select Role\"}\r\n                        className=\"input-light px-3 col-auto\"\r\n                      ></Select>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    onClick={() => handleApply(true)}\r\n                    className=\"btn-custom btn-custom-primary col-60 col-sm-auto mb-3 mr-3 btn-xsmall\"\r\n                  >\r\n                    Apply\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 d-block d-sm-none\">\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <Select\r\n                    popoverClass=\"w-100\"\r\n                    onSelect={(index) => setSearchKey([\"User\", \"Email\"][index])}\r\n                    className=\"input-light col-60\"\r\n                    items={[\"User\", \"Email\"]}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <div className=\"col-60 position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      className=\"input-light w-100 pr-5 pl-3\"\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-auto mb-3 d-none d-sm-block\">\r\n                <div className=\"row no-gutters\">\r\n                  <Select\r\n                    onSelect={(index) => setSearchKey([\"User\", \"Email\"][index])}\r\n                    className=\"table-input-prepend-select col-auto\"\r\n                    items={[\"User\", \"Email\"]}\r\n                    btnName={`Search by ${searchKey}`}\r\n                  ></Select>\r\n                  <div className=\"col position-relative\">\r\n                    <BsSearch\r\n                      fontSize=\"20px\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        margin: \"auto\",\r\n                        right: \"18px\",\r\n                      }}\r\n                    ></BsSearch>\r\n                    <input\r\n                      value={search}\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setSearch(e.target.value);\r\n                      }}\r\n                      className=\"table-input pr-5 pl-3\"\r\n                      style={{ minWidth: \"300px\" }}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n              <Swipeable\r\n                style={{ minWidth: \"100%\" }}\r\n                onSwipedLeft={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn + 1 < 4\r\n                      ? lastVisibleColumn + 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n                onSwipedRight={() => {\r\n                  setLastVisibleColumn(\r\n                    lastVisibleColumn - 1 >= 0\r\n                      ? lastVisibleColumn - 1\r\n                      : lastVisibleColumn\r\n                  );\r\n                }}\r\n              >\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table bg-white border\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"text-center\">\r\n                          <Checkbox\r\n                            color={\"primary\"}\r\n                            checked={\r\n                              filteredUsers\r\n                                .slice(boundaries[0], boundaries[1])\r\n                                .filter((x) => x.selected).length ===\r\n                              boundaries[1] - boundaries[0]\r\n                            }\r\n                            onChange={(e) => {\r\n                              setFilteredUsers((prev) => {\r\n                                let arr = [...prev];\r\n                                for (\r\n                                  let i = boundaries[0];\r\n                                  i < boundaries[1];\r\n                                  i++\r\n                                ) {\r\n                                  arr[i].selected = e.target.checked;\r\n                                }\r\n                                return arr;\r\n                              });\r\n                            }}\r\n                          ></Checkbox>\r\n                        </th>\r\n                        <th className=\"table-header text-truncate text-left\">\r\n                          <div className=\"d-none d-lg-block\">Display Name</div>\r\n                          <div className=\"d-block d-lg-none\">Name</div>\r\n                        </th>\r\n                        <th className=\"d-table-cell d-xl-none table-header text-truncate\">\r\n                          {columns[lastVisibleColumn]}\r\n                        </th>\r\n                        {columns.map((c, j) => (\r\n                          <th\r\n                            className=\"d-none d-xl-table-cell table-header text-truncate\"\r\n                            key={`column-${j}`}\r\n                          >\r\n                            <div>{c}</div>\r\n                          </th>\r\n                        ))}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filteredUsers.length ? (\r\n                        filteredUsers\r\n                          .slice((page - 1) * 5, (page - 1) * 5 + 5)\r\n                          .map((x, i) => (\r\n                            <tr\r\n                              className=\"font-weight-600 bg-light\"\r\n                              key={`shortlist-item-${i}`}\r\n                            >\r\n                              <td className=\"text-center\">\r\n                                <Checkbox\r\n                                  color={\"primary\"}\r\n                                  checked={x.selected}\r\n                                  onChange={(e) => {\r\n                                    setFilteredUsers((prev) => {\r\n                                      let arr = [...prev];\r\n                                      arr[(page - 1) * 5 + i].selected =\r\n                                        e.target.checked;\r\n                                      return arr;\r\n                                    });\r\n                                  }}\r\n                                ></Checkbox>\r\n                              </td>\r\n                              <td style={{ whiteSpace: \"nowrap\" }}>\r\n                                <div>\r\n                                  <div style={{ whiteSpace: \"nowrap\" }}>\r\n                                    <div className=\"d-inline-block mr-2\">\r\n                                      <div\r\n                                        className=\"square-50 rounded-circle bg-image\"\r\n                                        style={{\r\n                                          backgroundImage: `url(${x.photo})`,\r\n                                        }}\r\n                                      ></div>\r\n                                    </div>\r\n                                    <div className=\"d-none d-md-inline-block align-top\">\r\n                                      <div className=\"text-primary mb-2\">\r\n                                        {x.display_name}\r\n                                      </div>\r\n                                      <div className=\"d-flex\">\r\n                                        <div\r\n                                          className=\"text-primary underline-link\"\r\n                                          onClick={() => {\r\n                                            setEditUser(x);\r\n                                            setEditUserSection();\r\n                                          }}\r\n                                        >\r\n                                          Edit\r\n                                        </div>\r\n                                        <div className=\"px-2\">|</div>\r\n                                        <div\r\n                                          className=\"text-primary underline-link\"\r\n                                          onClick={() => {\r\n                                            editUsers(\r\n                                              { status: \"Blocked\" },\r\n                                              [x._id],\r\n                                              [publicUsers[x._id]._id]\r\n                                            );\r\n                                          }}\r\n                                        >\r\n                                          Block\r\n                                        </div>\r\n                                        <div className=\"px-2\">|</div>\r\n                                        <div\r\n                                          className=\"text-danger underline-link\"\r\n                                          onClick={async () => {\r\n                                            let res = await DeleteMultipleUsers(\r\n                                              [x._id],\r\n                                              [publicUsers[x._id]._id]\r\n                                            );\r\n                                            if (res.error) {\r\n                                              store.dispatch({\r\n                                                type: \"SET_NOTIFICATION\",\r\n                                                notification: {\r\n                                                  title: \"Error\",\r\n                                                  message: res.error,\r\n                                                  type: \"failure\",\r\n                                                },\r\n                                              });\r\n                                            } else {\r\n                                              store.dispatch({\r\n                                                type: \"SET_NOTIFICATION\",\r\n                                                notification: {\r\n                                                  title: \"Users deleted\",\r\n                                                  message:\r\n                                                    \"User were successfully deleted\",\r\n                                                  type: \"success\",\r\n                                                },\r\n                                              });\r\n                                              setRefresh(!refresh);\r\n                                              let newPublicUsers = {\r\n                                                ...publicUsers,\r\n                                              };\r\n                                              newPublicUsers[x._id].status =\r\n                                                \"Deleted\";\r\n\r\n                                              store.dispatch({\r\n                                                type: \"SET_PUBLICUSERS\",\r\n                                                publicUsers: newPublicUsers,\r\n                                              });\r\n                                            }\r\n                                          }}\r\n                                        >\r\n                                          Delete\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 0\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                <div>{x.email}</div>\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 1\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.role}\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 2\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.last_login\r\n                                  ? TimeAgo(x.last_login)\r\n                                  : \"No data\"}\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  lastVisibleColumn === 3\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.last_activity\r\n                                  ? TimeAgo(x.last_activity)\r\n                                  : \"No data\"}\r\n                              </td>\r\n                              <td\r\n                                className={`${\r\n                                  x.status === \"Active\"\r\n                                    ? \"text-green\"\r\n                                    : x.status === \"Inactive\"\r\n                                    ? \"text-orange\"\r\n                                    : \"text-danger\"\r\n                                } ${\r\n                                  lastVisibleColumn === 4\r\n                                    ? \"d-table-cell\"\r\n                                    : \"d-none d-xl-table-cell\"\r\n                                }`}\r\n                              >\r\n                                {x.status}\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan={7} className=\" text-center py-5\">\r\n                            0 results found\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </Swipeable>\r\n            </div>\r\n            <div className=\"row no-gutters justify-content-center justify-content-sm-end\">\r\n              <div className=\"col-auto\">\r\n                <Pagination\r\n                  count={Math.ceil(filteredUsers.length / 5)}\r\n                  current={page}\r\n                  setCurrent={setPage}\r\n                ></Pagination>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    ratings: state.ratings,\r\n    publicUsers: state.publicUsers,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Users);\r\n","import React, { useState } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport { CreateUserForAdmin } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { connect } from \"react-redux\";\r\nimport { validateEmail } from \"../../utilities/Functions\";\r\n\r\nconst AddNewUser = ({ getBack, publicUsers }) => {\r\n  const [newUser, setNewUser] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    display_name: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    re_password: \"\",\r\n    status: \"Active\",\r\n    role: \"User\",\r\n  });\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const validations = [\r\n    {\r\n      valid: newUser.email,\r\n      error: \"Email is required\",\r\n    },\r\n    {\r\n      valid: validateEmail(newUser.email),\r\n      error: \"Email is not valid\",\r\n    },\r\n    {\r\n      valid: newUser.password,\r\n      error: \"Password is required\",\r\n    },\r\n    {\r\n      valid: /[^\\w\\s]/.test(newUser.password) || /\\d/.test(newUser.password),\r\n      error: \"Password must contain number or symbol\",\r\n    },\r\n    {\r\n      valid: newUser.password === newUser.re_password,\r\n      error: \"Passwords don't match\",\r\n    },\r\n    {\r\n      valid: newUser.password.length >= 6,\r\n      error: \"Password must contain at least 6 characters\",\r\n    },\r\n\r\n    {\r\n      valid: !Object.values(publicUsers)\r\n        .map((x) => x.email)\r\n        .includes(newUser.email),\r\n      error: \"This email address is taken\",\r\n    },\r\n  ];\r\n\r\n  const statuses = [\"Active\", \"Inactive\", \"Blocked\"];\r\n  const roles = [\"Administrator\", \"User\"];\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\">\r\n      <div className=\"col-60\" style={{ maxWidth: \"800px\" }}>\r\n        <div className=\"row no-gutters border-bottom py-3 mb-5\">\r\n          <div className=\"col-60 admin-screen-title\">Add User</div>\r\n          <div className=\"col-60\">Add brand new user</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-sm-30 col-60 pr-sm-3 mb-4\">\r\n            <div className=\"row no-gutters mb-1\">First name</div>\r\n            <div className=\"row no-gutters\">\r\n              <input\r\n                spellCheck={false}\r\n                value={newUser.first_name}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      first_name: e.target.value,\r\n                    })\r\n                  );\r\n                }}\r\n                type=\"text\"\r\n                className=\"px-3 input-light w-100\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-30 col-60 mb-4\">\r\n            <div className=\"row no-gutters mb-1\">Last name</div>\r\n            <div className=\"row no-gutters\">\r\n              <input\r\n                spellCheck={false}\r\n                value={newUser.last_name}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      last_name: e.target.value,\r\n                    })\r\n                  );\r\n                }}\r\n                type=\"text\"\r\n                className=\"px-3 input-light w-100\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Display name</div>\r\n          <div className=\"col-60 mb-1\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.display_name}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    display_name: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"text\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-60 text-muted\">\r\n            This name will be visible for everyone\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">*Email</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.email}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    email: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"text\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">*Password</div>\r\n          <div className=\"col-60 mb-1\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.password}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    password: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"password\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-60 text-muted\">\r\n            Must be at least 6 characters and must contain a number or symbol\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">*Confirm Password</div>\r\n          <div className=\"col-60 mb-1\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.re_password}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    re_password: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"password\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-60 text-muted\">\r\n            Must be at least 6 characters and must contain a number or symbol\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-sm-20 col-60 pr-sm-3 mb-4\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-1\">Status</div>\r\n              <Select\r\n                popoverClass=\"w-100\"\r\n                onSelect={(index) =>\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      status: statuses[index],\r\n                    })\r\n                  )\r\n                }\r\n                items={statuses}\r\n                btnName={newUser.status ? newUser.status : \"Select\"}\r\n                className=\"input-light px-3 col-60\"\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-20 col-60 mb-4\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-1\">Role</div>\r\n              <Select\r\n                popoverClass=\"w-100\"\r\n                onSelect={(index) =>\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      role: roles[index],\r\n                    })\r\n                  )\r\n                }\r\n                items={roles}\r\n                btnName={newUser.role ? newUser.role : \"Select\"}\r\n                className=\"input-light px-3 col-60\"\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n          className=\"row no-gutters align-items-center text-danger\"\r\n        >\r\n          {problem}\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 col-sm-auto col-60 mb-3\"\r\n            onClick={() => getBack()}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small col-sm-auto col-60 mb-3\"\r\n            onClick={async () => {\r\n              let invalid = validations.filter((x) => !x.valid);\r\n              if (invalid.length) {\r\n                setProblem(invalid[0].error);\r\n              } else {\r\n                setLoading(true);\r\n                let res = await CreateUserForAdmin(newUser);\r\n                setLoading(false);\r\n                if (res.error) {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Error\",\r\n                      message: res.error,\r\n                      type: \"failure\",\r\n                    },\r\n                  });\r\n                } else {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"User created\",\r\n                      message: \"User was successfully created\",\r\n                      type: \"success\",\r\n                    },\r\n                  });\r\n                  store.dispatch({\r\n                    type: \"UPDATE_PUBLICUSERS\",\r\n                    publicUser: {\r\n                      [res.id]: Object.assign({}, newUser, {\r\n                        user_id: res.id,\r\n                        _id: res.pid,\r\n                      }),\r\n                    },\r\n                  });\r\n                  getBack();\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(AddNewUser);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"../utility/Select\";\r\nimport { EditUserForAdmin } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\nimport Loader from \"../utility/Loader\";\r\n\r\nconst EditUser = ({ currentUser, getBack }) => {\r\n  const [newUser, setNewUser] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    display_name: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    re_password: \"\",\r\n    status: \"Active\",\r\n    role: \"Administrator\",\r\n  });\r\n\r\n  const [initialPassword, setInitialPassword] = useState(\"\");\r\n  const [problem, setProblem] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setInitialPassword(currentUser.password);\r\n      setNewUser(\r\n        Object.assign({}, currentUser, { re_password: currentUser.password })\r\n      );\r\n    }\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const validations = [\r\n    {\r\n      valid: /[^\\w\\s]/.test(newUser.password) || /\\d/.test(newUser.password),\r\n      error: \"Password must contain number or symbol\",\r\n    },\r\n    {\r\n      valid: newUser.password === newUser.re_password,\r\n      error: \"Passwords don't match\",\r\n    },\r\n    {\r\n      valid: newUser.password.length >= 6,\r\n      error: \"Password must contain at least 6 characters\",\r\n    },\r\n  ];\r\n\r\n  const statuses = [\"Active\", \"Inactive\", \"Blocked\"];\r\n  const roles = [\"Administrator\", \"User\"];\r\n\r\n  return (\r\n    <div className=\"row no-gutters p-md-5 p-4\">\r\n      <div className=\"col-60\" style={{ maxWidth: \"800px\" }}>\r\n        <div className=\"row no-gutters border-bottom py-3 mb-5\">\r\n          <div className=\"col-60 admin-screen-title\">Edit User</div>\r\n          <div className=\"col-60\">Edit existing user</div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-sm-30 col-60 pr-sm-3 mb-4\">\r\n            <div className=\"row no-gutters mb-1\">First name</div>\r\n            <div className=\"row no-gutters\">\r\n              <input\r\n                spellCheck={false}\r\n                value={newUser.first_name}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      first_name: e.target.value,\r\n                    })\r\n                  );\r\n                }}\r\n                type=\"text\"\r\n                className=\"px-3 input-light w-100\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-30 col-60 mb-4\">\r\n            <div className=\"row no-gutters mb-1\">Last name</div>\r\n            <div className=\"row no-gutters\">\r\n              <input\r\n                spellCheck={false}\r\n                value={newUser.last_name}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      last_name: e.target.value,\r\n                    })\r\n                  );\r\n                }}\r\n                type=\"text\"\r\n                className=\"px-3 input-light w-100\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Display name</div>\r\n          <div className=\"col-60 mb-1\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.display_name}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    display_name: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"text\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-60 text-muted\">\r\n            This name will be visible for everyone\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Email</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.email}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    email: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"text\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Password</div>\r\n          <div className=\"col-60 mb-1\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.password}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    password: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"password\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-60 text-muted\">\r\n            Must be at least 6 characters and must contain a number or symbol\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-60 mb-1\">Confirm Password</div>\r\n          <div className=\"col-60 mb-1\">\r\n            <input\r\n              spellCheck={false}\r\n              value={newUser.re_password}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setNewUser((prev) =>\r\n                  Object.assign({}, prev, {\r\n                    re_password: e.target.value,\r\n                  })\r\n                );\r\n              }}\r\n              type=\"password\"\r\n              className=\"px-3 input-light w-100\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-60 text-muted\">\r\n            Must be at least 6 characters and must contain a number or symbol\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-4\">\r\n          <div className=\"col-sm-20 col-60 pr-sm-3 mb-4\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-1\">Status</div>\r\n              <Select\r\n                popoverClass=\"w-100\"\r\n                onSelect={(index) =>\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      status: statuses[index],\r\n                    })\r\n                  )\r\n                }\r\n                items={statuses}\r\n                btnName={newUser.status ? newUser.status : \"Select\"}\r\n                className=\"input-light px-3 col-60\"\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-20 col-60 mb-4\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-60 mb-1\">Role</div>\r\n              <Select\r\n                popoverClass=\"w-100\"\r\n                onSelect={(index) =>\r\n                  setNewUser((prev) =>\r\n                    Object.assign({}, prev, {\r\n                      role: roles[index],\r\n                    })\r\n                  )\r\n                }\r\n                items={roles}\r\n                btnName={newUser.role ? newUser.role : \"Select\"}\r\n                className=\"input-light px-3 col-60\"\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n          className=\"row no-gutters align-items-center text-danger\"\r\n        >\r\n          {problem}\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"btn-custom btn-custom-secondary btn-small mr-sm-3 col-sm-auto col-60 mb-3\"\r\n            onClick={() => getBack()}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"btn-custom btn-custom-primary btn-small col-sm-auto col-60 mb-3\"\r\n            onClick={async () => {\r\n              let allowEdit = true;\r\n              if (newUser.password !== initialPassword) {\r\n                let invalid = validations.filter((x) => !x.valid);\r\n                if (invalid.length) {\r\n                  allowEdit = false;\r\n                  setProblem(invalid[0].error);\r\n                }\r\n              }\r\n              if (allowEdit) {\r\n                setLoading(true);\r\n                let res = await EditUserForAdmin(newUser);\r\n                setLoading(false);\r\n                if (res.error) {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Error\",\r\n                      message: res.error,\r\n                      type: \"failure\",\r\n                    },\r\n                  });\r\n                } else {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"User updated\",\r\n                      message: \"User was successfully updated\",\r\n                      type: \"success\",\r\n                    },\r\n                  });\r\n                  let publicUser = store.getState().publicUsers[newUser._id];\r\n                  publicUser.status = newUser.status;\r\n                  publicUser.role = newUser.role;\r\n                  store.dispatch({ type: \"UPDATE_PUBLICUSERS\", publicUser });\r\n                  getBack();\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            <Loader\r\n              color={\"white\"}\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: 0,\r\n                bottom: 0,\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n              loading={loading}\r\n              size={20}\r\n            ></Loader>\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n","import React, { useState } from \"react\";\r\nimport LeftSideMenu from \"./LeftSideMenu\";\r\nimport Settings from \"./Settings\";\r\nimport RightSideMenuFloating from \"./RightSideMenuFloating\";\r\nimport ReviewsAndComments from \"./ReviewAndComments\";\r\nimport EditReview from \"./EditReview\";\r\nimport { BsArrowLeft } from \"react-icons/bs\";\r\nimport EditComment from \"./EditComment\";\r\nimport Announcements from \"./Announcements\";\r\nimport EditAnnouncement from \"./EditAnnouncement\";\r\nimport AddNewAnnouncement from \"./AddNewAnnouncement\";\r\nimport Promotions from \"./Promotions\";\r\nimport EditPromotion from \"./EditPromotion\";\r\nimport AddNewPromotion from \"./AddNewPromotion\";\r\nimport Notifications from \"./Notifications\";\r\nimport EditNotification from \"./EditNotification\";\r\nimport AddNewNotification from \"./AddNewNotification\";\r\nimport Users from \"./Users\";\r\nimport AddNewUser from \"./AddNewUser\";\r\nimport EditUser from \"./EditUser\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst sections = {\r\n  settings: 0,\r\n  userManagement: 1,\r\n  reviewsAndComments: 2,\r\n  announcements: 3,\r\n  promotions: 4,\r\n  notifications: 5,\r\n  editReview: 6,\r\n  editComment: 7,\r\n  editAnnouncement: 8,\r\n  addNewAnnouncement: 9,\r\n  editPromotion: 10,\r\n  addNewPromotion: 11,\r\n  editNotification: 12,\r\n  addNewNotification: 13,\r\n  editUser: 14,\r\n  addNewUser: 15,\r\n};\r\n\r\nconst AdminDashboard = ({ dashboardMenuOpened }) => {\r\n  const [section, setSection] = useState(0);\r\n  const [editReview, setEditReview] = useState(null);\r\n  const [editComment, setEditComment] = useState(null);\r\n  const [editAnnouncement, setEditAnnouncement] = useState(null);\r\n  const [editPromotion, setEditPromotion] = useState(null);\r\n  const [editNotification, setEditNotification] = useState(null);\r\n  const [editUser, setEditUser] = useState(null);\r\n  return (\r\n    <div\r\n      className=\"row no-gutters justify-content-center\"\r\n      style={{ minHeight: window.innerHeight }}\r\n    >\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters h-100 position-relative bg-light\">\r\n          <RightSideMenuFloating\r\n            isMenuOpened={dashboardMenuOpened}\r\n            setSection={setSection}\r\n            section={section}\r\n          ></RightSideMenuFloating>\r\n          <div\r\n            className=\"col-auto d-none d-lg-block\"\r\n            style={{ width: \"300px\" }}\r\n          >\r\n            <LeftSideMenu\r\n              section={section}\r\n              setSection={setSection}\r\n            ></LeftSideMenu>\r\n          </div>\r\n          <div className=\"col\">\r\n            {section >= 6 && (\r\n              <div\r\n                className=\"row no-gutters px-md-5 px-4 pt-4\"\r\n                style={{ marginBottom: \"-40px\" }}\r\n              >\r\n                <div className=\"col-auto cursor-pointer\">\r\n                  <BsArrowLeft\r\n                    fontSize=\"24px\"\r\n                    onClick={() =>\r\n                      setSection(\r\n                        section === 6 || section === 7\r\n                          ? 2\r\n                          : section === 8 || section === 9\r\n                          ? 3\r\n                          : section === 10 || section === 11\r\n                          ? 4\r\n                          : section === 12 || section === 13\r\n                          ? 5\r\n                          : section === 14 || section === 15\r\n                          ? 1\r\n                          : 0\r\n                      )\r\n                    }\r\n                  ></BsArrowLeft>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {section === 0 ? (\r\n              <Settings></Settings>\r\n            ) : section === 1 ? (\r\n              <Users\r\n                setAddNewUserSection={() => setSection(sections[\"addNewUser\"])}\r\n                setEditUser={(u) => setEditUser(u)}\r\n                setEditUserSection={() => setSection(sections[\"editUser\"])}\r\n              ></Users>\r\n            ) : section === 2 ? (\r\n              <ReviewsAndComments\r\n                setEditReview={(rev) => setEditReview(rev)}\r\n                setEditReviewSection={() => setSection(sections[\"editReview\"])}\r\n                setEditComment={(rev) => setEditComment(rev)}\r\n                setEditCommentSection={() =>\r\n                  setSection(sections[\"editComment\"])\r\n                }\r\n              ></ReviewsAndComments>\r\n            ) : section === 3 ? (\r\n              <Announcements\r\n                setAddNewAnouncementSection={() =>\r\n                  setSection(sections[\"addNewAnnouncement\"])\r\n                }\r\n                setEditAnnouncement={(ann) => setEditAnnouncement(ann)}\r\n                setEditAnnouncementSection={() => {\r\n                  setSection(sections[\"editAnnouncement\"]);\r\n                }}\r\n              ></Announcements>\r\n            ) : section === 4 ? (\r\n              <Promotions\r\n                setAddNewPromotionSection={() =>\r\n                  setSection(sections[\"addNewPromotion\"])\r\n                }\r\n                setEditPromotion={(prom) => setEditPromotion(prom)}\r\n                setEditPromotionSection={() =>\r\n                  setSection(sections[\"editPromotion\"])\r\n                }\r\n              ></Promotions>\r\n            ) : section === 5 ? (\r\n              <Notifications\r\n                setAddNewNotificationSection={() =>\r\n                  setSection(sections[\"addNewNotification\"])\r\n                }\r\n                setEditNotification={(not) => setEditNotification(not)}\r\n                setEditNotificationSection={() =>\r\n                  setSection(sections[\"editNotification\"])\r\n                }\r\n              ></Notifications>\r\n            ) : section === 6 ? (\r\n              <EditReview\r\n                currentReview={editReview}\r\n                getBack={() => setSection(2)}\r\n              ></EditReview>\r\n            ) : section === 7 ? (\r\n              <EditComment\r\n                currentComment={editComment}\r\n                getBack={() => setSection(2)}\r\n              ></EditComment>\r\n            ) : section === 8 ? (\r\n              <EditAnnouncement\r\n                getBack={() => setSection(3)}\r\n                currentAnnouncement={editAnnouncement}\r\n              ></EditAnnouncement>\r\n            ) : section === 9 ? (\r\n              <AddNewAnnouncement getBack={() => setSection(3)} />\r\n            ) : section === 10 ? (\r\n              <EditPromotion\r\n                currentPromotion={editPromotion}\r\n                getBack={() => setSection(4)}\r\n              ></EditPromotion>\r\n            ) : section === 11 ? (\r\n              <AddNewPromotion getBack={() => setSection(4)}></AddNewPromotion>\r\n            ) : section === 12 ? (\r\n              <EditNotification\r\n                currentNotification={editNotification}\r\n                getBack={() => setSection(5)}\r\n              ></EditNotification>\r\n            ) : section === 13 ? (\r\n              <AddNewNotification\r\n                getBack={() => setSection(5)}\r\n              ></AddNewNotification>\r\n            ) : section === 14 ? (\r\n              <EditUser\r\n                currentUser={editUser}\r\n                getBack={() => setSection(1)}\r\n              ></EditUser>\r\n            ) : section === 15 ? (\r\n              <AddNewUser getBack={() => setSection(1)}></AddNewUser>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    dashboardMenuOpened: state.dashboardMenuOpened,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(AdminDashboard);\r\n","import React, { useState } from \"react\";\r\nimport history from \"../../History\";\r\nimport { Login as LoginFunction } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\nimport Logo from \"../../images/Logo\";\r\nimport { BsChevronLeft } from \"react-icons/bs\";\r\n\r\nconst handleSubmit = async (credentials) => {\r\n  let res = await LoginFunction(credentials);\r\n  if (res.error) {\r\n    store.dispatch({\r\n      type: \"SET_NOTIFICATION\",\r\n      notification: {\r\n        type: \"failure\",\r\n        title: \"Error\",\r\n        message: res.error,\r\n      },\r\n    });\r\n  } else {\r\n    localStorage.setItem(\"movies_user_token\", res.token);\r\n    store.dispatch({ type: \"SET_USER\", user: res });\r\n    history.push(\"/\");\r\n  }\r\n};\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  return (\r\n    <div\r\n      className=\"row no-gutters justify-content-center aligm-items-start align-items-sm-center\"\r\n      style={{ height: window.innerHeight }}\r\n    >\r\n      <div className=\"col-xl-50 col-60 col-lg-50 col-md-30 col-sm-40 login-rounded overflow-hidden\">\r\n        <div className=\"row no-gutters h-100\">\r\n          <div className=\"col bg-dark d-lg-block d-none\">\r\n            <div className=\"row no-gutters h-100 flex-center position-relative\">\r\n              <div\r\n                className=\"position-absolute d-flex align-items-center text-white cursor-pointer\"\r\n                onClick={() => history.push(\"/\")}\r\n                style={{ top: \"15px\", left: \"15px\" }}\r\n              >\r\n                <BsChevronLeft className=\"mr-2\"></BsChevronLeft>Back to home\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <div className=\"square-150 mx-auto\">\r\n                  <Logo></Logo>\r\n                </div>\r\n                <div className=\"logo text-title-xl text-white\">CozyPotato</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"col-60 col-lg-30 col-xl-25 col-md-auto p-sm-5 p-4 bg-light\"\r\n            style={{\r\n              minHeight: window.innerHeight - 100,\r\n            }}\r\n          >\r\n            <div className=\"row no-gutters h-100 py-3\">\r\n              <div className=\"col-60 d-flex align-items-start flex-wrap mb-5\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 h3 mb-3\">Hello, welcome back</div>\r\n                  <div className=\"col-60\">\r\n                    Login to your account to review movies and interact with\r\n                    movies community\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 d-flex align-items-end flex-wrap\">\r\n                <div className=\"row no-gutters w-100\">\r\n                  <div className=\"col-60\">\r\n                    <div className=\"row no-gutters justify-content-center mb-4\">\r\n                      <div className=\"col-60 mb-1\">Email</div>\r\n                      <div className=\"col-60\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"input-light w-100 px-3\"\r\n                          value={email}\r\n                          onChange={(e) => {\r\n                            e.persist();\r\n                            setEmail(e.target.value);\r\n                          }}\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row no-gutters mb-4\">\r\n                      <div className=\"col-60 mb-1\">Password</div>\r\n                      <div className=\"col-60\">\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"input-light w-100 px-3\"\r\n                          value={password}\r\n                          onChange={(e) => {\r\n                            e.persist();\r\n                            setPassword(e.target.value);\r\n                          }}\r\n                          onKeyDown={(e) => {\r\n                            if (e.keyCode === 13) {\r\n                              handleSubmit({ email, password });\r\n                            }\r\n                          }}\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row no-gutters mb-4\">\r\n                      <div\r\n                        className=\"col-60 btn-custom btn-custom-primary\"\r\n                        onClick={() => handleSubmit({ email, password })}\r\n                      >\r\n                        Login\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      className=\"row no-gutters justify-content-between\"\r\n                      style={{ fontSize: \"14px\" }}\r\n                    >\r\n                      <div className=\"col-auto mr-4\">\r\n                        Don't have an account?{\" \"}\r\n                        <span\r\n                          className=\"btn-link cursor-pointer\"\r\n                          onClick={() => history.push(\"/signup\")}\r\n                        >\r\n                          Sign up\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"col-auto btn-link cursor-pointer\">\r\n                        Forgot password\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport FileViewer from \"react-file-viewer\";\r\nimport TermsAndConditions from \"../../documents/TermsAndConditions.docx\";\r\nimport PrivacyPolicy from \"../../documents/PrivacyPolicy.docx\";\r\nimport CookiePolicy from \"../../documents/CookiesPolicy.docx\";\r\n\r\nconst LegalDocument = ({ type }) => {\r\n  return (\r\n    <div className=\"row no-gutters px-0\">\r\n      <div className=\"col-60 py-5 text-dark\">\r\n        <FileViewer\r\n          fileType={\"docx\"}\r\n          filePath={\r\n            type === \"privacy-policy\"\r\n              ? PrivacyPolicy\r\n              : type === \"cookies-policy\"\r\n              ? CookiePolicy\r\n              : type === \"terms-and-conditions\"\r\n              ? TermsAndConditions\r\n              : \"\"\r\n          }\r\n          errorComponent={() => <div></div>}\r\n          onError={() => console.log(\"error doc\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LegalDocument;\r\n","import React, { useState } from \"react\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport history from \"../../History\";\r\nimport { Signup as SignupFunction } from \"../../server/DatabaseApi\";\r\nimport { validateEmail } from \"../../utilities/Functions\";\r\nimport store from \"../../store/store\";\r\nimport Logo from \"../../images/Logo\";\r\nimport Checkbox from \"../utility/Checkbox\";\r\nimport Modal from \"../utility/Modal\";\r\nimport LegalDocument from \"../user/LegalDocument\";\r\nimport { BsChevronLeft } from \"react-icons/bs\";\r\nimport { CaptchaApiKey } from \"../../Settings\";\r\n\r\nconst Signup = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [validated, setValidated] = useState(false);\r\n  const [agreedWithPolicies, setAgreedWithPolicies] = useState(false);\r\n  const [problem, setProblem] = useState(\"\");\r\n  const [legalDocument, setLegalDocument] = useState(\"\");\r\n\r\n  const validations = [\r\n    { valid: validateEmail(email), error: \"Email is not valid\" },\r\n    {\r\n      valid: /[^\\w\\s]/.test(password) || /\\d/.test(password),\r\n      error: \"Password must contain number or symbol\",\r\n    },\r\n    {\r\n      valid: password === confirmPassword,\r\n      error: \"Passwords don't match\",\r\n    },\r\n    {\r\n      valid: password.length >= 6,\r\n      error: \"Password must contain at least 6 characters\",\r\n    },\r\n    {\r\n      valid: validated,\r\n      error: \"Pass captcha validation\",\r\n    },\r\n\r\n    {\r\n      valid: agreedWithPolicies,\r\n      error: \"Check if you agree with privacy policy and terms and conditions\",\r\n    },\r\n  ];\r\n\r\n  const handleSubmit = async () => {\r\n    let notValid = validations.filter((x) => !x.valid);\r\n    if (notValid.length === 0) {\r\n      let res = await SignupFunction({ email, password });\r\n      if (res.success) {\r\n        store.dispatch({\r\n          type: \"SET_NOTIFICATION\",\r\n          notification: {\r\n            title: \"Account created!\",\r\n            message:\r\n              \"Login to start writing reviews and comments about your favorite movies\",\r\n            type: \"success\",\r\n          },\r\n        });\r\n\r\n        store.dispatch({\r\n          type: \"UPDATE_PUBLICUSERS\",\r\n          publicUser: { [res.publicUser.user_id]: res.publicUser },\r\n        });\r\n        history.push(\"/login\");\r\n      } else {\r\n        store.dispatch({\r\n          type: \"SET_NOTIFICATION\",\r\n          notification: {\r\n            message: res.error,\r\n            type: \"failure\",\r\n            title: \"Failed create account\",\r\n          },\r\n        });\r\n      }\r\n    } else {\r\n      setProblem(notValid[0].error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"row no-gutters justify-content-center aligm-items-start align-items-sm-center py-sm-3\"\r\n      style={{ minHeight: window.innerHeight }}\r\n    >\r\n      <Modal open={legalDocument} onClose={() => setLegalDocument(\"\")}>\r\n        <LegalDocument type={legalDocument}></LegalDocument>\r\n      </Modal>\r\n      <div className=\"col-xl-50 col-60 col-lg-50 col-md-30 col-sm-40 login-rounded overflow-hidden\">\r\n        <div className=\"row no-gutters h-100\">\r\n          <div className=\"col bg-dark d-lg-block d-none text-center\">\r\n            <div className=\"row no-gutters h-100 flex-center position-relative\">\r\n              <div\r\n                className=\"position-absolute d-flex align-items-center text-white cursor-pointer\"\r\n                onClick={() => history.push(\"/\")}\r\n                style={{ top: \"15px\", left: \"15px\" }}\r\n              >\r\n                <BsChevronLeft className=\"mr-2\"></BsChevronLeft>Back to home\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <div className=\"square-150 mx-auto\">\r\n                  <Logo></Logo>\r\n                </div>\r\n                <div className=\"logo text-title-xl text-white\">CozyPotato</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"col-60 col-lg-30 col-xl-25 col-md-auto p-4 p-sm-5 bg-light\"\r\n            style={{\r\n              minHeight: window.innerHeight - 100,\r\n            }}\r\n          >\r\n            <div className=\"row no-gutters h-100\">\r\n              <div className=\"col-60 d-flex align-items-start flex-wrap\">\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-60 h3 mb-3\">Create Account</div>\r\n                  {/* <div className=\"col-60\">\r\n                    By creating account you will be joining milions of people on\r\n                    the largest movies reviewing platform\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-60 d-flex align-items-end flex-wrap\">\r\n                <div className=\"row no-gutters w-100\">\r\n                  <div className=\"col-60\">\r\n                    <div className=\"row no-gutters justify-content-center mb-3\">\r\n                      <div className=\"col-60 mb-1\">Email</div>\r\n                      <div className=\"col-60\">\r\n                        <input\r\n                          type=\"email\"\r\n                          className=\"input-light w-100 px-3\"\r\n                          value={email}\r\n                          onChange={(e) => {\r\n                            e.persist();\r\n                            setEmail(e.target.value);\r\n                          }}\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row no-gutters mb-3\">\r\n                      <div className=\"col-60 mb-1\">Password</div>\r\n                      <div className=\"col-60 mb-1\">\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"input-light w-100 px-3\"\r\n                          value={password}\r\n                          onChange={(e) => {\r\n                            e.persist();\r\n                            setPassword(e.target.value);\r\n                          }}\r\n                        ></input>\r\n                      </div>\r\n                      <div className=\"col-60 text-muted font-size-14\">\r\n                        Must be at least 6 characters and must contain number or\r\n                        symbol\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row no-gutters mb-3\">\r\n                      <div className=\"col-60 mb-1\">Confirm Password</div>\r\n                      <div className=\"col-60 mb-1\">\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"input-light w-100 px-3\"\r\n                          value={confirmPassword}\r\n                          onKeyDown={(e) => {\r\n                            if (e.keyCode === 13) {\r\n                              handleSubmit();\r\n                            }\r\n                          }}\r\n                          onChange={(e) => {\r\n                            e.persist();\r\n                            setConfirmPassword(e.target.value);\r\n                          }}\r\n                        ></input>\r\n                      </div>\r\n                      <div className=\"col-60 text-muted font-size-14\">\r\n                        Must be at least 6 characters and must contain number or\r\n                        symbol\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row no-gutters mb-3\">\r\n                      <ReCAPTCHA\r\n                        sitekey={CaptchaApiKey}\r\n                        onChange={(value) => {\r\n                          if (value) {\r\n                            setValidated(true);\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                      <div className=\"col-auto mr-2\">\r\n                        <Checkbox\r\n                          color={\"primary\"}\r\n                          checked={agreedWithPolicies}\r\n                          onChange={(e) => {\r\n                            setAgreedWithPolicies(e.target.checked);\r\n                          }}\r\n                        ></Checkbox>\r\n                      </div>\r\n                      <div className=\"col\">\r\n                        By registering you agree with{\" \"}\r\n                        <span\r\n                          onClick={() =>\r\n                            setLegalDocument(\"terms-and-conditions\")\r\n                          }\r\n                          className=\"btn-link\"\r\n                        >\r\n                          terms and conditions\r\n                        </span>{\" \"}\r\n                        and{\" \"}\r\n                        <span\r\n                          className=\"btn-link\"\r\n                          onClick={() => setLegalDocument(\"privacy-policy\")}\r\n                        >\r\n                          privacy policy\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      style={{ height: \"40px\", opacity: problem ? 1 : 0 }}\r\n                      className=\"row no-gutters align-items-center text-danger\"\r\n                    >\r\n                      {problem}\r\n                    </div>\r\n                    <div className=\"row no-gutters mb-3\">\r\n                      <div\r\n                        className=\"col-60 btn-custom btn-custom-primary\"\r\n                        onClick={handleSubmit}\r\n                      >\r\n                        Create Account\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      className=\"row no-gutters justify-content-between\"\r\n                      style={{ fontSize: \"14px\" }}\r\n                    >\r\n                      <div className=\"col-auto mr-4\">\r\n                        Already have account?{\" \"}\r\n                        <span\r\n                          className=\"btn-link cursor-pointer\"\r\n                          onClick={() => history.push(\"/login\")}\r\n                        >\r\n                          Login\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"col-auto btn-link cursor-pointer\">\r\n                        Forgot password\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport { BsCheck, BsExclamation, BsX } from \"react-icons/bs\";\r\nimport { CreateNotification } from \"../../server/DatabaseApi\";\r\n\r\nconst Toast = ({ notification, publicUsers }) => {\r\n  const [hovered, setHovered] = useState(false);\r\n  const [expired, setExpired] = useState(false);\r\n  useEffect(() => {\r\n    let timeout;\r\n    if (!notification.expired) {\r\n      timeout = setTimeout(() => {\r\n        setExpired(true);\r\n      }, 5000);\r\n    }\r\n\r\n    return function cleanUp() {\r\n      if (!notification.expired && timeout) {\r\n        clearTimeout(timeout);\r\n      }\r\n    };\r\n  }, [notification]);\r\n\r\n  useEffect(() => {\r\n    if (expired && !hovered) {\r\n      store.dispatch({\r\n        type: \"UPDATE_NOTIFICATION\",\r\n        notification: { expired: true },\r\n      });\r\n      setExpired(false);\r\n    }\r\n  }, [expired, hovered]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      notification.type !== \"success\" &&\r\n      typeof notification.message === \"object\"\r\n    ) {\r\n      let adminNotification = {\r\n        type: \"failure\",\r\n        subject: \"System error occured\",\r\n        receivers: Object.values(publicUsers).filter(\r\n          (x) => x.role === \"Administrator\"\r\n        ),\r\n        start_date: Date.now(),\r\n        end_date: Date.now(),\r\n        description: JSON.stringify(notification.message).replace(/\"/g, \"\"),\r\n        status: \"Sent\",\r\n      };\r\n      CreateNotification(adminNotification);\r\n    }\r\n  }, [notification.message]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <div\r\n      onMouseOver={() => setHovered(true)}\r\n      onMouseLeave={() => setHovered(false)}\r\n      className=\"container-fluid toast-pro bg-over-root px-0\"\r\n      style={{\r\n        maxWidth: \"300px\",\r\n        bottom: notification.expired ? \"-100%\" : \"50px\",\r\n      }}\r\n    >\r\n      <div className=\"row no-gutters p-3\">\r\n        {notification.type && (\r\n          <div className=\"col-auto pr-2\">\r\n            {notification.type === \"success\" ? (\r\n              <BsCheck\r\n                strokeWidth=\"1px\"\r\n                fontSize=\"24px\"\r\n                className=\"text-success\"\r\n              ></BsCheck>\r\n            ) : (\r\n              <BsExclamation\r\n                strokeWidth=\"1px\"\r\n                fontSize=\"24px\"\r\n                className=\"text-primary\"\r\n              ></BsExclamation>\r\n            )}\r\n          </div>\r\n        )}\r\n        <div className=\"col pr-2 toast-title\">{notification.title}</div>\r\n        <div\r\n          className=\"col-auto toast-close-icon\"\r\n          onClick={() =>\r\n            store.dispatch({\r\n              type: \"UPDATE_NOTIFICATION\",\r\n              notification: { expired: true },\r\n            })\r\n          }\r\n        >\r\n          <BsX fontSize=\"24px\" className=\"text-white\"></BsX>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row no-gutters p-4 text-white\">\r\n        {notification.type !== \"success\"\r\n          ? typeof notification.message === \"object\"\r\n            ? \"Action failed\"\r\n            : notification.message\r\n          : notification.message}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    notification: state.notification,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Toast);\r\n","import React, { useState } from \"react\";\r\nimport { MdRemoveRedEye } from \"react-icons/md\";\r\nimport Popover from \"../utility/Popover\";\r\nimport Loader from \"../utility/Loader\";\r\nimport { MoveMovieToWatchList } from \"../../server/DatabaseApi\";\r\nimport store from \"../../store/store\";\r\n\r\nconst MoveToWatchedButton = ({ user, movieId, refreshProfile = () => {} }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const handleClick = async () => {\r\n    if (user.display_name) {\r\n      if (movieId) {\r\n        setLoading(true);\r\n        let res = await MoveMovieToWatchList(user, movieId);\r\n        setLoading(false);\r\n        if (res.updatedUser) {\r\n          let wishlist = [...user.wishlist];\r\n          let movieIndex = wishlist.findIndex((x) => x.movie_id === movieId);\r\n          if (movieIndex !== -1) {\r\n            wishlist.splice(movieIndex);\r\n          }\r\n          store.dispatch({\r\n            type: \"UPDATE_USER\",\r\n            userProperty: res.updatedUser,\r\n          });\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: `Movie marked as watched`,\r\n              message: `Movie successfully added to your watched list`,\r\n              type: \"success\",\r\n            },\r\n          });\r\n          refreshProfile();\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Error\",\r\n              message: JSON.stringify(res.error).replace(/\"/g, \"\"),\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      store.dispatch({\r\n        type: \"SET_NOTIFICATION\",\r\n        notification: {\r\n          title: \"Action not allowed\",\r\n          message: \"You need to login to add movie to wishlist\",\r\n          type: \"failure\",\r\n        },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Popover\r\n      theme=\"dark\"\r\n      position=\"top\"\r\n      content={(w) => <div className=\"px-3 py-2\">Mark as watched</div>}\r\n      trigger=\"mouseenter\"\r\n    >\r\n      <div\r\n        className=\"btn-custom btn-custom-iconic\"\r\n        style={{ pointerEvents: \"all\" }}\r\n      >\r\n        {loading ? (\r\n          <Loader size={30} loading={loading} color={\"white\"}></Loader>\r\n        ) : (\r\n          <MdRemoveRedEye\r\n            onClick={handleClick}\r\n            className=\"text-title-xl\"\r\n          ></MdRemoveRedEye>\r\n        )}\r\n      </div>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default MoveToWatchedButton;\r\n","import React, { useState } from \"react\";\r\nimport history from \"../../../History\";\r\nimport WishlistButton from \"../WishlistButton\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactionButton from \"../ReactionButton\";\r\nimport { BsPlayFill } from \"react-icons/bs\";\r\nimport Paigination from \"../../utility/Paigination\";\r\nimport TrailerPlayer from \"../TrailerPlayer\";\r\nimport Modal from \"../../utility/Modal\";\r\nimport MoveToWatchedButton from \"../MoveToWatchedButton\";\r\n\r\nconst MoviesList = ({\r\n  movies,\r\n  user,\r\n  ratings,\r\n  listType = \"not wishlist\",\r\n  owner = false,\r\n  refreshProfile = () => {},\r\n}) => {\r\n  const [page, setPage] = useState(1);\r\n  const maxItemsPerPage = 12;\r\n  const [trailerMovieId, setTrailerMovieId] = useState(\"\");\r\n  const [openTrailer, setOpenTrailer] = useState(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Modal open={openTrailer} onClose={() => setOpenTrailer(false)}>\r\n        <TrailerPlayer\r\n          movieId={trailerMovieId}\r\n          onEnded={() => setOpenTrailer(false)}\r\n        ></TrailerPlayer>\r\n      </Modal>\r\n      <div className=\"row\">\r\n        {movies.map((x, i) => {\r\n          let formatedMovie = ratings[x.movie_id]\r\n            ? {\r\n                id: x.movie_id,\r\n                title: ratings[x.movie_id].movie_title,\r\n                poster_path: ratings[x.movie_id].movie_poster,\r\n                genres: ratings[x.movie_id].movie_genres,\r\n              }\r\n            : { id: x.movie_id, title: \"\", poster_path: \"\", genres: [] };\r\n          return (\r\n            <div\r\n              key={`result-${i}`}\r\n              className=\"col-lg-12 col-md-15 col-sm-20 col-60 p-3 text-white\"\r\n            >\r\n              {listType !== \"watchedlist\" && owner ? (\r\n                <div\r\n                  className=\"row no-gutters justify-content-end position-relative px-2 d-none d-sm-flex\"\r\n                  style={{\r\n                    marginBottom: \"-51px\",\r\n                    zIndex: 5,\r\n                    height: \"44px\",\r\n                    pointerEvents: \"none\",\r\n                  }}\r\n                >\r\n                  <React.Fragment>\r\n                    <WishlistButton\r\n                      movie={formatedMovie}\r\n                      user={user}\r\n                    ></WishlistButton>\r\n                    {listType === \"wishlist\" ? (\r\n                      <React.Fragment>\r\n                        <div className=\"pl-1\"></div>\r\n                        <MoveToWatchedButton\r\n                          refreshProfile={refreshProfile}\r\n                          user={user}\r\n                          movieId={formatedMovie.id}\r\n                        ></MoveToWatchedButton>\r\n                      </React.Fragment>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </React.Fragment>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <div className=\"row no-gutters\">\r\n                <div className=\"col-sm-60 col-auto mr-3 mr-sm-0\">\r\n                  <div className=\"row no-gutters mb-2 position-relative movies-list-image\">\r\n                    <img\r\n                      alt={`poster of ${formatedMovie.id}`}\r\n                      width=\"100%\"\r\n                      style={{ borderRadius: \"13px\" }}\r\n                      src={\r\n                        formatedMovie.poster_path\r\n                          ? `https://image.tmdb.org/t/p/w342${formatedMovie.poster_path}`\r\n                          : \"https://critics.io/img/movies/poster-placeholder.png\"\r\n                      }\r\n                    ></img>\r\n                    <div\r\n                      onClick={() => history.push(`/movie/${formatedMovie.id}`)}\r\n                      className=\"col-60 h-100 text-white d-flex flex-center img-cover cursor-pointer\"\r\n                      style={{\r\n                        left: 0,\r\n                        top: 0,\r\n                        position: \"absolute\",\r\n                        zIndex: 4,\r\n                        borderRadius: \"13px\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        className=\"square-50 rounded-circle d-flex flex-center play-btn\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          setTrailerMovieId(formatedMovie.id);\r\n                          setOpenTrailer(true);\r\n                        }}\r\n                      >\r\n                        <BsPlayFill\r\n                          style={{\r\n                            fontSize: \"30px\",\r\n                            color: \"white\",\r\n                            marginRight: \"-5px\",\r\n                          }}\r\n                        ></BsPlayFill>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-sm-60 col\">\r\n                  <div\r\n                    className=\"row no-gutters text-title-md mb-0 cursor-pointer\"\r\n                    onClick={() => history.push(`/movie/${formatedMovie.id}`)}\r\n                  >\r\n                    <div className=\"text-truncate\">{formatedMovie.title}</div>\r\n                  </div>\r\n                  <div className=\"row no-gutters text-muted mb-2\">\r\n                    <div className=\"text-truncate\">\r\n                      {formatedMovie.genres.length\r\n                        ? formatedMovie.genres.join(\"/\")\r\n                        : \"unknown\"}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row no-gutters mb-2 justify-content-end\">\r\n                    <ReactionButton\r\n                      size=\"small\"\r\n                      selected={\r\n                        user.ratings[formatedMovie.id]\r\n                          ? user.ratings[formatedMovie.id].rate_type ===\r\n                            \"excellent_rate\"\r\n                          : false\r\n                      }\r\n                      movie={formatedMovie}\r\n                      emoji=\"fire\"\r\n                      className=\"mr-1 mb-2\"\r\n                      value={\r\n                        ratings[formatedMovie.id]\r\n                          ? ratings[formatedMovie.id].excellent_rate\r\n                          : 0\r\n                      }\r\n                    ></ReactionButton>\r\n                    <ReactionButton\r\n                      size=\"small\"\r\n                      selected={\r\n                        user.ratings[formatedMovie.id]\r\n                          ? user.ratings[formatedMovie.id].rate_type ===\r\n                            \"good_rate\"\r\n                          : false\r\n                      }\r\n                      movie={formatedMovie}\r\n                      emoji=\"heart\"\r\n                      className=\"mr-1 mb-2\"\r\n                      value={\r\n                        ratings[formatedMovie.id]\r\n                          ? ratings[formatedMovie.id].good_rate\r\n                          : 0\r\n                      }\r\n                    ></ReactionButton>\r\n                    <ReactionButton\r\n                      size=\"small\"\r\n                      selected={\r\n                        user.ratings[formatedMovie.id]\r\n                          ? user.ratings[formatedMovie.id].rate_type ===\r\n                            \"ok_rate\"\r\n                          : false\r\n                      }\r\n                      movie={formatedMovie}\r\n                      className=\"mr-1 mb-2\"\r\n                      emoji=\"heavy_division_sign\"\r\n                      value={\r\n                        ratings[formatedMovie.id]\r\n                          ? ratings[formatedMovie.id].ok_rate\r\n                          : 0\r\n                      }\r\n                    ></ReactionButton>\r\n                    <ReactionButton\r\n                      size=\"small\"\r\n                      emoji=\"shit\"\r\n                      value={\r\n                        ratings[formatedMovie.id]\r\n                          ? ratings[formatedMovie.id].bad_rate\r\n                          : 0\r\n                      }\r\n                      selected={\r\n                        user.ratings[formatedMovie.id]\r\n                          ? user.ratings[formatedMovie.id].rate_type ===\r\n                            \"bad_rate\"\r\n                          : false\r\n                      }\r\n                      movie={formatedMovie}\r\n                    ></ReactionButton>\r\n                  </div>\r\n                  <div className=\"row no-gutters d-flex d-sm-none\">\r\n                    {listType !== \"watchedlist\" ? (\r\n                      <React.Fragment>\r\n                        <WishlistButton\r\n                          movie={formatedMovie}\r\n                          user={user}\r\n                        ></WishlistButton>\r\n                        {listType === \"wishlist\" ? (\r\n                          <React.Fragment>\r\n                            <div className=\"pl-1\"></div>\r\n                            <MoveToWatchedButton\r\n                              refreshProfile={refreshProfile}\r\n                              user={user}\r\n                              movieId={formatedMovie.id}\r\n                            ></MoveToWatchedButton>\r\n                          </React.Fragment>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </React.Fragment>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"row no-gutters justify-content-end\">\r\n        <div className=\"col-auto\">\r\n          <Paigination\r\n            classNames={{\r\n              notSelected: \"input-dark\",\r\n              selected: \"input-dark-selected\",\r\n            }}\r\n            count={Math.ceil(movies.length / maxItemsPerPage)}\r\n            current={page}\r\n            setCurrent={setPage}\r\n          ></Paigination>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(MoviesList);\r\n","import React, { useState } from \"react\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport \"simplebar/dist/simplebar.min.css\";\r\nimport MoviesList from \"./MoviesList\";\r\n\r\nconst extractGenres = (movies, ratings) => {\r\n  let genres = [\"All\"];\r\n  movies.forEach((x) => {\r\n    if (ratings[x.movie_id]) {\r\n      ratings[x.movie_id].movie_genres.forEach((g) => {\r\n        if (g.name) {\r\n          if (!genres.includes(g.name)) {\r\n            genres.push(g.name);\r\n          }\r\n        } else {\r\n          if (!genres.includes(g)) {\r\n            genres.push(g);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n  return genres;\r\n};\r\n\r\nconst Wishlist = ({ movies, owner, refreshProfile, ratings }) => {\r\n  const [selectedGenre, setSelectedGenre] = useState(0);\r\n  const genres = extractGenres(movies, ratings);\r\n\r\n  return (\r\n    <div className=\"col-60 px-0\">\r\n      <div className=\"row no-gutters justify-content-end text-light align-items-center mb-2\">\r\n        <div className=\"col-auto\">\r\n          {genres.length > 1 ? (\r\n            <SimpleBar\r\n              style={{\r\n                padding: \"14px 0\",\r\n                width: \"100%\",\r\n                overflowX: \"auto\",\r\n                whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              {genres.map((x, i) => (\r\n                <div\r\n                  onClick={() => {\r\n                    setSelectedGenre(i);\r\n                  }}\r\n                  style={{ display: \"inline-block\" }}\r\n                  key={`genre-for-popular-movie-${i}`}\r\n                  className={`px-4 ${\r\n                    selectedGenre === i\r\n                      ? \"btn-tertiary-selected text-white\"\r\n                      : \"btn-tertiary text-light-white\"\r\n                  }`}\r\n                >\r\n                  {x}\r\n                </div>\r\n              ))}\r\n            </SimpleBar>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n      {movies.length ? (\r\n        <MoviesList\r\n          refreshProfile={refreshProfile}\r\n          owner={owner}\r\n          listType=\"wishlist\"\r\n          movies={movies.filter(\r\n            (x) =>\r\n              (ratings[x.movie_id] &&\r\n                ratings[x.movie_id].movie_genres.includes(\r\n                  genres[selectedGenre]\r\n                )) ||\r\n              genres[selectedGenre] === \"All\"\r\n          )}\r\n        ></MoviesList>\r\n      ) : (\r\n        <div\r\n          className=\"row no-gutters flex-center bg-over-root-lighter rounded p-5 text-white\"\r\n          style={{ height: \"150px\" }}\r\n        >\r\n          You have not added any movies/series to your wishlist.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wishlist;\r\n","import React, { useState } from \"react\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport \"simplebar/dist/simplebar.min.css\";\r\nimport MoviesList from \"./MoviesList\";\r\n\r\nconst extractGenres = (movies, ratings) => {\r\n  let genres = [\"All\"];\r\n  movies.forEach((x) => {\r\n    if (ratings[x.movie_id]) {\r\n      ratings[x.movie_id].movie_genres.forEach((g) => {\r\n        if (g.name) {\r\n          if (!genres.includes(g.name)) {\r\n            genres.push(g.name);\r\n          }\r\n        } else {\r\n          if (!genres.includes(g)) {\r\n            genres.push(g);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n  return genres;\r\n};\r\n\r\nconst Wishlist = ({ movies, ratings }) => {\r\n  const [selectedGenre, setSelectedGenre] = useState(0);\r\n  const genres = extractGenres(movies, ratings);\r\n  return (\r\n    <div className=\"col-60 px-0\">\r\n      <div className=\"row no-gutters justify-content-end text-light align-items-center mb-2\">\r\n        <div className=\"col-auto\">\r\n          {genres.length > 1 ? (\r\n            <SimpleBar\r\n              style={{\r\n                padding: \"14px 0\",\r\n                maxWidth: \"100%\",\r\n                overflowX: \"auto\",\r\n                whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              {genres.map((x, i) => (\r\n                <div\r\n                  onClick={() => {\r\n                    setSelectedGenre(i);\r\n                  }}\r\n                  style={{ display: \"inline-block\" }}\r\n                  key={`genre-for-popular-movie-${i}`}\r\n                  className={`px-4 ${\r\n                    selectedGenre === i\r\n                      ? \"btn-tertiary-selected text-white\"\r\n                      : \"btn-tertiary text-light-white\"\r\n                  }`}\r\n                >\r\n                  {x}\r\n                </div>\r\n              ))}\r\n            </SimpleBar>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n      {movies.length ? (\r\n        <MoviesList\r\n          listType=\"watchedlist\"\r\n          movies={movies.filter(\r\n            (x) =>\r\n              (ratings[x.movie_id] &&\r\n                ratings[x.movie_id].movie_genres.includes(\r\n                  genres[selectedGenre]\r\n                )) ||\r\n              genres[selectedGenre] === \"All\"\r\n          )}\r\n        ></MoviesList>\r\n      ) : (\r\n        <div\r\n          className=\"row no-gutters flex-center bg-over-root-lighter rounded p-5 text-white\"\r\n          style={{ height: \"150px\" }}\r\n        >\r\n          You have not watched any movies/series yet. Please go to your wishlist\r\n          any mark titles as watched.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wishlist;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport date from \"date-and-time\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport { MdThumbUp, MdChatBubble } from \"react-icons/md\";\r\nimport { GetReviewComments } from \"../../../server/DatabaseApi\";\r\nimport { connect } from \"react-redux\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport Paigination from \"../../utility/Paigination\";\r\nimport history from \"../../../History\";\r\n\r\nconst Reviews = ({ reviews, publicUsers, ratings }) => {\r\n  //comments object.Its property will be review id.\r\n  const [comments, setComments] = useState({});\r\n\r\n  //\r\n  const [reviewIdOfVisibleComments, setReviewIdOfVisibleComments] = useState(\r\n    -1\r\n  );\r\n\r\n  // partitioning reviews into pages (8 reviews per page)\r\n  const [page, setPage] = useState(-1);\r\n  const [commentsPage, setCommentsPage] = useState(1);\r\n\r\n  // reference to top of the reviews block to scroll into view after changing the page\r\n  const topOfReviewsBlock = useRef(null);\r\n\r\n  const commentsPerPage = 5;\r\n  const reviewsPerPage = 8;\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (reviewIdOfVisibleComments !== -1) {\r\n        let data = await GetReviewComments(reviewIdOfVisibleComments);\r\n        setComments((prev) =>\r\n          Object.assign({}, prev, { [reviewIdOfVisibleComments]: data })\r\n        );\r\n      }\r\n    }\r\n    getData();\r\n  }, [reviewIdOfVisibleComments]);\r\n\r\n  //to avoid scroll into view on first render\r\n  let realPage = page === -1 ? 1 : page;\r\n\r\n  return (\r\n    <div className=\"row no-gutters text-white\">\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters mb-2\" ref={topOfReviewsBlock}></div>\r\n        {reviews.length ? (\r\n          reviews\r\n            .slice(\r\n              (realPage - 1) * reviewsPerPage,\r\n              (realPage - 1) * reviewsPerPage + reviewsPerPage\r\n            )\r\n            .map((x, i) =>\r\n              ratings[x.movie_id] ? (\r\n                <React.Fragment key={`fragment-review-${i}`}>\r\n                  <div\r\n                    key={`review-${i}`}\r\n                    className=\"row no-gutters p-4 bg-over-root-lighter rounded mb-2\"\r\n                  >\r\n                    <div\r\n                      className=\"col-sm-auto col-20 pr-4 d-none d-sm-block\"\r\n                      style={{ maxWidth: \"150px\" }}\r\n                    >\r\n                      <div className=\"row no-gutters mb-1\">\r\n                        <img\r\n                          alt={ratings[x.movie_id].movie_poster}\r\n                          onClick={() => history.push(`/movie/${x.id}`)}\r\n                          width=\"100%\"\r\n                          style={{ borderRadius: \"13px\" }}\r\n                          src={`https://image.tmdb.org/t/p/w154${\r\n                            ratings[x.movie_id].movie_poster\r\n                          }`}\r\n                        ></img>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col d-flex flex-column\">\r\n                      <div className=\"row no-gutters justify-content-between align-items-center mb-2 flex-grow-0\">\r\n                        <div className=\"col-60 d-block d-sm-none mb-3\">\r\n                          <div className=\"row no-gutters mb-1\">\r\n                            <div className=\"col-auto pr-3\">\r\n                              <div\r\n                                className=\"square-70 rounded bg-image\"\r\n                                style={{\r\n                                  backgroundImage: `url(https://image.tmdb.org/t/p/w154${\r\n                                    ratings[x.movie_id].movie_poster\r\n                                  })`,\r\n                                }}\r\n                              ></div>\r\n                              {/* <img\r\n                            onClick={() => history.push(`/movie/${x.id}`)}\r\n                            width=\"100%\"\r\n                            style={{ borderRadius: \"13px\" }}\r\n                            src={`https://image.tmdb.org/t/p/w154${x.movie_poster}`}\r\n                          ></img> */}\r\n                            </div>\r\n                            <div className=\"col\">\r\n                              <div className=\"row no-gutters text-white mb-0\">\r\n                                {ratings[x.movie_id].movie_title} (\r\n                                {ratings[\r\n                                  x.movie_id\r\n                                ].movie_release_date.substring(0, 4)}\r\n                                )\r\n                              </div>\r\n                              {/* <div className=\"row no-gutters text-muted\">\r\n                            {x.movie_genres}\r\n                          </div> */}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                          <div className=\"row no-gutters align-items-center\">\r\n                            <div className=\"col-auto pr-2\">\r\n                              <div\r\n                                className=\"bg-image rounded-circle square-40\"\r\n                                style={{\r\n                                  backgroundImage: `url(${\r\n                                    publicUsers[x.author]\r\n                                      ? publicUsers[x.author].photo\r\n                                      : \"\"\r\n                                  })`,\r\n                                }}\r\n                              ></div>\r\n                            </div>\r\n                            <div className=\"col-auto\">\r\n                              <div className=\"row no-gutters align-items-center text-white\">\r\n                                <div className=\"col-auto mr-3 mb-0\">\r\n                                  {publicUsers[x.author]\r\n                                    ? publicUsers[x.author].display_name\r\n                                    : \"\"}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                          <div className=\"row no-gutters text-white\">\r\n                            <span className=\"mr-2\">Posted review on</span>\r\n                            <span className=\"text-muted\">\r\n                              {date.format(new Date(x.date), \"MMM DD, YYYY\")}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"row no-gutters text-light mb-3 flex-grow-0 font-weigt-300 text-break\">\r\n                        {x.review}\r\n                      </div>\r\n                      <div className=\"row no-gutters align-items-center\">\r\n                        {x.rating ? (\r\n                          <div style={{ marginBottom: \"-6px\" }}>\r\n                            <Emoji\r\n                              emoji={\r\n                                x.rating === \"excellent_rate\"\r\n                                  ? \"fire\"\r\n                                  : x.rating === \"good_rate\"\r\n                                  ? \"heart\"\r\n                                  : x.rating === \"ok_rate\"\r\n                                  ? \"heavy-division-sign\"\r\n                                  : \"shit\"\r\n                              }\r\n                              set=\"facebook\"\r\n                              size={24}\r\n                            />\r\n                          </div>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                      <div className=\"row no-gutters flex-grow-1\">\r\n                        <div className=\"col-60 d-flex flex-column justify-content-end\">\r\n                          <div className=\"row no-gutters justify-content-end align-items-center text-white\">\r\n                            <div className=\"col-auto\">\r\n                              <div className=\"row no-gutters align-items-center\">\r\n                                <div className=\"col-auto mr-2\">\r\n                                  {x.likes.length}\r\n                                </div>\r\n                                <div className=\"col-auto mr-2 \">\r\n                                  <MdThumbUp\r\n                                    fontSize=\"24px\"\r\n                                    className=\"text-green\"\r\n                                  ></MdThumbUp>\r\n                                </div>\r\n                                <div className=\"col-auto mr-2\">\r\n                                  {x.comments.length}\r\n                                </div>\r\n                                <div className=\"col-auto mr-2\">\r\n                                  <MdChatBubble\r\n                                    onClick={() => {\r\n                                      setReviewIdOfVisibleComments(\r\n                                        reviewIdOfVisibleComments === x._id\r\n                                          ? -1\r\n                                          : x._id\r\n                                      );\r\n                                    }}\r\n                                    fontSize=\"24px\"\r\n                                    className=\"text-orange scale-transition cursor-pointer\"\r\n                                  ></MdChatBubble>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <Collapse\r\n                    in={reviewIdOfVisibleComments === x._id}\r\n                    className=\"mb-3\"\r\n                  >\r\n                    <div className=\"ml-4 h5 py-2 text-white\">\r\n                      Comments ({comments[x._id] ? comments[x._id].length : 0})\r\n                    </div>\r\n                    {comments[x._id]\r\n                      ? comments[x._id]\r\n                          .slice(\r\n                            commentsPage * (commentsPage - 1),\r\n                            commentsPage * (commentsPage - 1) + commentsPerPage\r\n                          )\r\n                          .map((y, ind) => (\r\n                            <div\r\n                              key={`comment-${reviewIdOfVisibleComments}-${ind}`}\r\n                              className=\"row no-gutters p-4 bg-over-root-lighter rounded ml-4 mb-2\"\r\n                            >\r\n                              <div className=\"col-auto pr-4 d-none d-md-block\">\r\n                                <div\r\n                                  className=\"bg-image rounded-circle square-70\"\r\n                                  style={{\r\n                                    backgroundImage: `url(${\r\n                                      publicUsers[y.author]\r\n                                        ? publicUsers[y.author].photo\r\n                                        : \"\"\r\n                                    })`,\r\n                                  }}\r\n                                ></div>\r\n                              </div>\r\n                              <div className=\"col\">\r\n                                <div className=\"row no-gutters align-items-center mb-2\">\r\n                                  <div className=\"col-auto pr-2 d-block d-md-none\">\r\n                                    <div\r\n                                      className=\"bg-image rounded-circle square-40\"\r\n                                      style={{\r\n                                        backgroundImage: `url(${\r\n                                          publicUsers[y.author]\r\n                                            ? publicUsers[y.author].photo\r\n                                            : \"\"\r\n                                        })`,\r\n                                      }}\r\n                                    ></div>\r\n                                  </div>\r\n                                  <div className=\"col-auto\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                      <div className=\"col-auto mr-3 h6 text-white mb-0\">\r\n                                        {publicUsers[y.author]\r\n                                          ? publicUsers[y.author].display_name\r\n                                          : \"\"}\r\n                                      </div>\r\n                                      <div className=\"col-auto mr-3 text-muted\">\r\n                                        {date.format(\r\n                                          new Date(y.date),\r\n                                          \"MMM DD, YYYY\"\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div className=\"row no-gutters text-light mb-3 font-weight-300 text-break\">\r\n                                  {y.comment}\r\n                                </div>\r\n                                <div className=\"row no-gutters justify-content-between align-items-center\">\r\n                                  <div className=\"col-auto\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                      <div className=\"col-auto mr-2\">\r\n                                        {y.likes.length}\r\n                                      </div>\r\n                                      <div className=\"col-auto mr-2 \">\r\n                                        <MdThumbUp\r\n                                          fontSize=\"24px\"\r\n                                          className=\"text-green cursor-pointer\"\r\n                                        ></MdThumbUp>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          ))\r\n                      : \"\"}\r\n                    <div className=\"row no-gutters justify-content-end\">\r\n                      <div className=\"col-auto\">\r\n                        <Paigination\r\n                          count={Math.ceil(\r\n                            comments[x._id]\r\n                              ? comments[x._id].length / commentsPerPage\r\n                              : 1\r\n                          )}\r\n                          current={commentsPage}\r\n                          setCurrent={setCommentsPage}\r\n                          classNames={{\r\n                            notSelected: \"input-dark\",\r\n                            selected: \"input-dark-selected\",\r\n                          }}\r\n                        ></Paigination>\r\n                      </div>\r\n                    </div>\r\n                  </Collapse>\r\n                </React.Fragment>\r\n              ) : (\r\n                \"\"\r\n              )\r\n            )\r\n        ) : (\r\n          <div\r\n            className=\"row no-gutters flex-center bg-over-root-lighter rounded p-5\"\r\n            style={{ height: \"150px\" }}\r\n          >\r\n            You have not reviewed any movies/series. Your review will help your\r\n            friends and family pick the right movie or series to watch.\r\n          </div>\r\n        )}\r\n        <div className=\"row no-gutters justify-content-sm-end justify-content-center mt-2\">\r\n          <div className=\"col-auto mb-4 mr-sm-2 mr-md-0\">\r\n            <Paigination\r\n              classNames={{\r\n                notSelected: \"input-dark\",\r\n                selected: \"input-dark-selected\",\r\n              }}\r\n              count={Math.ceil(reviews.length / reviewsPerPage)}\r\n              current={realPage}\r\n              setCurrent={setPage}\r\n            ></Paigination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Reviews);\r\n","import React, { useState, useRef } from \"react\";\r\nimport date from \"date-and-time\";\r\nimport { MdThumbUp } from \"react-icons/md\";\r\nimport { connect } from \"react-redux\";\r\nimport Paigination from \"../../utility/Paigination\";\r\nimport history from \"../../../History\";\r\n\r\nconst Comments = ({ comments, publicUsers, ratings }) => {\r\n  // partitioning comments into pages (8 comments per page)\r\n  const [page, setPage] = useState(-1);\r\n  // reference to top of the comments block to scroll into view after changing the page\r\n  const topOfReviewsBlock = useRef(null);\r\n\r\n  const reviewsPerPage = 8;\r\n\r\n  //to avoid scroll into view on first render\r\n  let realPage = page === -1 ? 1 : page;\r\n\r\n  return (\r\n    <div className=\"row no-gutters text-white\">\r\n      <div className=\"col-60\">\r\n        <div className=\"row no-gutters mb-2\" ref={topOfReviewsBlock}></div>\r\n        {comments.length ? (\r\n          comments\r\n            .slice(\r\n              (realPage - 1) * reviewsPerPage,\r\n              (realPage - 1) * reviewsPerPage + reviewsPerPage\r\n            )\r\n            .map((x, i) => (\r\n              <div\r\n                key={`comment-${i}`}\r\n                className=\"row no-gutters p-4 bg-over-root-lighter rounded mb-2\"\r\n              >\r\n                <div\r\n                  className=\"col-sm-auto col-20 pr-4 d-none d-sm-block\"\r\n                  style={{ maxWidth: \"150px\" }}\r\n                >\r\n                  <div className=\"row no-gutters mb-1\">\r\n                    <img\r\n                      alt={ratings[x.movie_id].movie_poster}\r\n                      onClick={() => history.push(`/movie/${x.id}`)}\r\n                      width=\"100%\"\r\n                      style={{ borderRadius: \"13px\" }}\r\n                      src={`https://image.tmdb.org/t/p/w154${\r\n                        ratings[x.movie_id].movie_poster\r\n                      }`}\r\n                    ></img>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col d-flex flex-column\">\r\n                  <div className=\"row no-gutters justify-content-between align-items-center mb-2 flex-grow-0\">\r\n                    <div className=\"col-60 d-block d-sm-none mb-3\">\r\n                      <div className=\"row no-gutters mb-1\">\r\n                        <div className=\"col-auto pr-3\">\r\n                          <div\r\n                            className=\"square-70 rounded bg-image\"\r\n                            style={{\r\n                              backgroundImage: `url(https://image.tmdb.org/t/p/w154${\r\n                                ratings[x.movie_id].movie_poster\r\n                              })`,\r\n                            }}\r\n                          ></div>\r\n                          {/* <img\r\n                            onClick={() => history.push(`/movie/${x.id}`)}\r\n                            width=\"100%\"\r\n                            style={{ borderRadius: \"13px\" }}\r\n                            src={`https://image.tmdb.org/t/p/w154${x.movie_poster}`}\r\n                          ></img> */}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                          <div className=\"row no-gutters text-white mb-0\">\r\n                            {ratings[x.movie_id].movie_title} (\r\n                            {ratings[x.movie_id].movie_release_date.substring(\r\n                              0,\r\n                              4\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                      <div className=\"row no-gutters align-items-center\">\r\n                        <div className=\"col-auto pr-2\">\r\n                          <div\r\n                            className=\"bg-image rounded-circle square-40\"\r\n                            style={{\r\n                              backgroundImage: `url(${\r\n                                publicUsers[x.author]\r\n                                  ? publicUsers[x.author].photo\r\n                                  : \"\"\r\n                              })`,\r\n                            }}\r\n                          ></div>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                          <div className=\"row no-gutters align-items-center text-white\">\r\n                            <div className=\"col-auto mr-3 h6 mb-0\">\r\n                              {publicUsers[x.author]\r\n                                ? publicUsers[x.author].display_name\r\n                                : \"\"}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                      <div className=\"row no-gutters text-white\">\r\n                        <span className=\"mr-2\">Commented on</span>\r\n                        <span className=\"text-muted\">\r\n                          {date.format(new Date(x.date), \"MMM DD, YYYY\")}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row no-gutters text-light mb-3 flex-grow-0 font-weight-300\">\r\n                    {x.comment}\r\n                  </div>\r\n                  <div className=\"row no-gutters flex-grow-1\">\r\n                    <div className=\"col-60 d-flex flex-column justify-content-end\">\r\n                      <div className=\"row no-gutters justify-content-end align-items-center text-white\">\r\n                        <div className=\"col-auto\">\r\n                          <div className=\"row no-gutters align-items-center\">\r\n                            <div className=\"col-auto mr-2\">\r\n                              {x.likes.length}\r\n                            </div>\r\n                            <div className=\"col-auto mr-2 \">\r\n                              <MdThumbUp\r\n                                fontSize=\"24px\"\r\n                                className=\"text-green\"\r\n                              ></MdThumbUp>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n        ) : (\r\n          <div\r\n            className=\"row no-gutters flex-center bg-over-root-lighter rounded p-5\"\r\n            style={{ height: \"150px\" }}\r\n          >\r\n            You have not commented on any comments. We encourage you to share\r\n            your opinion on your friends and family comments.\r\n          </div>\r\n        )}\r\n        <div className=\"row no-gutters justify-content-sm-end justify-content-center mt-2\">\r\n          <div className=\"col-auto mb-4 mr-sm-2 mr-md-0\">\r\n            <Paigination\r\n              classNames={{\r\n                notSelected: \"input-dark\",\r\n                selected: \"input-dark-selected\",\r\n              }}\r\n              count={Math.ceil(comments.length / reviewsPerPage)}\r\n              current={realPage}\r\n              setCurrent={setPage}\r\n            ></Paigination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Comments);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Modal from \"../../utility/Modal\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { EditUser } from \"../../../server/DatabaseApi\";\r\nimport store from \"../../../store/store\";\r\n\r\nconst EditProfile = ({ user, refreshProfile, editProfileOpen, onClose }) => {\r\n  const [update, setUpdate] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    display_name: \"\",\r\n    photo: \"\",\r\n    password: \"\",\r\n    confirm_assword: \"\",\r\n    _id: \"\",\r\n    token: \"\",\r\n  });\r\n\r\n  const [problem, setProblem] = useState(\"\");\r\n\r\n  const photoUploader = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (user.photo) {\r\n      setUpdate((prev) =>\r\n        Object.assign({}, prev, {\r\n          first_name: user.first_name,\r\n          last_name: user.last_name,\r\n          display_name: user.display_name,\r\n          email: user.email,\r\n          photo: user.photo,\r\n          token: user.token,\r\n        })\r\n      );\r\n    }\r\n  }, [user.first_name]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleFileUpload = async (e) => {\r\n    var imageFile = e.target.files[0];\r\n    var options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 100,\r\n      useWebWorker: true,\r\n    };\r\n    try {\r\n      const compressedFile = await imageCompression(imageFile, options);\r\n      const dataUrl = await imageCompression.getDataUrlFromFile(compressedFile);\r\n      setUpdate((prev) => Object.assign({}, prev, { photo: dataUrl }));\r\n    } catch (error) {}\r\n  };\r\n\r\n  const validations = [\r\n    {\r\n      valid: /[^\\w\\s]/.test(update.password) || /\\d/.test(update.password),\r\n      error: \"Password must contain number or symbol\",\r\n    },\r\n    {\r\n      valid: update.password === update.confirm_assword,\r\n      error: \"Passwords don't match\",\r\n    },\r\n    {\r\n      valid: update.password.length >= 6,\r\n      error: \"Password must contain at least 6 characters\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Modal open={editProfileOpen} onClose={onClose}>\r\n      <div className=\"col-xl-30 col-lg-40 col-md-50 col-58 bg-over-root-lighter rounded p-sm-5 p-4\">\r\n        <div className=\"row no-gutters mb-3 text-title-lg\">Update profile</div>\r\n        <div className=\"row no-gutters justify-content-center mb-5\">\r\n          <div className=\"col-auto text-center\">\r\n            <div className=\"row no-gutters justify-content-center\">\r\n              <div\r\n                className=\"square-100 bg-image rounded-circle d-flex align-items-end overflow-hidden mb-2\"\r\n                style={{ backgroundImage: `url(${update.photo})` }}\r\n              >\r\n                <input\r\n                  spellCheck={false}\r\n                  onChange={handleFileUpload}\r\n                  type=\"file\"\r\n                  className=\"d-none\"\r\n                  ref={photoUploader}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className=\"btn-custom btn-custom-primary px-4\"\r\n              onClick={() => photoUploader.current.click()}\r\n            >\r\n              Upload photo\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-3\">\r\n          <div className=\"col-30 pr-2\">\r\n            <div className=\"row no-gutters text-light\">First Name</div>\r\n            <div className=\"row no-gutters\">\r\n              <input\r\n                spellCheck={false}\r\n                type=\"text\"\r\n                className=\"input-light px-3 w-100\"\r\n                value={update.first_name}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setUpdate((prev) =>\r\n                    Object.assign({}, prev, { first_name: e.target.value })\r\n                  );\r\n                }}\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-30\">\r\n            <div className=\"row no-gutters text-light\">Last Name</div>\r\n            <div className=\"row no-gutters\">\r\n              <input\r\n                spellCheck={false}\r\n                type=\"text\"\r\n                className=\"input-light px-3 w-100\"\r\n                value={update.last_name}\r\n                onChange={(e) => {\r\n                  e.persist();\r\n                  setUpdate((prev) =>\r\n                    Object.assign({}, prev, { last_name: e.target.value })\r\n                  );\r\n                }}\r\n              ></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-3\">\r\n          <div className=\"col-60 text-light\">Email</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              disabled\r\n              spellCheck={false}\r\n              type=\"text\"\r\n              className=\"input-light-disabled px-3 w-100 user-select-none\"\r\n              value={update.email}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-3\">\r\n          <div className=\"col-60 text-light\">Display Name</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              spellCheck={false}\r\n              type=\"text\"\r\n              className=\"input-light px-3 w-100\"\r\n              value={update.display_name}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setUpdate((prev) =>\r\n                  Object.assign({}, prev, { display_name: e.target.value })\r\n                );\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-3\">\r\n          <div className=\"col-60 text-light\">Password</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              type=\"password\"\r\n              spellCheck={false}\r\n              className=\"input-light px-3 w-100\"\r\n              value={update.password}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setUpdate((prev) =>\r\n                  Object.assign({}, prev, { password: e.target.value })\r\n                );\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters mb-3\">\r\n          <div className=\"col-60 text-light\">Confirm Password</div>\r\n          <div className=\"col-60\">\r\n            <input\r\n              spellCheck={false}\r\n              type=\"password\"\r\n              className=\"input-light px-3 w-100\"\r\n              value={update.confirm_assword}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setUpdate((prev) =>\r\n                  Object.assign({}, prev, { confirm_assword: e.target.value })\r\n                );\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"row no-gutters align-items-center text-danger justify-content-end\"\r\n          style={{ height: \"50px\", opacity: problem ? 1 : 0 }}\r\n        >\r\n          {problem}\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div\r\n            className=\"col-sm-auto btn-custom btn-custom-secondary btn-small mr-sm-2 mb-2 col-60\"\r\n            onClick={onClose}\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div\r\n            className=\"col-sm-auto col-60 btn-custom btn-custom-primary btn-small\"\r\n            onClick={async () => {\r\n              let notValid = validations.filter((x) => !x.valid);\r\n              if (notValid.length && update.password) {\r\n                setProblem(notValid[0].error);\r\n              } else {\r\n                let finalUpdate = {};\r\n                Object.keys(update).forEach((x) => {\r\n                  if (update[x]) {\r\n                    finalUpdate[x] = update[x];\r\n                  }\r\n                });\r\n                let res = await EditUser(finalUpdate);\r\n                if (!res.error) {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Profile updates\",\r\n                      message: \"You successfully updated your profile\",\r\n                      type: \"success\",\r\n                    },\r\n                  });\r\n                  store.dispatch({\r\n                    type: \"UPDATE_PUBLICUSERS\",\r\n                    publiUser: res.updatedPublicUser,\r\n                  });\r\n\r\n                  store.dispatch({\r\n                    type: \"UPDATE_USER\",\r\n                    userProperty: res.updatedUser,\r\n                  });\r\n\r\n                  refreshProfile();\r\n                  onClose();\r\n                  localStorage[\"movies_user_token\"] = res.newToken;\r\n                } else {\r\n                  store.dispatch({\r\n                    type: \"SET_NOTIFICATION\",\r\n                    notification: {\r\n                      title: \"Error\",\r\n                      message: res.error,\r\n                      type: \"failure\",\r\n                    },\r\n                  });\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            Save\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GetUser,\r\n  GetUserReviews,\r\n  GetUserComments,\r\n} from \"../../../server/DatabaseApi\";\r\nimport Wishlist from \"./Wishlist\";\r\nimport Watchedlist from \"./Watchedlist\";\r\nimport Reviews from \"./Reviews\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport \"simplebar/dist/simplebar.min.css\";\r\nimport Comments from \"./Comments\";\r\nimport EditProfile from \"./EditProfile\";\r\n\r\nconst Profile = (props) => {\r\n  const user = props.user;\r\n  const userId = props.match.params.userId;\r\n  const publicUsers = props.publicUsers;\r\n  const ratings = props.ratings;\r\n  const sectionInUrl = props.match.params.section;\r\n\r\n  const [profileData, setProfileData] = useState({\r\n    wishlist: [],\r\n    comments: [],\r\n    watchedlist: [],\r\n    reviews: [],\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n  });\r\n\r\n  const [reviews, setReviews] = useState([]);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const reviewsFetched = useRef(false);\r\n  const commentsFetched = useRef(false);\r\n\r\n  const [section, setSection] = useState(0);\r\n  const [editProfileOpen, setEditProfileOpen] = useState(false);\r\n\r\n  const [refreshProfile, setRefreshProfile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (userId) {\r\n        let res = await GetUser(userId);\r\n        if (!res.error) {\r\n          setProfileData(res);\r\n        }\r\n      }\r\n    }\r\n    getData();\r\n  }, [userId, refreshProfile, user.wishlist.length]);\r\n\r\n  useEffect(() => {\r\n    if (sectionInUrl !== undefined) {\r\n      setSection(+sectionInUrl);\r\n    }\r\n  }, [sectionInUrl]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (\r\n        section === 2 &&\r\n        !reviewsFetched.current &&\r\n        profileData.reviews.length\r\n      ) {\r\n        reviewsFetched.current = true;\r\n        let res = await GetUserReviews(profileData.reviews);\r\n        if (!res.error) {\r\n          setReviews(res.reverse());\r\n        }\r\n      } else if (section === 3 && !commentsFetched.current) {\r\n        commentsFetched.current = true;\r\n        let res = await GetUserComments(profileData.comments);\r\n        if (!res.error) {\r\n          setComments(res.reverse());\r\n        }\r\n      }\r\n    }\r\n    getData();\r\n  }, [section, profileData.reviews.length]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <div className=\"row no-gutters\" style={{ minHeight: \"800px\" }}>\r\n      <EditProfile\r\n        refreshProfile={() => setRefreshProfile(!refreshProfile)}\r\n        editProfileOpen={editProfileOpen}\r\n        user={user}\r\n        onClose={() => setEditProfileOpen(false)}\r\n      ></EditProfile>\r\n      <div className=\"col-60 content-container mx-auto p-sm-5 p-4\">\r\n        <div className=\"row no-gutters justify-content-xl-between justify-content-center text-white bg-over-root-lighter p-sm-5 p-4 rounded mb-2\">\r\n          <div className=\"col-auto mb-4 mr-lg-5\">\r\n            <div className=\"row no-gutters justify-content-xl-start justify-content-center\">\r\n              <div\r\n                className=\"col-auto bg-image square-100 rounded-circle mr-md-4\"\r\n                style={{\r\n                  backgroundImage: `url(${\r\n                    publicUsers[userId] ? publicUsers[userId].photo : \"\"\r\n                  })`,\r\n                }}\r\n              ></div>\r\n              <div className=\"col-60 col-md-auto\">\r\n                {profileData.first_name || profileData.last_name ? (\r\n                  <div className=\"row no-gutters text-title-lg justify-content-md-start justify-content-center\">\r\n                    <div className=\"col-auto mr-2\">\r\n                      {profileData.first_name ? profileData.first_name : \"\"}\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                      {profileData.last_name ? profileData.last_name : \"\"}\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"row no-gutters h5 justify-content-md-start justify-content-center\">\r\n                    Full name is empty\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"row no-gutters justify-content-md-start justify-content-center text-title-md mb-2\">\r\n                  @{publicUsers[userId] ? publicUsers[userId].display_name : \"\"}\r\n                </div>\r\n                <div className=\"row no-gutters justify-content-md-start justify-content-center\">\r\n                  <div\r\n                    className=\"col-auto btn-custom btn-custom-primary btn-small\"\r\n                    onClick={() => setEditProfileOpen(true)}\r\n                  >\r\n                    Edit Profile\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-auto col-60\">\r\n            <div className=\"row no-gutters justify-content-center h-100 align-items-center\">\r\n              <div className=\"col-sm-auto col mr-sm-4\">\r\n                <div className=\"row no-gutters mb-3 profile-stats-title\">\r\n                  Wishlist\r\n                </div>\r\n                <div className=\"row no-gutters text-lift justify-content-end\">\r\n                  {profileData.wishlist.length}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-auto col mr-sm-4 mr-0\">\r\n                <div className=\"row no-gutters mb-3 profile-stats-title\">\r\n                  Watched\r\n                </div>\r\n                <div className=\"row no-gutters text-lift justify-content-end\">\r\n                  {profileData.watchedlist.length}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-auto col mr-sm-4 mr-0\">\r\n                <div className=\"row no-gutters mb-3 profile-stats-title\">\r\n                  Reviews\r\n                </div>\r\n                <div className=\"row no-gutters text-lift justify-content-end profile-stats-title\">\r\n                  {profileData.reviews.length}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-auto col\">\r\n                <div className=\"row no-gutters mb-3 profile-stats-title\">\r\n                  Comments\r\n                </div>\r\n                <div className=\"row no-gutters text-lift justify-content-end\">\r\n                  {profileData.comments.length}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-over-root-lighter row no-gutters rounded w-100 justify-content-between text-white\">\r\n          <div className=\"col-60\">\r\n            <SimpleBar\r\n              style={{\r\n                maxWidth: \"100%\",\r\n                overflowX: \"auto\",\r\n                whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"d-inline-block p-sm-4 p-3 cursor-pointer mr-4 text-title-md mb-0 user-select-none\"\r\n                style={{\r\n                  borderTop: \"3px solid transparent\",\r\n                  borderBottom:\r\n                    section === 0\r\n                      ? \"3px solid rgb(255, 0, 64)\"\r\n                      : \"3px solid transparent\",\r\n                }}\r\n                onClick={() => setSection(0)}\r\n              >\r\n                Wishlist\r\n              </div>\r\n              <div\r\n                style={{\r\n                  borderTop: \"3px solid transparent\",\r\n                  borderBottom:\r\n                    section === 1\r\n                      ? \"3px solid rgb(255, 0, 64)\"\r\n                      : \"3px solid transparent\",\r\n                }}\r\n                className=\"d-inline-block p-sm-4 p-3 cursor-pointer mr-4 text-title-md mb-0 user-select-none\"\r\n                onClick={() => setSection(1)}\r\n              >\r\n                Watched\r\n              </div>\r\n              <div\r\n                style={{\r\n                  borderTop: \"3px solid transparent\",\r\n                  borderBottom:\r\n                    section === 2\r\n                      ? \"3px solid rgb(255, 0, 64)\"\r\n                      : \"3px solid transparent\",\r\n                }}\r\n                className=\"d-inline-block p-sm-4 p-3 cursor-pointer mr-4 text-title-md mb-0 user-select-none\"\r\n                onClick={() => setSection(2)}\r\n              >\r\n                Reviews\r\n              </div>\r\n              <div\r\n                style={{\r\n                  borderTop: \"3px solid transparent\",\r\n                  borderBottom:\r\n                    section === 3\r\n                      ? \"3px solid rgb(255, 0, 64)\"\r\n                      : \"3px solid transparent\",\r\n                }}\r\n                className=\"d-inline-block p-sm-4 p-3 cursor-pointer mr-4 text-title-md mb-0 user-select-none\"\r\n                onClick={() => setSection(3)}\r\n              >\r\n                Comments\r\n              </div>\r\n            </SimpleBar>\r\n          </div>\r\n        </div>\r\n        {section === 0 ? (\r\n          <Wishlist\r\n            ratings={ratings}\r\n            refreshProfile={() => setRefreshProfile(!refreshProfile)}\r\n            movies={profileData.wishlist}\r\n            owner={user._id === profileData._id}\r\n          ></Wishlist>\r\n        ) : section === 1 ? (\r\n          <Watchedlist\r\n            ratings={ratings}\r\n            movies={profileData.watchedlist}\r\n          ></Watchedlist>\r\n        ) : section === 2 ? (\r\n          <Reviews ratings={ratings} reviews={reviews}></Reviews>\r\n        ) : section === 3 ? (\r\n          <Comments ratings={ratings} comments={comments}></Comments>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    ratings: state.ratings,\r\n    publicUsers: state.publicUsers,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Profile);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport store from \"../store/store\";\r\nimport { LoginWithToken } from \"../server/DatabaseApi\";\r\nimport history from \"../History\";\r\n\r\nconst PrivateRoute = ({ Component, bearerPath, user, ...rest }) => {\r\n  const successPath = rest.computedMatch.url;\r\n  const [validity, setValidity] = useState({ ready: false, valid: false });\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let token = localStorage.getItem(\"movies_user_token\");\r\n      if (token === null || !token.length) {\r\n        setValidity((prev) => Object.assign({}, prev, { ready: true }));\r\n      } else {\r\n        let data = await LoginWithToken({\r\n          token,\r\n        });\r\n        if (!data.error) {\r\n          if (data.role === \"Administrator\") {\r\n            setValidity((prev) =>\r\n              Object.assign({}, prev, { ready: true, valid: true })\r\n            );\r\n          } else {\r\n            store.dispatch({\r\n              type: \"SET_NOTIFICATION\",\r\n              notification: {\r\n                title: \"Your role is not admin\",\r\n                message: \"Contact website administrator to change your role\",\r\n                type: \"failure\",\r\n              },\r\n            });\r\n            history.push(\"/\");\r\n          }\r\n        } else {\r\n          history.push(\"/\");\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Your role is not admin\",\r\n              message: \"Only website admins can access this page\",\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        }\r\n      }\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  return validity.ready ? (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return validity.valid ? (\r\n          <Component {...props}></Component>\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: bearerPath, state: { successPath: successPath } }}\r\n          ></Redirect>\r\n        );\r\n      }}\r\n    ></Route>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { GetActiveAnnouncements } from \"../../server/DatabaseApi\";\r\nimport { BsX } from \"react-icons/bs\";\r\n\r\nconst Announcement = () => {\r\n  const [announcements, setAnnouncements] = useState([]);\r\n\r\n  let notClosedAnnouncement = false;\r\n\r\n  let closedAnnouncements = localStorage.getItem(\"closed_movies_announcements\");\r\n\r\n  if (closedAnnouncements) {\r\n    closedAnnouncements = JSON.parse(closedAnnouncements);\r\n  } else {\r\n    closedAnnouncements = [];\r\n  }\r\n\r\n  for (let x of announcements) {\r\n    if (!closedAnnouncements.includes(x.description)) {\r\n      notClosedAnnouncement = x;\r\n      break;\r\n    }\r\n  }\r\n\r\n  const [closed, setClosed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let data = await GetActiveAnnouncements();\r\n      if (!data.error) {\r\n        if (data.length) {\r\n          setAnnouncements(data);\r\n        }\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, []);\r\n\r\n  return notClosedAnnouncement &&\r\n    notClosedAnnouncement.description &&\r\n    !closed ? (\r\n    <div\r\n      className={`row p-2 position-relative no-gutters justify-content-center ${\r\n        notClosedAnnouncement.type === \"Warning\"\r\n          ? \"bg-warning\"\r\n          : notClosedAnnouncement.type === \"Information\"\r\n          ? \"bg-primary\"\r\n          : notClosedAnnouncement.type === \"Error\"\r\n          ? \"bg-danger\"\r\n          : \"\"\r\n      }`}\r\n    >\r\n      <div\r\n        onClick={() => {\r\n          setClosed(true);\r\n          closedAnnouncements.push(notClosedAnnouncement.description);\r\n\r\n          localStorage.setItem(\r\n            \"closed_movies_announcements\",\r\n            JSON.stringify(closedAnnouncements)\r\n          );\r\n        }}\r\n        className=\"square-20 rounded-circle d-flex flex-center bg-white cursor-pointer scale-transition position-absolute\"\r\n        style={{ right: \"10px\", top: 0, bottom: 0, margin: \"auto\", zIndex: 5 }}\r\n      >\r\n        <BsX className=\"text-dark\"></BsX>\r\n      </div>\r\n      <div className=\"col-60 content-container text-white\">\r\n        <div className=\"row no-gutters justify-content-center\">\r\n          <div\r\n            className=\"col-auto mr-2 d-none d-md-block\"\r\n            style={{ width: \"30px\" }}\r\n          ></div>\r\n          <div className=\"col mr-2 pl-2 pl-md-0\">\r\n            <div className=\"row no-gutters justify-content-center\">\r\n              {notClosedAnnouncement.description}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-auto\" style={{ width: \"30px\" }}></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n};\r\n\r\nexport default Announcement;\r\n","import * as React from \"react\";\r\n\r\nfunction Notifications(props) {\r\n  return (\r\n    <div className=\"square-35 position-relative cursor-pointer\">\r\n      <div\r\n        className=\"position-absolute text-white\"\r\n        style={{ top: \"0px\", right: \"5px\", fontSize: \"10px\" }}\r\n      >\r\n        {props.count ? props.count : 0}\r\n      </div>\r\n      <svg viewBox=\"-11 0 512 512\" width=\"100%\" {...props}>\r\n        <path\r\n          d=\"M298.668 426.668c0 47.129-38.207 85.332-85.336 85.332S128 473.797 128 426.668c0-47.129 38.203-85.336 85.332-85.336 47.129 0 85.336 38.207 85.336 85.336zm0 0\"\r\n          fill=\"#ffa000\"\r\n        />\r\n        <path\r\n          d=\"M362.836 254.316c-72.32-10.328-128.168-72.515-128.168-147.648 0-21.336 4.562-41.578 12.648-59.95-10.921-2.558-22.27-4.05-33.984-4.05C130.988 42.668 64 109.652 64 192v59.477c0 42.218-18.496 82.07-50.945 109.503A37.235 37.235 0 000 389.332c0 20.59 16.746 37.336 37.332 37.336h352c20.59 0 37.336-16.746 37.336-37.336 0-10.922-4.758-21.27-13.27-28.543-31.488-26.644-49.75-65.324-50.562-106.473zm0 0\"\r\n          fill=\"#ffc107\"\r\n        />\r\n        <path\r\n          d=\"M490.668 106.668c0 58.91-47.758 106.664-106.668 106.664s-106.668-47.754-106.668-106.664C277.332 47.758 325.09 0 384 0s106.668 47.758 106.668 106.668zm0 0\"\r\n          fill=\"#f44336\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport { OfficialMoviesGenres, OfficialSeriesGenres } from \"../../Data\";\r\nimport history from \"../../History\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst MoviesListMinified = ({ movies, onClick }) => {\r\n  return (\r\n    <div className=\"row\">\r\n      {movies.map((x, i) => (\r\n        <div\r\n          key={`result-${i}`}\r\n          className=\"p-2 movie-card-minified\"\r\n          style={{ flexBasis: \"300px\", flexGrow: 1 }}\r\n          onClick={() => {\r\n            history.push(`/${x.name ? \"series\" : \"movie\"}/${x.id}`);\r\n            onClick();\r\n          }}\r\n        >\r\n          <div className=\"row no-gutters\">\r\n            <div className=\"col-auto mr-3\">\r\n              <div className=\"row no-gutters mb-2 position-relative\">\r\n                <div\r\n                  className=\"square-70 bg-image rounded\"\r\n                  style={{\r\n                    backgroundImage: `url(${\r\n                      x.poster_path\r\n                        ? `https://image.tmdb.org/t/p/w342${x.poster_path}`\r\n                        : \"https://critics.io/img/movies/poster-placeholder.png\"\r\n                    })`,\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div\r\n                className=\"row no-gutters mb-0 cursor-pointer\"\r\n                onClick={() => history.push(`/movie/${x.id}`)}\r\n              >\r\n                <div className=\"text-truncate\">\r\n                  {x.title ? x.title : x.name}\r\n                </div>\r\n              </div>\r\n              <div className=\"row no-gutters text-muted mb-2\">\r\n                <div className=\"text-truncate\" style={{ maxWidth: \"100%\" }}>\r\n                  {x.genre_ids.length\r\n                    ? x.genre_ids\r\n                        .map((gid) => {\r\n                          let movieGenre = OfficialMoviesGenres.find(\r\n                            (g) => g.id === gid\r\n                          );\r\n                          let seriesGenre = OfficialSeriesGenres.find(\r\n                            (g) => g.id === gid\r\n                          );\r\n                          return movieGenre // movies have title, series - name\r\n                            ? movieGenre.name\r\n                            : seriesGenre\r\n                            ? seriesGenre.name\r\n                            : \"unkonwn\";\r\n                        })\r\n                        .join(\"/\")\r\n                    : \"unknown\"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(MoviesListMinified);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport history from \"../../History\";\r\nimport date from \"date-and-time\";\r\nimport { MdThumbUp, MdChatBubble } from \"react-icons/md\";\r\n\r\nconst ReviewsListMinified = ({ reviews, publicUsers, ratings }) => {\r\n  const [reviewIdOfVisibleComments, setReviewIdOfVisibleComments] = useState(\r\n    -1\r\n  );\r\n\r\n  const page = 1;\r\n\r\n  const reviewsPerPage = 8;\r\n\r\n  return reviews\r\n    .slice(\r\n      (page - 1) * reviewsPerPage,\r\n      (page - 1) * reviewsPerPage + reviewsPerPage\r\n    )\r\n    .map((x, i) => (\r\n      <div\r\n        onClick={() => history.push(`/movie/${x.movie_id}`)}\r\n        key={`review-${i}`}\r\n        className=\"row no-gutters p-2 border-bottom rounded mb-2 text-dark movie-card-minified\"\r\n      >\r\n        <div\r\n          className=\"col-sm-auto col-20 pr-4 d-none d-sm-block\"\r\n          style={{ maxWidth: \"100px\" }}\r\n        >\r\n          <div className=\"row no-gutters mb-1\">\r\n            <img\r\n              alt={ratings[x.movie_id].movie_poster}\r\n              width=\"100%\"\r\n              style={{ borderRadius: \"13px\", cursor: \"pointer\" }}\r\n              src={`https://image.tmdb.org/t/p/w154${\r\n                ratings[x.movie_id].movie_poster\r\n              }`}\r\n            ></img>\r\n          </div>\r\n        </div>\r\n        <div className=\"col d-flex flex-column\">\r\n          <div className=\"row no-gutters justify-content-between align-items-center mb-2 flex-grow-0\">\r\n            <div className=\"col-60 d-block d-sm-none mb-3\">\r\n              <div className=\"row no-gutters mb-1\">\r\n                <div className=\"col-auto pr-3\">\r\n                  <div\r\n                    className=\"square-70 rounded bg-image\"\r\n                    style={{\r\n                      backgroundImage: `url(https://image.tmdb.org/t/p/w154${\r\n                        ratings[x.movie_id].movie_poster\r\n                      })`,\r\n                    }}\r\n                  ></div>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <div className=\"row no-gutters h6 mb-0\">\r\n                    {ratings[x.movie_id].movie_title} (\r\n                    {ratings[x.movie_id].movie_release_date.substring(0, 4)}\r\n                  </div>\r\n                  <div className=\"row no-gutters text-muted\">\r\n                    <div className=\"text-truncate\">{x.movie_genres}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-60\">\r\n              <div className=\"row no-gutters justify-content-between\">\r\n                <div className=\"col-auto mb-2\">\r\n                  <div className=\"row no-gutters align-items-center\">\r\n                    <div className=\"col-auto pr-2\">\r\n                      <div\r\n                        className=\"bg-image rounded-circle square-40\"\r\n                        style={{\r\n                          backgroundImage: `url(${\r\n                            publicUsers[x.author]\r\n                              ? publicUsers[x.author].photo\r\n                              : \"\"\r\n                          })`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                      <div className=\"row no-gutters align-items-center\">\r\n                        <div className=\"col-auto mr-3 mb-0\">\r\n                          {publicUsers[x.author]\r\n                            ? publicUsers[x.author].display_name\r\n                            : \"\"}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters\">\r\n                    <span className=\"mr-2\">Posted review on</span>\r\n                    <span className=\"text-muted\">\r\n                      {date.format(new Date(x.date), \"MMM DD, YYYY\")}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row no-gutters mb-3 font-size-14 flex-grow-0\">\r\n            {x.review}\r\n          </div>\r\n          <div className=\"row no-gutters flex-grow-1 align-items-bottom\">\r\n            <div className=\"col-60 d-flex flex-column justify-content-end\">\r\n              <div className=\"row no-gutters justify-content-between align-items-center\">\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters\">\r\n                    {x.rating ? (\r\n                      <div style={{ marginBottom: \"-6px\" }}>\r\n                        <Emoji\r\n                          emoji={\r\n                            x.rating === \"excellent_rate\"\r\n                              ? \"fire\"\r\n                              : x.rating === \"good_rate\"\r\n                              ? \"heart\"\r\n                              : x.rating === \"ok_rate\"\r\n                              ? \"heavy-division-sign\"\r\n                              : \"shit\"\r\n                          }\r\n                          set=\"facebook\"\r\n                          size={24}\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-auto px-0\">\r\n                  <div className=\"row no-gutters align-items-center\">\r\n                    <div className=\"col-auto mr-2\">{x.likes.length}</div>\r\n                    <div className=\"col-auto mr-2 \">\r\n                      <MdThumbUp\r\n                        fontSize=\"24px\"\r\n                        className=\"text-green\"\r\n                      ></MdThumbUp>\r\n                    </div>\r\n                    <div className=\"col-auto mr-2\">{x.comments.length}</div>\r\n                    <div className=\"col-auto\">\r\n                      <MdChatBubble\r\n                        onClick={() => {\r\n                          setReviewIdOfVisibleComments(\r\n                            reviewIdOfVisibleComments === x._id ? -1 : x._id\r\n                          );\r\n                        }}\r\n                        fontSize=\"24px\"\r\n                        className=\"text-orange scale-transition cursor-pointer\"\r\n                      ></MdChatBubble>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    publicUsers: state.publicUsers,\r\n    ratings: state.ratings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(ReviewsListMinified);\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport Select from \"../utility/Select\";\r\nimport history from \"../../History\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport { SearchReviews } from \"../../server/DatabaseApi\";\r\nimport { SearchMovies, SearchSeries } from \"../../server/MoviesApi\";\r\nimport MoviesListMinified from \"./MoviesListMinified\";\r\nimport ReviewsListMinified from \"./ReviewsListMinified\";\r\n\r\nconst SearchBox = (props) => {\r\n  const categories = [\"All\", \"Movies\", \"Series\", \"Reviews\"];\r\n  const category = props.search.category;\r\n  const settings = props.settings;\r\n  const [query, setQuery] = useState(\"\");\r\n  const [reviews, setReviews] = useState([]);\r\n  const [movies, setMovies] = useState([]);\r\n  const [series, setSeries] = useState([]);\r\n  const [populateBox, setPopulateBox] = useState(false);\r\n  const queryCleaned = useRef(false);\r\n\r\n  const onFail = () => {\r\n    store.dispatch({\r\n      type: \"SET_NOTIFICATION\",\r\n      notification: {\r\n        title: \"Error\",\r\n        message: \"You need to provide valid api key in admin dashboard\",\r\n        type: \"failure\",\r\n      },\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (query) {\r\n        setPopulateBox(true);\r\n        queryCleaned.current = false;\r\n        if (category === \"Reviews\" || category === \"All\") {\r\n          let reviews = await SearchReviews(query);\r\n          if (!reviews.error) {\r\n            if (!queryCleaned.current) {\r\n              setReviews(reviews.slice(0, 5));\r\n            }\r\n          }\r\n        } else {\r\n          setReviews([]);\r\n        }\r\n\r\n        if (category === \"Movies\" || category === \"All\") {\r\n          let movies = await SearchMovies(query, settings.movies_api_key);\r\n\r\n          if (movies.results) {\r\n            if (!queryCleaned.current) {\r\n              setMovies(movies.results.slice(0, 10));\r\n            }\r\n          } else {\r\n            onFail();\r\n          }\r\n        } else {\r\n          setMovies([]);\r\n        }\r\n        if (category === \"Series\" || category === \"All\") {\r\n          let series = await SearchSeries(query, settings.movies_api_key);\r\n          if (series.results) {\r\n            if (!queryCleaned.current) {\r\n              setSeries(series.results.slice(0, 10));\r\n            }\r\n          } else {\r\n            onFail();\r\n          }\r\n        } else {\r\n          setSeries([]);\r\n        }\r\n      } else {\r\n        queryCleaned.current = true;\r\n        setPopulateBox(false);\r\n        setMovies([]);\r\n        setSeries([]);\r\n        setReviews([]);\r\n      }\r\n    }\r\n    getData();\r\n  }, [query, category]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <div className=\"row no-gutters w-100\">\r\n      <div className=\"col-60 position-relative\">\r\n        <div className=\"row no-gutters\">\r\n          <Select\r\n            popoverClass=\"col-auto\"\r\n            items={categories}\r\n            onSelect={(index) =>\r\n              store.dispatch({\r\n                type: \"UPDATE_SEARCH\",\r\n                search: { category: categories[index] },\r\n              })\r\n            }\r\n            popoverWidth={\"150px\"}\r\n            className=\"col-auto input-prepend-select\"\r\n            btnName={category}\r\n          ></Select>\r\n          <div className=\"col position-relative\">\r\n            <input\r\n              onBlur={async () => {\r\n                await new Promise((resolve) => setTimeout(resolve, 500));\r\n                setPopulateBox(false);\r\n              }}\r\n              onFocus={async () => setPopulateBox(true)}\r\n              value={query}\r\n              onKeyUp={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  setQuery(\"\");\r\n                  store.dispatch({\r\n                    type: \"UPDATE_SEARCH\",\r\n                    search: { query },\r\n                  });\r\n                  history.push(\"/search\");\r\n                }\r\n              }}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setQuery(e.target.value);\r\n              }}\r\n              type=\"text\"\r\n              spellCheck={false}\r\n              className={`w-100 input`}\r\n            ></input>\r\n            <BsSearch\r\n              onClick={() => history.push(\"/search\")}\r\n              fontSize=\"24px\"\r\n              className=\"position-absolute text-white cursor-pointer\"\r\n              style={{ top: 0, bottom: 0, right: \"20px\", margin: \"auto\" }}\r\n            ></BsSearch>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"row no-gutters position-absolute px-3 bg-white w-100 overflow-auto\"\r\n          style={{ top: `50px`, left: 0, maxHeight: \"500px\" }}\r\n        >\r\n          <div className=\"col-60\">\r\n            {populateBox ? (\r\n              <React.Fragment>\r\n                {movies.length ? (\r\n                  <React.Fragment>\r\n                    <div className=\"row no-gutters pt-3 pb-1 font-weight-bold\">\r\n                      Movies ({movies.length})\r\n                    </div>\r\n                    <MoviesListMinified\r\n                      onClick={() => setQuery(\"\")}\r\n                      movies={movies}\r\n                    ></MoviesListMinified>\r\n                  </React.Fragment>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {series.length ? (\r\n                  <React.Fragment>\r\n                    <div className=\"row no-gutters pt-3 pb-1 font-weight-bold\">\r\n                      Series ({series.length})\r\n                    </div>\r\n                    <MoviesListMinified\r\n                      movies={series}\r\n                      onClick={() => setQuery(\"\")}\r\n                    ></MoviesListMinified>\r\n                  </React.Fragment>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {reviews.length ? (\r\n                  <React.Fragment>\r\n                    <div className=\"row no-gutters pt-3 pb-1 font-weight-bold\">\r\n                      Reviews ({reviews.length})\r\n                    </div>\r\n                    <ReviewsListMinified\r\n                      reviews={reviews}\r\n                      onClick={() => setQuery(\"\")}\r\n                    ></ReviewsListMinified>\r\n                  </React.Fragment>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </React.Fragment>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"col-60\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    search: state.search,\r\n    settings: state.settings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(SearchBox);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Popover from \"../utility/Popover\";\r\nimport { BsChevronDown, BsXCircle } from \"react-icons/bs\";\r\nimport history from \"../../History\";\r\nimport store from \"../../store/store\";\r\nimport Logo from \"../../images/Logo\";\r\nimport Announcement from \"./Announcement\";\r\nimport {\r\n  GetUserNotifications,\r\n  DeleteUserNotification,\r\n} from \"../../server/DatabaseApi\";\r\nimport Notifications from \"../../images/Notifications\";\r\nimport { withResizeDetector } from \"react-resize-detector\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { MdMenu } from \"react-icons/md\";\r\nimport date from \"date-and-time\";\r\n\r\nconst Navbar = (props) => {\r\n  const user = props.user;\r\n  const dashboardMenuOpened = props.dashboardMenuOpened;\r\n  const height = props.height;\r\n\r\n  const [scrolledToTop, setScrolledTopTop] = useState(true);\r\n  const lastScroll = useRef(100);\r\n  const [direction, setDirection] = useState(\"up\");\r\n  const [notifications, setNotifications] = useState([]);\r\n  const profilePopover = useRef(null);\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    function handleScrolling() {\r\n      let scrollY = window.scrollY;\r\n      if (lastScroll.current < scrollY) {\r\n        setDirection(\"down\");\r\n      } else {\r\n        setDirection(\"up\");\r\n      }\r\n      lastScroll.current = scrollY;\r\n      if (scrollY === 0) {\r\n        setScrolledTopTop(true);\r\n      } else {\r\n        setScrolledTopTop(false);\r\n      }\r\n    }\r\n    window.addEventListener(\"scroll\", handleScrolling);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScrolling);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (user.notifications) {\r\n        let data = await GetUserNotifications(user.notifications);\r\n        if (!data.error) {\r\n          setNotifications(\r\n            data.map((x) => Object.assign({}, x, { seen: false }))\r\n          );\r\n        }\r\n      }\r\n    }\r\n    getData();\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (height) {\r\n      store.dispatch({ type: \"SET_HEIGHT\", height });\r\n    }\r\n  }, [height]);\r\n\r\n  return location.pathname !== \"/login\" && location.pathname !== \"/signup\" ? (\r\n    <div\r\n      className=\"col-60 px-0\"\r\n      style={{\r\n        position: \"sticky\",\r\n        zIndex: 59,\r\n        transition: \"top 0.5s\",\r\n        top: direction === \"up\" ? \"0px\" : `-${height}px`,\r\n        left: 0,\r\n        right: 0,\r\n      }}\r\n    >\r\n      <Announcement></Announcement>\r\n      <div\r\n        className={`bg-transition row no-gutters justify-content-center${\r\n          !scrolledToTop ? \" bg-root\" : \"\"\r\n        }`}\r\n      >\r\n        <div\r\n          className={`col-60${\r\n            location.pathname !== \"/admin\" ? \" content-container\" : \"\"\r\n          }`}\r\n        >\r\n          <div className=\"row no-gutters justify-content-between px-3 py-2 align-items-center flex-nowrap\">\r\n            <div className=\"col-auto d-none d-sm-block pr-sm-5 pr-3 text-white pl-sm-3 pl-2\">\r\n              <div\r\n                className=\"row no-gutters align-items-end cursor-pointer\"\r\n                onClick={() => history.push(\"/\")}\r\n              >\r\n                <div className=\"square-50 mr-2\">\r\n                  <Logo></Logo>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <div className=\"row no-gutters h4 logo\">CozyPotato</div>\r\n                  <div\r\n                    className=\"row no-gutters justify-content-end text-light\"\r\n                    style={{ fontSize: \"13px\", marginTop: \"-14px\" }}\r\n                  >\r\n                    Community\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"d-block d-sm-none cursor-pointer\"\r\n              onClick={() => history.push(\"/\")}\r\n            >\r\n              <div className=\"square-40 mx-auto\">\r\n                <Logo></Logo>\r\n              </div>\r\n              <div className=\"col-auto text-white\">\r\n                <div className=\"row no-gutters logo h5\">CozyPotato</div>\r\n                <div\r\n                  className=\"row no-gutters justify-content-end text-light\"\r\n                  style={{ fontSize: \"10px\", marginTop: \"-10px\" }}\r\n                >\r\n                  Community\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col pr-3 d-none d-md-block\">\r\n              <SearchBox navbarHeight={height}></SearchBox>\r\n            </div>\r\n            <div className=\"col-auto\">\r\n              <div className=\"row no-gutters\">\r\n                {user.display_name ? (\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters\">\r\n                      <Popover\r\n                        content={(w) => (\r\n                          <div\r\n                            className=\"container-fluid rounded px-0\"\r\n                            style={{ maxWidth: \"400px\", width: \"100%\" }}\r\n                          >\r\n                            {notifications.length ? (\r\n                              notifications.map((x, i) => (\r\n                                <div\r\n                                  key={`notificaiton-${i}`}\r\n                                  className={`row no-gutters p-3${\r\n                                    i !== notifications.length - 1\r\n                                      ? \" border-bottom\"\r\n                                      : \"\"\r\n                                  }`}\r\n                                >\r\n                                  <div className=\"col-60 text-left mb-1 font-weight-bold\">\r\n                                    <div className=\"row no-gutters\">\r\n                                      <div className=\"col mr-3\">\r\n                                        {x.subject}\r\n                                      </div>\r\n                                      <div className=\"col-auto text-left text-primary-custom\">\r\n                                        <small>\r\n                                          {date.format(\r\n                                            new Date(x.start_date),\r\n                                            \"MMM DD, YYYY\"\r\n                                          )}\r\n                                        </small>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"col-60 text-left font-size-13\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                      <div className=\"col mr-3\">\r\n                                        {x.description}\r\n                                      </div>\r\n                                      <div className=\"col-auto\">\r\n                                        <BsXCircle\r\n                                          onClick={async () => {\r\n                                            let res = await DeleteUserNotification(\r\n                                              x._id,\r\n                                              user._id\r\n                                            );\r\n                                            if (!res.error) {\r\n                                              let prevNotifications = store.getState()\r\n                                                .user.notifications;\r\n                                              let delIndex = prevNotifications.findIndex(\r\n                                                (n) => n === x._id\r\n                                              );\r\n                                              if (delIndex !== -1) {\r\n                                                prevNotifications.splice(\r\n                                                  delIndex,\r\n                                                  1\r\n                                                );\r\n                                              }\r\n                                              store.dispatch({\r\n                                                type: \"UPDATE_USER\",\r\n                                                userProperty: {\r\n                                                  notifications: prevNotifications,\r\n                                                },\r\n                                              });\r\n                                            }\r\n                                          }}\r\n                                          fontSize=\"26px\"\r\n                                          className=\"cursor-pointer notification-close-icon\"\r\n                                        ></BsXCircle>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              ))\r\n                            ) : (\r\n                              <div className=\"row no-gutters flex-center p-4\">\r\n                                You don't have notifications right now\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      >\r\n                        <div className=\"col-auto\">\r\n                          <Notifications\r\n                            count={notifications.length}\r\n                          ></Notifications>\r\n                        </div>\r\n                      </Popover>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <div className=\"col-auto text-white\">\r\n                  {user.display_name ? (\r\n                    <div className=\"row no-gutters align-items-center\">\r\n                      <Popover\r\n                        content={(w) => (\r\n                          <div\r\n                            style={{\r\n                              borderRadius: \"4px\",\r\n                              overflow: \"hidden\",\r\n                              minWidth: `${w}px`,\r\n                            }}\r\n                          >\r\n                            {user.role === \"Administrator\" ? (\r\n                              <div\r\n                                className=\"popover-item border-bottom\"\r\n                                onClick={() => {\r\n                                  profilePopover.current.click();\r\n                                  history.push(`/admin`);\r\n                                }}\r\n                              >\r\n                                Administration\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                            <div\r\n                              className=\"popover-item border-bottom\"\r\n                              onClick={() => {\r\n                                profilePopover.current.click();\r\n                                history.push(`/profile/${user._id}`);\r\n                              }}\r\n                            >\r\n                              My Profile\r\n                            </div>\r\n                            <div\r\n                              className=\"popover-item border-bottom\"\r\n                              onClick={() => {\r\n                                profilePopover.current.click();\r\n                                history.push(`/profile/${user._id}/2`);\r\n                              }}\r\n                            >\r\n                              My Reviews\r\n                            </div>\r\n                            <div\r\n                              className=\"popover-item border-bottom\"\r\n                              onClick={() => {\r\n                                profilePopover.current.click();\r\n                                history.push(`/profile/${user._id}/0`);\r\n                              }}\r\n                            >\r\n                              My Wishlist\r\n                            </div>\r\n                            <div\r\n                              className=\"popover-item\"\r\n                              onClick={() => {\r\n                                profilePopover.current.click();\r\n                                localStorage.removeItem(\"movies_user_token\");\r\n                                store.dispatch({\r\n                                  type: \"SET_USER\",\r\n                                  user: {\r\n                                    first_name: \"\",\r\n                                    last_name: \"\",\r\n                                    display_name: \"\",\r\n                                    photo: \"\",\r\n                                    token: \"\",\r\n                                    email: \"\",\r\n                                    ratings: {},\r\n                                    reviews: [],\r\n                                    wishlist: [],\r\n                                    watchedlist: [],\r\n                                    notifications: [],\r\n                                  },\r\n                                });\r\n                                history.push(\"/\");\r\n                              }}\r\n                            >\r\n                              Logout\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      >\r\n                        <div className=\"col-60\" ref={profilePopover}>\r\n                          <div className=\"row no-gutters align-items-center cursor-pointer\">\r\n                            <div\r\n                              className=\"col-auto mr-2 rounded-circle square-40 bg-image\"\r\n                              style={{\r\n                                backgroundImage: `url(${user.photo})`,\r\n                                border: \"1px solid white\",\r\n                              }}\r\n                            ></div>\r\n                            <div className=\"col-auto mr-2 d-none d-sm-block\">\r\n                              {user.display_name}\r\n                            </div>\r\n                            <div className=\"col-auto user-select-none\">\r\n                              <BsChevronDown fontSize=\"14px\"></BsChevronDown>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Popover>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"row no-gutters pr-sm-3 pr-2 align-items-center\">\r\n                      <div\r\n                        className=\"col-auto cursor-pointer fb-btn\"\r\n                        onClick={() => {\r\n                          history.push(\"/login\");\r\n                        }}\r\n                      >\r\n                        Login\r\n                      </div>\r\n                      <div\r\n                        className=\"col-auto cursor-pointer fb-btn\"\r\n                        onClick={() => history.push(\"/signup\")}\r\n                      >\r\n                        Signup\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {location.pathname === \"/admin\" ? (\r\n                  <MdMenu\r\n                    className=\"text-white col-auto d-block d-lg-none cursor-pointer\"\r\n                    fontSize=\"34px\"\r\n                    onClick={() =>\r\n                      store.dispatch({\r\n                        type: \"SET_DASHBOARD_MENU_OPENED\",\r\n                        isOpened: !dashboardMenuOpened,\r\n                      })\r\n                    }\r\n                  ></MdMenu>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    search: state.search,\r\n    dashboardMenuOpened: state.dashboardMenuOpened,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default withResizeDetector(connect(mapp)(Navbar));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport history from \"../../History\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  FaTwitter,\r\n  FaFacebookF,\r\n  FaInstagram,\r\n  FaLinkedinIn,\r\n} from \"react-icons/fa\";\r\n\r\nconst Footer = ({ user, settings }) => {\r\n  const menuItems = [\r\n    { name: \"Home\", path: \"/\", condition: true },\r\n    {\r\n      name: \"My Wishlist\",\r\n      condition: user.display_name,\r\n      path: user._id ? `/profile/${user._id}/0` : \"/login\",\r\n    },\r\n    {\r\n      condition: user.display_name,\r\n      name: \"My Reviews\",\r\n      path: user._id ? `/profile/${user._id}/2` : \"/login\",\r\n    },\r\n    { name: \"About Us\", path: \"/\", condition: true },\r\n    { name: \"Contact\", path: \"/\", condition: true },\r\n  ];\r\n\r\n  const socialIcons = [\r\n    { icon: FaFacebookF, path: settings.FacebookLink },\r\n    { icon: FaInstagram, path: settings.InstagramLink },\r\n    { icon: FaLinkedinIn, path: settings.LinkedinLink },\r\n    { icon: FaTwitter, path: settings.TwitterLink },\r\n  ];\r\n\r\n  const secodaryItems = [\r\n    { name: \"Privacy policy\", path: \"/privacy-policy\" },\r\n    { name: \"Cookies Policy\", path: \"/cookies-policy\" },\r\n    { name: \"Terms And Conditions\", path: \"/terms-and-conditions\" },\r\n  ];\r\n\r\n  const location = useLocation();\r\n\r\n  return location.pathname !== \"/login\" && location.pathname !== \"/signup\" ? (\r\n    <div className=\"row no-gutters justify-content-center bg-over-root text-light\">\r\n      <div\r\n        className={`px-sm-5 px-4 py-4 col-60${\r\n          location.pathname !== \"/admin\" ? \" content-container\" : \"\"\r\n        }`}\r\n      >\r\n        <div className=\"row no-gutters justify-content-between align-items-center\">\r\n          <div className=\"col-auto mb-2\">\r\n            <div className=\"row no-gutters\">\r\n              {menuItems\r\n                .filter((x) => x.condition)\r\n                .map((x, i) => (\r\n                  <div\r\n                    key={`footer-item-${i}`}\r\n                    className=\"col-auto text-title-md btn-tertiary-light\"\r\n                    onClick={() => history.push(x.path)}\r\n                  >\r\n                    {x.name}\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-auto col-60 px-3 mb-2\">\r\n            <div className=\"row no-gutters justify-content-center justify-content-md-start\">\r\n              {socialIcons.map((x, i) => (\r\n                <div\r\n                  key={`social-icon-${i}`}\r\n                  className={`col-auto scale-transition cursor-pointer mr-${\r\n                    i === socialIcons.length - 1 ? \"0\" : \"2\"\r\n                  }`}\r\n                >\r\n                  <div\r\n                    className=\"square-40 rounded-circle bg-white d-flex flex-center\"\r\n                    onClick={() => {\r\n                      window.open(x.path);\r\n                    }}\r\n                  >\r\n                    <x.icon fontSize=\"24px\" className=\"text-dark\"></x.icon>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters justify-content-md-between justify-content-center\">\r\n          <div className=\"col-auto px-3\">©2020 CozyPotato, Inc.</div>\r\n          <div className=\"col-auto px-3\">\r\n            <div className=\"row no-gutters\">\r\n              {secodaryItems.map((x, i) => (\r\n                <React.Fragment key={`footer-item-${i}`}>\r\n                  <div\r\n                    className=\"col-auto link-primary d-sm-block d-none\"\r\n                    onClick={() => history.push(x.path)}\r\n                  >\r\n                    {x.name}\r\n                  </div>\r\n                  <div\r\n                    className=\"col-auto link-primary d-block d-sm-none\"\r\n                    onClick={() => history.push(x.path)}\r\n                  >\r\n                    {x.name.split(\" \")[0]}\r\n                  </div>\r\n                  {i !== secodaryItems.length - 1 && (\r\n                    <div className=\"px-2\">|</div>\r\n                  )}\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    settings: state.settings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Footer);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { GetTvShow, GetCredits } from \"../../server/MoviesApi\";\r\nimport ReactionButton from \"./ReactionButton\";\r\nimport date from \"date-and-time\";\r\nimport Modal from \"../utility/Modal\";\r\nimport TrailerPlayer from \"./TrailerPlayer\";\r\nimport MovieReviews from \"./MovieReviews\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormatDuration } from \"../../utilities/Functions\";\r\nimport store from \"../../store/store\";\r\nimport { AddViewToMovie } from \"../../server/DatabaseApi\";\r\nimport WishlistButton from \"./WishlistButton\";\r\nimport Footer from \"./Footer\";\r\nimport { FaRegPaperPlane } from \"react-icons/fa\";\r\nimport history from \"../../History\";\r\nimport { BsPlayFill } from \"react-icons/bs\";\r\n\r\nconst Serie = (props) => {\r\n  const movieId = props.match.params.movieId;\r\n  const ratings = props.ratings;\r\n  const apiKey = props.settings.movies_api_key;\r\n  //user will be needed to write comments on reviews and to add reviews\r\n  const user = props.user;\r\n\r\n  const [addReviewTrigger, setAddReviewTrigger] = useState(-1);\r\n\r\n  const [movie, setMovie] = useState({\r\n    poster_path: \"\",\r\n    genres: [],\r\n    title: \"\",\r\n    overview: \"\",\r\n    director: \"\",\r\n    cast: [],\r\n    runtime: 0,\r\n    release_date: \"\",\r\n    id: \"\",\r\n  });\r\n\r\n  //boolean variable to display trailer modal or not.\r\n  const [openTrailer, setOpenTrailer] = useState(false);\r\n\r\n  useEffect(() => {\r\n    //check if movie fetched from api\r\n    if (movie.title) {\r\n      AddViewToMovie(movie);\r\n    }\r\n  }, [movie.title]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    async function getData() {\r\n      if (movieId && apiKey) {\r\n        let data = await GetTvShow(movieId, apiKey);\r\n        setMovie((prev) =>\r\n          Object.assign(\r\n            {},\r\n            prev,\r\n            Object.assign({}, data, {\r\n              title: data.name,\r\n              release_date: data.first_air_date,\r\n            })\r\n          )\r\n        );\r\n        let credits = await GetCredits(movieId, apiKey);\r\n        let directorObj = credits.crew\r\n          ? credits.crew.find((x) => x.job === \"Director\")\r\n          : null;\r\n        let director = directorObj ? directorObj.name : \"unknown\";\r\n        let cast = credits.cast ? credits.cast.map((x) => x.name) : [];\r\n        data.director = director;\r\n        data.cast = cast;\r\n        setMovie((prev) => Object.assign({}, prev, { director, cast }));\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, [movieId, apiKey]);\r\n\r\n  // const director = movie.credits.crew.find((x) => x.job === \"Director\");\r\n\r\n  return (\r\n    <div className=\"row no-gutters justify-content-center bg-movie-over-root position-relative\">\r\n      <div\r\n        className=\"position-absolute w-100 d-block d-lg-none\"\r\n        style={{\r\n          top: 0,\r\n          left: 0,\r\n        }}\r\n      >\r\n        <div\r\n          className=\"position-relative\"\r\n          style={{ height: window.innerHeight, overflow: \"hidden\" }}\r\n        >\r\n          <div className=\"position-relative\">\r\n            <img\r\n              alt={movie.poster_path}\r\n              width=\"100%\"\r\n              src={`https://image.tmdb.org/t/p/w342/${movie.poster_path}`}\r\n            ></img>\r\n            <div\r\n              className=\"position-absolute w-100 h-100\"\r\n              style={{\r\n                background: \"linear-gradient(rgba(0, 0, 0, 0.3) 90%, black)\",\r\n                top: 0,\r\n                left: 0,\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <div\r\n            className=\"position-absolute w-100 h-100\"\r\n            style={{\r\n              background: \"linear-gradient(rgb(0 0 0 / 30%), black)\",\r\n              top: 0,\r\n              left: 0,\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <Modal open={openTrailer} onClose={() => setOpenTrailer(false)}>\r\n        <TrailerPlayer\r\n          movieId={movieId}\r\n          onEnded={() => setOpenTrailer(false)}\r\n        ></TrailerPlayer>\r\n      </Modal>\r\n      <div className=\"col-60 text-white px-md-5 py-5 px-4 content-container\">\r\n        <div className=\"row no-gutters py-5 mb-5\">\r\n          <div className=\"col-auto mr-5 d-none d-lg-block\">\r\n            <div className=\"w-100 position-relative\">\r\n              <img\r\n                alt={movie.poster_path}\r\n                style={{ borderRadius: \"25px\" }}\r\n                width=\"300px\"\r\n                src={`https://image.tmdb.org/t/p/w342/${movie.poster_path}`}\r\n              ></img>\r\n              <div\r\n                onClick={() => history.push(`/movie/${movie.id}`)}\r\n                className=\"col-60 h-100 text-white d-flex flex-center img-cover cursor-pointer\"\r\n                style={{\r\n                  left: 0,\r\n                  top: 0,\r\n                  position: \"absolute\",\r\n                  zIndex: 4,\r\n                  borderRadius: \"13px\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"square-60 rounded-circle d-flex flex-center play-btn\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    setOpenTrailer(true);\r\n                  }}\r\n                >\r\n                  <BsPlayFill\r\n                    style={{\r\n                      fontSize: \"35px\",\r\n                      color: \"white\",\r\n                      marginRight: \"-5px\",\r\n                    }}\r\n                  ></BsPlayFill>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col position-relative\">\r\n            <div\r\n              className=\"row no-gutters position-relative\"\r\n              style={{ zIndex: 5 }}\r\n            >\r\n              <div className=\"col-60\">\r\n                <div className=\"row no-gutters h5\">\r\n                  {movie.title} ({movie.release_date.substring(0, 4)})\r\n                </div>\r\n                <div className=\"row no-gutters text-movie-muted mb-2\">\r\n                  <div className=\"text-truncate\">\r\n                    {movie.genres.map((x) => x.name).join(\"/\")}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters mb-4\">\r\n                  <div className=\"col-auto font-weight-500 mr-2\">Duration:</div>\r\n                  <div className=\"col-auto text-movie-muted\">\r\n                    {FormatDuration(movie.runtime)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters mb-4 text-light\">\r\n                  {movie.overview}\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters\">\r\n                      <div className=\"col-auto mr-2\">Director:</div>\r\n                      <div className=\"col-auto mr-5 text-movie-muted\">\r\n                        {movie.director ? movie.director : \"unknown\"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <div className=\"row no-gutters\">\r\n                      <div className=\"col-auto mr-2\">Cast:</div>\r\n                      <div className=\"col\">\r\n                        <div className=\"row no-gutters\">\r\n                          <div\r\n                            className=\"text-clamp-2 text-muted-light cursor-pointer\"\r\n                            onClick={(e) => {\r\n                              if (\r\n                                e.currentTarget.classList.contains(\r\n                                  \"text-clamp-2\"\r\n                                )\r\n                              ) {\r\n                                e.currentTarget.classList.remove(\r\n                                  \"text-clamp-2\"\r\n                                );\r\n                              } else {\r\n                                e.currentTarget.classList.add(\"text-clamp-2\");\r\n                              }\r\n                            }}\r\n                          >\r\n                            {movie.cast.join(\"    \")}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters mb-3\">\r\n                  <ReactionButton\r\n                    selected={\r\n                      user.ratings[movie.id]\r\n                        ? user.ratings[movie.id].rate_type === \"excellent_rate\"\r\n                        : false\r\n                    }\r\n                    movie={movie}\r\n                    emoji=\"fire\"\r\n                    className=\"mr-2 mb-2\"\r\n                    value={\r\n                      ratings[movie.id] ? ratings[movie.id].excellent_rate : 0\r\n                    }\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    selected={\r\n                      user.ratings[movie.id]\r\n                        ? user.ratings[movie.id].rate_type === \"good_rate\"\r\n                        : false\r\n                    }\r\n                    movie={movie}\r\n                    emoji=\"heart\"\r\n                    className=\"mr-2 mb-2\"\r\n                    value={ratings[movie.id] ? ratings[movie.id].good_rate : 0}\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    selected={\r\n                      user.ratings[movie.id]\r\n                        ? user.ratings[movie.id].rate_type === \"ok_rate\"\r\n                        : false\r\n                    }\r\n                    movie={movie}\r\n                    className=\"mr-2 mb-2\"\r\n                    emoji=\"heavy_division_sign\"\r\n                    value={ratings[movie.id] ? ratings[movie.id].ok_rate : 0}\r\n                  ></ReactionButton>\r\n                  <ReactionButton\r\n                    emoji=\"shit\"\r\n                    value={ratings[movie.id] ? ratings[movie.id].bad_rate : 0}\r\n                    selected={\r\n                      user.ratings[movie.id]\r\n                        ? user.ratings[movie.id].rate_type === \"bad_rate\"\r\n                        : false\r\n                    }\r\n                    movie={movie}\r\n                  ></ReactionButton>\r\n                </div>\r\n                <div className=\"row no-gutters mb-5\">\r\n                  <div className=\"col-auto mr-2\">Release date:</div>\r\n                  <div className=\"col-auto text-movie-muted\">\r\n                    {date.format(new Date(movie.release_date), \"MMMM DD, YYYY\")}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row no-gutters justify-content-center justify-content-md-start\">\r\n                  <div\r\n                    className=\"col-auto mr-3 btn-custom btn-custom-primary btn-small\"\r\n                    onClick={() => {\r\n                      if (!user.token) {\r\n                        store.dispatch({\r\n                          type: \"SET_NOTIFICATION\",\r\n                          notification: {\r\n                            title: \"Login required\",\r\n                            message: \"You need to login to write review.\",\r\n                            type: \"failure\",\r\n                          },\r\n                        });\r\n                      } else {\r\n                        setAddReviewTrigger(addReviewTrigger + 1);\r\n                      }\r\n                    }}\r\n                  >\r\n                    Add Review\r\n                    <FaRegPaperPlane\r\n                      fontSize=\"20px\"\r\n                      className=\"ml-2\"\r\n                    ></FaRegPaperPlane>\r\n                  </div>\r\n                  <WishlistButton movie={movie} user={user}></WishlistButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <MovieReviews\r\n          movie={movie}\r\n          user={user}\r\n          addReviewTrigger={addReviewTrigger}\r\n        ></MovieReviews>\r\n      </div>\r\n      <div className=\"col-60\">\r\n        <Footer></Footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapp(state, ownProps) {\r\n  return {\r\n    user: state.user,\r\n    ratings: state.ratings,\r\n    settings: state.settings,\r\n    ...ownProps,\r\n  };\r\n}\r\n\r\nexport default connect(mapp)(Serie);\r\n","import React, { useEffect } from \"react\";\r\nimport FileViewer from \"react-file-viewer\";\r\nimport { default as doc } from \"../../documents/CookiesPolicy.docx\";\r\n\r\nconst CookiesPolicy = () => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row no-gutters px-0\" style={{ minHeight: \"800px\" }}>\r\n      <div className=\"col-60 py-5 text-dark\">\r\n        <FileViewer\r\n          fileType={\"docx\"}\r\n          filePath={doc}\r\n          errorComponent={() => <div></div>}\r\n          onError={() => console.log(\"error doc\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CookiesPolicy;\r\n","import React, { useEffect } from \"react\";\r\nimport FileViewer from \"react-file-viewer\";\r\nimport { default as doc } from \"../../documents/TermsAndConditions.docx\";\r\n\r\nconst TermsAndConditions = () => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row no-gutters px-0\" style={{ minHeight: \"800px\" }}>\r\n      <div className=\"col-60 py-5 text-dark\">\r\n        <FileViewer\r\n          fileType={\"docx\"}\r\n          filePath={doc}\r\n          errorComponent={() => <div></div>}\r\n          onError={() => console.log(\"error doc\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TermsAndConditions;\r\n","import React, { useEffect } from \"react\";\r\nimport FileViewer from \"react-file-viewer\";\r\nimport { default as doc } from \"../../documents/PrivacyPolicy.docx\";\r\n\r\nconst PrivacyPolicy = () => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return (\r\n    <div className=\"row no-gutters px-0\" style={{ minHeight: \"800px\" }}>\r\n      <div className=\"col-60 py-5 text-dark\">\r\n        <FileViewer\r\n          fileType={\"docx\"}\r\n          filePath={doc}\r\n          errorComponent={() => <div></div>}\r\n          onError={() => console.log(\"error doc\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivacyPolicy;\r\n","import React, { useEffect } from \"react\";\r\nimport store from \"./store/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport history from \"./History\";\r\nimport Home from \"./components/user/Home\";\r\nimport Movie from \"./components/user/Movie\";\r\nimport SearchResults from \"./components/user/SearchResults\";\r\nimport AdminDashboard from \"./components/admin/AdminDashboard\";\r\nimport Login from \"./components/login/Login\";\r\nimport Signup from \"./components/login/Signup\";\r\nimport Toast from \"./components/user/Toast\";\r\nimport {\r\n  GetAllRatings,\r\n  GetAllPublicUsers,\r\n  LoginWithToken,\r\n  GetSettings,\r\n} from \"./server/DatabaseApi\";\r\nimport Profile from \"./components/user/profile/Profile\";\r\nimport PrivateRoute from \"./utilities/PrivateRoute\";\r\nimport Navbar from \"./components/user/Navbar\";\r\nimport Serie from \"./components/user/Serie\";\r\nimport Footer from \"./components/user/Footer\";\r\nimport CookiesPolicy from \"./components/user/CookiesPolicy\";\r\nimport TermsAndConditions from \"./components/user/TermsAndConditions\";\r\nimport PrivacyPolicy from \"./components/user/PrivacyPolicy\";\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    async function getData() {\r\n      GetSettings((settings) => {\r\n        if (!settings.error) {\r\n          if (!settings.length) {\r\n            store.dispatch({\r\n              type: \"SET_NOTIFICATION\",\r\n              notification: {\r\n                title: \"Action required\",\r\n                message:\r\n                  \"Settings are not set. Inform website administrator to set Api key and other settings for the website\",\r\n                type: \"failure\",\r\n              },\r\n            });\r\n          } else {\r\n            store.dispatch({ type: \"UPDATE_SETTINGS\", settings: settings[0] });\r\n          }\r\n        } else {\r\n          store.dispatch({\r\n            type: \"SET_NOTIFICATION\",\r\n            notification: {\r\n              title: \"Action required\",\r\n              message:\r\n                \"Settings are not set. Inform website administrator to set Api key and other settings for the website\",\r\n              type: \"failure\",\r\n            },\r\n          });\r\n        }\r\n      });\r\n\r\n      GetAllRatings((ratingsArr) => {\r\n        let ratings = {};\r\n        ratingsArr.forEach((x) => {\r\n          ratings[x.tmdb_id] = x;\r\n        });\r\n        store.dispatch({ type: \"SET_RATINGS\", ratings });\r\n      });\r\n\r\n      GetAllPublicUsers((publicUsersArr) => {\r\n        let publicUsers = {};\r\n        publicUsersArr.forEach((x) => {\r\n          publicUsers[x.user_id] = x;\r\n        });\r\n        store.dispatch({ type: \"SET_PUBLICUSERS\", publicUsers });\r\n      });\r\n\r\n      let userToken = localStorage.getItem(\"movies_user_token\");\r\n      if (userToken !== null && userToken.length) {\r\n        let res = await LoginWithToken({ token: userToken });\r\n        if (!res.error) {\r\n          store.dispatch({ type: \"SET_USER\", user: res });\r\n        }\r\n      }\r\n    }\r\n    getData();\r\n  }, []);\r\n  return (\r\n    <Provider store={store}>\r\n      <Router history={history}>\r\n        <div className=\"container-fluid px-0\">\r\n          <Navbar></Navbar>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/terms-and-conditions\"\r\n              component={TermsAndConditions}\r\n            ></Route>\r\n            <Route\r\n              exact\r\n              path=\"/cookies-policy\"\r\n              component={CookiesPolicy}\r\n            ></Route>\r\n            <Route\r\n              exact\r\n              path=\"/privacy-policy\"\r\n              component={PrivacyPolicy}\r\n            ></Route>\r\n            <Route exact path=\"/\" component={Home}></Route>\r\n            <Route\r\n              exact\r\n              path=\"/movie/:movieId/:reviewId/:commentId\"\r\n              component={Movie}\r\n            ></Route>\r\n            <Route\r\n              exact\r\n              path=\"/movie/:movieId/:reviewId\"\r\n              component={Movie}\r\n            ></Route>\r\n            <Route exact path=\"/movie/:movieId\" component={Movie}></Route>\r\n            <Route exact path=\"/series/:movieId\" component={Serie}></Route>\r\n            <Route exact path=\"/search\" component={SearchResults}></Route>\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/admin\"\r\n              bearerPath=\"/login\"\r\n              Component={AdminDashboard}\r\n            ></PrivateRoute>\r\n            <Route exact path=\"/login\" component={Login}></Route>\r\n            <Route exact path=\"/signup\" component={Signup}></Route>\r\n            <Route\r\n              exact\r\n              path=\"/profile/:userId/:section\"\r\n              component={Profile}\r\n            ></Route>\r\n            <Route exact path=\"/profile/:userId\" component={Profile}></Route>\r\n          </Switch>\r\n          <Footer></Footer>\r\n          <Toast></Toast>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/style.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}